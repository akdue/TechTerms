{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"\u0627\u0644\u0645\u0648\u0642\u0639 \u0641\u064a \u0645\u0631\u062d\u0644\u0629 \u0628\u064a\u062a\u0627 \u0627\u0644\u062a\u062c\u0631\u064a\u0628\u064a\u0629 \u2014 \u0642\u062f \u064a\u062d\u062a\u0627\u062c \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0644\u0644\u062a\u062f\u0642\u064a\u0642 .","text":""},{"location":"#_2","title":"\u0645\u0631\u062d\u0628\u064b\u0627 \ud83d\udc4b","text":""},{"location":"#technical-terms","title":"\u0645\u0635\u0637\u0644\u062d\u0640\u0627\u062a \u062a\u0642\u0646\u064a\u0640\u0640\u0629  (Technical Terms)","text":"<p>\u0645\u0633\u062a\u0648\u062f\u0639 \u0645\u0635\u0637\u0644\u062d\u0627\u062a \u062a\u0642\u0646\u064a\u0629 \u0648\u0628\u0631\u0645\u062c\u064a\u0629 \u0628\u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u0639 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0623\u0645\u062b\u0644\u0629 \u0645\u0646 \u0644\u063a\u0629 #C.</p> <p>\u0647\u0630\u0627 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 \u0645\u0628\u0646\u064a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 MkDocs \u0648 Material for MkDocs.</p>"},{"location":"#_3","title":"\u062a\u0634\u063a\u064a\u0644 \u0645\u062d\u0644\u064a\u064b\u0627","text":"<p>\u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0645\u0648\u0642\u0639 \u0639\u0644\u0649 \u062c\u0647\u0627\u0632\u0643:</p> <ol> <li>\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646 Python \u0648 pip \u0645\u062b\u0628\u062a\u0627\u0646 \u0639\u0644\u0649 \u062c\u0647\u0627\u0632\u0643.</li> <li>\u0642\u0645 \u0628\u062a\u062b\u0628\u064a\u062a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a:     Bash<pre><code>pip install mkdocs-material\n</code></pre></li> <li>\u0634\u063a\u0651\u0644 \u0633\u064a\u0631\u0641\u0631 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0645\u062d\u0644\u064a:     Bash<pre><code>mkdocs serve\n</code></pre></li> <li>\u0627\u0641\u062a\u062d \u0627\u0644\u0631\u0627\u0628\u0637 <code>http://127.0.0.1:8000/</code> \u0641\u064a \u0645\u062a\u0635\u0641\u062d\u0643.</li> </ol>"},{"location":"#_4","title":"\u0627\u0644\u0645\u0633\u0627\u0647\u0645\u0629","text":"<p>\u0644\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0637\u0644\u062d \u062c\u062f\u064a\u062f:</p> <ol> <li>\u0623\u0646\u0634\u0626 \u0645\u0644\u0641 Markdown \u062c\u062f\u064a\u062f \u062f\u0627\u062e\u0644 \u0645\u062c\u0644\u062f <code>docs/terms/</code>.</li> <li>\u0627\u062a\u0628\u0639 \u0627\u0644\u0642\u0627\u0644\u0628 \u0627\u0644\u0645\u0648\u062c\u0648\u062f \u0641\u064a <code>docs/index.md</code> \u0644\u062a\u0648\u062d\u064a\u062f \u0634\u0643\u0644 \u0627\u0644\u0645\u062d\u062a\u0648\u0649.</li> <li>\u0623\u0631\u0633\u0644 Pull Request \u0628\u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a.</li> </ol>"},{"location":"#_5","title":"\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629","text":"<ul> <li>Abdalkreem Abuaresh</li> <li>\u0631\u0627\u0628\u0637 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639: https://github.com/akdue/TechTerms</li> </ul>"},{"location":"terms/abstraction/","title":"Abstraction","text":""},{"location":"terms/abstraction/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Abstraction \u2014 \u062a\u062c\u0631\u064a\u062f (\u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0645\u0627 \u064a\u062c\u0628 \u0641\u0639\u0644\u0647 \u0644\u0627 \u0643\u064a\u0641 \u064a\u064f\u0646\u0641\u0651\u064e\u0630).</p>"},{"location":"terms/abstraction/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0645\u0628\u062f\u0623 \u064a\u064f\u0639\u0631\u0651\u0650\u0641 \u0639\u0642\u062f\u064b\u0627 \u0648\u0627\u0636\u062d\u064b\u0627 (\u0648\u0627\u062c\u0647\u0627\u062a/\u0623\u0635\u0646\u0627\u0641 \u0645\u062c\u0631\u0651\u062f\u0629) \u0648\u064a\u064f\u062e\u0641\u064a \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u064a\u0629. \u0627\u0644\u0647\u062f\u0641: \u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u0639\u0642\u064a\u062f\u060c \u0641\u0635\u0644 \u0627\u0644\u0645\u062e\u0627\u0648\u0641\u060c \u0648\u062a\u0645\u0643\u064a\u0646 \u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0628\u0633\u0647\u0648\u0644\u0629.</p>"},{"location":"terms/abstraction/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0639\u0631\u0636 \u0642\u062f\u0631\u0627\u062a (\u0639\u0645\u0644\u064a\u0627\u062a/\u062e\u0635\u0627\u0626\u0635) \u062f\u0648\u0646 \u0643\u0634\u0641 \u0627\u0644\u0622\u0644\u064a\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629.  </li> <li>\u0646\u0633\u062a\u062e\u062f\u0645 Interfaces \u0648/\u0623\u0648 Abstract Classes \u0644\u0641\u0631\u0636 \u0645\u0627 \u0647\u0648 \u0645\u0637\u0644\u0648\u0628 \u062a\u0646\u0641\u064a\u0630\u0647.  </li> <li>\u0627\u0644\u0639\u0645\u0644\u0627\u0621 \u064a\u062a\u0639\u0627\u0645\u0644\u0648\u0646 \u0645\u0639 \u0627\u0644\u0639\u0642\u062f \u0641\u0642\u0637\u061b \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u064a\u0645\u0643\u0646 \u062a\u063a\u064a\u064a\u0631\u0647 \u062f\u0648\u0646 \u0643\u0633\u0631\u0647\u0645.</li> </ul>"},{"location":"terms/abstraction/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0642\u0628\u0633 \u0643\u0647\u0631\u0628\u0627\u0621: \u064a\u064e\u0639\u0650\u062f \u0628\u0640 \u062a\u064a\u0627\u0631 220V (\u0639\u0642\u062f). \u0644\u0627 \u064a\u0647\u0645\u0643 \u0645\u0633\u0627\u0631 \u0627\u0644\u0623\u0633\u0644\u0627\u0643 \u0623\u0648 \u0646\u0648\u0639 \u0627\u0644\u0645\u0648\u0644\u0651\u062f (\u0627\u0644\u062a\u0646\u0641\u064a\u0630).</p>"},{"location":"terms/abstraction/#c-1","title":"\u0645\u062b\u0627\u0644 C# (1) \u2014 \u0648\u0627\u062c\u0647\u0629 \u0643\u0640 \u062a\u062c\u0631\u064a\u062f \u0639\u0646 \u0627\u0644\u062a\u062e\u0632\u064a\u0646","text":"C#<pre><code>// IFileStorage \u064a\u0639\u0631\u0651\u0641 \"\u0645\u0627 \u064a\u0646\u0628\u063a\u064a\" \u062f\u0648\u0646 \"\u0643\u064a\u0641\"\npublic interface IFileStorage\n{\n    Task SaveAsync(string path, byte[] bytes);\n    Task&lt;byte[]&gt; ReadAsync(string path);\n}\n\n// \u062a\u0646\u0641\u064a\u0630 \u062f\u0627\u062e\u0644 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 (\u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631)\npublic class MemoryStorage : IFileStorage\n{\n    private readonly Dictionary&lt;string, byte[]&gt; _db = new();\n    public Task SaveAsync(string path, byte[] bytes) { _db[path] = bytes; return Task.CompletedTask; }\n    public Task&lt;byte[]&gt; ReadAsync(string path) =&gt; Task.FromResult(_db[path]);\n}\n\n// \u062a\u0646\u0641\u064a\u0630 \u0639\u0644\u0649 \u0627\u0644\u0642\u0631\u0635 (\u0645\u0628\u0633\u0651\u0637)\npublic class DiskStorage : IFileStorage\n{\n    public Task SaveAsync(string path, byte[] bytes)\n    {\n        Directory.CreateDirectory(Path.GetDirectoryName(path)!);\n        return File.WriteAllBytesAsync(path, bytes);\n    }\n    public Task&lt;byte[]&gt; ReadAsync(string path) =&gt; File.ReadAllBytesAsync(path);\n}\n\n// \u062e\u062f\u0645\u0629 \u0623\u0639\u0645\u0627\u0644 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \"\u0627\u0644\u062a\u062c\u0631\u064a\u062f\" \u0641\u0642\u0637\npublic class AvatarService\n{\n    private readonly IFileStorage _storage;\n    public AvatarService(IFileStorage storage) =&gt; _storage = storage;\n\n    public async Task&lt;string&gt; UploadAsync(string userId, byte[] png)\n    {\n        var path = $\"avatars/{userId}.png\";\n        await _storage.SaveAsync(path, png);\n        return path;\n    }\n}\n</code></pre> C#<pre><code>// Program.cs  (.NET 8/9)\n// \u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u062f\u0648\u0646 \u0644\u0645\u0633 AvatarService\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddSingleton&lt;IFileStorage, MemoryStorage&gt;();   // dev\n// builder.Services.AddSingleton&lt;IFileStorage, DiskStorage&gt;(); // prod\nbuilder.Services.AddSingleton&lt;AvatarService&gt;();\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: <code>AvatarService</code> \u0644\u0627 \u064a\u0639\u0631\u0641 \u0643\u064a\u0641 \u064a\u062a\u0645 \u0627\u0644\u062a\u062e\u0632\u064a\u0646\u061b \u064a\u0639\u0631\u0641 \u0641\u0642\u0637 \u0627\u0644\u0639\u0642\u062f <code>IFileStorage</code>.</p>"},{"location":"terms/abstraction/#c-2-template-method","title":"\u0645\u062b\u0627\u0644 C# (2) \u2014 \u0635\u0646\u0641 \u0645\u062c\u0631\u0651\u062f + \u0623\u0633\u0644\u0648\u0628 \u0627\u0644\u0642\u0627\u0644\u0628 (Template Method)","text":"C#<pre><code>using System.Text;\n\n// \u064a\u062d\u062f\u0651\u062f \"\u0642\u0627\u0644\u0628\" \u0627\u0644\u062a\u0635\u062f\u064a\u0631 \u0648\u064a\u062a\u0631\u0643 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0644\u0644\u0645\u0634\u062a\u0642\u0627\u062a\npublic abstract class ReportExporter\n{\n    public void Export(IEnumerable&lt;string&gt; rows, Stream destination)\n    {\n        if (rows is null) throw new ArgumentNullException(nameof(rows));\n        var bytes = Encode(rows);        // \u2190 \u064a\u062c\u0628 \u0639\u0644\u0649 \u0627\u0644\u0645\u0634\u062a\u0642 \u062a\u0646\u0641\u064a\u0630\u0647\u0627\n        Write(destination, bytes);       // \u2190 \u0633\u0644\u0648\u0643 \u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u062c\u0627\u0648\u0632\n    }\n\n    protected abstract byte[] Encode(IEnumerable&lt;string&gt; rows);\n    protected virtual void Write(Stream dest, byte[] bytes) =&gt; dest.Write(bytes, 0, bytes.Length);\n}\n\npublic class CsvExporter : ReportExporter\n{\n    protected override byte[] Encode(IEnumerable&lt;string&gt; rows)\n        =&gt; Encoding.UTF8.GetBytes(string.Join('\\n', rows.Select(r =&gt; $\"\\\"{r.Replace(\"\\\"\",\"\\\"\\\"\")}\\\"\")));\n}\n\npublic class JsonExporter : ReportExporter\n{\n    protected override byte[] Encode(IEnumerable&lt;string&gt; rows)\n        =&gt; Encoding.UTF8.GetBytes(System.Text.Json.JsonSerializer.Serialize(rows));\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u0633\u062a\u062f\u0639\u064a <code>Export(...)</code> \u062f\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u0625\u0646 \u0643\u0627\u0646 \u0627\u0644\u062a\u0635\u062f\u064a\u0631 CSV \u0623\u0648 JSON.</p>"},{"location":"terms/abstraction/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u062a\u062c\u0631\u064a\u062f","text":"<ol> <li>\u0627\u0628\u062f\u0623 \u0628\u0627\u0644\u0639\u0642\u062f: \u0645\u0627 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a/\u0627\u0644\u062e\u0635\u0627\u0626\u0635 \u0627\u0644\u062a\u064a \u064a\u062d\u062a\u0627\u062c\u0647\u0627 \u0627\u0644\u0639\u0645\u064a\u0644\u061f \u0633\u0645\u0651\u0650\u0647\u0627 \u0628\u0648\u0636\u0648\u062d.  </li> <li>\u0627\u0641\u0635\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u062e\u0644\u0641 Interface/Abstract Class.  </li> <li>\u0645\u0631\u0651\u0631 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0639\u0628\u0631 DI \u0644\u062a\u0645\u0643\u064a\u0646 \u0627\u0644\u062a\u0628\u062f\u064a\u0644 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0642\u0644\u0651\u0644 \u0633\u0637\u062d \u0627\u0644\u0639\u0642\u062f (Minimal API) \u0648\u0627\u0645\u0646\u0639 \u062a\u0633\u0631\u0651\u0628 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644.  </li> <li>\u0648\u062b\u0651\u0642 \u0627\u0644\u0636\u0645\u0627\u0646\u0627\u062a (Exceptions\u060c \u062d\u062f\u0648\u062f\u060c \u062d\u0627\u0644\u0627\u062a \u062d\u0648\u0627\u0641) \u0636\u0645\u0646 \u0627\u0644\u0639\u0642\u062f \u0644\u0627 \u0627\u0644\u062a\u0646\u0641\u064a\u0630.</li> </ol>"},{"location":"terms/abstraction/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0639\u0642\u062f \u0645\u0646\u062a\u0641\u062e \u064a\u062d\u0648\u064a \u062a\u0641\u0627\u0635\u064a\u0644 \u062a\u0646\u0641\u064a\u0630\u064a\u0629 (\u064a\u0643\u0633\u0631 \u0627\u0644\u062a\u062c\u0631\u064a\u062f).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u062c\u0631\u064a\u062f \u0644\u0640 \u201c\u0645\u062c\u0631\u0651\u062f\u201d \u062a\u063a\u0644\u064a\u0641 \u0628\u0644\u0627 \u062d\u0627\u062c\u0629 (\u062a\u0639\u0642\u064a\u062f \u0632\u0627\u0626\u062f).  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u062a\u062c\u0631\u064a\u062f \u0645\u0639 \u0627\u0644\u062a\u063a\u0644\u064a\u0641: \u0627\u0644\u0623\u0648\u0644 \u064a\u062d\u062f\u062f \u0645\u0627\u060c \u0627\u0644\u062b\u0627\u0646\u064a \u064a\u062d\u0645\u064a \u0643\u064a\u0641/\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u0631\u0628\u0637 \u0627\u0644\u0639\u0645\u064a\u0644 \u0628\u0646\u0648\u0639 \u0645\u0644\u0645\u0648\u0633 \u0628\u062f\u0644 \u0627\u0644\u0639\u0642\u062f \u2192 \u0641\u0642\u062f\u0627\u0646 \u0641\u0627\u0626\u062f\u0629 \u0627\u0644\u062a\u062c\u0631\u064a\u062f.  </li> <li>\u062a\u0631\u0643 \u0627\u0644\u0639\u0642\u0648\u062f \u0628\u0644\u0627 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0639\u0642\u062f (Contract Tests) \u0641\u062a\u0646\u062d\u0631\u0641 \u0627\u0644\u0645\u0634\u062a\u0642\u0627\u062a.</li> </ul>"},{"location":"terms/abstraction/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Abstraction \u062a\u0639\u0631\u064a\u0641 \u0645\u0627 \u064a\u062c\u0628 \u0641\u0639\u0644\u0647 \u062f\u0648\u0646 \u0643\u064a\u0641 \u0639\u0628\u0631 Interfaces/Abstract Classes Encapsulation \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062d\u0627\u0644\u0629 \u0648\u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u064a\u062d\u0645\u064a \u0627\u0644\u062b\u0648\u0627\u0628\u062a \u062e\u0644\u0641 \u0648\u0627\u062c\u0647\u0629 Interface \u0639\u0642\u062f \u0633\u0644\u0648\u0643 \u062f\u0648\u0646 \u062d\u0627\u0644\u0629 \u0645\u062b\u0627\u0644\u064a \u0644\u0644\u062a\u0628\u062f\u064a\u0644 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Abstract Class \u0639\u0642\u062f + \u0633\u0644\u0648\u0643/\u062d\u0627\u0644\u0629 \u0645\u0634\u062a\u0631\u0643\u0629 \u064a\u0633\u0645\u062d \u0628\u0642\u0627\u0644\u0628 \u0627\u0641\u062a\u0631\u0627\u0636\u064a (Template Method) Polymorphism \u062a\u0646\u0641\u064a\u0630 \u0645\u062e\u062a\u0644\u0641 \u0644\u0646\u0641\u0633 \u0627\u0644\u0639\u0642\u062f \u064a\u062a\u062d\u0642\u0642 \u0639\u0628\u0631 \u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a/\u0627\u0644\u0648\u0631\u0627\u062b\u0629"},{"location":"terms/abstraction/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u062a\u062c\u0631\u064a\u062f \u064a\u0628\u0633\u0651\u0637 \u0627\u0644\u0623\u0646\u0638\u0645\u0629: \u062a\u062d\u062f\u0651\u062f \u0627\u0644\u0639\u0642\u062f \u0623\u0648\u0644\u064b\u0627\u060c \u062b\u0645 \u062a\u062e\u0641\u064a \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u062e\u0644\u0641\u0647\u0627. \u0627\u0639\u062a\u0645\u062f Interfaces/Abstract + DI\u060c \u0648\u0627\u062c\u0639\u0644 \u0627\u0644\u0639\u0642\u062f \u0635\u063a\u064a\u0631\u0629 \u0648\u0648\u0627\u0636\u062d\u0629\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0643\u0648\u062f \u0645\u0631\u0646\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644\u060c \u0648\u0623\u0633\u0647\u0644 \u0641\u0647\u0645\u064b\u0627 \u0648\u0635\u064a\u0627\u0646\u0629. </p>"},{"location":"terms/agile/","title":"Agile","text":""},{"location":"terms/agile/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Agile Software Development \u2014 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0631\u0634\u064a\u0642</p>"},{"location":"terms/agile/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0637\u0631\u064a\u0642\u0629 \u0639\u0645\u0644 \u062a\u0643\u0631\u0627\u0631\u064a\u0629 \u0648\u062a\u062f\u0631\u064a\u062c\u064a\u0629 \u062a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0642\u064a\u0645\u0629 \u0648\u0627\u0644\u062a\u063a\u0630\u064a\u0629 \u0627\u0644\u0631\u0627\u062c\u0639\u0629 \u0627\u0644\u0633\u0631\u064a\u0639\u0629\u060c \u0628\u0641\u0631\u0642 \u0645\u062a\u0639\u062f\u0651\u062f\u0629 \u0627\u0644\u062a\u062e\u0635\u0651\u0635\u0627\u062a\u060c \u0648\u0642\u0648\u0627\u0626\u0645 \u0639\u0645\u0644 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0623\u0648\u0644\u0648\u064a\u0629\u060c \u0648\u062a\u0633\u0644\u064a\u0645\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0645\u062a\u0643\u0631\u0651\u0631\u0629.</p>"},{"location":"terms/agile/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0639\u0645\u0644 \u0639\u0644\u0649 \u062f\u064f\u0641\u0639\u0627\u062a \u0642\u0635\u064a\u0631\u0629 (Sprints/Iterations).  </li> <li>\u0646\u062d\u062f\u0651\u062f \u0642\u064a\u0645\u0629 \u0648\u0627\u0636\u062d\u0629 \u0644\u0643\u0644 \u0639\u0646\u0635\u0631 (Story) \u0648\u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644.  </li> <li>\u0646\u064f\u0631\u0627\u062c\u0639 \u062f\u0627\u0626\u0645\u064b\u0627: \u0648\u0642\u0648\u0641 \u064a\u0648\u0645\u064a\u060c \u0627\u0633\u062a\u0639\u0631\u0627\u0636\u060c \u062a\u062d\u0633\u064a\u0646 \u0645\u0633\u062a\u0645\u0631 (Retro).  </li> <li>\u0646\u0642\u064a\u0633 \u0628\u0627\u0644\u0646\u062a\u0627\u0626\u062c (\u0642\u064a\u0645\u0629/\u0623\u062b\u0631) \u0644\u0627 \u0628\u0639\u062f\u062f \u0627\u0644\u0645\u0647\u0627\u0645 \u0641\u0642\u0637.</li> </ul>"},{"location":"terms/agile/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u062f\u0644 \u0628\u0646\u0627\u0621 \u0646\u0627\u0637\u062d\u0629 \u0633\u062d\u0627\u0628 \u062f\u0641\u0639\u0629 \u0648\u0627\u062d\u062f\u0629\u060c \u0646\u0628\u0646\u064a \u0637\u0627\u0628\u0642\u064b\u0627 \u0635\u063a\u064a\u0631\u064b\u0627 \u064a\u0639\u0645\u0644 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646\u060c \u0648\u0646\u064f\u0639\u062f\u0651\u0644 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0628\u0633\u0631\u0639\u0629 \u062d\u0633\u0628 \u0631\u0623\u064a \u0627\u0644\u0633\u0627\u0643\u0646\u064a\u0646.</p>"},{"location":"terms/agile/#c-backlog-wsjf","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u0640 Backlog \u0628\u0637\u0631\u064a\u0642\u0629 WSJF (\u0642\u064a\u0645\u0629/\u062d\u062c\u0645)","text":"C#<pre><code>// dotnet new console -n AgileDemo &amp;&amp; cd AgileDemo\nusing System;\nusing System.Linq;\nusing System.Collections.Generic;\n\n// \u0646\u0645\u0648\u0630\u062c \u0639\u0646\u0635\u0631 Backlog \u0628\u0639\u0648\u0627\u0645\u0644 WSJF\npublic record BacklogItem(string Title, int BusinessValue, int TimeCriticality, int RiskReduction, int JobSize)\n{\n    // WSJF = (BV + TC + RR) / JS  \u2014 \u0643\u0644\u0645\u0627 \u0632\u0627\u062f\u062a\u060c \u0642\u0641\u0632\u062a \u0627\u0644\u0623\u0648\u0644\u0648\u064a\u0629\n    public double Wsjf =&gt; (BusinessValue + TimeCriticality + RiskReduction) / Math.Max(1.0, JobSize);\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var backlog = new List&lt;BacklogItem&gt;\n        {\n            new(\"Checkout: Add Apple Pay\", 8, 7, 3, 5),\n            new(\"Fix intermittent login bug\", 6, 9, 5, 3),\n            new(\"Product page A/B test\", 5, 5, 2, 2),\n            new(\"Refactor cart module\", 4, 3, 6, 8),\n        };\n\n        var ordered = backlog.OrderByDescending(i =&gt; i.Wsjf).ToList();\n\n        Console.WriteLine(\"Sprint Candidates (by WSJF):\");\n        foreach (var i in ordered)\n            Console.WriteLine($\"- {i.Title} | WSJF={i.Wsjf:F2} (BV={i.BusinessValue}, JS={i.JobSize})\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): \u0642\u0627\u0626\u0645\u0629 \u0645\u0631\u062a\u0651\u0628\u0629 \u0628\u0639\u0646\u0627\u0635\u0631 \u0623\u0639\u0644\u0649 WSJF \u0623\u0648\u0644\u064b\u0627 \u2192 \u0623\u0648\u0644\u0648\u064a\u0629 \u0644\u0644\u062a\u0633\u0644\u064a\u0645 \u0627\u0644\u0642\u0635\u064a\u0631 \u0630\u064a \u0627\u0644\u0623\u062b\u0631 \u0627\u0644\u0623\u0643\u0628\u0631.</p>"},{"location":"terms/agile/#agile_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0628\u0646\u0651\u064a Agile","text":"<ol> <li>Backlog \u0645\u0648\u062d\u0651\u062f: \u0642\u0635\u0635 \u0645\u0633\u062a\u062e\u062f\u0645 User Stories \u0628\u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644 \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u062a\u062e\u0637\u064a\u0637 \u062a\u0643\u0631\u0627\u0631\u064a: Sprint \u0642\u0635\u064a\u0631 (1\u20132 \u0623\u0633\u0628\u0648\u0639) \u0628\u0623\u0647\u062f\u0627\u0641 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0642\u064a\u0627\u0633.  </li> <li>\u0634\u0641\u0627\u0641\u064a\u0629: \u0644\u0648\u062d\u0629 \u0639\u0645\u0644 (To Do / In Progress / Done)\u060c \u0648\u062a\u0639\u0631\u064a\u0641 \u0648\u0627\u0636\u062d \u0644\u0640 Done.  </li> <li>\u0627\u0644\u062a\u0633\u0644\u064a\u0645 \u0627\u0644\u0645\u0633\u062a\u0645\u0631: CI/CD \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0622\u0644\u064a\u0629 \u0644\u062a\u0642\u0644\u064a\u0644 \u0632\u0645\u0646 \u0627\u0644\u062f\u0648\u0631\u0629.  </li> <li>\u0642\u064a\u0627\u0633: Lead Time/Throughput\u060c \u0648\u0645\u0631\u0627\u062c\u0639\u0627\u062a Sprint Review \u0648 Retro \u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0639\u0645\u0644\u064a\u0629.  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0633\u0639\u0629: \u062d\u062f\u0651 \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u062c\u0627\u0631\u064a (WIP) \u0648\u0645\u0648\u0627\u0632\u0646\u0629 \u0627\u0644\u0641\u0631\u064a\u0642 \u0644\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0627\u062e\u062a\u0646\u0627\u0642\u0627\u062a.</li> </ol>"},{"location":"terms/agile/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u062d\u0648\u064a\u0644 Agile \u0625\u0644\u0649 \u0627\u062c\u062a\u0645\u0627\u0639\u0627\u062a \u0628\u0644\u0627 \u0642\u064a\u0645\u0629 \u062f\u0648\u0646 \u062a\u0633\u0644\u064a\u0645\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0634\u062d\u0646.  </li> <li>\u0642\u0635\u0635 \u063a\u0627\u0645\u0636\u0629 \u0628\u0644\u0627 \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644 \u0623\u0648 \u0628\u0644\u0627 \u0642\u064a\u0645\u0629 \u0623\u0639\u0645\u0627\u0644 \u0648\u0627\u0636\u062d\u0629.  </li> <li>WIP \u0645\u0641\u062a\u0648\u062d \u0644\u0644\u062c\u0645\u064a\u0639 \u2192 \u0639\u0645\u0644 \u0645\u062a\u0634\u062a\u0651\u062a \u0648\u062a\u0623\u062e\u064a\u0631.  </li> <li>\u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u0633\u0631\u0639\u0629 (Velocity) \u0643\u0647\u062f\u0641 \u0628\u062d\u062f \u0630\u0627\u062a\u0647 \u0628\u062f\u0644 \u0627\u0644\u0642\u064a\u0645\u0629 \u0648\u0627\u0644\u0646\u062a\u0627\u0626\u062c.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0642\u0646\u064a\u0629/\u0627\u0644\u062c\u0648\u062f\u0629 (\u062f\u064a\u0648\u0646 \u062a\u0642\u0646\u064a\u0629 \u062a\u062a\u0631\u0627\u0643\u0645) \u0644\u0632\u064a\u0627\u062f\u0629 \u201c\u0627\u0644\u0646\u0642\u0627\u0637\u201d.</li> </ul>"},{"location":"terms/agile/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Agile \u062a\u0633\u0644\u064a\u0645 \u062a\u0643\u0631\u0627\u0631\u064a \u0645\u0648\u062c\u0651\u0647 \u0628\u0627\u0644\u0642\u064a\u0645\u0629 \u0648\u0627\u0644\u062a\u063a\u0630\u064a\u0629 \u0627\u0644\u0631\u0627\u062c\u0639\u0629 \u0645\u0638\u0644\u0629 \u062a\u0636\u0645 Scrum/Kanban \u0648\u0623\u0633\u0627\u0644\u064a\u0628 \u0623\u062e\u0631\u0649 Scrum \u0625\u0637\u0627\u0631 \u0623\u062f\u0648\u0627\u0631 \u0648\u0637\u0642\u0648\u0633 \u0648\u062a\u062a\u0628\u0651\u0639 Sprint Product Owner / Scrum Master / Dev Team Kanban \u062a\u062f\u0641\u0651\u0642 \u0645\u0633\u062a\u0645\u0631 \u0648\u062d\u062f\u0648\u062f WIP \u064a\u0642\u0644\u0651\u0644 \u0632\u0645\u0646 \u0627\u0644\u0627\u0646\u062a\u0638\u0627\u0631\u061b \u0644\u0627 Sprints \u062b\u0627\u0628\u062a\u0629 DevOps \u0623\u062a\u0645\u062a\u0629 \u0628\u0646\u0627\u0621/\u0646\u0634\u0631/\u062a\u0634\u063a\u064a\u0644 \u064a\u0643\u0645\u0651\u0644 Agile \u0644\u062a\u0642\u0635\u064a\u0631 \u0632\u0645\u0646 \u0627\u0644\u062f\u0648\u0631\u0629 Waterfall \u062a\u0633\u0644\u0633\u0644 \u062e\u0637\u0651\u064a \u0644\u0645\u0631\u0627\u062d\u0644 \u062b\u0627\u0628\u062a\u0629 \u0645\u0646\u0627\u0633\u0628 \u0644\u0639\u0642\u0648\u062f/\u0627\u0645\u062a\u062b\u0627\u0644 \u0635\u0627\u0631\u0645\u061b \u0635\u0639\u0628 \u0627\u0644\u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0645\u062a\u0623\u062e\u0631"},{"location":"terms/agile/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Agile \u064a\u0639\u0646\u064a \u062a\u0633\u0644\u064a\u0645 \u0642\u064a\u0645\u0629 \u0635\u063a\u064a\u0631\u0629 \u0628\u0633\u0631\u0639\u0629\u060c \u0645\u0639 \u062a\u0639\u0644\u0645 \u0645\u0633\u062a\u0645\u0631 \u0648\u062a\u0643\u064a\u0651\u0641. \u0627\u062d\u0641\u0638 \u0642\u0635\u0635\u064b\u0627 \u0648\u0627\u0636\u062d\u0629\u060c \u0631\u064e\u062a\u0651\u0628 \u0628\u0627\u0644\u0623\u062b\u0631 (\u0645\u062b\u0627\u0644 WSJF)\u060c \u0642\u0644\u0651\u0644 WIP\u060c \u0648\u0627\u062f\u0639\u0645\u0647\u0627 \u0628\u0640 CI/CD\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0623\u0633\u0631\u0639 \u0648\u062c\u0648\u062f\u0629 \u0623\u0639\u0644\u0649.</p>"},{"location":"terms/api/","title":"API","text":""},{"location":"terms/api/#en-ar","title":"\u0627\u0644\u062a\u0633\u0645\u064a\u0629 \u0627\u0644\u0645\u0639\u062a\u0645\u062f\u0629 (EN \u2194 AR)","text":"<p>Application Programming Interface (API) \u2014 \u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a</p>"},{"location":"terms/api/#_1","title":"\u062a\u0639\u0631\u064a\u0641 \u0645\u0648\u062c\u0632","text":"<p>A well-defined contract that lets software talk to other software via requests and responses. It standardizes how to access data and trigger actions without exposing internal details.</p> <p>\u0648\u0627\u062c\u0647\u0629 \u0645\u062a\u0651\u0641\u0642 \u0639\u0644\u064a\u0647\u0627 \u0644\u064a\u062a\u0648\u0627\u0635\u0644 \u0628\u0631\u0646\u0627\u0645\u062c \u0645\u0639 \u0628\u0631\u0646\u0627\u0645\u062c \u0639\u0628\u0631 \u0637\u0644\u0628/\u0627\u0633\u062a\u062c\u0627\u0628\u0629. \u062a\u064f\u062d\u062f\u0651\u062f \u0634\u0643\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0642\u0648\u0627\u0639\u062f \u0644\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u0648\u0638\u0627\u0626\u0641 \u062f\u0648\u0646 \u0643\u0634\u0641 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629.</p>"},{"location":"terms/api/#api_1","title":"\u0644\u0645\u0627\u0630\u0627 API\u061f (\u0645\u062e\u062a\u0635\u0631 \u0645\u0641\u064a\u062f)","text":"<ul> <li>\u0641\u0635\u0644 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a: \u0641\u0631\u064a\u0642 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0623\u0645\u0627\u0645\u064a\u0629 \u064a\u0633\u062a\u0647\u0644\u0643\u060c \u0648\u0641\u0631\u064a\u0642 \u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0642\u062f\u0651\u0645.  </li> <li>\u0627\u0644\u062a\u0643\u0627\u0645\u0644: \u0631\u0628\u0637 \u0623\u0646\u0638\u0645\u062a\u0643 \u0628\u062e\u062f\u0645\u0627\u062a \u062f\u0641\u0639/\u062e\u0631\u0627\u0626\u0637/\u0631\u0633\u0627\u0626\u0644.  </li> <li>\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645: \u0646\u0641\u0633 \u0627\u0644\u0640API \u064a\u062e\u062f\u0645 \u062a\u0637\u0628\u064a\u0642 \u0648\u064a\u0628 \u0648\u0645\u0648\u0628\u0627\u064a\u0644 \u0648\u0645\u064a\u0643\u0631\u0648\u0633\u064a\u0631\u0641\u0650\u0633.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646: \u0645\u0634\u0627\u0631\u0643\u0629 \u0645\u0627 \u062a\u062d\u062a\u0627\u062c \u0641\u0642\u0637 \u0639\u0628\u0631 \u062a\u0648\u062b\u064a\u0642 \u0648\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u062d\u0633\u0648\u0628\u0629.</li> </ul>"},{"location":"terms/api/#_2","title":"\u0627\u0644\u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u0634\u0627\u0626\u0639\u0629 (\u0628\u0646\u0638\u0631\u0629 \u0633\u0631\u064a\u0639\u0629)","text":"<ul> <li>REST: \u0645\u0648\u0627\u0631\u062f \u0648\u0639\u0646\u0627\u0648\u064a\u0646 (URLs) + \u0623\u0641\u0639\u0627\u0644 HTTP (GET/POST/PUT/DELETE).  </li> <li>GraphQL: \u062a\u0633\u062a\u0639\u0644\u0645 \u0628\u0627\u0644\u0636\u0628\u0637 \u0627\u0644\u062d\u0642\u0648\u0644 \u0627\u0644\u062a\u064a \u062a\u0631\u064a\u062f\u0647\u0627 \u0641\u064a \u0637\u0644\u0628 \u0648\u0627\u062d\u062f.  </li> <li>gRPC: \u0633\u0631\u064a\u0639 \u062b\u0646\u0627\u0626\u064a (Protocol Buffers)\u060c \u0645\u0645\u062a\u0627\u0632 \u0644\u0644\u0645\u064a\u0643\u0631\u0648\u0633\u064a\u0631\u0641\u0650\u0633.  </li> <li>SOAP: \u0642\u062f\u064a\u0645/\u062b\u0642\u064a\u0644 \u0646\u0633\u0628\u064a\u064b\u0627\u060c XML \u0648\u0631\u0633\u0627\u0626\u0644 \u0645\u0639\u064a\u0627\u0631\u064a\u0629.</li> </ul>"},{"location":"terms/api/#_3","title":"\u0645\u0641\u0627\u0647\u064a\u0645 \u0623\u0633\u0627\u0633\u064a\u0629","text":"<ul> <li>Endpoint: \u0639\u0646\u0648\u0627\u0646 \u0642\u0627\u0628\u0644 \u0644\u0644\u0646\u062f\u0627\u0621 \u0645\u062b\u0644 <code>/api/products/5</code>.  </li> <li>Resource: \u0627\u0644\u0634\u064a\u0621 \u0627\u0644\u0630\u064a \u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639\u0647 (Product, User\u2026).  </li> <li>HTTP Methods: </li> <li>GET (\u0642\u0631\u0627\u0621\u0629)\u060c POST (\u0625\u0646\u0634\u0627\u0621)\u060c PUT (\u0627\u0633\u062a\u0628\u062f\u0627\u0644)\u060c PATCH (\u062a\u0639\u062f\u064a\u0644 \u062c\u0632\u0626\u064a)\u060c DELETE (\u062d\u0630\u0641).  </li> <li>Status Codes: 200 \u0646\u062c\u0627\u062d\u060c 201 \u062a\u0645 \u0627\u0644\u0625\u0646\u0634\u0627\u0621\u060c 400 \u0637\u0644\u0628 \u063a\u064a\u0631 \u0635\u0627\u0644\u062d\u060c 401 \u063a\u064a\u0631 \u0645\u0648\u062b\u0651\u0642\u060c 403 \u0645\u0645\u0646\u0648\u0639\u060c 404 \u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f\u060c 500 \u062e\u0637\u0623 \u062e\u0627\u062f\u0645.  </li> <li>Auth: API Key / OAuth2 / JWT.  </li> <li>Versioning: \u0645\u062b\u0644 <code>/v1/...</code> \u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u0648\u0627\u0641\u0642\u0629 \u0645\u0633\u062a\u0642\u0628\u0644\u064b\u0627.</li> </ul>"},{"location":"terms/api/#_4","title":"\u0645\u062b\u0627\u0644 \u0645\u0646 \u0627\u0644\u0643\u0648\u062f","text":""},{"location":"terms/api/#1-api-aspnet-core-minimal-api","title":"1) \u0625\u0646\u0634\u0627\u0621 API \u0635\u063a\u064a\u0631 \u062c\u062f\u064b\u0627 (ASP.NET Core Minimal API)","text":"C#<pre><code>// Program.cs\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\n// Endpoint \u0628\u0633\u064a\u0637 \u064a\u0639\u064a\u062f \u0648\u0642\u062a \u0627\u0644\u062e\u0627\u062f\u0645\napp.MapGet(\"/api/time\", () =&gt; Results.Ok(new { serverTime = DateTime.UtcNow }));\n\napp.Run();\n</code></pre>"},{"location":"terms/api/#2-api-c","title":"2) \u0627\u0633\u062a\u0647\u0644\u0627\u0643 API \u0645\u0646 C# (\u0639\u0645\u064a\u0644)","text":"C#<pre><code>using var http = new HttpClient();\nvar res = await http.GetAsync(\"https://api.example.com/products/1\");\nif (!res.IsSuccessStatusCode)\n    Console.WriteLine($\"\u062e\u0637\u0623: {(int)res.StatusCode}\");\nelse\n    Console.WriteLine(await res.Content.ReadAsStringAsync()); // JSON \u0643\u0646\u0635\n</code></pre> <p>\u062a\u0634\u0628\u064a\u0647: \u062a\u062e\u064a\u0651\u0644 \u0645\u0637\u0639\u0645\u064b\u0627. \u0627\u0644\u0642\u0627\u0626\u0645\u0629 = \u0627\u0644\u062a\u0648\u062b\u064a\u0642 (Docs)\u060c \u0627\u0644\u0637\u0644\u0628 = Request\u060c \u0627\u0644\u0637\u0628\u0642 = Response\u060c \u0627\u0644\u0634\u064a\u0641 \u062e\u0644\u0641 \u0627\u0644\u0643\u0648\u0627\u0644\u064a\u0633 = \u0627\u0644\u062e\u0627\u062f\u0645 (Server/API).</p>"},{"location":"terms/api/#_5","title":"\u0645\u0635\u0637\u0644\u062d\u0627\u062a \u0645\u0631\u062a\u0628\u0637\u0629 \u0648\u062a\u0645\u064a\u064a\u0632\u0627\u062a \u0633\u0631\u064a\u0639\u0629","text":"<ul> <li>API vs SDK: \u0627\u0644\u0640API \u0639\u0642\u062f \u0627\u0644\u0646\u062f\u0627\u0621\u061b \u0627\u0644\u0640SDK \u0623\u062f\u0648\u0627\u062a/\u0645\u0643\u062a\u0628\u0627\u062a \u062a\u0633\u0647\u0651\u0644 \u0627\u0633\u062a\u0647\u0644\u0627\u0643\u0647.  </li> <li>REST vs GraphQL: REST \u0645\u0648\u0627\u0631\u062f \u062b\u0627\u0628\u062a\u0629\u061b GraphQL \u0645\u0631\u0646 \u0628\u0627\u0644\u062d\u0642\u0644/\u0627\u0644\u0634\u0643\u0644 \u0648\u064a\u0642\u0644\u0651\u0644 \u0637\u0644\u0628\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629.  </li> <li>PUT vs PATCH: PUT \u064a\u0633\u062a\u0628\u062f\u0644 \u0627\u0644\u0645\u0648\u0631\u062f \u0643\u0627\u0645\u0644\u064b\u0627\u061b PATCH \u064a\u062d\u062f\u0651\u062b \u062c\u0632\u0621\u064b\u0627.  </li> <li>AuthN vs AuthZ: \u0627\u0644\u062a\u0648\u062b\u064a\u0642 (\u0645\u0646 \u0623\u0646\u062a\u061f) \u0645\u0642\u0627\u0628\u0644 \u0627\u0644\u062a\u0641\u0648\u064a\u0636 (\u0645\u0627\u0630\u0627 \u064a\u064f\u0633\u0645\u062d \u0644\u0643\u061f).  </li> <li>Endpoint vs Route: \u063a\u0627\u0644\u0628\u064b\u0627 \u064a\u064f\u0633\u062a\u062e\u062f\u0645\u0627\u0646 \u062a\u0628\u0627\u062f\u0644\u064a\u064b\u0627\u061b \u0627\u0644\u0640Route \u062a\u0639\u0631\u064a\u0641 \u0645\u0633\u0627\u0631 \u062f\u0627\u062e\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u060c \u0648\u0627\u0644\u0640Endpoint \u0646\u0642\u0637\u0629 \u0627\u0644\u0646\u062f\u0627\u0621 \u0627\u0644\u0641\u0639\u0644\u064a\u0629 \u0627\u0644\u0645\u0639\u0631\u0651\u0641\u0629 \u0628\u0647.</li> </ul>"},{"location":"terms/api/#_6","title":"\u0645\u062a\u0649 \u0623\u0633\u062a\u062e\u062f\u0645\u0647\u061f \u0648\u0645\u062a\u0649 \u0623\u062a\u062c\u0646\u0651\u0628\u0647\u061f","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 API \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u062a\u0628\u0627\u062f\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u064a\u0646 \u062a\u0637\u0628\u064a\u0642\u0627\u062a/\u0623\u062c\u0647\u0632\u0629 \u0623\u0648 \u0641\u0635\u0644 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0639\u0646 \u0627\u0644\u062e\u0627\u062f\u0645.  </li> <li>\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u062a\u0639\u0642\u064a\u062f \u0639\u0646\u062f \u0648\u062c\u0648\u062f \u0645\u0646\u0637\u0642 \u062f\u0627\u062e\u0644\u064a \u0628\u0633\u064a\u0637 \u062f\u0627\u062e\u0644 \u0646\u0641\u0633 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0648\u0644\u0627 \u062d\u0627\u062c\u0629 \u0644\u0645\u0633\u062a\u0648\u0649 \u0634\u0628\u0643\u0629.</li> </ul>"},{"location":"terms/api/#_7","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062e\u0644\u0637 \u0627\u0644\u0623\u0641\u0639\u0627\u0644: \u0627\u0633\u062a\u062e\u062f\u0627\u0645 GET \u0644\u0644\u062a\u0639\u062f\u064a\u0644 \u0628\u062f\u0644\u0627\u064b \u0645\u0646 POST/PUT.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0623\u0643\u0648\u0627\u062f: \u062f\u0627\u0626\u0645\u064b\u0627 \u0623\u0639\u062f status code \u0645\u0646\u0627\u0633\u0628 \u0648\u0631\u0633\u0627\u0644\u0629 \u062e\u0637\u0623 \u0645\u0641\u0647\u0648\u0645\u0629.  </li> <li>\u0643\u0634\u0641 \u0646\u0645\u0627\u0630\u062c \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0643\u0645\u0627 \u0647\u064a (Coupling) \u0628\u062f\u0644 DTOs \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u0644\u0627 \u062a\u0648\u062b\u064a\u0642/\u0644\u0627 \u0625\u0635\u062f\u0627\u0631 (Versioning) \u2192 \u0643\u0633\u0631 \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0639\u0646\u062f \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0644\u0627\u062d\u0642\u0629.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0631\u0642\u064a\u0645 (Pagination) \u0648\u0627\u0644\u062a\u0631\u0634\u064a\u062d (Filtering) \u0641\u064a \u0627\u0644\u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0643\u0628\u064a\u0631\u0629.</li> </ul>"},{"location":"terms/api/#check-list","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u0628\u062f\u0621 (Check-list)","text":"<ol> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0648\u0627\u0644\u0623\u0641\u0639\u0627\u0644 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629.  </li> <li>\u0635\u0645\u0651\u0645 \u0627\u0644\u0639\u0642\u0648\u062f (\u0646\u0645\u0627\u0630\u062c \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629) \u0648\u0639\u0631\u0651\u0641 \u0631\u0645\u0648\u0632 \u0627\u0644\u062d\u0627\u0644\u0629.  </li> <li>\u0623\u0636\u0641 Auth \u0645\u0646\u0627\u0633\u0628 (JWT \u0645\u062b\u0644\u064b\u0627) \u0648CORS \u0644\u0644\u0645\u062a\u0635\u0641\u0651\u062d.  </li> <li>\u0641\u0639\u0651\u0644 Swagger/OpenAPI \u0644\u0644\u062a\u0648\u062b\u064a\u0642 \u0648\u0627\u0644\u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u0633\u0631\u064a\u0639\u0629.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0628\u0640 curl/Postman \u0648\u063a\u064a\u0651\u0631 \u0648\u0641\u0642 \u0627\u0644\u0645\u0644\u0627\u062d\u0638\u0627\u062a.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u0623\u062f\u0627\u0621 \u0648\u0627\u0644\u0623\u062e\u0637\u0627\u0621 (Logging/Tracing/Rate Limits).</li> </ol>"},{"location":"terms/api/#swagger-aspnet-core","title":"\u0645\u062b\u0627\u0644 \u0623\u0648\u0636\u062d \u0644\u0644\u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u0630\u0627\u062a\u064a (Swagger \u0641\u064a ASP.NET Core)","text":"C#<pre><code>// Program.cs (\u0645\u0642\u062a\u0637\u0641)\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nvar app = builder.Build();\napp.UseSwagger();\napp.UseSwaggerUI(); // \u0648\u0627\u062c\u0647\u0629 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0644\u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u0640API\n\napp.MapGet(\"/api/products/{id:int}\", (int id) =&gt;\n{\n    if (id &lt;= 0) return Results.BadRequest(new { error = \"Invalid id.\" });\n    return Results.Ok(new { id, name = \"Laptop\", price = 999 });\n});\n\napp.Run();\n</code></pre>"},{"location":"terms/api/#_8","title":"\u0633\u0624\u0627\u0644 \u062a\u062b\u0628\u064a\u062a (\u0625\u062c\u0627\u0628\u0629 \u0645\u062e\u0641\u064a\u0651\u0629)","text":"<p>\"\u0645\u0627 \u0627\u0644\u0641\u0639\u0644 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u0644\u0625\u0646\u0634\u0627\u0621 \u0645\u0648\u0631\u062f \u062c\u062f\u064a\u062f \u0639\u0644\u0649 <code>/api/orders</code>\u061f \u0648\u0645\u0627\u0630\u0627 \u062a\u062a\u0648\u0642\u0639 \u0643\u0648\u062f \u0627\u0644\u062d\u0627\u0644\u0629 \u0639\u0646\u062f \u0627\u0644\u0646\u062c\u0627\u062d\u061f\"</p> \u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0625\u062c\u0627\u0628\u0629   **POST** \u0647\u0648 \u0627\u0644\u0641\u0639\u0644 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u060c \u0648\u0646\u062a\u0648\u0642\u0639 **201 Created** \u0645\u0639 \u0631\u0627\u0628\u0637 \u0627\u0644\u0645\u0648\u0631\u062f \u0627\u0644\u062c\u062f\u064a\u062f \u0641\u064a \u0627\u0644\u0639\u0646\u0648\u0627\u0646 `Location`."},{"location":"terms/approach/","title":"Approach","text":""},{"location":"terms/approach/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Approach \u2014 \u0646\u0647\u062c/\u0645\u0642\u0627\u0631\u0628\u0629 \u0644\u062d\u0644\u0651 \u0645\u0634\u0643\u0644\u0629 \u0623\u0648 \u0625\u0646\u062c\u0627\u0632 \u0647\u062f\u0641.</p>"},{"location":"terms/approach/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062e\u0637\u0629 \u0639\u0627\u0644\u064a\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u062a\u0648\u0636\u0651\u062d \u0643\u064a\u0641 \u0633\u0646\u0639\u0627\u0644\u062c \u0627\u0644\u0645\u0634\u0643\u0644\u0629: \u0627\u0644\u0641\u0631\u0636\u064a\u0627\u062a\u060c \u0627\u0644\u0642\u064a\u0648\u062f\u060c \u0627\u0644\u0628\u062f\u0627\u0626\u0644\u060c \u0627\u0644\u0645\u0641\u0627\u0636\u0644\u0627\u062a (Trade-offs)\u060c \u062e\u0637\u0648\u0627\u062a \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u060c \u0648\u0645\u0639\u0627\u064a\u064a\u0631 \u0627\u0644\u0646\u062c\u0627\u062d.</p>"},{"location":"terms/approach/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u062d\u062f\u0651\u062f \u0627\u0644\u0647\u062f\u0641 \u0648\u0627\u0644\u0646\u0637\u0627\u0642 \u0648\u0645\u0627 \u0644\u064a\u0633 \u0636\u0645\u0646\u0647.  </li> <li>\u064a\u062c\u0645\u0639 \u0627\u0644\u0642\u064a\u0648\u062f: \u0632\u0645\u0646\u060c \u062a\u0643\u0644\u0641\u0629\u060c \u0623\u062f\u0648\u0627\u062a\u060c \u0645\u0647\u0627\u0631\u0627\u062a \u0627\u0644\u0641\u0631\u064a\u0642\u060c \u0623\u0645\u0627\u0646.  </li> <li>\u064a\u0637\u0631\u062d \u0628\u062f\u0627\u0626\u0644 (A/B/C) \u0648\u064a\u0642\u0627\u0631\u0646\u0647\u0627 \u0628\u0645\u0639\u0627\u064a\u064a\u0631 \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u064a\u0642\u0631\u0651\u0631 \u062e\u064a\u0627\u0631\u064b\u0627 \u0645\u0639 \u0645\u0628\u0631\u0631\u0627\u062a \u0648\u0645\u062e\u0627\u0637\u0631 \u0648\u062e\u0637\u0629 \u0627\u0644\u062a\u062e\u0641\u064a\u0641.  </li> <li>\u064a\u0646\u062a\u062c \u0639\u0646\u0647 \u062e\u0637\u0629 \u0639\u0645\u0644 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0642\u064a\u0627\u0633 \u0648\u0627\u0644\u062a\u062d\u0642\u0642.</li> </ul>"},{"location":"terms/approach/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0643\u0645\u062e\u0637\u0637 \u0637\u0631\u064a\u0642 \u0644\u0631\u062d\u0644\u0629: \u062a\u062e\u062a\u0627\u0631 \u0637\u0631\u064a\u0642\u064b\u0627 \u0633\u0631\u064a\u0639\u064b\u0627 \u0628\u0631\u0633\u0648\u0645 \u0623\u0648 \u0637\u0631\u064a\u0642\u064b\u0627 \u0623\u0628\u0637\u0623 \u0628\u0644\u0627 \u0631\u0633\u0648\u0645. \u0643\u0644\u0627\u0647\u0645\u0627 \u064a\u0635\u0644\u060c \u0644\u0643\u0646 \u0627\u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0632\u0645\u0646/\u062a\u0643\u0644\u0641\u0629/\u0631\u0627\u062d\u0629.</p>"},{"location":"terms/approach/#c-strategy","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0642\u0635\u064a\u0631 \u2014 \u062a\u063a\u064a\u064a\u0631 \u201c\u0627\u0644\u0646\u0647\u062c\u201d \u0639\u0628\u0631 \u0646\u0645\u0637 Strategy","text":"<p>\u0627\u0644\u0647\u062f\u0641: \u0625\u0632\u0627\u0644\u0629 \u0627\u0644\u062a\u0643\u0631\u0627\u0631\u0627\u062a \u0645\u0646 \u0642\u0627\u0626\u0645\u0629 \u0643\u0628\u064a\u0631\u0629. Approach A (LINQ): \u0633\u0647\u0644 \u0627\u0644\u0642\u0631\u0627\u0621\u0629\u060c \u064a\u0633\u062a\u0647\u0644\u0643 \u0630\u0627\u0643\u0631\u0629 \u0623\u0643\u062b\u0631. Approach B (HashSet Streaming): \u0623\u0633\u0631\u0639 \u0648\u0623\u0642\u0644 \u0630\u0627\u0643\u0631\u0629 \u0644\u0639\u0646\u0627\u0635\u0631 \u0643\u062b\u064a\u0631\u0629.</p> <p>C#<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\n// \u0639\u0642\u062f\u0629 \u0639\u0627\u0645\u0629 \u0644\u0623\u064a \u0646\u0647\u062c\npublic interface IDedupApproach { IEnumerable&lt;int&gt; Run(IEnumerable&lt;int&gt; src); }\n\n// A) \u0646\u0647\u062c LINQ \u2014 \u0633\u0647\u0644 \u0644\u0643\u0646 \u0642\u062f \u064a\u062e\u0635\u0635 \u0630\u0627\u0643\u0631\u0629 \u0625\u0636\u0627\u0641\u064a\u0629\npublic class LinqDedup : IDedupApproach\n{\n    public IEnumerable&lt;int&gt; Run(IEnumerable&lt;int&gt; src) =&gt; src.Distinct().OrderBy(x =&gt; x);\n}\n\n// B) \u0646\u0647\u062c HashSet \u2014 \u062a\u062f\u0641\u0651\u0642\u064a\u060c \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0643\u0645\u0651\u064a\u0627\u062a \u0627\u0644\u0643\u0628\u064a\u0631\u0629\npublic class HashSetDedup : IDedupApproach\n{\n    public IEnumerable&lt;int&gt; Run(IEnumerable&lt;int&gt; src)\n    {\n        var seen = new HashSet&lt;int&gt;();\n        foreach (var x in src) if (seen.Add(x)) yield return x; // \u064a\u062e\u0631\u062c \u0628\u062f\u0648\u0646 \u062a\u0631\u062a\u064a\u0628\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        int[] data = { 3, 1, 2, 3, 2, 2, 5, 1 };\n\n        // \u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0646\u0647\u062c \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0642\u064a\u0648\u062f\u0643 (\u0645\u062b\u0627\u0644 \u0628\u0633\u064a\u0637)\n        IDedupApproach approach = data.Length &lt; 100_000 ? new LinqDedup() : new HashSetDedup();\n\n        var result = approach.Run(data);\n        Console.WriteLine(string.Join(\",\", result)); // \u0645\u062e\u0631\u062c\u0627\u062a \u0648\u0641\u0642 \u0627\u0644\u0646\u0647\u062c \u0627\u0644\u0645\u062e\u062a\u0627\u0631\n    }\n}\n</code></pre> \u0627\u0644\u0641\u0643\u0631\u0629: \u0646\u0641\u0633 \u0627\u0644\u0647\u062f\u0641 \u0644\u0643\u0646 \u0646\u0647\u062c\u0627\u0646 \u0645\u062e\u062a\u0644\u0641\u0627\u0646 \u062d\u0633\u0628 \u0627\u0644\u0642\u064a\u0648\u062f (\u062d\u062c\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0644\u062a\u0631\u062a\u064a\u0628/\u0627\u0644\u0623\u062f\u0627\u0621).</p>"},{"location":"terms/approach/#approach_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0643\u062a\u0627\u0628\u0629 \u0646\u0647\u062c (Approach) \u0648\u0627\u0636\u062d","text":"<ol> <li>\u0628\u064a\u0627\u0646 \u0627\u0644\u0645\u0634\u0643\u0644\u0629: \u0645\u0627\u0630\u0627 \u0646\u062d\u0644\u061f \u0644\u0645\u0646\u061f \u0644\u0645\u0627\u0630\u0627 \u0627\u0644\u0622\u0646\u061f  </li> <li>\u0627\u0644\u0646\u0637\u0627\u0642/\u0627\u0644\u0642\u064a\u0648\u062f: \u0627\u0644\u0623\u062f\u0627\u0621 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u060c \u0627\u0644\u0645\u064a\u0632\u0627\u0646\u064a\u0629\u060c \u0627\u0644\u0623\u0645\u0627\u0646/\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644\u060c \u0627\u0644\u0645\u0648\u0639\u062f.  </li> <li>\u0627\u0644\u0628\u062f\u0627\u0626\u0644: \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644 \u062e\u064a\u0627\u0631\u0627\u0646 \u0648\u0627\u0642\u0639\u064a\u0627\u0646.  </li> <li>\u0645\u0639\u0627\u064a\u064a\u0631 \u0627\u0644\u062a\u0642\u064a\u064a\u0645: \u0632\u0645\u0646 \u0627\u0633\u062a\u062c\u0627\u0628\u0629\u060c \u0643\u0644\u0641\u0629\u060c \u062a\u0639\u0642\u064a\u062f\u060c \u0645\u062e\u0627\u0637\u0631\u060c \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0635\u064a\u0627\u0646\u0629.  </li> <li>\u0645\u0635\u0641\u0648\u0641\u0629 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631\u0629 \u0644\u0643\u0644 \u0628\u062f\u064a\u0644 (\u00b1 \u0639\u0644\u0649 \u0627\u0644\u0645\u0639\u0627\u064a\u064a\u0631).  </li> <li>\u0627\u0644\u0642\u0631\u0627\u0631: \u0627\u0644\u0628\u062f\u064a\u0644 \u0627\u0644\u0645\u062e\u062a\u0627\u0631 + \u0644\u0645\u0627\u0630\u0627 + \u0645\u0627 \u0627\u0644\u0630\u064a \u0644\u0646 \u0646\u0641\u0639\u0644\u0647.  </li> <li>\u062e\u0637\u0629 \u0627\u0644\u062a\u0646\u0641\u064a\u0630: \u0645\u0631\u0627\u062d\u0644\u060c \u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a\u060c \u0645\u0642\u0627\u064a\u064a\u0633 \u0646\u062c\u0627\u062d (KPIs)\u060c \u062a\u062c\u0627\u0631\u0628/PoC.  </li> <li>\u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0648\u0627\u0644\u062a\u062e\u0641\u064a\u0641: \u0645\u0627\u0630\u0627 \u0644\u0648 \u0641\u0634\u0644\u061f \u0645\u0633\u0627\u0631\u0627\u062a \u0631\u062c\u0648\u0639 (Rollback/Feature flags).</li> </ol>"},{"location":"terms/approach/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u062e\u062a\u064a\u0627\u0631 \u062d\u0644 \u0642\u0628\u0644 \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u0634\u0643\u0644\u0629/\u0627\u0644\u0645\u0639\u0627\u064a\u064a\u0631.  </li> <li>\u0639\u062f\u0645 \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u0645\u0641\u0627\u0636\u0644\u0627\u062a \u2192 \u0642\u0631\u0627\u0631\u0627\u062a \u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0645\u0631\u0627\u062c\u0639\u0629 (ADR \u0645\u0641\u0642\u0648\u062f).  </li> <li>\u0627\u0644\u0645\u0642\u0627\u0631\u0646\u0629 \u0628\u064a\u0646 \u0628\u062f\u0627\u0626\u0644 \u063a\u064a\u0631 \u0645\u062a\u0643\u0627\u0641\u0626\u0629 \u0623\u0648 \u062f\u0648\u0646 \u0623\u0631\u0642\u0627\u0645/\u0642\u064a\u0627\u0633\u0627\u062a.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0639\u0645\u0644\u064a\u0651\u0627\u062a/\u0627\u0644\u0639\u0645\u0651\u0627\u0644\u0629 (Support/Monitoring/Cost) \u0648\u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u0643\u0648\u062f \u0641\u0642\u0637.  </li> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 \u0627\u0644\u0646\u0647\u062c \u0648\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0623\u0648 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629.</li> </ul>"},{"location":"terms/approach/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Approach (\u0646\u0647\u062c) \u062e\u0637\u0629 \u0639\u0644\u064a\u0627 \u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u0637\u0631\u064a\u0642 \u0627\u0644\u062d\u0644 \u0648\u062a\u0646\u0641\u064a\u0630\u0647 \u064a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0623\u0647\u062f\u0627\u0641\u060c \u0627\u0644\u0642\u064a\u0648\u062f\u060c \u0627\u0644\u0628\u062f\u0627\u0626\u0644\u060c \u0627\u0644\u0645\u0641\u0627\u0636\u0644\u0627\u062a Architecture \u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0646\u0638\u0627\u0645 \u0648\u062d\u062f\u0648\u062f\u0647 \u0648\u062a\u062f\u0641\u0651\u0642\u0627\u062a\u0647 \u0642\u0631\u0627\u0631 \u0623\u0637\u0648\u0644 \u0623\u0645\u062f\u064b\u0627\u061b \u064a\u0633\u0628\u0642 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0641\u0635\u064a\u0644\u064a Algorithm \u0637\u0631\u064a\u0642\u0629 \u062d\u0633\u0627\u0628\u064a\u0629 \u062f\u0642\u064a\u0642\u0629 \u0644\u062d\u0644 \u0645\u0633\u0623\u0644\u0629 \u062c\u0632\u0621 \u062f\u0627\u062e\u0644 \u0627\u0644\u0646\u0647\u062c\u061b \u062a\u0641\u0627\u0635\u064a\u0644 \u201c\u0643\u064a\u0641\u201d \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a Methodology \u0645\u0646\u0647\u062c\u064a\u0629 \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0639\u0645\u0644 (Agile/Waterfall) \u0625\u0637\u0627\u0631 \u0625\u062f\u0627\u0631\u0629\u060c \u0644\u0627 \u062d\u0644 \u062a\u0642\u0646\u064a \u0628\u062d\u062f \u0630\u0627\u062a\u0647 Strategy Pattern \u062a\u0628\u062f\u064a\u0644 \u0646\u0647\u062c \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u062a\u0637\u0628\u064a\u0642 \u0628\u0631\u0645\u062c\u064a \u0644\u062a\u063a\u064a\u064a\u0631 \u201cApproach\u201d \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0648\u062f"},{"location":"terms/approach/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Approach = \u062e\u0627\u0631\u0637\u0629 \u0637\u0631\u064a\u0642 \u0639\u0645\u0644\u064a\u0629 \u0646\u062d\u0648 \u0627\u0644\u062d\u0644: \u062a\u0639\u0631\u0651\u0641 \u0627\u0644\u0645\u0634\u0643\u0644\u0629\u060c \u062a\u0642\u0627\u0631\u0646 \u0627\u0644\u0628\u062f\u0627\u0626\u0644 \u0628\u0645\u0639\u0627\u064a\u064a\u0631 \u0648\u0627\u0636\u062d\u0629\u060c \u062a\u062e\u062a\u0627\u0631 \u0645\u0639 \u0645\u0628\u0631\u0631\u0627\u062a\u060c \u062b\u0645 \u062a\u0646\u0641\u0651\u0630 \u0628\u062e\u0637\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0642\u064a\u0627\u0633 \u0645\u0639 \u0645\u0633\u0627\u0631\u0627\u062a \u0631\u062c\u0648\u0639. \u063a\u064a\u0651\u0631 \u0627\u0644\u0646\u0647\u062c \u0639\u0646\u062f\u0645\u0627 \u062a\u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0642\u064a\u0648\u062f\u2014\u0648\u0644\u0627 \u062a\u0646\u0633\u064e \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u0642\u0631\u0627\u0631 (ADR) \u0644\u064a\u0631\u0627\u062c\u0639\u0647 \u0627\u0644\u0641\u0631\u064a\u0642 \u0644\u0627\u062d\u0642\u064b\u0627.</p>"},{"location":"terms/architecture/","title":"Architecture","text":""},{"location":"terms/architecture/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>(Software / System) Architecture \u2014 \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 (\u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a/\u0627\u0644\u0646\u0651\u064f\u0638\u0645)</p>"},{"location":"terms/architecture/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062e\u0627\u0631\u0637\u0629 \u0639\u0644\u064a\u0627 \u062a\u0642\u0633\u0651\u0645 \u0627\u0644\u0646\u0638\u0627\u0645 \u0625\u0644\u0649 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0648\u062d\u062f\u0648\u062f \u0648\u062a\u062f\u0641\u0642\u0627\u062a. \u0642\u0631\u0627\u0631\u0627\u062a\u0647\u0627 \u0645\u0648\u062c\u0651\u0647\u0629 \u0628\u0640 \u0633\u0645\u0627\u062a \u0627\u0644\u062c\u0648\u062f\u0629: \u0627\u0644\u0623\u062f\u0627\u0621\u060c \u0627\u0644\u0642\u0627\u0628\u0644\u064a\u0629 \u0644\u0644\u0635\u064a\u0627\u0646\u0629\u060c \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u064a\u0629\u060c \u0627\u0644\u0623\u0645\u0627\u0646\u060c \u0627\u0644\u0642\u0627\u0628\u0644\u064a\u0629 \u0644\u0644\u062a\u0648\u0633\u0651\u0639.</p>"},{"location":"terms/architecture/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u062d\u062f\u062f \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a\u060c \u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a\u060c \u0648\u0622\u0644\u064a\u0629 \u0627\u0644\u062a\u0648\u0627\u0635\u0644 \u0628\u064a\u0646\u0647\u0627.  </li> <li>\u062a\u062e\u062a\u0627\u0631 \u0646\u0645\u0637\u064b\u0627 \u0645\u0639\u0645\u0627\u0631\u064a\u064b\u0627: \u0637\u0628\u0642\u0627\u062a (Layered)\u060c \u0633\u062f\u0627\u0633\u064a/\u0645\u0646\u0627\u0641\u0630 \u0648\u0645\u062d\u0648\u0651\u0644\u0627\u062a (Hexagonal/Ports &amp; Adapters)\u060c \u0623\u062d\u062f\u0627\u062b (Event-Driven)\u060c \u062e\u062f\u0645\u0627\u062a \u0635\u063a\u0631\u0649 (Microservices)\u060c \u0623\u062d\u0627\u062f\u064a (Monolith)\u2026  </li> <li>\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u2260 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u062a\u0641\u0635\u064a\u0644\u064a: \u0627\u0644\u0623\u0648\u0644\u0649 \u0645\u0628\u0627\u062f\u0626 \u0648\u062d\u062f\u0648\u062f\u060c \u0627\u0644\u062b\u0627\u0646\u064a\u0629 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0623\u0635\u0646\u0627\u0641 \u0648\u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a.  </li> <li>\u062a\u0648\u062b\u0651\u064e\u0642 \u0639\u0628\u0631 C4\u060c ADR (\u0633\u062c\u0644\u0627\u062a \u0642\u0631\u0627\u0631)\u060c \u0648\u062e\u0631\u0627\u0626\u0637 \u062a\u062f\u0641\u0651\u0642.</li> </ul>"},{"location":"terms/architecture/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062e\u0637\u0637 \u0645\u0647\u0646\u062f\u0633 \u0645\u0639\u0645\u0627\u0631\u064a \u0644\u0644\u0645\u0648\u0644: \u0645\u0646\u0627\u0637\u0642\u060c \u0645\u062f\u0627\u062e\u0644\u060c \u0645\u062e\u0627\u0631\u062c\u060c \u0645\u0635\u0627\u0639\u062f\u060c \u0648\u0644\u0648\u0627\u0626\u062d \u0623\u0645\u0627\u0646. \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0644\u0644\u0645\u062a\u0627\u062c\u0631 = \u062a\u0635\u0645\u064a\u0645 \u062a\u0641\u0635\u064a\u0644\u064a.</p>"},{"location":"terms/architecture/#c-ports-adapters-aspnet-core","title":"\u0645\u062b\u0627\u0644 C# \u0639\u0645\u0644\u064a (Ports &amp; Adapters \u0628\u0623\u0633\u0644\u0648\u0628 \u0628\u0633\u064a\u0637 \u0639\u0644\u0649 ASP.NET Core)","text":"<p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0645\u062c\u0627\u0644/\u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u064a\u0639\u0631\u0641 \u0645\u0646\u0627\u0641\u0630 (Interfaces). \u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0629 \u062a\u0648\u0641\u0651\u0631 \u0645\u062d\u0648\u0651\u0644\u0627\u062a \u0644\u0647\u0627. \u0627\u0644\u0642\u0648\u0627\u0626\u0645 \u0648\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u0627\u062a \u062a\u064f\u062d\u0642\u0646 \u0639\u0628\u0631 DI.</p> C#<pre><code>// Program.cs  (.NET 8/9)  \u2014  dotnet new web -n Shop\nusing System.Linq;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.DependencyInjection;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u0645\u0646\u0627\u0641\u0630 (Ports) \u0628\u062a\u0646\u0641\u064a\u0630\u0627\u062a \u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0629 (Adapters)\nbuilder.Services.AddScoped&lt;IPaymentGateway, StripeGateway&gt;();\nbuilder.Services.AddScoped&lt;CheckoutHandler&gt;();\n\nvar app = builder.Build();\n\n// \u062d\u0648\u0627\u0641 (Adapters) \u062f\u062e\u0648\u0644: HTTP Endpoints \u062a\u0633\u062a\u062f\u0639\u064a \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\napp.MapPost(\"/checkout\", async (CheckoutRequest req, CheckoutHandler useCase)\n    =&gt; await useCase.HandleAsync(req));\n\napp.Run();\n\n// ====== Domain (Entities + Ports) ======\npublic record Money(decimal Amount, string Currency = \"USD\");\npublic record CartItem(string Sku, int Qty, Money UnitPrice);\n\npublic interface IPaymentGateway  // Port\n{\n    Task&lt;string&gt; ChargeAsync(Money amount, string customerId, CancellationToken ct = default);\n}\n\n// ====== Application (Use Case) ======\npublic record CheckoutRequest(string CustomerId, CartItem[] Items);\n\npublic class CheckoutHandler\n{\n    private readonly IPaymentGateway _payments;\n    public CheckoutHandler(IPaymentGateway payments) =&gt; _payments = payments;\n\n    public async Task&lt;IResult&gt; HandleAsync(CheckoutRequest req, CancellationToken ct = default)\n    {\n        var total = req.Items.Sum(i =&gt; i.UnitPrice.Amount * i.Qty);\n        var txId = await _payments.ChargeAsync(new Money(total), req.CustomerId, ct);\n        return Results.Ok(new { total, txId });\n    }\n}\n\n// ====== Infrastructure (Adapter) ======\npublic class StripeGateway : IPaymentGateway\n{\n    public Task&lt;string&gt; ChargeAsync(Money amount, string customerId, CancellationToken ct = default)\n        =&gt; Task.FromResult($\"tx_{Guid.NewGuid():N}\"); // \u062a\u0645\u062b\u064a\u0644 \u0628\u0633\u064a\u0637\u061b \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u064a\u0633\u062a\u062f\u0639\u064a HTTP\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): <code>POST /checkout</code> \u0628\u062c\u0633\u0645 \u064a\u062d\u0648\u064a \u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0633\u0644\u0651\u0629 \u2192 JSON \u0641\u064a\u0647 <code>total</code> \u0648<code>txId</code>. \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0644\u0627 \u064a\u0639\u0631\u0641 Stripe \u0645\u0628\u0627\u0634\u0631\u0629\u061b \u064a\u0639\u0631\u0641 \u0627\u0644\u0645\u0646\u0641\u0630 \u0641\u0642\u0637 \u2192 \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0639\u0627\u0644\u064a\u0629.</p>"},{"location":"terms/architecture/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0646\u0627\u0641\u0639\u0629","text":"<ul> <li>\u0627\u0643\u062a\u0628 \u0627\u0644\u0647\u062f\u0641 \u0648\u0633\u0650\u0645\u0627\u062a \u0627\u0644\u062c\u0648\u062f\u0629 (NFRs): \u0632\u0645\u0646 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629\u060c \u0645\u0639\u062f\u0644 \u0627\u0644\u0637\u0644\u0628\u0627\u062a\u060c \u0645\u0633\u062a\u0648\u064a\u0627\u062a \u062a\u0648\u0641\u0651\u0631\u2026  </li> <li>\u0627\u0631\u0633\u0645 C4 (Context/Container/Component) \u0633\u0631\u064a\u0639\u064b\u0627.  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0646\u0645\u0637 \u0627\u0644\u0623\u0646\u0633\u0628 (Monolith-Modular \u0623\u0648\u0644\u064b\u0627\u060c \u062b\u0645 Microservices \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0627\u0644\u062d\u0642\u064a\u0642\u064a\u0629).  </li> <li>\u062b\u0628\u0651\u062a \u0627\u0644\u062d\u062f\u0648\u062f \u0628\u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629 (DTOs/Interfaces/Events).  </li> <li>\u0648\u062b\u0651\u0642 \u0642\u0631\u0627\u0631\u0627\u062a\u0643 \u0641\u064a ADR \u0642\u0635\u064a\u0631\u0629 (\u0642\u0631\u0627\u0631/\u0628\u062f\u0627\u0626\u0644/\u0633\u0628\u0628/\u062a\u0623\u062b\u064a\u0631).  </li> <li>\u0637\u0628\u0651\u0642 DI\u060c \u0648\u0627\u0641\u0635\u0644 \u0627\u0644\u0645\u062c\u0627\u0644 \u0639\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a (HTTP/DB/Message Bus).  </li> <li>\u0623\u0636\u0650\u0641 \u0645\u0631\u0627\u0642\u0628\u0629 \u0645\u0646\u0630 \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0623\u0648\u0644: \u0633\u062c\u0644\u0627\u062a\u060c \u0642\u064a\u0627\u0633\u0627\u062a\u060c \u062a\u062a\u0628\u0651\u0639 \u0645\u0648\u0632\u0651\u0639.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0645\u0631\u0648\u0646\u0629: \u0641\u0634\u0644 \u062e\u062f\u0645\u0629 \u062e\u0627\u0631\u062c\u064a\u0629\u060c \u0628\u0637\u0621 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0627\u0646\u0642\u0637\u0627\u0639 \u0634\u0628\u0643\u0629.</li> </ul>"},{"location":"terms/architecture/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0633\u0627\u0628\u0642\u0629 \u0644\u0623\u0648\u0627\u0646\u0647\u0627: \u062a\u0642\u0633\u064a\u0645 \u0645\u0628\u0627\u0644\u063a \u0641\u064a\u0647 \u0642\u0628\u0644 \u0641\u0647\u0645 \u0627\u0644\u0645\u062c\u0627\u0644 (YAGNI).  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u0623\u062f\u0648\u0627\u0631: \u0645\u0646\u0637\u0642 \u0627\u0644\u0645\u062c\u0627\u0644 \u064a\u062a\u0633\u0631\u0651\u0628 \u0625\u0644\u0649 Controllers \u0623\u0648 Repositories.  </li> <li>\u0627\u0639\u062a\u0645\u0627\u062f \u0625\u0637\u0627\u0631 = \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 (\u0627\u062e\u062a\u064a\u0627\u0631 Framework \u0644\u0627 \u064a\u063a\u0646\u064a \u0639\u0646 \u0627\u0644\u062d\u062f\u0648\u062f).  </li> <li>Microservices \u0645\u0628\u0643\u0651\u0631\u064b\u0627 \u0628\u062f\u0648\u0646 \u0645\u0646\u0635\u0629 \u0645\u0631\u0627\u0642\u0628\u0629/\u0623\u062a\u0645\u062a\u0629 \u2192 \u062a\u0639\u0642\u064a\u062f \u0648\u062a\u0634\u0638\u0651\u064a.  </li> <li>\u062a\u062c\u0627\u0647\u0644 NFRs \u0648\u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u201c\u0627\u0644\u0634\u0643\u0644\u201d \u0641\u0642\u0637.  </li> <li>\u0627\u0646\u0639\u062f\u0627\u0645 \u0627\u0644\u0627\u0646\u0636\u0628\u0627\u0637 \u0639\u0644\u0649 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a (\u062f\u0648\u0627\u0626\u0631 \u0628\u064a\u0646 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a).</li> </ul>"},{"location":"terms/architecture/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Software Architecture \u062d\u062f\u0648\u062f \u0648\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0648\u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0644\u062a\u062d\u0642\u064a\u0642 \u0633\u0645\u0627\u062a \u0627\u0644\u062c\u0648\u062f\u0629 \u0623\u0646\u0645\u0627\u0637: Layered, Hexagonal, Event-Driven, Microservices System Architecture \u062a\u0635\u0648\u0631 \u0623\u0639\u0644\u0649 \u064a\u0636\u0645 \u0627\u0644\u0639\u062a\u0627\u062f \u0648\u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0648\u0623\u0646\u0638\u0645\u0629 \u062e\u0627\u0631\u062c\u064a\u0629 \u062e\u0631\u0627\u0626\u0637 \u0646\u0634\u0631\u060c \u0634\u0628\u0643\u0627\u062a\u060c \u0623\u0645\u0646\u060c \u0631\u0628\u0637 \u0623\u0646\u0638\u0645\u0629 Solution/High-Level Design \u062a\u0641\u0635\u064a\u0644 \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0627\u0644\u062d\u0644 \u0644\u0645\u0646\u062a\u062c \u0645\u062d\u062f\u0651\u062f \u062c\u0633\u0652\u0631 \u0628\u064a\u0646 \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0648\u0627\u0644\u062a\u0646\u0641\u064a\u0630\u061b \u0642\u0631\u0627\u0631\u0627\u062a \u062a\u0642\u0646\u064a\u0629 CPU/ISA Architecture \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0648\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0629 (x86-64/ARM64) \u062a\u0624\u062b\u0651\u0631 \u0639\u0644\u0649 \u0628\u0646\u0627\u0621 \u0627\u0644\u0635\u0648\u0631 (OCI) \u0648\u0627\u0644\u062a\u0648\u0627\u0641\u0642 \u0648\u0627\u0644\u0633\u0631\u0639\u0629 Framework \u0623\u062f\u0648\u0627\u062a/\u0647\u064a\u0627\u0643\u0644 \u0644\u0644\u062a\u0646\u0641\u064a\u0630 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0644\u064a\u0633 \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0628\u062d\u062f \u0630\u0627\u062a\u0647\u061b \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u062e\u0644 \u0627\u0644\u062d\u062f\u0648\u062f"},{"location":"terms/architecture/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u062a\u062d\u062f\u0651\u062f \u0627\u0644\u062d\u062f\u0648\u062f \u0648\u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a \u0648\u0627\u0644\u0642\u0631\u0627\u0631\u0627\u062a \u0627\u0644\u0643\u0628\u0631\u0649 \u0627\u0644\u062a\u064a \u062a\u062c\u0639\u0644 \u0627\u0644\u0646\u0638\u0627\u0645 \u0642\u0627\u0628\u0644\u064b\u0627 \u0644\u0644\u062a\u063a\u064a\u064a\u0631 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644. \u0627\u0628\u062f\u0623 \u0628\u0633\u064a\u0637\u064b\u0627\u060c \u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0633\u0645\u0627\u062a \u0627\u0644\u062c\u0648\u062f\u0629\u060c \u0627\u0641\u0635\u0644 \u0627\u0644\u0645\u062c\u0627\u0644 \u0639\u0646 \u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0629\u060c \u0648\u0648\u062b\u0651\u0642 \u0642\u0631\u0627\u0631\u0627\u062a\u0643 \u0628\u0640 ADR\u2014\u062b\u0645 \u062f\u0639 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u062a\u062a\u0628\u0639 \u0627\u0644\u062d\u062f\u0648\u062f \u0644\u0627 \u0627\u0644\u0639\u0643\u0633.</p>"},{"location":"terms/authentication/","title":"Authentication","text":""},{"location":"terms/authentication/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Authentication \u2014 \u0625\u062b\u0628\u0627\u062a \u0627\u0644\u0647\u0648\u064a\u0629 (\u0645\u0646 \u0623\u0646\u062a\u061f).</p>"},{"location":"terms/authentication/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0622\u0644\u064a\u0629 \u062a\u062a\u062d\u0642\u0642 \u0623\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645/\u0627\u0644\u0639\u0645\u064a\u0644 \u0647\u0648 \u0641\u0639\u0644\u0627\u064b \u0645\u0646 \u064a\u062f\u0651\u0639\u064a. \u0642\u062f \u062a\u0643\u0648\u0646 \u0639\u0628\u0631 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631\u060c \u0631\u0645\u0632 \u0644\u0645\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 (OTP/MFA)\u060c \u0634\u0647\u0627\u062f\u0629\u060c \u0645\u0641\u062a\u0627\u062d FIDO2\u060c \u0623\u0648 \u0645\u0632\u0648\u0651\u062f \u0647\u0648\u064a\u0629 (IdP).</p>"},{"location":"terms/authentication/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0647\u062f\u0641: \u062a\u0648\u0644\u064a\u062f \u0647\u0648\u064a\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 (Claims/Principal) \u0628\u0639\u062f \u0627\u0644\u062a\u062d\u0642\u0642.  </li> <li>\u0627\u0644\u0646\u062a\u0627\u0626\u062c \u062a\u064f\u062e\u0632\u0651\u064e\u0646 \u0643\u0640 \u062c\u0644\u0633\u0629 (Cookie) \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0648\u064a\u0628\u060c \u0623\u0648 \u062a\u064f\u062d\u0645\u0644 \u0643\u0640 Token (JWT/OAuth2) \u0644\u0648\u0627\u062c\u0647\u0627\u062a API.  </li> <li>\u062a\u064f\u0643\u0645\u0651\u0650\u0644\u0647\u0627 Authorization (\u0627\u0644\u062a\u0641\u0648\u064a\u0636): \u0645\u0627\u0630\u0627 \u064a\u064f\u0633\u0645\u062d \u0644\u0643 \u0628\u0639\u062f \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629.</li> </ul>"},{"location":"terms/authentication/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u0648\u0627\u0628\u0629 \u0645\u0628\u0646\u0649: \u062a\u064f\u0638\u0647\u0631 \u0628\u0637\u0627\u0642\u0629 \u0647\u0648\u064a\u062a\u0643 \u0644\u0644\u062d\u0627\u0631\u0633 (Authentication). \u062b\u0645 \u064a\u062d\u062f\u062f \u0644\u0643 \u0627\u0644\u0637\u0648\u0627\u0628\u0642 \u0627\u0644\u0645\u0633\u0645\u0648\u062d \u062f\u062e\u0648\u0644\u0647\u0627 (Authorization).</p>"},{"location":"terms/authentication/#c-minimal-api-jwt-bearer","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 Minimal API \u0645\u0639 JWT Bearer (\u0645\u0635\u0627\u062f\u0642\u0629) + \u0633\u064a\u0627\u0633\u0629 \u0623\u062f\u0648\u0627\u0631","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n AuthDemo &amp;&amp; cd AuthDemo\n// dotnet add package Microsoft.AspNetCore.Authentication.JwtBearer\n// dotnet add package Microsoft.IdentityModel.Tokens\nusing System.IdentityModel.Tokens.Jwt;\nusing System.Security.Claims;\nusing System.Text;\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\nusing Microsoft.IdentityModel.Tokens;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// 1) \u0625\u0639\u062f\u0627\u062f \u0633\u0631\u0651 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0648\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0627\u0644\u0640 JWT\nstring issuer   = \"authdemo\";\nstring audience = \"authdemo.api\";\nstring secret   = Environment.GetEnvironmentVariable(\"JWT_SECRET\") ?? \"dev-secret-please-change-to-32bytes+\";\nvar key         = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret));\n\n// 2) \u062a\u0633\u062c\u064a\u0644 Authentication + Authorization\nbuilder.Services\n    .AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n    .AddJwtBearer(o =&gt;\n    {\n        o.TokenValidationParameters = new TokenValidationParameters\n        {\n            ValidateIssuer = true, ValidIssuer = issuer,\n            ValidateAudience = true, ValidAudience = audience,\n            ValidateIssuerSigningKey = true, IssuerSigningKey = key,\n            ValidateLifetime = true, ClockSkew = TimeSpan.FromSeconds(30)\n        };\n    });\n\nbuilder.Services.AddAuthorization(o =&gt;\n{\n    o.AddPolicy(\"admin\", p =&gt; p.RequireRole(\"admin\"));\n});\n\nvar app = builder.Build();\n\napp.UseHttpsRedirection();           // \u0645\u0647\u0645 \u0644\u0644\u0623\u0645\u0627\u0646\napp.UseAuthentication();             // \u064a\u062c\u0628 \u0642\u0628\u0644 UseAuthorization\napp.UseAuthorization();\n\n// \u0645\u062e\u0632\u0646 \u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0645\u0628\u0633\u0651\u0637 (\u0644\u0644\u062a\u062c\u0631\u0628\u0629 \u0641\u0642\u0637)\nvar users = new Dictionary&lt;string,(string Pwd,string Role)&gt;(StringComparer.OrdinalIgnoreCase)\n{\n    [\"user@example.com\"]  = (\"N3wP@ss\",\"user\"),\n    [\"admin@example.com\"] = (\"Adm1nP@ss\",\"admin\")\n};\n\n// 3) \u0625\u0635\u062f\u0627\u0631 \u062a\u0648\u0643\u0646 \u0628\u0639\u062f \u0627\u0644\u062a\u062d\u0642\u0642 (\u0628\u062f\u064a\u0644\u064b\u0627: \u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0632\u0648\u0651\u062f \u0647\u0648\u064a\u0629/Identity)\napp.MapPost(\"/login\", (string email, string password) =&gt;\n{\n    if (!users.TryGetValue(email, out var u) || u.Pwd != password)\n        return Results.Unauthorized();\n\n    var claims = new[]\n    {\n        new Claim(JwtRegisteredClaimNames.Sub, email),\n        new Claim(ClaimTypes.Name, email),\n        new Claim(ClaimTypes.Role, u.Role) // role = user/admin\n    };\n    var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\n    var jwt = new JwtSecurityToken(\n        issuer: issuer, audience: audience,\n        claims: claims, expires: DateTime.UtcNow.AddMinutes(30),\n        signingCredentials: creds);\n\n    string token = new JwtSecurityTokenHandler().WriteToken(jwt);\n    return Results.Ok(new { access_token = token, token_type = \"Bearer\", expires_in = 1800 });\n})\n.WithSummary(\"Authenticate user and return JWT\");\n\n// 4) \u0646\u0647\u0627\u064a\u0629 \u062a\u062a\u0637\u0644\u0628 \u0645\u0635\u0627\u062f\u0642\u0629\napp.MapGet(\"/me\", (ClaimsPrincipal user) =&gt; new {\n    name = user.Identity?.Name,\n    roles = user.Claims.Where(c =&gt; c.Type == ClaimTypes.Role).Select(c =&gt; c.Value)\n}).RequireAuthorization();\n\n// 5) \u0646\u0647\u0627\u064a\u0629 \u0644\u0623\u062f\u0645\u0646 \u0641\u0642\u0637 (Authorization \u0641\u0648\u0642 Authentication)\napp.MapGet(\"/admin/metrics\", () =&gt; new { ok = true, at = DateTime.UtcNow })\n   .RequireAuthorization(\"admin\");\n\napp.Run();\n</code></pre> <p>\u062c\u0631\u0651\u0628 \u0633\u0631\u064a\u0639\u064b\u0627: Bash<pre><code># \u062f\u062e\u0648\u0644\nTOKEN=$(curl -s -X POST \"https://localhost:5001/login?email=admin@example.com&amp;password=Adm1nP@ss\" -k | jq -r .access_token)\n\n# \u0648\u0635\u0648\u0644 \u0645\u062d\u0645\u064a\ncurl -H \"Authorization: Bearer $TOKEN\" https://localhost:5001/me -k\ncurl -H \"Authorization: Bearer $TOKEN\" https://localhost:5001/admin/metrics -k\n</code></pre></p> <p>\u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0623\u0645\u0646\u064a\u0629 \u0633\u0631\u064a\u0639\u0629: \u0627\u0633\u062a\u062e\u062f\u0645 HTTPS\u060c \u0633\u0631\u0651 \u2265 32 \u0628\u0627\u064a\u062a\u060c \u0645\u0647\u0644\u0627\u062a \u0642\u0635\u064a\u0631\u0629\u060c \u0648Refresh Tokens \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629. \u0644\u0627 \u062a\u062d\u0641\u0638 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0646\u0635\u064a\u064b\u0627\u2014\u0627\u0633\u062a\u0639\u0645\u0644 \u0647\u0627\u0634 \u0628\u0637\u064a\u0621 (PBKDF2/BCrypt/Argon2) \u0648MFA.</p>"},{"location":"terms/authentication/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0635\u0627\u062f\u0642\u0629 \u0633\u0644\u064a\u0645\u0629","text":"<ol> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0646\u0645\u0637:  </li> <li>Cookie \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0648\u064a\u0628 (\u062c\u0644\u0633\u0627\u062a \u0639\u0644\u0649 \u0627\u0644\u0645\u062a\u0635\u0641\u062d).  </li> <li>JWT Bearer \u0623\u0648 OAuth2/OIDC \u0644\u0648\u0627\u062c\u0647\u0627\u062a API \u0648\u0627\u0644\u0647\u0648\u0627\u062a\u0641.  </li> <li>\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u0647\u0648\u064a\u0629:  </li> <li>Identity Provider (Azure AD/Keycloak/Auth0) \u0623\u0648 ASP.NET Core Identity \u0645\u062d\u0644\u064a.  </li> <li>\u062a\u0639\u0632\u064a\u0632 \u0627\u0644\u0623\u0645\u0627\u0646: MFA\u060c \u0642\u0641\u0644 \u0645\u062d\u0627\u0648\u0644\u0627\u062a\u060c \u0633\u064a\u0627\u0633\u0627\u062a \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631\u060c CSRF (\u0645\u0639 Cookies)\u060c CORS \u0644\u0644\u0640 APIs.  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0631: Access Token \u0642\u0635\u064a\u0631 \u0648Refresh Token \u0644\u062a\u062c\u062f\u064a\u062f \u0622\u0645\u0646.  </li> <li>Claims/Scopes \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0645\u0637\u0627\u0628\u0642\u0629 \u0645\u0639 Authorization (\u0633\u064a\u0627\u0633\u0627\u062a/\u0623\u062f\u0648\u0627\u0631).  </li> <li>\u0645\u0631\u0627\u0642\u0628\u0629: \u0633\u062c\u0651\u0644 \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u0627\u0644\u062f\u062e\u0648\u0644\u060c \u0645\u0635\u062f\u0631 IP\u060c \u0625\u0646\u0630\u0627\u0631\u0627\u062a \u0639\u0644\u0649 \u0627\u0644\u0633\u0644\u0648\u0643 \u0627\u0644\u0634\u0627\u0630.</li> </ol>"},{"location":"terms/authentication/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062e\u0644\u0637 Authentication \u0645\u0639 Authorization \u0623\u0648 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0623\u062d\u062f\u0647\u0645\u0627 \u0641\u0642\u0637.  </li> <li>\u0633\u0631\u0651 JWT \u0636\u0639\u064a\u0641/\u0642\u0635\u064a\u0631\u060c \u0623\u0648 \u062a\u0648\u0642\u064a\u0639 \u063a\u064a\u0631 \u0645\u064f\u062a\u062d\u0642\u0651\u0642 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645.  </li> <li>\u062a\u0639\u0637\u064a\u0644 ValidateLifetime \u0623\u0648 \u0645\u0647\u0644\u0627\u062a \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u064b\u0627.  </li> <li>\u0625\u0631\u0633\u0627\u0644 Cookies \u062d\u0633\u0627\u0633\u0629 \u0628\u062f\u0648\u0646 <code>Secure</code>/<code>HttpOnly</code>/<code>SameSite</code>.  </li> <li>\u0639\u062f\u0645 \u062d\u0645\u0627\u064a\u0629 \u0646\u0642\u0627\u0637 \u062a\u062c\u062f\u064a\u062f \u0627\u0644\u062a\u0648\u0643\u0646 \u0623\u0648 \u0639\u062f\u0645 \u062a\u062f\u0648\u064a\u0631 Refresh Tokens.  </li> <li>\u0646\u0633\u064a\u0627\u0646 CSRF \u0641\u064a POST/PUT \u0639\u0646\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Cookies.</li> </ul>"},{"location":"terms/authentication/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Authentication \u0625\u062b\u0628\u0627\u062a \u0627\u0644\u0647\u0648\u064a\u0629 \u064a\u0646\u062a\u062c Claims/Principal (\u0645\u0646 \u0623\u0646\u062a) Authorization \u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0628\u0639\u062f \u0625\u062b\u0628\u0627\u062a \u0627\u0644\u0647\u0648\u064a\u0629 \u0623\u062f\u0648\u0627\u0631/\u0633\u064a\u0627\u0633\u0627\u062a/Scopes (\u0645\u0627\u0630\u0627 \u064a\u064f\u0633\u0645\u062d \u0644\u0643) Identity Provider (IdP) \u0645\u0635\u062f\u0631 \u0647\u0648\u064a\u0629 \u0645\u0631\u0643\u0632\u064a \u064a\u062f\u0639\u0645 OIDC/OAuth2\u060c \u062a\u0633\u062c\u064a\u0644 \u062f\u062e\u0648\u0644 \u0645\u0648\u062d\u0651\u062f OAuth2 / OIDC \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u062a\u0641\u0648\u064a\u0636/\u0647\u0648\u064a\u0629 Tokens\u060c \u062a\u062f\u0641\u0651\u0642\u0627\u062a (Auth Code + PKCE) JWT vs Cookie API \u0639\u062f\u064a\u0645 \u0627\u0644\u062d\u0627\u0644\u0629 vs \u062c\u0644\u0633\u0629 \u0645\u062a\u0635\u0641\u062d JWT: \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0640 APIs\u061b Cookie: \u0644\u0644\u0648\u064a\u0628 \u0627\u0644\u062a\u0642\u0644\u064a\u062f\u064a"},{"location":"terms/authentication/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Authentication \u064a\u0628\u0646\u064a \u0647\u0648\u064a\u0629 \u0645\u0648\u062b\u0648\u0642\u0629\u060c \u063a\u0627\u0644\u0628\u064b\u0627 \u0639\u0628\u0631 JWT \u0623\u0648 Cookies. \u0623\u0645\u0651\u0646 \u0627\u0644\u0633\u0644\u0633\u0644\u0629: \u0633\u0631 \u0642\u0648\u064a\u060c \u0645\u0647\u0644\u0627\u062a\u060c MFA\u060c \u062a\u062d\u0642\u0642 \u0635\u0627\u0631\u0645\u060c \u062b\u0645 \u0627\u0631\u0628\u0637\u0647\u0627 \u0628\u0640 Authorization (\u0633\u064a\u0627\u0633\u0627\u062a/\u0623\u062f\u0648\u0627\u0631) \u0644\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0648\u0635\u0648\u0644 \u0622\u0645\u0646 \u0648\u062f\u0642\u064a\u0642 \u064a\u0644\u0628\u0651\u064a \u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u0646\u062a\u062c\u0643.</p>"},{"location":"terms/authorization/","title":"Authorization","text":""},{"location":"terms/authorization/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Authorization \u2014 \u062a\u0641\u0648\u064a\u0636 \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a (\u0645\u0627\u0630\u0627 \u064a\u064f\u0633\u0645\u062d \u0644\u0643 \u0623\u0646 \u062a\u0641\u0639\u0644 \u0628\u0639\u062f \u0625\u062b\u0628\u0627\u062a \u0627\u0644\u0647\u0648\u064a\u0629).</p>"},{"location":"terms/authorization/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0642\u0648\u0627\u0639\u062f \u062a\u062d\u062f\u0651\u062f \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u0645\u0648\u0627\u0631\u062f/\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629. \u0642\u062f \u062a\u0643\u0648\u0646 \u0623\u062f\u0648\u0627\u0631\u064b\u0627 (RBAC)\u060c \u0645\u0637\u0627\u0644\u0628\u0627\u062a/\u062e\u0635\u0627\u0626\u0635 (Claims/ABAC)\u060c \u0623\u0648 \u0633\u064a\u0627\u0633\u0627\u062a \u0645\u062e\u0635\u0651\u0635\u0629 (Policies).</p>"},{"location":"terms/authorization/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0628\u0639\u062f \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u064a\u062a\u0643\u0648\u0651\u0646 Principal/Claims.  </li> <li>Authorization \u062a\u0642\u0627\u0631\u0646 \u0647\u0630\u0647 \u0627\u0644\u0645\u0637\u0627\u0644\u0628\u0627\u062a \u0628\u0633\u064a\u0627\u0633\u0627\u062a\u0643: Admin \u0641\u0642\u0637\u060c \u064a\u0645\u0644\u0643 \u0627\u0644\u0645\u0648\u0631\u062f\u060c \u0644\u062f\u064a\u0647 \u0646\u0637\u0627\u0642/\u062a\u0635\u0631\u064a\u062d \u0645\u062d\u062f\u062f.  </li> <li>\u064a\u0645\u0643\u0646 \u062a\u0637\u0628\u064a\u0642\u0647\u0627 \u062a\u0635\u0631\u064a\u062d\u064a\u064b\u0627 (<code>RequireAuthorization</code>) \u0623\u0648 \u0628\u0631\u0645\u062c\u064a\u064b\u0627 \u0639\u0628\u0631 <code>IAuthorizationService</code>.</li> </ul>"},{"location":"terms/authorization/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0623\u0638\u0647\u0631\u062a \u0647\u0648\u064a\u062a\u0643 \u0644\u0644\u0628\u0648\u0651\u0627\u0628 (Authentication). \u0627\u0644\u0622\u0646 \u064a\u0642\u0631\u0651\u0631 \u0623\u064a \u0623\u0628\u0648\u0627\u0628 \u064a\u0645\u0643\u0646\u0643 \u0641\u062a\u062d\u0647\u0627 (Authorization) \u0648\u0641\u0642 \u0628\u0637\u0627\u0642\u062a\u0643 \u0648\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0645\u0628\u0646\u0649.</p>"},{"location":"terms/authorization/#c-aspnet-core","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0633\u064a\u0627\u0633\u0627\u062a \u0623\u062f\u0648\u0627\u0631/\u0645\u0637\u0627\u0644\u0628\u0627\u062a + \u062a\u0641\u0648\u064a\u0636 \u0642\u0627\u0626\u0645 \u0639\u0644\u0649 \u0627\u0644\u0645\u0648\u0631\u062f (ASP.NET Core)","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// \u0641\u0643\u0631\u0629 \u0645\u0628\u0633\u0651\u0637\u0629: \u0645\u0635\u0627\u062f\u0642\u0629 \"\u0631\u0623\u0633\u064a\u0629\" \u0644\u0644\u0634\u0631\u062d (Headers) + \u0633\u064a\u0627\u0633\u0627\u062a \u062a\u0641\u0648\u064a\u0636.\n// \u062c\u0631\u0651\u0628 \u0628\u0625\u0631\u0633\u0627\u0644 X-User \u0648X-Roles \u0648X-Perms \u0641\u064a \u0627\u0644\u0631\u0624\u0648\u0633.\n\nusing System.Security.Claims;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Authentication;\nusing Microsoft.Extensions.Options;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// ===== (1) \u0645\u0635\u0627\u062f\u0642\u0629 \u0631\u0624\u0648\u0633 \u0645\u0628\u0633\u0651\u0637\u0629 \u0644\u0628\u0646\u0627\u0621 Claims \u0645\u0646 \u0627\u0644\u0637\u0644\u0628 =====\nbuilder.Services.AddAuthentication(\"HeaderAuth\")\n    .AddScheme&lt;AuthenticationSchemeOptions, HeaderAuthHandler&gt;(\"HeaderAuth\", null);\n\n// ===== (2) \u062a\u0641\u0648\u064a\u0636: \u0633\u064a\u0627\u0633\u0627\u062a Roles/Claims + \u0645\u062a\u0637\u0644\u0628 \u0627\u0645\u062a\u0644\u0627\u0643 \u0627\u0644\u0645\u0648\u0631\u062f =====\nbuilder.Services.AddAuthorization(o =&gt;\n{\n    o.AddPolicy(\"AdminOnly\",   p =&gt; p.RequireRole(\"admin\"));\n    o.AddPolicy(\"OrdersRead\",  p =&gt; p.RequireClaim(\"perm\", \"orders.read\"));\n    o.AddPolicy(\"OwnOrderOrAdmin\", p =&gt; p.Requirements.Add(new OwnsOrderRequirement()));\n});\nbuilder.Services.AddSingleton&lt;IAuthorizationHandler, OwnsOrderHandler&gt;();\n\n// \u0645\u0633\u062a\u0648\u062f\u0639 \u0637\u0644\u0628\u0627\u062a \u0628\u0633\u064a\u0637 \u0645\u0639 \u0645\u0627\u0644\u0643 \u0644\u0643\u0644 \u0637\u0644\u0628\nbuilder.Services.AddSingleton&lt;IOrdersRepo, InMemoryOrdersRepo&gt;();\n\nvar app = builder.Build();\n\napp.UseAuthentication();\napp.UseAuthorization();\n\n// (A) \u0646\u0642\u0637\u0629 \u062a\u062a\u0637\u0644\u0628 \u062f\u0648\u0631 \"admin\"\napp.MapGet(\"/admin/metrics\", () =&gt; new { ok = true, at = DateTime.UtcNow })\n   .RequireAuthorization(\"AdminOnly\");\n\n// (B) \u0646\u0642\u0637\u0629 \u062a\u062a\u0637\u0644\u0628 \u062a\u0635\u0631\u064a\u062d \u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0637\u0644\u0628\u0627\u062a\napp.MapGet(\"/orders\", (IOrdersRepo repo) =&gt; repo.All())\n   .RequireAuthorization(\"OrdersRead\");\n\n// (C) \u062a\u0641\u0648\u064a\u0636 \u0642\u0627\u0626\u0645 \u0639\u0644\u0649 \u0627\u0644\u0645\u0648\u0631\u062f: \u0627\u0644\u0645\u0627\u0644\u0643 \u0623\u0648 \u0627\u0644\u0623\u062f\u0645\u0646 \u0641\u0642\u0637\napp.MapGet(\"/orders/{id:int}\", async (int id, ClaimsPrincipal user, IAuthorizationService auth, IOrdersRepo repo) =&gt;\n{\n    var authz = await auth.AuthorizeAsync(user, id, \"OwnOrderOrAdmin\");\n    if (!authz.Succeeded) return Results.Forbid();\n    var order = repo.Find(id);\n    return order is null ? Results.NotFound() : Results.Ok(order);\n});\n\napp.Run();\n\n\n// ====== \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \u0628\u0627\u0644\u0631\u0624\u0648\u0633 (\u0644\u0644\u062a\u062c\u0631\u0628\u0629 \u0641\u0642\u0637) ======\npublic class HeaderAuthHandler : AuthenticationHandler&lt;AuthenticationSchemeOptions&gt;\n{\n    public HeaderAuthHandler(IOptionsMonitor&lt;AuthenticationSchemeOptions&gt; o, ILoggerFactory l, UrlEncoder e, ISystemClock c)\n        : base(o, l, e, c) {}\n\n    protected override Task&lt;AuthenticateResult&gt; HandleAuthenticateAsync()\n    {\n        var user = Request.Headers[\"X-User\"].ToString();          // \u0645\u062b\u0627\u0644: alice@example.com\n        if (string.IsNullOrWhiteSpace(user))\n            return Task.FromResult(AuthenticateResult.NoResult());\n\n        var roles = (Request.Headers[\"X-Roles\"].ToString() ?? \"\")\n                        .Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);\n        var perms = (Request.Headers[\"X-Perms\"].ToString() ?? \"\")\n                        .Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);\n\n        var claims = new List&lt;Claim&gt;\n        {\n            new(ClaimTypes.NameIdentifier, user),\n            new(ClaimTypes.Name, user)\n        };\n        claims.AddRange(roles.Select(r =&gt; new Claim(ClaimTypes.Role, r)));\n        claims.AddRange(perms.Select(p =&gt; new Claim(\"perm\", p)));\n\n        var identity = new ClaimsIdentity(claims, Scheme.Name);\n        var principal = new ClaimsPrincipal(identity);\n        var ticket = new AuthenticationTicket(principal, Scheme.Name);\n        return Task.FromResult(AuthenticateResult.Success(ticket));\n    }\n}\n\n// ====== \u0627\u0644\u0645\u062a\u0637\u0644\u0628/\u0627\u0644\u0645\u0639\u0627\u0644\u062c: OwnsOrderRequirement ======\npublic record OwnsOrderRequirement : IAuthorizationRequirement;\n\npublic class OwnsOrderHandler : AuthorizationHandler&lt;OwnsOrderRequirement, int&gt;\n{\n    private readonly IOrdersRepo _repo;\n    public OwnsOrderHandler(IOrdersRepo repo) =&gt; _repo = repo;\n\n    protected override Task HandleRequirementAsync(AuthorizationHandlerContext ctx, OwnsOrderRequirement req, int orderId)\n    {\n        var isAdmin = ctx.User.IsInRole(\"admin\");\n        var sub = ctx.User.FindFirstValue(ClaimTypes.NameIdentifier);\n        var owner = _repo.OwnerOf(orderId);\n\n        if (isAdmin || (!string.IsNullOrEmpty(sub) &amp;&amp; string.Equals(owner, sub, StringComparison.OrdinalIgnoreCase)))\n            ctx.Succeed(req);\n\n        return Task.CompletedTask;\n    }\n}\n\n// ====== \u0646\u0645\u0648\u0630\u062c/\u0645\u0633\u062a\u0648\u062f\u0639 \u0623\u0648\u0627\u0645\u0631 ======\npublic record Order(int Id, string Owner, decimal Amount);\n\npublic interface IOrdersRepo\n{\n    IEnumerable&lt;Order&gt; All();\n    Order? Find(int id);\n    string? OwnerOf(int id);\n}\n\npublic class InMemoryOrdersRepo : IOrdersRepo\n{\n    private readonly List&lt;Order&gt; _db = new() {\n        new(1, \"alice@example.com\", 120),\n        new(2, \"bob@example.com\",   75)\n    };\n    public IEnumerable&lt;Order&gt; All() =&gt; _db;\n    public Order? Find(int id) =&gt; _db.FirstOrDefault(o =&gt; o.Id == id);\n    public string? OwnerOf(int id) =&gt; Find(id)?.Owner;\n}\n</code></pre> <p>\u062a\u062c\u0631\u0628\u0629 \u0633\u0631\u064a\u0639\u0629 (curl): Bash<pre><code># \u0645\u0633\u062a\u062e\u062f\u0645 \u0639\u0627\u062f\u064a \u064a\u0645\u0644\u0643 \u0627\u0644\u0637\u0644\u0628 1\ncurl -s http://localhost:5000/orders/1 \\\n  -H \"X-User: alice@example.com\" -H \"X-Perms: orders.read\"\n\n# \u0645\u0633\u062a\u062e\u062f\u0645 \u0639\u0627\u062f\u064a \u064a\u062d\u0627\u0648\u0644 \u0642\u0631\u0627\u0621\u0629 \u0637\u0644\u0628 \u063a\u064a\u0631 \u0645\u0645\u0644\u0648\u0643\ncurl -i http://localhost:5000/orders/2 \\\n  -H \"X-User: alice@example.com\" -H \"X-Perms: orders.read\"   # 403\n\n# \u0623\u062f\u0645\u0646 \u064a\u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u0645\u0644\u0643\u064a\u0629\ncurl -s http://localhost:5000/orders/2 \\\n  -H \"X-User: admin@example.com\" -H \"X-Roles: admin\"\n\n# \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u064a\u062a\u0637\u0644\u0628 \u062a\u0635\u0631\u064a\u062d orders.read\ncurl -i http://localhost:5000/orders \\\n  -H \"X-User: bob@example.com\"                    # 403\ncurl -s http://localhost:5000/orders \\\n  -H \"X-User: bob@example.com\" -H \"X-Perms: orders.read\"\n</code></pre></p> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - Policy Roles \u0644\u0623\u062f\u0645\u0646. - Policy Claims \u0644\u062a\u0635\u0631\u064a\u062d \u0645\u0639\u064a\u0651\u0646. - Resource-Based: \u0645\u0627\u0644\u0643 \u0627\u0644\u0645\u0648\u0631\u062f \u0623\u0648 \u0623\u062f\u0645\u0646.</p>"},{"location":"terms/authorization/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0641\u0648\u064a\u0636 \u0633\u0644\u064a\u0645","text":"<ol> <li>\u0639\u0631\u0651\u0641 \u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u062d\u0642\u064a\u0642\u0629 \u0644\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a: \u0623\u062f\u0648\u0627\u0631\u060c \u0645\u0637\u0627\u0644\u0628\u0627\u062a\u060c \u0646\u0637\u0627\u0642\u0627\u062a (Scopes).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Policies \u0628\u0623\u0633\u0645\u0627\u0621 \u0645\u0639\u0628\u0651\u0631\u0629: <code>\"AdminOnly\"</code>, <code>\"OrdersRead\"</code>, <code>\"OwnOrderOrAdmin\"</code>.  </li> <li>\u0644\u0644\u0641\u062d\u0635 \u0627\u0644\u062f\u0642\u064a\u0642 \u0639\u0644\u0649 \u0627\u0644\u0645\u0648\u0627\u0631\u062f\u060c \u0627\u0633\u062a\u062e\u062f\u0645 Authorization Handlers \u0648\u0645\u0631\u0651\u0631 \u0627\u0644\u0645\u0648\u0631\u062f (<code>AuthorizeAsync(user, resource, policy)</code>).  </li> <li>\u0636\u0639 \u0642\u0648\u0627\u0639\u062f\u0643 \u0641\u064a \u0637\u0628\u0642\u0629 \u0648\u0627\u0636\u062d\u0629 (Policies/Handlers) \u0648\u0644\u064a\u0633 \u0645\u0628\u0639\u062b\u0631\u0629 \u0641\u064a \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0627\u062a.  </li> <li>\u0633\u062c\u0651\u0644 \u0648\u0631\u0627\u0642\u0628 \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u0627\u0644\u0631\u0641\u0636/\u0627\u0644\u0642\u0628\u0648\u0644\u060c \u0648\u0627\u0631\u0628\u0637\u0647\u0627 \u0628\u0640 Correlation-Id.  </li> <li>\u0631\u0627\u0639\u0650 Least Privilege \u0648Separation of Duties\u060c \u0648\u062c\u062f\u0651\u062f \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u062f\u0648\u0631\u064a\u064b\u0627.</li> </ol>"},{"location":"terms/authorization/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 Authentication \u0648Authorization \u0623\u0648 \u0627\u0644\u0627\u0643\u062a\u0641\u0627\u0621 \u0628\u0623\u062d\u062f\u0647\u0645\u0627.  </li> <li>\u0627\u0639\u062a\u0645\u0627\u062f \u0623\u062f\u0648\u0627\u0631 \u0639\u0627\u0645\u0629 \u062c\u062f\u064b\u0627 \u0628\u062f\u0644 \u0633\u064a\u0627\u0633\u0627\u062a \u062f\u0642\u064a\u0642\u0629 \u0623\u0648 \u0645\u0637\u0627\u0644\u0628\u0627\u062a/\u0646\u0637\u0627\u0642\u0627\u062a.  </li> <li>\u0643\u062a\u0627\u0628\u0629 \u0645\u0646\u0637\u0642 \u0627\u0644\u062a\u0641\u0648\u064a\u0636 \u062f\u0627\u062e\u0644 \u0643\u0644 Endpoint (\u062a\u0643\u0631\u0627\u0631/\u0623\u062e\u0637\u0627\u0621) \u0628\u062f\u0644 Policies/Handlers.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u062a\u0641\u0648\u064a\u0636 \u0627\u0644\u0645\u0648\u0627\u0631\u062f (\u0627\u0644\u0645\u0644\u0643\u064a\u0629/\u0627\u0644\u0646\u0637\u0627\u0642) \u0648\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u062f\u0648\u0631 \u0641\u0642\u0637.  </li> <li>\u0639\u062f\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0640 Claims \u0628\u0639\u062f \u062a\u063a\u064a\u0651\u0631 \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 (\u062c\u0644\u0633\u0627\u062a \u0637\u0648\u064a\u0644\u0629 \u0628\u0644\u0627 \u062a\u062d\u062f\u064a\u062b).</li> </ul>"},{"location":"terms/authorization/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Authorization \u062a\u062d\u062f\u064a\u062f \u0645\u0627 \u064a\u064f\u0633\u0645\u062d \u0628\u0639\u062f \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 Roles/Claims/Policies\u060c \u064a\u0645\u0643\u0646 \u0623\u0646 \u062a\u0643\u0648\u0646 Resource-Based Authentication \u0625\u062b\u0628\u0627\u062a \u0627\u0644\u0647\u0648\u064a\u0629 \u064a\u0646\u062a\u062c Principal + Claims Role-Based (RBAC) \u0645\u0646\u062d \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0628\u062d\u0633\u0628 \u0627\u0644\u062f\u0648\u0631 \u0633\u0647\u0644\u061b \u062e\u0634\u0646 \u0627\u0644\u062d\u0628\u064a\u0628\u0627\u062a \u0623\u062d\u064a\u0627\u0646\u064b\u0627 Claim/Attribute-Based (ABAC) \u0642\u0648\u0627\u0639\u062f \u0627\u0639\u062a\u0645\u0627\u062f\u064b\u0627 \u0639\u0644\u0649 \u062e\u0635\u0627\u0626\u0635 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645/\u0627\u0644\u0645\u0648\u0631\u062f \u0623\u062f\u0642\u0651 \u0648\u0623\u0642\u0648\u0649 \u0645\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u0631 \u0641\u0642\u0637 Policy-Based \u062a\u0631\u0643\u064a\u0628 \u0642\u0648\u0627\u0639\u062f RBAC/ABAC \u0628\u0627\u0633\u0645 \u0642\u0627\u0628\u0644 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062a\u0637\u0628\u0651\u0642 \u062a\u0635\u0631\u064a\u062d\u064a\u064b\u0627 \u0623\u0648 \u0628\u0631\u0645\u062c\u064a\u064b\u0627 Resource-Based \u0642\u0631\u0627\u0631 \u0644\u0643\u0644 \u0645\u0648\u0631\u062f (\u0645\u0644\u0643\u064a\u0629/\u0646\u0637\u0627\u0642) \u0639\u0628\u0631 <code>IAuthorizationService</code> \u0648\u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0645\u0648\u0631\u062f"},{"location":"terms/authorization/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Authorization = \u062a\u062d\u0648\u064a\u0644 \u0647\u0648\u064a\u062a\u0643 \u0625\u0644\u0649 \u062d\u0642\u0648\u0642 \u0648\u0635\u0648\u0644 \u0645\u0636\u0628\u0648\u0637\u0629. \u0627\u0628\u0646\u0650 \u0633\u064a\u0627\u0633\u0627\u062a \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0627\u0645\u0632\u062c \u0627\u0644\u0623\u062f\u0648\u0627\u0631 \u0648\u0627\u0644\u0645\u0637\u0627\u0644\u0628\u0627\u062a\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 Handlers \u0644\u0644\u0645\u0648\u0627\u0631\u062f\u2014 \u0641\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0641\u0648\u064a\u0636 \u0622\u0645\u0646 \u0648\u0642\u0627\u0628\u0644 \u0644\u0644\u0635\u064a\u0627\u0646\u0629 \u064a\u0648\u0627\u0643\u0628 \u062a\u063a\u064a\u0651\u0631 \u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u0646\u062a\u062c\u0643. </p>"},{"location":"terms/bare-metal/","title":"Bare Metal","text":""},{"location":"terms/bare-metal/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Bare Metal \u2014 \u062a\u0634\u063a\u064a\u0644 \u0645\u0628\u0627\u0634\u0631 \u0639\u0644\u0649 \u0627\u0644\u0639\u062a\u0627\u062f \u0645\u0646 \u062f\u0648\u0646 Hypervisor \u0623\u0648 \u0637\u0628\u0642\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629.</p>"},{"location":"terms/bare-metal/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u064f\u0646\u0634\u0631 \u0623\u0646\u0638\u0645\u062a\u0643 \u0648\u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0643 \u0639\u0644\u0649 \u062e\u0648\u0627\u062f\u0645 \u0641\u0639\u0644\u064a\u0629 \u0645\u0645\u0644\u0648\u0643\u0629/\u0645\u0633\u062a\u0623\u062c\u0631\u0629 \u0644\u0643. \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0623\u0642\u0635\u0649 \u0623\u062f\u0627\u0621 \u0648\u062a\u062d\u0643\u0651\u0645 \u0643\u0627\u0645\u0644 \u0628\u0627\u0644\u0640 BIOS/UEFI \u0648\u0627\u0644\u062a\u0648\u0635\u064a\u0644 \u0648\u0627\u0644\u062a\u062e\u0632\u064a\u0646\u060c \u0645\u0642\u0627\u0628\u0644 \u0625\u062f\u0627\u0631\u0629 \u0623\u0639\u0642\u062f \u0648\u0645\u0631\u0648\u0646\u0629 \u0623\u0642\u0644 \u0645\u0646 \u0627\u0644\u0633\u062d\u0627\u0628\u0629.</p>"},{"location":"terms/bare-metal/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u0627 \u062a\u0648\u062c\u062f \u0637\u0628\u0642\u0629 \u0648\u0633\u0637\u0649 (Hypervisor). \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u064a\u0639\u0645\u0644 \u0645\u0628\u0627\u0634\u0631\u0629 \u0639\u0644\u0649 \u0627\u0644\u0645\u0639\u0627\u0644\u062c/\u0627\u0644\u0630\u0627\u0643\u0631\u0629/\u0627\u0644\u0623\u0642\u0631\u0627\u0635.  </li> <li>\u0645\u0646\u0627\u0633\u0628 \u0644\u0640 \u0632\u0645\u0646 \u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0645\u0646\u062e\u0641\u0636 \u062c\u062f\u064b\u0627\u060c \u0623\u062d\u0645\u0627\u0644 I/O \u0643\u062b\u064a\u0641\u0629\u060c \u0623\u0648 \u0623\u062c\u0647\u0632\u0629 \u0645\u062a\u062e\u0635\u0651\u0635\u0629 (GPU/FPGA/NVMe \u0645\u062d\u0644\u064a).  </li> <li>\u064a\u062a\u0637\u0644\u0628 \u0645\u0646\u0643 \u0625\u062f\u0627\u0631\u0629: \u0627\u0644\u0639\u062a\u0627\u062f\u060c \u0627\u0644\u062a\u0628\u0631\u064a\u062f\u060c \u0627\u0644\u0637\u0627\u0642\u0629\u060c RAID\u060c \u062a\u062d\u062f\u064a\u062b\u0627\u062a Firmware.</li> </ul>"},{"location":"terms/bare-metal/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0645\u062a\u0644\u0627\u0643\u0643 \u0645\u0637\u0639\u0645\u0643 \u0627\u0644\u062e\u0627\u0635 \u0628\u0645\u0639\u062f\u0651\u0627\u062a\u0647 \u062f\u0627\u062e\u0644 \u0645\u0628\u0646\u0627\u0643. \u062d\u0631\u064a\u0629 \u0643\u0627\u0645\u0644\u0629\u060c \u0623\u062f\u0627\u0621 \u0623\u0639\u0644\u0649\u060c \u0644\u0643\u0646 \u0639\u0644\u064a\u0643 \u0627\u0644\u0627\u0647\u062a\u0645\u0627\u0645 \u0628\u0643\u0644 \u0634\u064a\u0621: \u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621\u060c \u0627\u0644\u0635\u064a\u0627\u0646\u0629\u060c \u0627\u0644\u0645\u062e\u0632\u0648\u0646\u060c \u0627\u0644\u0623\u0645\u0646.</p>"},{"location":"terms/bare-metal/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u0636\u0628\u0637 \u0639\u0645\u0644\u064a \u0644\u0623\u062f\u0627\u0621 \u0623\u0639\u0644\u0649 \u0639\u0644\u0649 \u0639\u062a\u0627\u062f \u0645\u0628\u0627\u0634\u0631","text":"<p>\u064a\u0628\u064a\u0651\u0646: \u0623\u0648\u0644\u0648\u064a\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629/\u0627\u0644\u062e\u064a\u0637\u060c \u062a\u062b\u0628\u064a\u062a \u0627\u0644\u0645\u0639\u0627\u0644\u062c (Affinity)\u060c \u0648\u0645\u0646\u0637\u0642\u0629 \u0628\u0644\u0627 GC \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u0630\u0628\u0630\u0628.</p> C#<pre><code>// .NET 8/9\nusing System;\nusing System.Diagnostics;\nusing System.Threading;\n\nclass BareMetalTuning\n{\n    static void Main()\n    {\n        // 1) \u0623\u0648\u0644\u0648\u064a\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0648\u0627\u0644\u062e\u064a\u0637\n        var proc = Process.GetCurrentProcess();\n        proc.PriorityClass = ProcessPriorityClass.High;              // \u0642\u062f \u062a\u062a\u0637\u0644\u0628 \u0635\u0644\u0627\u062d\u064a\u0627\u062a\n        Thread.CurrentThread.Priority = ThreadPriority.Highest;\n\n        // 2) \u062a\u062b\u0628\u064a\u062a \u0627\u0644\u062e\u064a\u0637 \u0639\u0644\u0649 \u0646\u0648\u0627\u0629 \u0645\u0639\u064a\u0651\u0646\u0629 (CPU 0 \u0643\u0645\u062b\u0627\u0644)\n        IntPtr mask = (IntPtr)1;                                     // 0001b = CPU#0\n        proc.ProcessorAffinity = mask;\n\n        // 3) \u0645\u0646\u0639 GC \u0645\u0624\u0642\u062a\u064b\u0627 \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u0630\u0628\u0630\u0628 (\u0627\u062d\u0633\u0628 \u062d\u062c\u0645 \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u0645\u062a\u0648\u0642\u0639)\n        bool noGc = false;\n        try { noGc = GC.TryStartNoGCRegion(16 * 1024 * 1024); }      // 16MB\n        catch { /* \u062a\u062c\u0627\u0647\u0644 \u0639\u0646\u062f \u0627\u0644\u0641\u0634\u0644 */ }\n\n        // 4) \u0642\u064a\u0627\u0633 \u0643\u0645\u0648\u0646 \u0639\u0645\u0644\u064a\u0629 \u0628\u0633\u064a\u0637\u0629\n        var sw = new Stopwatch();\n        long min = long.MaxValue, max = 0, sum = 0, N = 20000;\n        for (int i = 0; i &lt; N; i++)\n        {\n            sw.Restart();\n            // \u0639\u0645\u0644 \u0635\u063a\u064a\u0631 \u064a\u062d\u0627\u0643\u064a \u0645\u0639\u0627\u0644\u062c\u0629 \u0637\u0644\u0628\n            double x = Math.Sqrt(i) * Math.PI;\n            sw.Stop();\n\n            long ns = (long)(sw.ElapsedTicks * (1_000_000_000.0 / Stopwatch.Frequency));\n            if (ns &lt; min) min = ns; if (ns &gt; max) max = ns; sum += ns;\n        }\n\n        if (noGc) GC.EndNoGCRegion();\n\n        Console.WriteLine($\"Affinity: {proc.ProcessorAffinity}\");\n        Console.WriteLine($\"Latency ns -&gt; min:{min}  avg:{sum/N}  max:{max}\");\n        Console.WriteLine(\"Tip: \u062b\u0628\u0651\u062a \u0627\u0644\u0637\u0627\u0642\u0629 \u0639\u0644\u0649 'Performance' \u0645\u0646 BIOS/OS \u0648\u0631\u0627\u0642\u0628 \u0627\u0644\u062d\u0631\u0627\u0631\u0629.\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0639\u0644\u0649 Bare Metal \u064a\u0645\u0643\u0646\u0643 \u062f\u0641\u0639 \u0627\u0644\u0639\u062a\u0627\u062f \u0644\u0623\u0642\u0635\u0649 \u0623\u062f\u0627\u0621: \u0623\u0648\u0644\u0648\u064a\u0629 \u0623\u0639\u0644\u0649\u060c \u062a\u062b\u0628\u064a\u062a CPU\u060c \u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u0637\u0627\u0642\u0629/\u0627\u0644\u062a\u0628\u0631\u064a\u062f\u060c \u0648\u0623\u0642\u0631\u0627\u0635 NVMe \u0645\u062d\u0644\u064a\u0629\u2026 \u0644\u0643\u0646 \u0627\u062d\u0630\u0631 \u0645\u0646 \u0627\u0644\u0633\u0644\u0627\u0645\u0629 \u0648\u0627\u0644\u062d\u0631\u0627\u0631\u0629.</p>"},{"location":"terms/bare-metal/#bare-metal-checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f Bare Metal (Checklist)","text":"<ul> <li>\u0627\u0644\u062a\u062e\u0637\u064a\u0637 \u0648\u0627\u0644\u0634\u0631\u0627\u0621/\u0627\u0644\u062a\u0623\u062c\u064a\u0631 </li> <li>\u0627\u062e\u062a\u0631 \u0645\u0639\u0627\u0644\u062c\u0627\u062a/\u0630\u0627\u0643\u0631\u0629/\u0623\u0642\u0631\u0627\u0635 \u0648\u0641\u0642 \u0627\u0644\u062d\u0645\u0644 (CPU-bound, RAM-bound, IOPS).  </li> <li>\u0648\u0641\u0651\u0631 \u0627\u0632\u062f\u0648\u0627\u062c\u064a\u0629 \u0641\u064a \u0627\u0644\u0637\u0627\u0642\u0629 (PSU) \u0648\u0627\u0644\u0634\u0628\u0643\u0629 (NICs) \u0648\u0627\u0644\u062a\u062e\u0632\u064a\u0646 (RAID10/ZFS).  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u0639\u0646 \u0628\u064f\u0639\u062f: IPMI/iDRAC/iLO \u0645\u0639 \u0648\u0635\u0648\u0644 \u0622\u0645\u0646 (VPN/ACL).</li> <li>\u062a\u0647\u064a\u0626\u0629 BIOS/UEFI </li> <li>\u0645\u0644\u0641 \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0637\u0627\u0642\u0629: Performance\u060c \u0648\u062d\u062f\u0651\u062b Firmware \u062f\u0648\u0631\u064a\u064b\u0627.  </li> <li>\u0644\u0636\u063a\u0637 \u0627\u0644\u0643\u0645\u0648\u0646: \u0642\u0644\u0651\u0644 C-States \u0627\u0644\u0639\u0645\u064a\u0642\u0629\u060c \u0641\u0639\u0651\u0644 NUMA Awareness\u060c \u0648\u0627\u0636\u0628\u0637 Hyper-Threading \u062d\u0633\u0628 \u0627\u0644\u062d\u0645\u0644.  </li> <li>\u0641\u0639\u0651\u0644 VT-x/AMD-V/IOMMU \u0625\u0646 \u0643\u0646\u062a \u0633\u062a\u0633\u062a\u062e\u062f\u0645 \u062d\u0627\u0648\u064a\u0627\u062a \u0645\u0633\u0631\u0651\u064e\u0639\u0629 \u0623\u0648 \u062a\u0645\u0631\u064a\u0631 \u0623\u062c\u0647\u0632\u0629.</li> <li>\u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0648\u0627\u0644\u062a\u062e\u0632\u064a\u0646 </li> <li>\u0627\u062e\u062a\u0631 \u0646\u0638\u0627\u0645\u064b\u0627 \u0645\u0646\u0627\u0633\u0628\u064b\u0627 (Windows/Linux) \u0645\u0639 \u0628\u0631\u0646\u0627\u0645\u062c RAID/ZFS \u0623\u0648 \u0645\u062a\u062d\u0643\u0651\u0645 HW.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 NVMe \u0645\u062d\u0644\u064a \u0644\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0633\u0629\u060c \u0648\u0634\u0628\u0643\u0627\u062a \u062a\u062e\u0632\u064a\u0646 \u0644\u0644\u0623\u0631\u0634\u0641\u0629.  </li> <li>\u0631\u0627\u0642\u0628 SMART/\u062f\u0631\u062c\u0627\u062a \u0627\u0644\u062d\u0631\u0627\u0631\u0629\u060c \u0648\u062e\u0637\u0651\u0637 \u0644\u0640 Backups \u062e\u0627\u0631\u062c \u0627\u0644\u0645\u0627\u0643\u064a\u0646\u0629.</li> <li>\u0627\u0644\u0634\u0628\u0643\u0627\u062a </li> <li>\u0628\u0637\u0627\u0642\u0627\u062a 10/25/40/100GbE \u062d\u0633\u0628 \u0627\u0644\u062d\u0627\u062c\u0629\u061b \u0641\u0631\u0642 \u0642\u0646\u0648\u0627\u062a (LACP) \u0648\u0645\u0633\u0627\u0631\u0627\u062a \u0645\u0632\u062f\u0648\u062c\u0629.  </li> <li>\u062c\u062f\u0627\u0631 \u0646\u0627\u0631\u064a \u0639\u0644\u0649 \u0627\u0644\u0646\u0638\u0627\u0645 + \u0642\u0648\u0627\u0626\u0645 ACL \u0639\u0646\u062f \u0627\u0644\u0633\u0648\u064a\u062a\u0634/\u0627\u0644\u0645\u0648\u062c\u0651\u0647.</li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644 </li> <li>\u0627\u062c\u0645\u0639 Logs/Metrics/Tracing (Prometheus/WMI/ETW).  </li> <li>\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u062d\u0631\u0627\u0631\u0629/\u0645\u0631\u0627\u0648\u062d/\u0623\u0642\u0631\u0627\u0635/\u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0637\u0627\u0642\u0629.  </li> <li>\u062c\u062f\u0627\u0648\u0644 \u0635\u064a\u0627\u0646\u0629 \u0648\u062a\u062d\u062f\u064a\u062b Firmware/OS.</li> </ul>"},{"location":"terms/bare-metal/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0628\u0631\u064a\u062f \u0648\u0627\u0644\u0637\u0627\u0642\u0629 \u2192 \u0627\u062e\u062a\u0646\u0627\u0642 \u062d\u0631\u0627\u0631\u064a/\u0625\u0639\u0627\u062f\u0629 \u062a\u0634\u063a\u064a\u0644.  </li> <li>\u0639\u062f\u0645 \u062a\u0623\u0645\u064a\u0646 IPMI (\u0645\u0646\u0643\u0634\u0641 \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a) \u2192 \u0645\u062e\u0627\u0637\u0631\u0629 \u062d\u0631\u062c\u0629.  </li> <li>\u0644\u0627 RAID/\u0644\u0627 \u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a \u2192 \u0641\u0642\u062f\u0627\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0646\u062f \u0641\u0634\u0644 \u0642\u0631\u0635.  </li> <li>\u062a\u062c\u0627\u0647\u0644 NUMA \u0648\u062a\u0648\u0632\u064a\u0639 \u0627\u0644\u0630\u0627\u0643\u0631\u0629/\u0627\u0644\u062e\u064a\u0648\u0637 \u2192 \u0623\u062f\u0627\u0621 \u064a\u062a\u062f\u0647\u0648\u0631 \u062a\u062d\u062a \u0627\u0644\u062d\u0645\u0644.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0642\u0631\u0635 \u0646\u0638\u0627\u0645 \u0648\u0627\u062d\u062f \u0644\u0643\u0644 \u0634\u064a\u0621 \u2192 \u0627\u062e\u062a\u0646\u0627\u0642\u0627\u062a I/O.  </li> <li>\u0639\u062f\u0645 \u062a\u0648\u062b\u064a\u0642 \u062a\u063a\u064a\u064a\u0631\u0627\u062a BIOS/Firmware \u2192 \u0635\u0639\u0648\u0628\u0629 \u062a\u0643\u0631\u0627\u0631 \u0648\u062d\u0644 \u0645\u0634\u0627\u0643\u0644.</li> </ul>"},{"location":"terms/bare-metal/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Bare Metal \u0623\u0642\u0635\u0649 \u0623\u062f\u0627\u0621 \u0648\u062a\u062d\u0643\u0651\u0645 \u0643\u0627\u0645\u0644 \u0628\u0627\u0644\u0639\u062a\u0627\u062f \u0625\u062f\u0627\u0631\u0629 \u0623\u0639\u0642\u062f\u061b \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0643\u0627\u0645\u0644\u0629 \u0639\u0646 \u0627\u0644\u0637\u0627\u0642\u0629/\u0627\u0644\u062a\u0628\u0631\u064a\u062f/\u0627\u0644Firmware Hypervisor \u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0639\u062a\u0627\u062f \u0644\u0639\u062f\u0629 VMs \u0645\u0631\u0648\u0646\u0629 \u0648\u0639\u0632\u0644 \u062c\u064a\u062f\u061b \u062e\u0641\u0636 \u0628\u0633\u064a\u0637 \u0641\u064a \u0627\u0644\u0623\u062f\u0627\u0621 Virtual Machine \u0646\u0638\u0627\u0645 \u0643\u0627\u0645\u0644 \u0645\u0639\u0632\u0648\u0644 \u0641\u0648\u0642 Hypervisor \u0633\u0647\u0644 \u0627\u0644\u0646\u0642\u0644/\u0627\u0644\u0646\u0633\u062e\u061b \u0623\u062b\u0642\u0644 \u0645\u0646 \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a Container \u0639\u0632\u0644 \u062e\u0641\u064a\u0641 \u064a\u0634\u0627\u0631\u0643 \u0646\u0648\u0627\u0629 \u0627\u0644\u0645\u0636\u064a\u0641 \u0633\u0631\u064a\u0639 \u0627\u0644\u0625\u0642\u0644\u0627\u0639\u061b \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0646\u0648\u0627\u0629 \u0627\u0644\u0645\u0636\u064a\u0641\u061b \u0639\u0632\u0644 \u0623\u0636\u0639\u0641 \u0645\u0646 VM"},{"location":"terms/bare-metal/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Bare Metal \u064a\u0645\u0646\u062d\u0643 \u0627\u0644\u0633\u0631\u0639\u0629 \u0627\u0644\u0642\u0635\u0648\u0649 \u0648\u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0627\u0644\u0643\u0627\u0645\u0644\u060c \u0648\u0647\u0648 \u062e\u064a\u0627\u0631 \u0645\u0645\u062a\u0627\u0632 \u0644\u0644\u0623\u062d\u0645\u0627\u0644 \u0627\u0644\u062d\u0633\u0651\u0627\u0633\u0629 \u0644\u0644\u0643\u0645\u0648\u0646 \u0623\u0648 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0645\u062a\u062e\u0635\u0651\u0635\u0629. \u0644\u0643\u0646\u0651\u0647 \u064a\u062a\u0637\u0644\u0628 \u0625\u062f\u0627\u0631\u0629 \u062f\u0642\u064a\u0642\u0629 \u0644\u0644\u0639\u062a\u0627\u062f \u0648\u0627\u0644\u0637\u0627\u0642\u0629 \u0648\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0648\u0627\u0644\u0623\u0645\u0646. \u0625\u0646 \u0644\u0645 \u062a\u062d\u062a\u062c \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0645\u0646 \u0627\u0644\u062a\u062d\u0643\u0645\u060c \u0641\u0643\u0651\u0631 \u0641\u064a VMs \u0623\u0648 PaaS/Containers \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u0639\u0642\u064a\u062f.</p>"},{"location":"terms/black-white-box-testing/","title":"Black-Box &amp; White-Box Testing","text":""},{"location":"terms/black-white-box-testing/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Black-Box Testing \u2014 \u0627\u062e\u062a\u0628\u0627\u0631 \u0628\u0635\u0646\u062f\u0648\u0642 \u0623\u0633\u0648\u062f (\u0628\u062f\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u062f\u0627\u062e\u0644). White-Box Testing \u2014 \u0627\u062e\u062a\u0628\u0627\u0631 \u0628\u0635\u0646\u062f\u0648\u0642 \u0623\u0628\u064a\u0636 (\u0645\u0639 \u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u062f\u0627\u062e\u0644).  </p> <p>(\u064a\u0648\u062c\u062f \u0648\u0633\u0637 \u0628\u064a\u0646\u0647\u0645\u0627: Gray-Box \u2014 \u0645\u0639\u0631\u0641\u0629 \u062c\u0632\u0626\u064a\u0629).</p>"},{"location":"terms/black-white-box-testing/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<ul> <li>Black-Box: \u0646\u062e\u062a\u0628\u0631 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u2194 \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0641\u0642\u0637. \u0644\u0627 \u0646\u0647\u062a\u0645 \u0628\u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u062a\u0646\u0641\u064a\u0630.  </li> <li>White-Box: \u0646\u062e\u062a\u0628\u0631 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629/\u0627\u0644\u0641\u0631\u0648\u0639 \u0648\u0627\u0644\u062a\u0639\u0642\u064a\u062f \u0648\u0627\u0644\u0633\u0637\u0631/\u0627\u0644\u0641\u0631\u0639 \u0627\u0644\u0645\u063a\u0637\u0651\u0649.  </li> <li>Gray-Box: \u0646\u0639\u0631\u0641 \u0628\u0639\u0636 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 (Schema/\u062a\u0635\u0645\u064a\u0645) \u0648\u0646\u0633\u062a\u063a\u0644\u0647\u0627 \u0641\u064a \u0627\u0644\u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a.</li> </ul>"},{"location":"terms/black-white-box-testing/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0623\u0633\u0648\u062f \u0645\u0646\u0627\u0633\u0628 \u0644\u0642\u0628\u0648\u0644 \u0627\u0644\u0645\u064a\u0632\u0629\u060c \u0627\u0644\u062a\u0648\u0627\u0641\u0642\u060c \u0639\u0642\u0648\u062f API\u060c \u0648\u0633\u0644\u0648\u0643 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0646\u0647\u0627\u0626\u064a.  </li> <li>\u0627\u0644\u0623\u0628\u064a\u0636 \u0645\u0646\u0627\u0633\u0628 \u0644\u0636\u0645\u0627\u0646 \u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0641\u0631\u0648\u0639\u060c \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062d\u0648\u0627\u0641\u060c \u0648\u0627\u0644\u0623\u0645\u0627\u0646 \u0627\u0644\u062f\u0627\u062e\u0644\u064a.  </li> <li>\u063a\u0627\u0644\u0628\u064b\u0627 \u0646\u0633\u062a\u062e\u062f\u0645\u0647\u0645\u0627 \u0645\u0639\u064b\u0627: \u0633\u0644\u0648\u0643 \u0635\u062d\u064a\u062d \u062e\u0627\u0631\u062c\u064a\u064b\u0627 + \u0641\u0631\u0648\u0639 \u062f\u0627\u062e\u0644\u064a\u0629 \u0645\u063a\u0637\u0651\u0627\u0629.</li> </ul>"},{"location":"terms/black-white-box-testing/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u062c\u0631\u0628\u0629 \u0634\u0627\u064a \u062c\u0627\u0647\u0632: - Black-Box: \u062a\u062a\u0630\u0648\u0651\u0642\u0647 \u0641\u0642\u0637 (\u0627\u0644\u0646\u062a\u064a\u062c\u0629). - White-Box: \u062a\u062f\u062e\u0644 \u0627\u0644\u0645\u0637\u0628\u062e\u060c \u062a\u0641\u062d\u0635 \u0627\u0644\u062e\u0637\u0648\u0627\u062a \u0648\u0627\u0644\u0645\u0642\u0627\u062f\u064a\u0631 (\u0627\u0644\u0645\u0633\u0627\u0631). - Gray-Box: \u0645\u0639\u0643 \u0627\u0644\u0648\u0635\u0641\u0629 \u0627\u0644\u0639\u0627\u0645\u0629\u060c \u0644\u0643\u0646\u0643 \u0644\u0627 \u062a\u0637\u0628\u062e \u0628\u0646\u0641\u0633\u0643.</p>"},{"location":"terms/black-white-box-testing/#c","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a C# \u2014 \u0646\u0641\u0633 \u0627\u0644\u0648\u0638\u064a\u0641\u0629\u060c \u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0633\u0648\u062f \u0648\u0623\u0628\u064a\u0636","text":"<p>\u0645\u062a\u0637\u0644\u0628: <code>ValidatePassword</code> \u062a\u0631\u062c\u0639 \u0633\u0628\u0628 \u0627\u0644\u0641\u0634\u0644 \u0623\u0648 \u201cOK\u201d. \u0627\u0644\u0634\u0631\u0648\u0637: \u0637\u0648\u0644 \u2265 8\u060c \u064a\u062d\u0648\u064a \u0631\u0642\u0645\u064b\u0627\u060c \u064a\u062d\u0648\u064a \u0645\u062d\u0631\u0641\u064b\u0627 \u062e\u0627\u0635\u064b\u0627.</p> C#<pre><code>// PasswordValidator.cs\nusing System;\nusing System.Linq;\n\npublic static class PasswordValidator\n{\n    // White-Box: \u0644\u062f\u064a\u0646\u0627 \u0641\u0631\u0648\u0639 \u0648\u0627\u0636\u062d\u0629 \u0646\u0631\u064a\u062f \u062a\u063a\u0637\u064a\u062a\u0647\u0627\n    public static string Validate(string pwd)\n    {\n        if (pwd is null) throw new ArgumentNullException(nameof(pwd));\n        if (pwd.Length &lt; 8) return \"too_short\";\n        if (!pwd.Any(char.IsDigit)) return \"no_digit\";\n        if (!pwd.Any(ch =&gt; \"!@#$%^&amp;*?_\".Contains(ch))) return \"no_special\";\n        return \"OK\";\n    }\n}\n</code></pre>"},{"location":"terms/black-white-box-testing/#black-box-tests-inputoutput","title":"Black-Box Tests \u2014 \u0646\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0639\u0642\u062f (Input/Output)","text":"C#<pre><code>// PasswordValidator_BlackBoxTests.cs  (xUnit)\n// dotnet add package xunit &amp;&amp; dotnet add package xunit.runner.visualstudio\nusing Xunit;\n\npublic class PasswordValidator_BlackBoxTests\n{\n    [Theory]\n    [InlineData(\"Abcd123!\", \"OK\")]\n    [InlineData(\"short1!\",  \"too_short\")]\n    [InlineData(\"NoDigits!\", \"no_digit\")]\n    [InlineData(\"NoSpecial1\", \"no_special\")]\n    public void Validate_Returns_Expected_Result(string pwd, string expected)\n    {\n        Assert.Equal(expected, PasswordValidator.Validate(pwd));\n    }\n\n    [Fact]\n    public void Validate_Null_Throws()\n    {\n        Assert.Throws&lt;ArgumentNullException&gt;(() =&gt; PasswordValidator.Validate(null!));\n    }\n}\n</code></pre>"},{"location":"terms/black-white-box-testing/#white-box-tests","title":"White-Box Tests \u2014 \u0646\u063a\u0637\u064a \u0627\u0644\u0641\u0631\u0648\u0639/\u0627\u0644\u062d\u0648\u0627\u0641 \u062d\u0633\u0628 \u0645\u0639\u0631\u0641\u062a\u0646\u0627 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629","text":"C#<pre><code>// PasswordValidator_WhiteBoxTests.cs\nusing Xunit;\n\npublic class PasswordValidator_WhiteBoxTests\n{\n    [Fact] public void TooShort_Branch_Covered()    =&gt; Assert.Equal(\"too_short\", PasswordValidator.Validate(\"A1!aaaa\"));\n    [Fact] public void NoDigit_Branch_Covered()     =&gt; Assert.Equal(\"no_digit\",  PasswordValidator.Validate(\"Abcdefg!\"));\n    [Fact] public void NoSpecial_Branch_Covered()   =&gt; Assert.Equal(\"no_special\",PasswordValidator.Validate(\"Abcdefg1\"));\n    [Fact] public void AllOk_Branch_Covered()       =&gt; Assert.Equal(\"OK\",        PasswordValidator.Validate(\"Abcd123!\"));\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - \u0627\u0644\u0623\u0633\u0648\u062f \u064a\u062b\u0628\u062a \u0627\u0644\u0639\u0642\u062f \u0627\u0644\u0638\u0627\u0647\u0631 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645/\u0627\u0644\u0639\u0645\u064a\u0644. - \u0627\u0644\u0623\u0628\u064a\u0636 \u064a\u0636\u0645\u0646 \u0623\u0646 \u0643\u0644 \u0641\u0631\u0639 \u0645\u0646\u0637\u0642 \u0645\u063a\u0637\u0651\u0649 (\u064a\u0633\u0627\u0639\u062f \u0645\u0639 \u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0641\u0631\u0648\u0639/\u0627\u0644\u0623\u0633\u0637\u0631).</p>"},{"location":"terms/black-white-box-testing/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0645\u062e\u062a\u0635\u0631\u0629","text":"<ul> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0639\u0642\u062f (\u0645\u0627\u0630\u0627 \u062a\u062a\u0639\u0647\u062f \u0627\u0644\u062f\u0627\u0644\u0629/\u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u0647\u061f) \u2192 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a Black-Box.  </li> <li>\u0627\u0633\u062a\u062e\u0631\u062c \u0627\u0644\u0641\u0631\u0648\u0639 \u0648\u0627\u0644\u062d\u0648\u0627\u0641 \u0645\u0646 \u0627\u0644\u0643\u0648\u062f/\u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u2192 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a White-Box.  </li> <li>\u063a\u0637\u0651\u0650 \u062d\u0627\u0644\u0627\u062a: \u0637\u0628\u064a\u0639\u064a\u060c \u062d\u0648\u0627\u0641\u060c \u0623\u062e\u0637\u0627\u0621\u060c \u0645\u062f\u062e\u0644\u0627\u062a \u0639\u062f\u0627\u0626\u064a\u0629.  </li> <li>\u0642\u0650\u0633 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 (Line/Branch/Mutation) \u0644\u0643\u0646 \u0644\u0627 \u062a\u062c\u0639\u0644 \u0627\u0644\u0646\u0633\u0628\u0629 \u0647\u062f\u0641\u064b\u0627 \u0628\u062d\u062f \u0630\u0627\u062a\u0647.  </li> <li>\u0644\u0644\u0623\u0646\u0638\u0645\u0629: \u0623\u0636\u0641 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062a\u0643\u0627\u0645\u0644 \u0648\u0642\u0628\u0648\u0644 \u0648\u0623\u062f\u0627\u0621.</li> </ul>"},{"location":"terms/black-white-box-testing/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0643\u062a\u0641\u0627\u0621 \u0628\u0640 Black-Box: \u0641\u0631\u0648\u0639 \u063a\u064a\u0631 \u0645\u063a\u0637\u0651\u0627\u0629 \u062a\u064e\u062e\u0652\u062a\u064e\u0628\u0626.  </li> <li>\u0627\u0644\u0627\u0643\u062a\u0641\u0627\u0621 \u0628\u0640 White-Box: \u064a\u063a\u0637\u064a \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u062d\u0627\u0644\u064a \u0644\u0643\u0646\u0647 \u0642\u062f \u064a\u0641\u0648\u0651\u062a \u0634\u0631\u0648\u0637 \u0627\u0644\u0639\u0642\u062f \u0627\u0644\u0641\u0639\u0644\u064a\u0629.  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u064a\u0629 \u0645\u0639 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0625\u0646\u062a\u0627\u062c\u064a\u0629 \u062d\u0633\u0651\u0627\u0633\u0629.  </li> <li>\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0647\u0634\u0651\u0629 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062a\u0641\u0627\u0635\u064a\u0644 \u062a\u0646\u0641\u064a\u0630\u064a\u0629 \u062a\u062a\u063a\u064a\u0651\u0631 \u0643\u062b\u064a\u0631\u064b\u0627.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0633\u0644\u0628\u064a\u0629 (\u0645\u062f\u062e\u0644\u0627\u062a Null/\u0641\u0627\u0631\u063a\u0629/\u062e\u0627\u0631\u062c \u0627\u0644\u0646\u0637\u0627\u0642).</li> </ul>"},{"location":"terms/black-white-box-testing/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Black-Box Testing \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0633\u0644\u0648\u0643 \u0627\u0644\u062e\u0627\u0631\u062c\u064a \u0648\u0641\u0642 \u0627\u0644\u0639\u0642\u062f \u0644\u0627 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u062f\u0627\u062e\u0644\u061b \u0645\u0646\u0627\u0633\u0628\u0629 \u0644\u0644\u0642\u0628\u0648\u0644/\u0627\u0644\u062a\u0643\u0627\u0645\u0644 White-Box Testing \u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0641\u0631\u0648\u0639 \u0648\u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u064a\u062d\u062a\u0627\u062c \u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u0643\u0648\u062f\u061b \u064a\u0642\u064a\u0633 Line/Branch/Path Gray-Box Testing \u0645\u0632\u064a\u062c \u0628\u0645\u0639\u0631\u0641\u0629 \u062c\u0632\u0626\u064a\u0629 \u064a\u0633\u062a\u063a\u0644 \u0633\u0643\u064a\u0645\u0629/\u062a\u0635\u0645\u064a\u0645 \u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 Property-Based \u064a\u0648\u0644\u0651\u062f \u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0648\u0641\u0642 \u062e\u0627\u0635\u064a\u0629 \u0639\u0627\u0645\u0629 \u064a\u0643\u0645\u0644 \u0627\u0644\u0623\u0633\u0648\u062f/\u0627\u0644\u0623\u0628\u064a\u0636 \u0648\u064a\u0643\u0634\u0641 \u062d\u0648\u0627\u0641 \u063a\u064a\u0631 \u0645\u062a\u0648\u0642\u0639\u0629"},{"location":"terms/black-white-box-testing/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u062c\u0645\u0639 \u0628\u064a\u0646 Black-Box \u0648White-Box: \u0627\u0644\u0623\u0648\u0644 \u064a\u0636\u0645\u0646 \u0627\u0644\u0639\u0642\u062f \u0648\u0627\u0644\u0633\u0644\u0648\u0643\u060c \u0648\u0627\u0644\u062b\u0627\u0646\u064a \u064a\u0636\u0645\u0646 \u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a. \u0623\u0636\u0650\u0641 Gray-Box/Property-Based \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u060c \u0648\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u062d\u0648\u0627\u0641 \u0648\u062c\u0648\u062f\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0644\u0627 \u0627\u0644\u0646\u0633\u0628\u0629 \u0641\u0642\u0637.</p>"},{"location":"terms/blazor/","title":"Blazor","text":""},{"location":"terms/blazor/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Blazor (ASP.NET Core) \u2014 \u0625\u0637\u0627\u0631 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0648\u064a\u0628 \u0628\u0640 C# \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0623\u0648 WebAssembly \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d.</p>"},{"location":"terms/blazor/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0643\u062a\u0628 \u0648\u0627\u062c\u0647\u0627\u062a\u0643 \u0628\u0640 \u0645\u0643\u0648\u0651\u0646\u0627\u062a Razor (\u0645\u0644\u0641\u0627\u062a <code>.razor</code>) \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 C# \u0628\u062f\u0644 JavaScript. \u0646\u0645\u0648\u0630\u062c\u0627\u0646 \u0644\u0644\u062a\u0634\u063a\u064a\u0644: Blazor Server (Rendering \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0639\u0628\u0631 SignalR) \u0648Blazor WebAssembly (C# \u064a\u0631\u0643\u0636 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d).</p>"},{"location":"terms/blazor/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0645\u0643\u0648\u0651\u0646 = \u0645\u0644\u0641 <code>.razor</code> \u064a\u062c\u0645\u0639 Markup + C# \u0645\u0639 \u0631\u0628\u0637 \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0623\u062d\u062f\u0627\u062b.  </li> <li>\u0627\u0644\u062a\u062d\u062f\u064a\u062b \u0630\u0643\u064a \u0639\u0628\u0631 DOM \u0627\u0641\u062a\u0631\u0627\u0636\u064a (diff) \u0645\u062b\u0644 React.  </li> <li>\u0627\u0644\u062a\u0648\u0627\u0635\u0644 \u0645\u0639 JS \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0639\u0628\u0631 JS Interop.  </li> <li>\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u064f\u062c\u0644\u0628 \u0639\u0628\u0631 <code>HttpClient</code> \u0623\u0648 \u062e\u062f\u0645\u0627\u062a DI \u0642\u064a\u0627\u0633\u064a\u0629.</li> </ul>"},{"location":"terms/blazor/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u062e\u064a\u0644 React \u0644\u0643\u0646 \u0628\u062f\u0644\u0627\u064b \u0645\u0646 JavaScript \u062a\u0643\u062a\u0628 C#\u060c \u0648\u062a\u062e\u062a\u0627\u0631 \u0623\u064a\u0646 \u064a\u0646\u0641\u0651\u0630: \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 (\u062e\u0641\u064a\u0641 \u062a\u062d\u0645\u064a\u0644 \u0623\u0648\u0644\u064a) \u0623\u0648 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d (\u0628\u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644 \u0645\u0633\u062a\u0645\u0631).</p>"},{"location":"terms/blazor/#razor","title":"\u0645\u062b\u0627\u0644 \u0633\u0631\u064a\u0639 \u2014 \u0645\u0643\u0648\u0651\u0646 Razor + \u062d\u0642\u0646 \u062e\u062f\u0645\u0629 + \u062d\u062f\u062b","text":"Text Only<pre><code>@* Components/Counter.razor *@\n&lt;h3&gt;Counter&lt;/h3&gt;\n\n&lt;p&gt;Count: @count&lt;/p&gt;\n&lt;button class=\"btn btn-primary\" @onclick=\"Increment\"&gt;+1&lt;/button&gt;\n\n@code {\n    private int count;\n    void Increment() =&gt; count++;\n}\n</code></pre>"},{"location":"terms/blazor/#blazor-server-signalr","title":"\u0645\u062b\u0627\u0644 Blazor Server \u2014 \u062a\u0634\u063a\u064a\u0644 \u0641\u0648\u0631\u064a \u0648\u0627\u062a\u0635\u0627\u0644 SignalR","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new blazorserver -n BlazorSrv &amp;&amp; dotnet run\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddRazorComponents().AddInteractiveServer(); // Blazor Server\nvar app = builder.Build();\n\nif (!app.Environment.IsDevelopment()) { app.UseExceptionHandler(\"/Error\"); app.UseHsts(); }\napp.UseHttpsRedirection();\napp.UseStaticFiles();\napp.MapRazorComponents&lt;App&gt;()\n   .AddInteractiveServerRenderMode(); // SignalR\napp.Run();\n\n// App.razor\n@using Microsoft.AspNetCore.Components.Routing\n&lt;Router AppAssembly=\"@typeof(App).Assembly\"&gt;\n  &lt;Found Context=\"routeData\"&gt;\n    &lt;RouteView RouteData=\"@routeData\" /&gt;\n  &lt;/Found&gt;\n  &lt;NotFound&gt;&lt;h1&gt;404&lt;/h1&gt;&lt;/NotFound&gt;\n&lt;/Router&gt;\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - \u0639\u0631\u0636 \u062a\u0641\u0627\u0639\u0644\u064a \u064a\u064f\u062d\u0633\u0628 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645. - \u064a\u062d\u062a\u0627\u062c \u0627\u062a\u0635\u0627\u0644 \u0645\u0633\u062a\u0645\u0631 (WebSocket/SignalR). - \u062a\u062d\u0645\u064a\u0644 \u0623\u0648\u0644\u064a \u0633\u0631\u064a\u0639 \u0648\u062d\u062c\u0645 \u0623\u0635\u063a\u0631.</p>"},{"location":"terms/blazor/#blazor-webassembly","title":"\u0645\u062b\u0627\u0644 Blazor WebAssembly \u2014 \u062a\u0634\u063a\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d (\u0628\u062f\u0648\u0646 \u062e\u0627\u062f\u0645 \u0645\u0633\u062a\u0645\u0631)","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new blazorwasm -n BlazorWasm &amp;&amp; dotnet run\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\n\nvar builder = WebAssemblyHostBuilder.CreateDefault(args);\nbuilder.RootComponents.Add&lt;App&gt;(\"#app\");\n\n// \u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0648\u0627\u062c\u0647\u0629 (HttpClient \u0644\u0644\u0640 APIs)\nbuilder.Services.AddScoped(sp =&gt; new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n\nawait builder.Build().RunAsync();\n\n// index.html (\u0627\u0644\u0645\u0636\u064a\u0641) \u064a\u062a\u0636\u0645\u0646 &lt;div id=\"app\"&gt;&lt;/div&gt; \u0648\u062a\u062d\u0645\u064a\u0644 blazor.webassembly.js\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - \u064a\u0639\u0645\u0644 \u0643\u0644\u064a\u064b\u0627 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d \u0639\u0628\u0631 WebAssembly. - \u064a\u0645\u0643\u0646\u0647 \u0627\u0644\u0639\u0645\u0644 \u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644 (PWA). - \u062a\u062d\u0645\u064a\u0644 \u0623\u0648\u0644\u064a \u0623\u0643\u0628\u0631 (\u062d\u0650\u0632\u0645 Runtime + Assemblies) \u0644\u0643\u0646 \u0628\u062f\u0648\u0646 \u062a\u0628\u0639\u064a\u0629 \u0627\u062a\u0635\u0627\u0644 \u0645\u0628\u0627\u0634\u0631.</p>"},{"location":"terms/blazor/#js-interop-javascript-blazor","title":"\u0645\u062b\u0627\u0644 JS Interop \u2014 \u0646\u062f\u0627\u0621 JavaScript \u0645\u0646 Blazor (\u0633\u064a\u0631\u0641\u0631/\u0648\u0627\u0633\u0650\u0645)","text":"Text Only<pre><code>@* Components/Clipboard.razor *@\n@inject IJSRuntime JS\n&lt;button class=\"btn\" @onclick=\"Copy\"&gt;Copy URL&lt;/button&gt;\n&lt;p&gt;@status&lt;/p&gt;\n\n@code {\n    string status = \"\";\n    async Task Copy()\n    {\n        await JS.InvokeVoidAsync(\"navigator.clipboard.writeText\", NavigationManager.Uri);\n        status = \"Copied!\";\n    }\n    [Inject] NavigationManager NavigationManager { get; set; } = default!;\n}\n</code></pre>"},{"location":"terms/blazor/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u0648\u0627\u0644\u0628\u0646\u0627\u0621","text":"<ol> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c:  </li> <li>Server: \u0644\u0648\u062d\u0627\u062a \u062f\u0627\u062e\u0644\u064a\u0629\u060c \u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u0629\u060c \u0632\u0645\u0646 \u0628\u062f\u0621 \u0633\u0631\u064a\u0639.  </li> <li>WASM: \u0639\u0645\u0644 \u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644/PWA\u060c \u062a\u0642\u0644\u064a\u0644 \u0636\u063a\u0637 \u0627\u0644\u062e\u0627\u062f\u0645\u060c \u062f\u0639\u0645 CDN.  </li> <li>\u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0643\u0648\u062f \u0625\u0644\u0649 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.  </li> <li>DI \u0644\u0644\u062e\u062f\u0645\u0627\u062a (<code>AddScoped</code>/<code>AddSingleton</code>) \u0648\u0627\u0633\u062a\u062e\u062f\u0645 <code>HttpClient</code> \u0644\u0644\u0640 APIs.  </li> <li>\u0627\u0644\u0645\u0644\u0627\u064e\u062d\u0638\u064a\u0629: \u0633\u062c\u0651\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 (ErrorBoundary)\u060c \u0648\u062a\u062a\u0628\u0651\u0639 \u0627\u0644\u0623\u062f\u0627\u0621 (Telemetry).  </li> <li>\u0627\u0644\u0647\u0648\u064a\u0629: \u062f\u0645\u062c Identity/OIDC\u061b \u0641\u064a WASM \u0627\u0633\u062a\u062e\u062f\u0645 Access Token \u0628\u062d\u0630\u0631.  </li> <li>\u0627\u0644\u0623\u062f\u0627\u0621:  </li> <li>Server: \u062a\u0642\u0644\u064a\u0644 \u062a\u0643\u0631\u0627\u0631 State\u060c \u062a\u062c\u0646\u0651\u0628 \u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0643\u062b\u064a\u0641\u0629 \u0639\u0628\u0631 SignalR.  </li> <li>WASM: \u062a\u0645\u0643\u064a\u0646 AOT \u0623\u0648 Native AOT \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u060c \u0636\u063a\u0637 Brotli\u060c Lazy-load.  </li> <li>\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631: \u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0645\u0646\u0637\u0642 \u0628\u0640 xUnit\u060c \u0648\u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0628\u0640 <code>bUnit</code>.</li> </ol>"},{"location":"terms/blazor/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0648\u0636\u0639 \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u062b\u0642\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0628\u062f\u0644 \u062e\u062f\u0645\u0627\u062a \u0645\u0646\u0641\u0635\u0644\u0629.  </li> <li>\u0625\u0639\u0627\u062f\u0629 State \u0636\u062e\u0645\u0629 \u0641\u064a Blazor Server \u2192 \u062d\u0645\u0644 SignalR.  </li> <li>\u062a\u062c\u0627\u0647\u0644 Lazy-loading \u0641\u064a WASM \u2192 \u0632\u0645\u0646 \u0628\u062f\u0621 \u0637\u0648\u064a\u0644.  </li> <li>JS Interop \u0628\u0644\u0627 \u062a\u0646\u0638\u064a\u0641/\u062a\u062d\u0642\u0642 \u0645\u0646 \u0648\u062c\u0648\u062f \u0639\u0646\u0627\u0635\u0631 DOM.  </li> <li>\u062f\u0645\u062c \u0633\u064a\u0621 \u0644\u0644\u0647\u0648\u064a\u0629 (Tokens \u0641\u064a <code>localStorage</code> \u0628\u062f\u0648\u0646 \u062d\u0630\u0631 \u0645\u0646 XSS).  </li> <li>\u0631\u0628\u0637 \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u0643\u062b\u064a\u0641 \u0639\u0644\u0649 \u0639\u0646\u0627\u0635\u0631 \u0643\u062b\u064a\u0631\u0629 \u062f\u0648\u0646 \u0627\u0641\u062a\u0631\u0627\u0636 Virtualize.</li> </ul>"},{"location":"terms/blazor/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Blazor Server \u062a\u0641\u0627\u0639\u0644\u064a\u0629 C# \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0627\u062a\u0635\u0627\u0644 SignalR \u0645\u0633\u062a\u0645\u0631\u060c \u0628\u062f\u0621 \u0633\u0631\u064a\u0639\u060c \u062d\u0645\u0644 \u062e\u0627\u062f\u0645 \u0623\u0639\u0644\u0649 Blazor WebAssembly \u062a\u0641\u0627\u0639\u0644\u064a\u0629 C# \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d \u062d\u062c\u0645 \u0623\u0648\u0644\u064a \u0623\u0643\u0628\u0631\u060c \u064a\u0639\u0645\u0644 \u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644\u060c \u064a\u0642\u0644\u0651\u0644 \u0636\u063a\u0637 \u0627\u0644\u062e\u0627\u062f\u0645 Razor Pages \u0635\u0641\u062d\u0627\u062a Forms/CRUD \u062a\u0642\u0644\u064a\u062f\u064a\u0629 \u0628\u062f\u0648\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0644\u062d\u0638\u064a\u0629 \u0643\u062b\u064a\u0641\u0629 SPA (React/Vue/Angular) \u0645\u0643\u0648\u0651\u0646\u0627\u062a JS \u0646\u0638\u0627\u0645 \u0628\u064a\u0626\u064a JS \u0623\u0648\u0633\u0639\u061b \u0644\u064a\u0633 C# Minimal APIs \u062e\u062f\u0645\u0627\u062a REST \u0641\u0642\u0637 \u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0644\u0627 UI\u061b \u062a\u064f\u0633\u062a\u0647\u0644\u0643 \u0645\u0646 Blazor/SPA"},{"location":"terms/blazor/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Blazor \u064a\u062a\u064a\u062d \u0644\u0643 \u0628\u0646\u0627\u0621 \u0648\u0627\u062c\u0647\u0627\u062a \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0628\u0640 C# \u0648\u0645\u0643\u0648\u0651\u0646\u0627\u062a Razor. \u0627\u062e\u062a\u0631 Server \u0644\u0628\u062f\u0621 \u0633\u0631\u064a\u0639 \u0648\u0627\u062a\u0635\u0627\u0644 \u0645\u0633\u062a\u0645\u0631\u060c \u0623\u0648 WASM \u0644\u0644\u0627\u0633\u062a\u0642\u0644\u0627\u0644\u064a\u0629 \u0648\u062f\u0639\u0645 \u0639\u062f\u0645 \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 DI + JS Interop + \u062a\u062d\u0633\u064a\u0646\u0627\u062a \u0623\u062f\u0627\u0621\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u062d\u062f\u064a\u062b\u0629 \u0628\u0642\u0648\u0651\u0629 \u0646\u0638\u0627\u0645 .NET. </p>"},{"location":"terms/business-tier/","title":"Business Tier","text":""},{"location":"terms/business-tier/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Business (Application) Tier \u2014 \u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644/\u0627\u0644\u062a\u0637\u0628\u064a\u0642.</p>"},{"location":"terms/business-tier/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0627\u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u0648\u0633\u0637\u0649 \u0627\u0644\u062a\u064a \u062a\u062d\u062a\u0648\u064a \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u0648\u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 (Use Cases). \u062a\u0646\u0633\u0651\u0642 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a\u060c \u062a\u0641\u0631\u0636 \u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a\u060c \u0648\u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 \u0639\u0628\u0631 \u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629.</p>"},{"location":"terms/business-tier/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0645\u0627\u0630\u0627 \u062a\u0641\u0639\u0644\u061f \u062a\u0646\u0641\u064a\u0630 \u0645\u0646\u0637\u0642 \u0627\u0644\u0645\u062c\u0627\u0644: \u062a\u0633\u0639\u064a\u0631\u060c \u062e\u0635\u0648\u0645\u0627\u062a\u060c \u0635\u0644\u0627\u062d\u064a\u0627\u062a\u060c \u062a\u062f\u0641\u0651\u0642 \u0637\u0644\u0628\u0627\u062a.  </li> <li>\u0645\u0627\u0630\u0627 \u0644\u0627 \u062a\u0641\u0639\u0644\u061f \u0644\u0627 UI\u060c \u0648\u0644\u0627 SQL \u0645\u0628\u0627\u0634\u0631. \u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 DB \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a (Repositories/UoW).  </li> <li>\u0643\u064a\u0641 \u062a\u062a\u062d\u062f\u062b\u061f \u062a\u0633\u062a\u0642\u0628\u0644 DTOs \u0645\u0646 \u0627\u0644\u0648\u0627\u062c\u0647\u0629\u060c \u0648\u062a\u0639\u064a\u062f \u0646\u062a\u0627\u0626\u062c/\u0623\u062d\u062f\u0627\u062b\u060c \u0648\u062a\u0633\u062a\u062f\u0639\u064a \u062a\u0643\u0627\u0645\u0644\u0627\u062a (Email/Payments) \u0639\u0628\u0631 \u0639\u0642\u0648\u062f.</li> </ul>"},{"location":"terms/business-tier/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0641\u064a \u0645\u0637\u0639\u0645: \u0627\u0644\u0645\u0637\u0628\u062e = \u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644. \u0644\u0627 \u064a\u0643\u0644\u0651\u0645 \u0627\u0644\u0645\u062e\u0632\u0646 \u0645\u0628\u0627\u0634\u0631\u0629\u061b \u064a\u0631\u0633\u0644 \u0637\u0644\u0628\u0627\u062a \u0639\u0628\u0631 \u0628\u0648\u0627\u0628\u0629 \u0627\u0644\u0627\u0633\u062a\u0644\u0627\u0645. \u064a\u0637\u0628\u062e \u0648\u0641\u0642 \u0627\u0644\u0648\u0635\u0641\u0629 (\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644) \u0648\u064a\u064f\u0646\u0633\u0651\u0642 \u0628\u064a\u0646 \u0627\u0644\u0634\u064a\u0641\u0627\u062a (\u062e\u0637\u0648\u0627\u062a/\u062d\u0627\u0644\u0627\u062a \u0627\u0633\u062a\u062e\u062f\u0627\u0645).</p>"},{"location":"terms/business-tier/#c","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u062e\u062f\u0645\u0629 \u0623\u0639\u0645\u0627\u0644 \u0641\u064a \u0637\u0628\u0642\u0629 \u0645\u0633\u062a\u0642\u0644\u0651\u0629 + \u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629","text":"C#<pre><code>// \u0645\u0634\u0631\u0648\u0639 Business (\u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644) \u2014 .NET 8/9\n// \u064a\u0639\u062a\u0645\u062f \u0641\u0642\u0637 \u0639\u0644\u0649 \u0639\u0642\u0648\u062f (Interfaces) \u0648\u0646\u0645\u0627\u0630\u062c \u0645\u062c\u0627\u0644 \u0628\u0633\u064a\u0637\u0629. \u0644\u0627 \u0645\u0631\u062c\u0639 \u0644\u0640 ASP.NET \u0623\u0648 EF.\n\n// ====== \u0639\u0642\u0648\u062f \u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0629 (\u062a\u0639\u0631\u064a\u0641\u0647\u0627 \u0647\u0646\u0627\u060c \u062a\u0646\u0641\u064a\u0630\u0647\u0627 \u0641\u064a \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a) ======\npublic interface IOrderRepository\n{\n    Task&lt;Order?&gt; GetAsync(int id, CancellationToken ct = default);\n    Task AddAsync(Order order, CancellationToken ct = default);\n    Task SaveChangesAsync(CancellationToken ct = default);\n}\npublic interface IPaymentGateway\n{\n    Task&lt;PaymentResult&gt; ChargeAsync(string customerId, decimal amount, CancellationToken ct = default);\n}\npublic record PaymentResult(bool Success, string? Error = null);\n\n// ====== \u0646\u0645\u0627\u0630\u062c \u0645\u062c\u0627\u0644 \u0645\u0628\u0633\u0651\u0637\u0629 ======\npublic class Order\n{\n    private readonly List&lt;OrderLine&gt; _lines = new();\n    public int Id { get; }\n    public string CustomerId { get; }\n    public IReadOnlyList&lt;OrderLine&gt; Lines =&gt; _lines;\n    public decimal Total =&gt; _lines.Sum(l =&gt; l.Price * l.Qty);\n\n    public Order(int id, string customerId) { Id = id; CustomerId = customerId; }\n\n    public void AddLine(string sku, int qty, decimal price)\n    {\n        if (qty &lt;= 0) throw new ArgumentOutOfRangeException(nameof(qty));\n        if (price &lt;= 0) throw new ArgumentOutOfRangeException(nameof(price));\n        _lines.Add(new OrderLine(sku, qty, price));\n    }\n}\npublic record OrderLine(string Sku, int Qty, decimal Price);\n\n// ====== DTOs \u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 ======\npublic record PlaceOrderCommand(int OrderId, string CustomerId, List&lt;OrderItemDto&gt; Items);\npublic record OrderItemDto(string Sku, int Qty, decimal Price);\npublic record PlaceOrderResult(int OrderId, decimal Total, string Status);\n\n// ====== \u062e\u062f\u0645\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 (Use Case) ======\npublic class OrderService\n{\n    private readonly IOrderRepository _repo;\n    private readonly IPaymentGateway _payments;\n\n    public OrderService(IOrderRepository repo, IPaymentGateway payments)\n    { _repo = repo; _payments = payments; }\n\n    public async Task&lt;PlaceOrderResult&gt; PlaceOrderAsync(PlaceOrderCommand cmd, CancellationToken ct = default)\n    {\n        // \u062a\u062d\u0642\u0642 \u062f\u0644\u0627\u0644\u064a (\u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644)\n        if (string.IsNullOrWhiteSpace(cmd.CustomerId)) throw new ArgumentException(\"customer_required\");\n        if (cmd.Items is null || cmd.Items.Count == 0) throw new ArgumentException(\"items_required\");\n\n        var order = new Order(cmd.OrderId, cmd.CustomerId);\n        foreach (var i in cmd.Items) order.AddLine(i.Sku, i.Qty, i.Price);\n\n        // \u0633\u064a\u0627\u0633\u0629: \u062d\u062f\u0651 \u0623\u0642\u0635\u0649 \u0644\u0644\u0637\u0644\u0628 (\u0645\u062b\u0627\u0644)\n        if (order.Total &gt; 10_000m) throw new InvalidOperationException(\"limit_exceeded\");\n\n        // \u062a\u062d\u0635\u064a\u0644 \u0627\u0644\u0645\u0628\u0644\u063a \u0639\u0628\u0631 \u0639\u0642\u062f \u062e\u0627\u0631\u062c\u064a\n        var pay = await _payments.ChargeAsync(order.CustomerId, order.Total, ct);\n        if (!pay.Success) throw new InvalidOperationException($\"payment_failed:{pay.Error}\");\n\n        // \u062d\u0641\u0638 (\u0639\u0628\u0631 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639/\u0627\u0644\u0648\u062d\u062f\u0629)\n        await _repo.AddAsync(order, ct);\n        await _repo.SaveChangesAsync(ct);\n\n        return new PlaceOrderResult(order.Id, order.Total, \"confirmed\");\n    }\n}\n</code></pre> C#<pre><code>// \u0637\u0628\u0642\u0629 \u0627\u0644\u0639\u0631\u0636 (Presentation) \u2014 Minimal API \u062a\u0633\u062a\u062f\u0639\u064a \u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u0641\u0642\u0637\n// Program.cs \u0641\u064a \u0645\u0634\u0631\u0648\u0639 Web (\u0645\u0631\u062c\u0639 \u0625\u0644\u0649 \u0645\u0634\u0631\u0648\u0639 Business + \u0645\u0634\u0631\u0648\u0639 Data \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0639\u0642\u0648\u062f)\napp.MapPost(\"/orders\", async (PlaceOrderCommand cmd, OrderService service, CancellationToken ct) =&gt;\n{\n    try\n    {\n        var res = await service.PlaceOrderAsync(cmd, ct);\n        return Results.Created($\"/orders/{res.OrderId}\", res);\n    }\n    catch (ArgumentException ex)        { return Results.ValidationProblem(new() { [\"\"] = new[] { ex.Message } }); }\n    catch (InvalidOperationException ex){ return Results.BadRequest(new { error = ex.Message }); }\n});\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - Business Tier \u064a\u0645\u0644\u0643 \u0627\u0644\u0642\u0648\u0627\u0639\u062f \u0648\u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0639\u0642\u0648\u062f (<code>IOrderRepository</code>, <code>IPaymentGateway</code>). - \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u0646\u0641\u0651\u0630 \u0627\u0644\u0639\u0642\u0648\u062f (EF/Dapper/HTTP)\u060c \u0648\u0637\u0628\u0642\u0629 \u0627\u0644\u0639\u0631\u0636 \u062a\u062d\u0648\u0651\u0644 HTTP\u2194DTO \u0648\u062a\u0633\u062a\u062f\u0639\u064a \u0627\u0644\u062e\u062f\u0645\u0629.</p>"},{"location":"terms/business-tier/#business-tier_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 Business Tier \u0633\u0644\u064a\u0645","text":"<ol> <li>\u062d\u062f\u0651\u062f \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 (Use Cases) \u0643\u062e\u062f\u0645\u0627\u062a \u0648\u0627\u0636\u062d\u0629 (<code>OrderService.PlaceOrder</code>).  </li> <li>\u0627\u0643\u062a\u0628 \u0627\u0644\u0642\u0648\u0627\u0639\u062f \u0642\u0631\u0628 \u0627\u0644\u0645\u062c\u0627\u0644 (\u062f\u0627\u062e\u0644 \u0627\u0644\u062e\u062f\u0645\u0627\u062a/\u0627\u0644\u0643\u064a\u0627\u0646\u0627\u062a) \u0644\u0627 \u0641\u064a Controllers.  </li> <li>\u0627\u0641\u0635\u0644 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a \u0639\u0642\u0648\u062f (<code>IRepository/UoW</code>) \u0648\u0646\u0641\u0651\u0630\u0647\u0627 \u0641\u064a \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 DTOs \u0644\u0644\u0645\u062f\u062e\u0644\u0627\u062a/\u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a\u061b \u0644\u0627 \u062a\u0633\u0631\u0651\u0628 \u0643\u064a\u0627\u0646\u0627\u062a DB \u0644\u0644\u062e\u0627\u0631\u062c.  </li> <li>\u0636\u0639 \u062d\u062f\u0648\u062f \u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0648\u0627\u0636\u062d\u0629 (Transaction Boundary) \u0628\u062d\u0648\u0644 \u0643\u0644 Use Case.  </li> <li>\u0623\u0636\u0650\u0641 \u0633\u064a\u0627\u0633\u0627\u062a (Authorization/Validation) \u062f\u0627\u062e\u0644 \u0623\u0648 \u0628\u062c\u0648\u0627\u0631 \u0627\u0644\u062e\u062f\u0645\u0627\u062a.  </li> <li>\u0641\u0639\u0651\u0644 \u062a\u062a\u0628\u0651\u0639/\u0642\u064a\u0627\u0633 (Logs/Metrics) \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 Use Case \u0645\u0639 <code>Correlation-Id</code>.</li> </ol>"},{"location":"terms/business-tier/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u062f\u0627\u062e\u0644 Controller/ORM (\u062a\u0633\u0631\u064a\u0628 \u0627\u0644\u0637\u0628\u0642\u0627\u062a).  </li> <li>\u0627\u0633\u062a\u062f\u0639\u0627\u0621 SQL/HTTP \u0645\u0628\u0627\u0634\u0631\u0629 \u0645\u0646 \u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 (\u0627\u0642\u062a\u0631\u0627\u0646 \u0642\u0648\u064a).  </li> <li>Anemic Domain: \u0643\u064a\u0627\u0646\u0627\u062a \u0628\u0644\u0627 \u0633\u0644\u0648\u0643 \u0648\u0643\u0644 \u0634\u064a\u0621 \u0641\u064a \u062e\u062f\u0645\u0627\u062a \u0633\u0645\u064a\u0643\u0629 \u063a\u064a\u0631 \u0645\u062a\u0645\u0627\u0633\u0643\u0629.  </li> <li>\u063a\u064a\u0627\u0628 \u062d\u062f\u0648\u062f \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629 \u2192 \u062d\u0627\u0644\u0627\u062a \u0646\u0635\u0641 \u0645\u0646\u062c\u0632\u0629 \u0639\u0646\u062f \u0627\u0644\u0641\u0634\u0644.  </li> <li>\u062a\u0645\u0631\u064a\u0631 \u0646\u0645\u0627\u0630\u062c DB \u0643\u0640 DTO \u0644\u0644\u0648\u0627\u062c\u0647\u0629.  </li> <li>\u0639\u062f\u0645 \u0627\u062e\u062a\u0628\u0627\u0631 Use Cases \u0628\u0645\u0639\u0632\u0644 \u0639\u0646 DB (\u0627\u0633\u062a\u062e\u062f\u0645 Mocks/Fakes \u0644\u0644\u0639\u0642\u0648\u062f).</li> </ul>"},{"location":"terms/business-tier/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Business Tier \u062a\u0646\u0641\u064a\u0630 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u0648\u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u064a\u062a\u0639\u0627\u0645\u0644 \u0639\u0628\u0631 \u0639\u0642\u0648\u062f \u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u062a\u0643\u0627\u0645\u0644\u0627\u062a Presentation Tier \u062a\u0639\u0627\u0645\u0644 HTTP/UI \u0648\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0631\u062f \u0644\u0627 \u064a\u062d\u0648\u064a \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 \u0645\u0639\u0642\u0651\u062f\u0629 Data Tier \u062a\u062e\u0632\u064a\u0646/\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0648\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0639\u0642\u0648\u062f \u0644\u0627 \u064a\u0642\u0631\u0651\u0631 \u0633\u064a\u0627\u0633\u0627\u062a/\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644"},{"location":"terms/business-tier/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Business Tier \u0647\u0648 \u0642\u0644\u0628 \u0627\u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0645\u0646\u0637\u0642\u064a: \u064a\u0637\u0628\u0651\u0642 \u0627\u0644\u0642\u0648\u0627\u0639\u062f\u060c \u064a\u0646\u0633\u0651\u0642 \u0627\u0644\u062e\u0637\u0648\u0627\u062a\u060c \u0648\u064a\u062a\u062d\u062f\u062b \u0645\u0639 \u0627\u0644\u062e\u0627\u0631\u062c \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a. \u0627\u0641\u0635\u0644\u0647 \u0639\u0646 \u0627\u0644\u0639\u0631\u0636 \u0648\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u0627\u062c\u0639\u0644 \u0639\u0642\u0648\u062f\u0647 \u0648\u0627\u0636\u062d\u0629 \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u0647 \u0645\u0633\u062a\u0642\u0644\u0651\u0629\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0637\u0628\u0642\u0629 \u0645\u062a\u064a\u0646\u0629\u060c \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u063a\u064a\u064a\u0631\u060c \u0648\u0633\u0647\u0644\u0629 \u0627\u0644\u0635\u064a\u0627\u0646\u0629 \u062f\u0648\u0646 \u062a\u0634\u0627\u0628\u0643 \u0645\u0639 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0628\u0646\u064a\u0629. </p>"},{"location":"terms/client-server/","title":"Client\u2013Server","text":""},{"location":"terms/client-server/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Client\u2013Server \u2014 \u0646\u0645\u0637 \u0627\u0644\u0639\u0645\u064a\u0644/\u0627\u0644\u062e\u0627\u062f\u0645 (\u062a\u0639\u0627\u0648\u0646 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0629 \u0628\u064a\u0646 \u0637\u0627\u0644\u0628 \u062e\u062f\u0645\u0629 \u0648\u0645\u0642\u062f\u0651\u0645\u0647\u0627).</p>"},{"location":"terms/client-server/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u0633\u0644\u0648\u0628 \u0645\u0639\u0645\u0627\u0631\u064a \u064a\u064f\u0642\u0633\u0651\u0645 \u0627\u0644\u0645\u0646\u0638\u0648\u0645\u0629 \u0625\u0644\u0649 \u0639\u0645\u064a\u0644 \u064a\u0631\u0633\u0644 \u0637\u0644\u0628\u0627\u062a \u0648\u062e\u0627\u062f\u0645 \u064a\u0648\u0641\u0651\u0631 \u062e\u062f\u0645\u0627\u062a/\u0628\u064a\u0627\u0646\u0627\u062a. \u064a\u0648\u0641\u0651\u0631 \u0641\u0635\u0644 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a\u060c \u0648\u062a\u0648\u0633\u0639\u0629 \u0627\u0644\u062e\u0627\u062f\u0645\u060c \u0648\u062a\u0648\u062d\u064a\u062f \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0628\u0631 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0645\u062b\u0644 HTTP/TCP.</p>"},{"location":"terms/client-server/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0639\u0645\u064a\u0644: \u0648\u0627\u062c\u0647\u0629/\u062a\u0637\u0628\u064a\u0642 \u064a\u0637\u0644\u0628 \u0639\u0645\u0644\u064a\u0627\u062a (\u0642\u0631\u0627\u0621\u0629/\u0625\u0646\u0634\u0627\u0621/\u062a\u0639\u062f\u064a\u0644/\u062d\u0630\u0641).  </li> <li>\u0627\u0644\u062e\u0627\u062f\u0645: \u064a\u0646\u0641\u0651\u0630 \u0627\u0644\u0645\u0646\u0637\u0642 \u0648\u064a\u062e\u0632\u0651\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u064a\u0631\u062f\u0651 \u0628\u0646\u062a\u064a\u062c\u0629.  </li> <li>\u0627\u0644\u0642\u0646\u0627\u0629: \u0634\u0628\u0643\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 (TLS)\u060c \u0635\u064a\u063a\u0629 \u062a\u0628\u0627\u062f\u0644 (JSON/Protobuf).  </li> <li>\u0645\u0632\u0627\u064a\u0627: \u0623\u0645\u0646 \u0648\u062a\u0645\u0631\u0643\u0632 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0633\u0647\u0648\u0644\u0629 \u0627\u0644\u0635\u064a\u0627\u0646\u0629\u060c \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u062a\u0648\u0633\u0639\u0629 \u0623\u0641\u0642\u064a\u0627\u064b.  </li> <li>\u0642\u064a\u0648\u062f: \u0632\u0645\u0646 \u0627\u0646\u062a\u0642\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u0629\u060c \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0646\u0633\u062e/\u062a\u0648\u0627\u0632\u0646 \u0623\u062d\u0645\u0627\u0644 \u0648\u0645\u0631\u0627\u0642\u0628\u0629.</li> </ul>"},{"location":"terms/client-server/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0637\u0639\u0645: \u0627\u0644\u0632\u0628\u0648\u0646 (Client) \u064a\u0637\u0644\u0628 \u0637\u0628\u0642\u064b\u0627\u061b \u0627\u0644\u0645\u0637\u0628\u062e (Server) \u064a\u062c\u0647\u0651\u0632\u0647 \u0648\u064a\u0631\u0633\u0644\u0647. \u0646\u0645\u0648\u0630\u062c \u0645\u0648\u062d\u0651\u062f \u064a\u0636\u0645\u0646 \u0627\u0644\u062c\u0648\u062f\u0629\u060c \u0648\u0627\u0644\u0642\u0627\u0626\u0645\u0629 (API) \u062a\u0648\u0636\u0651\u062d \u0645\u0627 \u0647\u0648 \u0645\u062a\u0627\u062d \u0648\u0643\u064a\u0641 \u064a\u064f\u0637\u0644\u0628.</p>"},{"location":"terms/client-server/#c-minimal-api-httpclient","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062e\u0627\u062f\u0645 Minimal API + \u0639\u0645\u064a\u0644 HttpClient)","text":""},{"location":"terms/client-server/#aspnet-core-minimal-api","title":"\u062e\u0627\u062f\u0645 (ASP.NET Core Minimal API)","text":"C#<pre><code>// Program.cs\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapGet(\"/api/time\", () =&gt; Results.Ok(new { utc = DateTime.UtcNow }));\n\napp.MapPost(\"/api/echo\", (Message m) =&gt; Results.Ok(new { youSent = m.Text }));\n\napp.Run();\n\npublic record Message(string Text);\n</code></pre>"},{"location":"terms/client-server/#httpclient","title":"\u0639\u0645\u064a\u0644 (\u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0639\u0628\u0631 HttpClient)","text":"<p>C#<pre><code>using System;\nusing System.Net.Http;\nusing System.Net.Http.Json;\nusing System.Threading.Tasks;\n\nclass ClientApp\n{\n    static async Task Main()\n    {\n        using var http = new HttpClient { BaseAddress = new Uri(\"https://localhost:5001\") };\n\n        var timeRes = await http.GetFromJsonAsync&lt;dynamic&gt;(\"/api/time\");\n        Console.WriteLine(timeRes);\n\n        var echoRes = await http.PostAsJsonAsync(\"/api/echo\", new { Text = \"Hello Server\" });\n        Console.WriteLine(await echoRes.Content.ReadAsStringAsync());\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0637\u0644\u0628 <code>GET /api/time</code> \u064a\u0639\u064a\u062f JSON \u064a\u062d\u0648\u064a \u0648\u0642\u062a UTC. - \u0637\u0644\u0628 <code>POST /api/echo</code> \u064a\u0639\u064a\u062f \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u064f\u0631\u0633\u0644 \u062f\u0627\u062e\u0644 \u0643\u0627\u0626\u0646 JSON.</p>"},{"location":"terms/client-server/#clientserver_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645/\u062a\u0634\u063a\u064a\u0644 Client\u2013Server","text":"<ul> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0639\u0642\u0648\u062f: \u0646\u0642\u0627\u0637 \u0627\u0644\u0646\u0647\u0627\u064a\u0629\u060c \u0627\u0644\u0646\u0645\u0627\u0630\u062c\u060c \u0631\u0645\u0648\u0632 \u0627\u0644\u062d\u0627\u0644\u0629 (OpenAPI/Swagger).  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644/\u0627\u0644\u062a\u063a\u0644\u064a\u0641: HTTP/1.1 \u0623\u0648 HTTP/2 + TLS\u060c JSON/Protobuf.  </li> <li>\u0646\u0641\u0651\u0630 AuthN/AuthZ (JWT/OAuth2)\u060c \u0648CORS \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d\u064a\u0646.  </li> <li>\u0623\u0636\u0641 \u0627\u0644\u062a\u0631\u0642\u064a\u0645/\u0627\u0644\u0641\u0631\u0632/\u0627\u0644\u062a\u0631\u0634\u064a\u062d \u0644\u0646\u0647\u0627\u064a\u0627\u062a \u0627\u0644\u0642\u0648\u0627\u0626\u0645\u060c \u0648Cache-Control \u062d\u064a\u062b \u064a\u0646\u0627\u0633\u0628.  </li> <li>\u0635\u0645\u0651\u0645 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0645\u0639 Backoff \u0648Timeouts \u0641\u064a \u0627\u0644\u0639\u0645\u064a\u0644.  </li> <li>\u0648\u0633\u0651\u0639 \u0627\u0644\u062e\u0627\u062f\u0645: Load Balancer\u060c Health Checks\u060c Observability (Logs/Metrics/Tracing).  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0639\u0628\u0631 Postman/curl \u0648\u0623\u062f\u0631\u062c \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0641\u064a CI/CD.</li> </ul>"},{"location":"terms/client-server/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Client\u2013Server \u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0623\u062f\u0648\u0627\u0631: \u0639\u0645\u064a\u0644 \u064a\u0637\u0644\u0628 \u0648\u062e\u0627\u062f\u0645 \u064a\u0644\u0628\u0651\u064a \u0648\u0636\u0648\u062d \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a\u061b \u0642\u0627\u0628\u0644\u064a\u0629 \u062a\u0648\u0633\u0639\u0629 \u0627\u0644\u062e\u0627\u062f\u0645\u061b \u064a\u062d\u062a\u0627\u062c \u0634\u0628\u0643\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 Request\u2013Response Model \u062a\u0628\u0627\u062f\u0644 \u0645\u062a\u0632\u0627\u0645\u0646: \u0637\u0644\u0628 \u2192 \u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u064a\u0639\u0645\u0644 \u063a\u0627\u0644\u0628\u064b\u0627 \u0641\u0648\u0642 HTTP\u061b \u0645\u0646\u0627\u0633\u0628 \u0644\u0639\u0645\u0644\u064a\u0627\u062a CRUD Publish\u2013Subscribe \u0628\u062b \u0623\u062d\u062f\u0627\u062b \u0644\u0645\u0634\u062a\u0631\u0643\u064a\u0646 \u0645\u062a\u0639\u062f\u062f\u064a\u0646 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646\u061b \u0641\u0635\u0644 \u0636\u0639\u064a\u0641 \u0627\u0644\u0627\u0631\u062a\u0628\u0627\u0637\u061b \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0648\u0627\u0644\u062a\u062f\u0641\u0651\u0642"},{"location":"terms/client-server/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Client\u2013Server = \u0648\u0627\u062c\u0647\u0629 \u062a\u0637\u0644\u0628 \u0648\u062e\u0627\u062f\u0645 \u064a\u0644\u0628\u0651\u064a \u0639\u0628\u0631 \u0639\u0642\u062f \u0648\u0627\u0636\u062d\u0629. \u0635\u0645\u0651\u0645 \u0627\u0644\u0639\u0642\u0648\u062f \u0648\u0627\u0644\u0623\u0645\u0627\u0646 \u0628\u0639\u0646\u0627\u064a\u0629\u060c \u0648\u0623\u0636\u0641 \u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u062a\u0648\u0633\u0639\u0629 \u0644\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0623\u062f\u0627\u0621 \u0648\u0627\u0644\u0627\u0633\u062a\u0642\u0631\u0627\u0631.</p>"},{"location":"terms/code-editor/","title":"Code Editor","text":""},{"location":"terms/code-editor/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Code Editor \u2014 \u0645\u062d\u0631\u0651\u0631 \u0627\u0644\u0643\u0648\u062f (\u0645\u062d\u0631\u0651\u0631 \u0646\u0635 \u0645\u062e\u0635\u0651\u0635 \u0644\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0634\u064a\u0641\u0631\u0629).</p>"},{"location":"terms/code-editor/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u062f\u0627\u0629 \u062e\u0641\u064a\u0641\u0629 \u0644\u0643\u062a\u0627\u0628\u0629 \u0648\u062a\u062d\u0631\u064a\u0631 \u0627\u0644\u0634\u064a\u0641\u0631\u0629 \u0645\u0639 \u0645\u064a\u0632\u0627\u062a \u0645\u062b\u0644 \u062a\u0644\u0648\u064a\u0646 \u0627\u0644\u0635\u064a\u0627\u063a\u0629\u060c \u0625\u0643\u0645\u0627\u0644 \u062a\u0644\u0642\u0627\u0626\u064a \u0628\u0633\u064a\u0637\u060c \u0648\u0628\u062d\u062b/\u0627\u0633\u062a\u0628\u062f\u0627\u0644. \u0644\u0627 \u064a\u062f\u0645\u062c \u0639\u0627\u062f\u0629\u064b \u0627\u0644\u0628\u0646\u0627\u0621 \u0648\u0627\u0644\u062a\u0635\u062d\u064a\u062d \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 \u0628\u0639\u0645\u0642 \u0643\u0645\u0627 \u064a\u0641\u0639\u0644 \u0627\u0644\u0640 IDE\u060c \u0644\u0643\u0646\u0647 \u0623\u0633\u0631\u0639 \u0648\u0623\u062e\u0641.</p>"},{"location":"terms/code-editor/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0633\u0631\u064a\u0639\u0629 \u0648\u0627\u0644\u062a\u0646\u0642\u0651\u0644 \u0641\u064a \u0627\u0644\u0645\u0644\u0641\u0627\u062a.  </li> <li>\u064a\u0636\u064a\u0641 \u0630\u0643\u0627\u0621\u064b \u0628\u0627\u0644\u0646\u0651\u0650\u062a\u0627\u062c \u0639\u0628\u0631 \u0625\u0636\u0627\u0641\u0627\u062a (Extensions) \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.  </li> <li>\u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0633\u0643\u0631\u0628\u062a\u0627\u062a\u060c \u0627\u0644\u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629\u060c \u0648\u0627\u0644\u062a\u062d\u0631\u064a\u0631 \u0627\u0644\u0633\u0631\u064a\u0639.  </li> <li>\u064a\u0645\u0643\u0646 \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0634\u0628\u0647-IDE \u0628\u062a\u0631\u0643\u064a\u0628 \u0625\u0636\u0627\u0641\u0627\u062a \u0644\u0644\u063a\u0629/\u0627\u0644\u0628\u0646\u0627\u0621/\u0627\u0644\u062a\u0635\u062d\u064a\u062d.</li> </ul>"},{"location":"terms/code-editor/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u062f\u0641\u062a\u0631 \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0630\u0643\u064a \u0644\u0644\u0628\u0631\u0645\u062c\u0629: \u062e\u0641\u064a\u0641 \u0648\u0633\u0631\u064a\u0639\u060c \u064a\u0644\u0648\u0651\u0646 \u0644\u0643 \u0627\u0644\u062c\u064f\u0645\u0644 \u0627\u0644\u0645\u0647\u0645\u0629 \u0648\u064a\u0635\u062d\u0651\u062d \u0627\u0644\u0647\u0641\u0648\u0627\u062a\u060c \u0644\u0643\u0646 \u0648\u0631\u0634\u0629 \u0627\u0644\u062a\u0635\u0646\u064a\u0639 \u0627\u0644\u062b\u0642\u064a\u0644\u0629 (\u0628\u0646\u0627\u0621/\u062a\u0635\u062d\u064a\u062d/\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0645\u062f\u0645\u062c\u0629) \u0639\u0627\u062f\u0629 \u0641\u064a \u0627\u0644\u0640 IDE.</p>"},{"location":"terms/code-editor/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 \u062f\u0627\u062e\u0644 \u0645\u062d\u0631\u0651\u0631 \u0643\u0648\u062f","text":"C#<pre><code>// \u0627\u0643\u062a\u0628 \u0627\u0644\u0633\u0637\u0631 \u0627\u0644\u062a\u0627\u0644\u064a \u0648\u0644\u0627\u062d\u0638 \u062a\u0644\u0648\u064a\u0646 \u0627\u0644\u0635\u064a\u0627\u063a\u0629 \u0648 IntelliSense (\u0625\u0646 \u0643\u0627\u0646\u062a \u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0645\u0646\u0635\u0651\u0628\u0629)\nusing System;\n\nclass Program\n{\n    static void Main()\n    {\n        // \u062c\u0631\u0651\u0628 \u0645\u064a\u0632\u0629 \"\u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0645\u0624\u0634\u0631\u0627\u062a\" \u0644\u062a\u0639\u062f\u064a\u0644 \u0639\u062f\u0629 \u0623\u0633\u0637\u0631 \u0645\u0631\u0629 \u0648\u0627\u062d\u062f\u0629\u060c \u0623\u0648 \"Go to Definition\" \u0625\u0646 \u062a\u0648\u0641\u0651\u0631\n        Console.WriteLine(\"Hello from a Code Editor!\");\n    }\n}\n// \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0639\u0646\u062f \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0645\u0646 \u0627\u0644\u0637\u0631\u0641\u064a\u0629: Hello from a Code Editor!\n</code></pre>"},{"location":"terms/code-editor/#code-editor_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u062e\u062a\u064a\u0627\u0631/\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Code Editor","text":"<ul> <li>\u0627\u062e\u062a\u0631 \u0645\u062d\u0631\u0651\u0631\u064b\u0627 \u062e\u0641\u064a\u0641\u064b\u0627 \u0648\u0627\u0633\u0639 \u0627\u0644\u0625\u0636\u0627\u0641\u0627\u062a (\u0645\u062b\u0644 VS Code \u0623\u0648 Neovim \u0623\u0648 Sublime Text).  </li> <li>\u062b\u0628\u0651\u062a \u0625\u0636\u0627\u0641\u0627\u062a \u0627\u0644\u0644\u063a\u0629 (C#/C++/Python\u2026) \u0644\u062a\u0645\u064a\u064a\u0632 \u0627\u0644\u0635\u064a\u0627\u063a\u0629 \u0648 IntelliSense.  </li> <li>\u0623\u0636\u0641 Formatter/Linter \u0644\u062a\u0648\u062d\u064a\u062f \u0627\u0644\u0646\u0645\u0637 \u0648\u0627\u0644\u0643\u0634\u0641 \u0627\u0644\u0645\u0628\u0643\u0631 \u0639\u0646 \u0627\u0644\u0623\u062e\u0637\u0627\u0621.  </li> <li>\u0641\u0639\u0651\u0644 Git Integration (Diff/Commit/Branches) \u0645\u0628\u0627\u0634\u0631\u0629 \u0645\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062d\u0631\u0651\u0631.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Tasks/Build Commands \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0645\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062d\u0631\u0651\u0631 (\u0645\u062b\u0644\u0627\u064b <code>dotnet build</code>).  </li> <li>\u062e\u0635\u0651\u0635 \u0627\u062e\u062a\u0635\u0627\u0631\u0627\u062a \u0644\u0648\u062d\u0629 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0648Snippets \u0644\u0631\u0641\u0639 \u0627\u0644\u0625\u0646\u062a\u0627\u062c\u064a\u0629.</li> </ul>"},{"location":"terms/code-editor/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Code Editor \u062a\u062d\u0631\u064a\u0631 \u0646\u0635 \u0627\u0644\u0643\u0648\u062f \u0628\u0633\u0631\u0639\u0629 \u0648\u062e\u0650\u0641\u0651\u0629 \u064a\u062a\u0648\u0633\u0651\u0639 \u0639\u0628\u0631 \u0627\u0644\u0625\u0636\u0627\u0641\u0627\u062a\u061b \u0644\u064a\u0633 \u0628\u064a\u0626\u0629 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 IDE \u062a\u062d\u0631\u064a\u0631 + \u0628\u0646\u0627\u0621 + \u062a\u0635\u062d\u064a\u062d + \u0625\u062f\u0627\u0631\u0629 \u0645\u0634\u0631\u0648\u0639 \u062a\u0643\u0627\u0645\u0644 \u0639\u0645\u064a\u0642 \u0644\u0644\u0623\u062f\u0648\u0627\u062a (IntelliSense/Refactor/VCS/Tests) Debugger \u062a\u0646\u0641\u064a\u0630 \u062e\u0637\u0648\u0629 \u0628\u062e\u0637\u0648\u0629 \u0648\u0641\u062d\u0635 \u0627\u0644\u062d\u0627\u0644\u0629 \u0642\u062f \u064a\u0643\u0648\u0646 \u062c\u0632\u0621\u064b\u0627 \u0645\u0646 IDE \u0623\u0648 \u0625\u0636\u0627\u0641\u0629 \u0644\u0644\u0645\u062d\u0631\u0651\u0631 SDK \u0645\u062a\u0631\u062c\u0645\u0627\u062a \u0648\u0623\u062f\u0648\u0627\u062a \u0648\u0645\u0643\u062a\u0628\u0627\u062a \u062a\u0637\u0648\u064a\u0631 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0645\u0646 \u0627\u0644\u0645\u062d\u0631\u0651\u0631/IDE \u0623\u0648 \u0645\u0646 CLI\u061b \u0644\u064a\u0633 \u0623\u062f\u0627\u0629 \u062a\u062d\u0631\u064a\u0631"},{"location":"terms/code-editor/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Code Editor = \u0643\u062a\u0627\u0628\u0629 \u0633\u0631\u064a\u0639\u0629 \u0648\u062e\u0641\u064a\u0641\u0629 \u0644\u0644\u0634\u064a\u0641\u0631\u0629\u060c \u0645\u0639 \u0625\u0645\u0643\u0627\u0646\u0627\u062a \u062a\u062a\u0648\u0633\u0651\u0639 \u0625\u0636\u0627\u0641\u064a\u064b\u0627 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629. \u0625\u0646 \u0623\u0631\u062f\u062a \u062a\u0643\u0627\u0645\u0644 \u0627\u0644\u0628\u0646\u0627\u0621 \u0648\u0627\u0644\u062a\u0635\u062d\u064a\u062d \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0634\u0631\u0648\u0639\u060c \u0641\u0627\u0646\u062a\u0642\u0644 \u0625\u0644\u0649 IDE \u0623\u0648 \u0623\u0636\u0650\u0641 \u0645\u0627 \u064a\u0644\u0632\u0645 \u0645\u0646 \u0625\u0636\u0627\u0641\u0627\u062a.</p>"},{"location":"terms/composition/","title":"Composition","text":""},{"location":"terms/composition/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Composition \u2014 \u062a\u0631\u0643\u064a\u0628 (\u0628\u0646\u0627\u0621 \u0643\u0627\u0626\u0646 \u0643\u0628\u064a\u0631 \u0645\u0646 \u0643\u0627\u0626\u0646\u0627\u062a/\u0633\u0644\u0648\u0643\u064a\u0651\u0627\u062a \u0623\u0635\u063a\u0631 \u201chas-a\u201d).</p>"},{"location":"terms/composition/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0635\u0645\u0651\u0645 \u0643\u0627\u0626\u0646\u064b\u0627 \u0628\u0636\u0645\u0651 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0629 \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u0628\u062f\u0644 \u0648\u0631\u0627\u062b\u0629 \u0639\u0645\u064a\u0642\u0629. \u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u0645\u0631\u0648\u0646\u0629 \u0623\u0639\u0644\u0649\u060c \u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0633\u0647\u0644\u060c \u0648\u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u0633\u0644\u0648\u0643 \u062f\u0648\u0646 \u0643\u0633\u0631 \u0627\u0644\u0628\u0627\u0642\u064a.</p>"},{"location":"terms/composition/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0639\u0644\u0627\u0642\u0629: has-a (\u0627\u0644\u0633\u064a\u0627\u0631\u0629 \u062a\u0645\u0644\u0643 \u0645\u062d\u0631\u0651\u0643\u064b\u0627)\u060c \u0644\u0627 is-a.  </li> <li>\u0646\u062d\u0642\u0646 \u0633\u0644\u0648\u0643\u064a\u0627\u062a (\u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0627\u062a/\u0633\u064a\u0627\u0633\u0627\u062a) \u0643\u0627\u0639\u062a\u0645\u0627\u062f\u0627\u062a \u0639\u0628\u0631 DI.  </li> <li>\u064a\u0645\u0643\u0646 \u062a\u062c\u0645\u064a\u0639 \u0627\u0644\u0633\u0644\u0648\u0643 (Decorator/Strategy) \u0628\u062f\u0644 \u062a\u0648\u0627\u0631\u062b\u0647.</li> </ul>"},{"location":"terms/composition/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0645\u0643\u062a\u0628\u064a: \u062a\u0628\u062f\u0651\u0644 \u0628\u0637\u0627\u0642\u0629 \u0627\u0644\u0631\u0633\u0648\u0645\u064a\u0627\u062a \u0623\u0648 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0628\u062f\u0648\u0646 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0644\u0648\u062d\u0629 \u0627\u0644\u0623\u0645. \u0647\u0630\u0627 \u0647\u0648 \u0627\u0644\u062a\u0631\u0643\u064a\u0628: \u0623\u062c\u0632\u0627\u0621 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0641\u0643\u0651 \u0648\u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u062a\u0639\u0645\u0644 \u0645\u0639\u064b\u0627 \u0639\u0628\u0631 \u0645\u0646\u0627\u0641\u0630 \u0642\u064a\u0627\u0633\u064a\u0629.</p>"},{"location":"terms/composition/#c-strategy-decorator","title":"\u0645\u062b\u0627\u0644 C# \u2014 Strategy + Decorator (\u062a\u0631\u0643\u064a\u0628 \u0633\u0644\u0648\u0643 \u0628\u062f\u0644 \u0648\u0631\u0627\u062b\u0629)","text":"C#<pre><code>// \u06331) \"\u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629\" \u0627\u0644\u062a\u0633\u0639\u064a\u0631 \u2014 \u0633\u0644\u0648\u0643 \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644\npublic interface IPricingStrategy { decimal Final(decimal subtotal); }\n\npublic class StandardPricing : IPricingStrategy\n{\n    public decimal Final(decimal s) =&gt; s; // \u0628\u062f\u0648\u0646 \u062e\u0635\u0645\n}\n\npublic class HappyHourPricing : IPricingStrategy\n{\n    public decimal Final(decimal s) =&gt; decimal.Round(s * 0.80m, 2); // \u062e\u0635\u0645 20%\n}\n\n// \u06332) \"\u0645\u064f\u062e\u0637\u0650\u0631\" \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0645\u062f\u064a\u062f \u0639\u0628\u0631 \u0645\u064f\u0632\u064a\u0651\u0646 (Decorator)\npublic interface INotifier { void Send(string to, string msg); }\n\npublic class EmailNotifier : INotifier\n{\n    public void Send(string to, string msg) =&gt; Console.WriteLine($\"Email \u2192 {to}: {msg}\");\n}\n\npublic class SlackNotifierDecorator : INotifier\n{\n    private readonly INotifier _inner;\n    public SlackNotifierDecorator(INotifier inner) =&gt; _inner = inner;\n\n    public void Send(string to, string msg)\n    {\n        _inner.Send(to, msg);                             // \u0623\u0639\u0650\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0633\u0644\u0648\u0643 \u0627\u0644\u0645\u0631\u0643\u0651\u0628\n        Console.WriteLine($\"Slack \u2192 {to}: {msg}\");        // \u0623\u0636\u0650\u0641 \u0633\u0644\u0648\u0643\u064b\u0627 \u062c\u062f\u064a\u062f\u064b\u0627\n    }\n}\n\n// \u06333) \u062e\u062f\u0645\u0629 \u0623\u0639\u0645\u0627\u0644 \"\u062a\u064f\u0631\u064e\u0643\u0651\u0650\u0628\" \u0627\u0644\u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 + \u0627\u0644\u0645\u064f\u062e\u0637\u0650\u0631 \u0639\u0628\u0631 DI\npublic class OrderService\n{\n    private readonly IPricingStrategy _pricing;           // \u062a\u0631\u0643\u064a\u0628: has-a\n    private readonly INotifier _notifier;                 // \u062a\u0631\u0643\u064a\u0628: has-a\n    public OrderService(IPricingStrategy pricing, INotifier notifier)\n    { _pricing = pricing; _notifier = notifier; }\n\n    public decimal Checkout(string user, decimal subtotal)\n    {\n        var total = _pricing.Final(subtotal);             // \u0633\u0644\u0648\u0643 \u0645\u0631\u0643\u0651\u0628\n        _notifier.Send(user, $\"Your total = {total:C}\");\n        return total;\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        IPricingStrategy pricing = new HappyHourPricing();                      // \u0628\u062f\u0651\u0644\u0647\u0627 \u0641\u064a \u0623\u064a \u0648\u0642\u062a\n        INotifier notifier = new SlackNotifierDecorator(new EmailNotifier());   // \u0632\u064a\u0651\u0646 \u0628\u062f\u0648\u0646 \u0648\u0631\u0627\u062b\u0629\n        var svc = new OrderService(pricing, notifier);\n\n        var total = svc.Checkout(\"user@example.com\", 100m);\n        Console.WriteLine(total); // 80.00\n    }\n}\n</code></pre> <p>\u0644\u0645\u0627\u0630\u0627 \u062a\u0631\u0643\u064a\u0628\u061f \u0644\u0648 \u0627\u0633\u062a\u062e\u062f\u0645\u0646\u0627 \u0648\u0631\u0627\u062b\u0629 \u0645\u062b\u0644 <code>HappyHourOrderService : OrderService</code> \u0644\u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u062a\u0633\u0639\u064a\u0631\u060c \u0633\u0646\u064f\u0646\u0634\u0649\u0621 \u062a\u0641\u0631\u064a\u0639\u0627\u062a \u0643\u062b\u064a\u0631\u0629 \u0644\u0643\u0644 \u062d\u0627\u0644\u0629. \u0628\u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u0646\u0628\u062f\u0651\u0644 \u062c\u0632\u0621\u064b\u0627 \u0648\u0627\u062d\u062f\u064b\u0627 (<code>IPricingStrategy</code>) \u0648\u0646\u062d\u0635\u0644 \u0639\u0644\u0649 \u0645\u0631\u0648\u0646\u0629 \u0623\u0639\u0644\u0649.</p>"},{"location":"terms/composition/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u062a\u0631\u0643\u064a\u0628","text":"<ol> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0633\u0644\u0648\u0643\u064a\u0627\u062a \u0627\u0644\u0645\u062a\u063a\u064a\u0651\u0631\u0629 (\u062a\u0633\u0639\u064a\u0631\u060c \u0625\u0634\u0639\u0627\u0631\u060c \u062a\u062e\u0632\u064a\u0646\u2026) \u0648\u0636\u0639 \u0644\u0647\u0627 Interfaces.  </li> <li>\u062d\u0642\u0651\u0646\u0647\u0627 \u0639\u0628\u0631 Constructor DI \u0628\u062f\u0644 <code>new</code> \u062f\u0627\u062e\u0644 \u0627\u0644\u0635\u0646\u0641.  </li> <li>\u0644\u0627 \u062a\u062c\u0639\u0644 \u0627\u0644\u0635\u0646\u0641 \u064a\u0639\u0631\u0641 \u0646\u0648\u0639\u064b\u0627 \u0645\u0644\u0645\u0648\u0633\u064b\u0627\u061b \u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0639\u0642\u062f \u0641\u0642\u0637.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Decorator \u0644\u0625\u0636\u0627\u0641\u0629 \u0645\u064a\u0632\u0629 \u0628\u062f\u0648\u0646 \u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0623\u0635\u0644\u060c \u0648Strategy \u0644\u062a\u0628\u062f\u064a\u0644 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629.  </li> <li>\u0648\u0641\u0651\u0631 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0639\u0642\u062f (Contract Tests) \u0644\u0636\u0645\u0627\u0646 \u062a\u0648\u0627\u0641\u0642 \u0627\u0644\u0628\u062f\u0627\u0626\u0644.  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629: \u0643\u0644 \u0645\u0643\u0648\u0651\u0646 \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0648\u0627\u062d\u062f\u0629 (\u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0639\u0627\u0644\u064a\u0629).</li> </ol>"},{"location":"terms/composition/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u0644\u0645\u062c\u0631\u0651\u062f \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0643\u0648\u062f \u2192 \u062a\u0633\u0644\u0633\u0644 \u0647\u0634\u0651\u061b \u0631\u0643\u0651\u0628 \u0628\u062f\u0644\u064b\u0627 \u0645\u0646 \u0630\u0644\u0643.  </li> <li>\u0643\u0627\u0626\u0646 \u062a\u062c\u0645\u064a\u0639\u064a \u0645\u0646\u062a\u0641\u062e (God Object) \u064a\u062c\u0645\u0639 \u0643\u0644 \u0634\u064a\u0621.  </li> <li>\u062a\u0639\u0631\u064a\u0629 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0628\u062f\u0644 \u0625\u062e\u0641\u0627\u0626\u0647\u0627 \u062e\u0644\u0641 \u0648\u0627\u062c\u0647\u0627\u062a.  </li> <li>\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u0627\u062a \u064a\u062f\u0648\u064a\u064b\u0627 \u062f\u0627\u062e\u0644 \u0627\u0644\u0635\u0646\u0641 (<code>new</code>) \u2192 \u062a\u0642\u064a\u064a\u062f \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u0628\u062f\u064a\u0644.  </li> <li>\u062d\u0644\u0642\u0627\u062a \u0627\u0639\u062a\u0645\u0627\u062f \u0628\u064a\u0646 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a (A \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 B \u0648B \u0639\u0644\u0649 A).</li> </ul>"},{"location":"terms/composition/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Composition \u0628\u0646\u0627\u0621 \u0633\u0644\u0648\u0643 \u0645\u0646 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0651\u0629 (has-a) \u064a\u0641\u0636\u0651\u064e\u0644 \u0639\u0644\u0649 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u0644\u0644\u062a\u0628\u062f\u064a\u0644 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Inheritance \u062a\u062e\u0635\u0635 \u0639\u0628\u0631 \u0627\u0634\u062a\u0642\u0627\u0642 (is-a) \u0642\u0648\u064a \u0644\u0643\u0646 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0628\u062d\u0630\u0631\u061b \u0642\u062f \u064a\u0642\u064a\u0651\u062f Interface \u0639\u0642\u062f \u0644\u0644\u0633\u0644\u0648\u0643 \u064a\u0645\u0643\u0651\u0646 \u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u0648\u062f\u064a/\u0627\u062e\u062a\u0628\u0627\u0631 Strategy Pattern \u062a\u0628\u062f\u064a\u0644 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u062a\u0637\u0628\u064a\u0642 \u0639\u0645\u0644\u064a \u0644\u0644\u062a\u0631\u0643\u064a\u0628 Decorator Pattern \u0625\u0636\u0627\u0641\u0629 \u0645\u064a\u0632\u0629 \u0628\u062f\u0648\u0646 \u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0623\u0635\u0644 \u062a\u062c\u0645\u064a\u0639 \u0633\u0644\u0648\u0643 \u0628\u0634\u0643\u0644 \u0637\u0628\u0642\u0627\u062a"},{"location":"terms/composition/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u062a\u0631\u0643\u064a\u0628 = \u201c\u0627\u062c\u0645\u0639 \u0642\u0637\u0639\u064b\u0627 \u0635\u063a\u064a\u0631\u0629 \u0628\u0648\u0627\u062c\u0647\u0627\u062a \u0648\u0627\u0636\u062d\u0629 \u0644\u062a\u0628\u0646\u064a \u0633\u0644\u0648\u0643\u064b\u0627 \u0643\u0628\u064a\u0631\u064b\u0627\u201d. \u0627\u0641\u0635\u0644 \u0645\u0627 \u064a\u062a\u063a\u064a\u0651\u0631 \u0641\u064a \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644\u060c \u0648\u0645\u0631\u0651\u0631\u0647\u0627 \u0639\u0628\u0631 DI\u060c \u0648\u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0638\u0627\u0645 \u0645\u0631\u0646\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0648\u0633\u0647\u0644 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0628\u0644\u0627 \u0641\u0631\u0648\u0639 \u0648\u0631\u0627\u062b\u0629 \u0645\u062a\u0634\u0627\u0628\u0643\u0629.</p>"},{"location":"terms/consume-api/","title":"Consume API (Kafka)","text":""},{"location":"terms/consume-api/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Consume API \u2014 \u0648\u0627\u062c\u0647\u0629 \u201c\u0627\u0633\u062a\u0647\u0644\u0627\u0643/\u0642\u0631\u0627\u0621\u0629\u201d \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0645\u0646 \u0645\u0648\u0636\u0648\u0639\u0627\u062a (Topics) \u0643\u0627\u0641\u0643\u0627 \u0639\u0628\u0631 \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0645\u0633\u062a\u0647\u0644\u0643\u064a\u0646.</p>"},{"location":"terms/consume-api/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u064a\u0642\u0631\u0623 \u0631\u0633\u0627\u0626\u0644 \u0645\u0646 Partitions\u060c \u064a\u062f\u064a\u0631 Offsets \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0623\u0648 \u064a\u062f\u0648\u064a\u064b\u0627\u060c \u064a\u062f\u0639\u0645 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0648\u0627\u0632\u0646 (Rebalance)\u060c \u0648\u0639\u0632\u0644 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a <code>read_committed</code> \u0639\u0646\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0646\u062a\u062c\u064a\u0646 \u0628\u0645\u0639\u0627\u0645\u0644\u0627\u062a.</p>"},{"location":"terms/consume-api/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Consumer Group: \u0643\u0644 \u0631\u0633\u0627\u0644\u0629 \u062a\u064f\u0639\u0627\u0644\u064e\u062c \u0645\u0631\u0651\u0629 \u0648\u0627\u062d\u062f\u0629 \u0644\u0643\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 (\u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0623\u0642\u0633\u0627\u0645 \u0639\u0644\u0649 \u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643\u064a\u0646).  </li> <li>Offset: \u0645\u0648\u0642\u0639\u0643 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645. \u0625\u0645\u0651\u0627 Auto-Commit \u0623\u0648 Manual Commit \u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629.  </li> <li>\u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0645\u0636\u0645\u0648\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645 \u0641\u0642\u0637.  </li> <li>Auto Offset Reset \u0639\u0646\u062f \u0639\u062f\u0645 \u0648\u062c\u0648\u062f Offset \u0645\u062d\u0641\u0648\u0638: <code>earliest</code> \u0623\u0648 <code>latest</code>.  </li> <li>Isolation Level: <code>read_committed</code> \u0644\u062a\u062c\u0627\u0647\u0644 \u0631\u0633\u0627\u0626\u0644 \u0645\u064f\u0644\u063a\u0627\u0629 \u0645\u0646 \u0645\u0646\u062a\u062c\u064a\u0646 \u0628\u0645\u0639\u0627\u0645\u0644\u0627\u062a.</li> </ul>"},{"location":"terms/consume-api/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0637\u0627\u0628\u0648\u0631 \u0635\u0646\u0627\u062f\u064a\u0642 \u0641\u064a \u0645\u0633\u062a\u0648\u062f\u0639 (Partitions). \u0641\u0631\u064a\u0642 \u0639\u0645\u0651\u0627\u0644 (Consumer Group) \u064a\u0642\u062a\u0633\u0645 \u0627\u0644\u0635\u0646\u0627\u062f\u064a\u0642. \u0643\u0644 \u0639\u0627\u0645\u0644 \u064a\u062a\u0642\u062f\u0651\u0645 \u0628\u0645\u0624\u0634\u0651\u0631 (Offset). \u0644\u0627 \u062a\u064f\u0639\u0644\u0646 \u0627\u0646\u062a\u0647\u0627\u0621 \u0627\u0644\u0635\u0646\u062f\u0648\u0642 \u062d\u062a\u0649 \u062a\u064f\u0646\u0647\u064a \u0641\u0631\u0632\u0647 (Manual Commit).</p>"},{"location":"terms/consume-api/#c-manual-commit-dlt-read_committed","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0645\u0633\u062a\u0647\u0644\u0643 \u0645\u0648\u062b\u0648\u0642 (Manual Commit + DLT \u0627\u062e\u062a\u064a\u0627\u0631\u064a + read_committed)","text":"C#<pre><code>// .NET 8/9 \u2014 dotnet add package Confluent.Kafka\nusing System;\nusing System.Threading;\nusing Confluent.Kafka;\n\nclass ConsumerDemo\n{\n    static void Main()\n    {\n        var topic = \"orders\";\n        var dlt   = \"orders.DLT\"; // \u0645\u0648\u0636\u0648\u0639 \u0623\u062e\u0637\u0627\u0621 \u0627\u062e\u062a\u064a\u0627\u0631\u064a (Dead-Letter Topic)\n\n        var config = new ConsumerConfig\n        {\n            BootstrapServers = \"localhost:9092\",\n            GroupId = \"orders-workers\",\n            EnableAutoCommit = false,                   // \u0633\u0646\u0639\u062a\u0645\u062f \u0639\u0644\u0649 Manual Commit\n            AutoOffsetReset = AutoOffsetReset.Earliest,\n            // \u0632\u0645\u0646\u064a\u0627\u062a \u0645\u0647\u0645\u0629:\n            SessionTimeoutMs = 10000,                   // \u0646\u0628\u0636\u0627\u062a \u062d\u064a\u0627\u0629\n            MaxPollIntervalMs = 300000,                 // \u0645\u0647\u0644\u0629 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0642\u0628\u0644 \u0627\u0639\u062a\u0628\u0627\u0631\u0643 \u0645\u062a\u062c\u0645\u0651\u062f\u064b\u0627\n            // \u0641\u064a \u062d\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Producer Transactions:\n            IsolationLevel = IsolationLevel.ReadCommitted\n            // \u0625\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 \u0625\u0639\u0627\u062f\u0629 \u062a\u0648\u0627\u0632\u0646 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \"cooperative-sticky\" \u0645\u062f\u0639\u0648\u0645\u0629 \u0641\u064a \u0627\u0644\u0648\u0633\u0637\u0627\u0621 \u0627\u0644\u062d\u062f\u064a\u062b\u064a\u0646\n        };\n\n        using var consumer = new ConsumerBuilder&lt;string, string&gt;(config)\n            .SetErrorHandler((c, e) =&gt; Console.Error.WriteLine($\"[ERR] {e.Reason}\"))\n            .SetPartitionsAssignedHandler((c, parts) =&gt;\n            {\n                Console.WriteLine($\"[ASSIGN] {string.Join(\", \", parts)}\");\n                // \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 c.Assign(parts) \u064a\u062f\u0648\u064a\u064b\u0627 \u0644\u062a\u062e\u0635\u064a\u0635 \u0645\u062e\u0635\u0635\n            })\n            .SetPartitionsRevokedHandler((c, parts) =&gt;\n            {\n                Console.WriteLine($\"[REVOKE] {string.Join(\", \", parts)}\");\n                // \u0627\u062d\u0631\u0635 \u0639\u0644\u0649 \u0625\u0646\u0647\u0627\u0621 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u062d\u0627\u0644\u064a\u0629 \u0642\u0628\u0644 \u0627\u0644\u0631\u0641\u0636\n            })\n            .Build();\n\n        consumer.Subscribe(topic);\n\n        using var cts = new CancellationTokenSource();\n        Console.CancelKeyPress += (_, e) =&gt; { e.Cancel = true; cts.Cancel(); };\n\n        // \u0645\u0646\u062a\u0650\u062c \u0627\u062e\u062a\u064a\u0627\u0631\u064a \u0644\u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0641\u0627\u0633\u062f\u0629 \u0625\u0644\u0649 DLT\n        using var dltProducer = new ProducerBuilder&lt;string, string&gt;(new ProducerConfig { BootstrapServers = \"localhost:9092\", Acks = Acks.All }).Build();\n\n        Console.WriteLine(\"Consuming\u2026 press Ctrl+C to stop.\");\n        try\n        {\n            while (!cts.IsCancellationRequested)\n            {\n                var cr = consumer.Consume(cts.Token); // \u064a\u0633\u062d\u0628 \u062f\u0641\u0639\u0629 \u0648\u0627\u062d\u062f\u0629\n                try\n                {\n                    // === \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0641\u0639\u0644\u064a\u0629 ===\n                    Console.WriteLine($\"[{cr.TopicPartitionOffset}] key={cr.Message.Key} val={cr.Message.Value}\");\n\n                    // \u0645\u062b\u0627\u0644 \u0627\u0644\u062a\u062d\u0642\u0642\n                    if (string.IsNullOrWhiteSpace(cr.Message.Value))\n                        throw new InvalidOperationException(\"empty_payload\");\n\n                    // TODO: \u0646\u0641\u0651\u0630 \u0645\u0646\u0637\u0642\u0643 (DB/HTTP). \u0627\u062c\u0639\u0644\u0647\u0627 \"idempotent\" \u0639\u0628\u0631 \u0645\u0641\u062a\u0627\u062d \u0641\u0631\u064a\u062f.\n                    // ========\n\n                    consumer.Commit(cr); // \u0623\u0639\u0644\u0646 \u0627\u0644\u0646\u062c\u0627\u062d (\u064a\u062a\u0642\u062f\u0651\u0645 \u0627\u0644\u0640 Offset)\n                }\n                catch (Exception ex)\n                {\n                    Console.Error.WriteLine($\"[PROCESS-ERR] {ex.Message}\");\n\n                    // \u0633\u064a\u0627\u0633\u0629 \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0623\u062e\u0637\u0627\u0621:\n                    // 1) \u0623\u0631\u0633\u0644 \u0625\u0644\u0649 DLT \u062b\u0645 \u062a\u062e\u0637\u0651\u064e \u0627\u0644\u0631\u0633\u0627\u0644\u0629:\n                    try\n                    {\n                        dltProducer.Produce(dlt, new Message&lt;string, string&gt; {\n                            Key = cr.Message.Key,\n                            Value = cr.Message.Value,\n                            Headers = new Headers {\n                                { \"origin-topic\", System.Text.Encoding.UTF8.GetBytes(cr.Topic) },\n                                { \"origin-tpo\",   System.Text.Encoding.UTF8.GetBytes(cr.TopicPartitionOffset.ToString()) },\n                                { \"error\",        System.Text.Encoding.UTF8.GetBytes(ex.Message) }\n                            }\n                        });\n                        dltProducer.Flush(TimeSpan.FromSeconds(5));\n                        consumer.Commit(cr); // \u062a\u062e\u0637\u0651 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0628\u0639\u062f \u0625\u0631\u0633\u0627\u0644\u0647\u0627 \u0644\u0644\u0640 DLT\n                    }\n                    catch (Exception dltEx)\n                    {\n                        Console.Error.WriteLine($\"[DLT-ERR] {dltEx.Message}\");\n                        // 2) \u0623\u0648: \u0644\u0627 \u062a\u064f\u0643\u0645\u0650\u062a \u2192 \u0633\u062a\u064f\u0639\u0627\u062f \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0628\u0639\u062f \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0648\u0627\u0632\u0646/\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644\n                        // \u064a\u0645\u0643\u0646 \u0623\u064a\u0636\u064b\u0627 Seek \u0644\u062a\u062c\u0627\u0648\u0632\u0647\u0627 \u064a\u062f\u0648\u064a\u064b\u0627 \u0628\u0639\u062f \u062a\u0633\u062c\u064a\u0644\u0647\u0627.\n                    }\n                }\n            }\n        }\n        catch (OperationCanceledException) { }\n        finally\n        {\n            consumer.Close(); // \u064a\u063a\u0644\u0642 \u0628\u0623\u0645\u0627\u0646 \u0648\u064a\u064f\u0644\u062a\u0642\u0637 offsets \u0627\u0644\u0645\u0644\u062a\u0632\u0645 \u0628\u0647\u0627\n        }\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - Manual Commit \u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u064a\u062d\u0642\u0642 At-Least-Once \u0628\u0623\u0645\u0627\u0646. - \u0644\u0640 Exactly-Once \u0645\u0646 \u0637\u0631\u0641\u0643: \u0627\u062c\u0639\u0644 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 Idempotent (\u0645\u062b\u0644\u0627\u064b \u0645\u0641\u062a\u0627\u062d \u0641\u0631\u064a\u062f + Upsert) \u0623\u0648 \u0646\u0645\u0637 Outbox. - \u0639\u0646\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0646\u062a\u062c\u064a\u0646 \u0628\u0645\u0639\u0627\u0645\u0644\u0627\u062a\u060c \u0627\u0636\u0628\u0637 <code>IsolationLevel=read_committed</code> \u0644\u062a\u062c\u0627\u0647\u0644 \u0645\u0627 \u0623\u064f\u0644\u063a\u064a.</p>"},{"location":"terms/consume-api/#consume-api","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0636\u0628\u0637 Consume API \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>Manual Commit \u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u062d\u0642\u064a\u0642\u064a. \u0644\u0627 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 <code>EnableAutoCommit</code> \u0644\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u062d\u0631\u062c\u0629.  </li> <li>\u0627\u0636\u0628\u0637 <code>max.poll.interval.ms</code> \u0648\u0641\u0642 \u0623\u0633\u0648\u0623 \u0632\u0645\u0646 \u0645\u0639\u0627\u0644\u062c\u0629\u061b \u0648\u0625\u0644\u0627 \u0633\u064a\u0639\u062a\u0628\u0631\u0643 \u0627\u0644\u0643\u0644\u0627\u0633\u062a\u0631 \u0645\u062a\u0648\u0642\u0651\u0641\u064b\u0627 \u0648\u064a\u0639\u064a\u062f \u0627\u0644\u062a\u0648\u0627\u0632\u0646.  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 Idempotent (\u0645\u0641\u062a\u0627\u062d \u0639\u0645\u0644 \u0641\u0631\u064a\u062f\u060c Upsert\u060c \u0623\u0648 Outbox) \u0644\u062a\u062c\u0646\u0628 \u0627\u0644\u062a\u0643\u0631\u0627\u0631\u0627\u062a.  </li> <li>\u0639\u0627\u0644\u062c \u0627\u0644\u0623\u062e\u0637\u0627\u0621: DLT \u0644\u0631\u0633\u0627\u0626\u0644 \u201c\u0633\u0645\u0651\u064a\u0629\u201d\u060c \u0645\u0639 \u0642\u064a\u0627\u0633\u0627\u062a \u0648\u0646\u0650\u0633\u064e\u0628 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629.  </li> <li>\u0631\u0627\u0642\u0628 Lag (\u0627\u0644\u0641\u0627\u0631\u0642 \u0628\u064a\u0646 \u0622\u062e\u0631 Offset \u0648\u0645\u0648\u0636\u0639\u0643)\u060c \u0648\u0633\u062c\u0651\u0644 <code>TopicPartitionOffset</code> \u0641\u064a \u0643\u0644 \u062e\u0637\u0648\u0629.  </li> <li>\u0627\u062e\u062a\u0631 <code>auto.offset.reset</code> \u0628\u0639\u0646\u0627\u064a\u0629 \u0639\u0646\u062f \u0623\u0648\u0644 \u062a\u0634\u063a\u064a\u0644 (<code>earliest</code> \u0644\u062a\u0627\u0631\u064a\u062e \u0642\u062f\u064a\u0645\u060c <code>latest</code> \u0644\u0644\u0625\u062d\u062f\u0627\u062b\u064a\u0627\u062a \u0627\u0644\u0623\u062d\u062f\u062b \u0641\u0642\u0637).  </li> <li>\u0644\u0648 \u0643\u0627\u0646 \u0627\u0644\u0645\u0646\u062a\u062c Transactional: \u0627\u0633\u062a\u062e\u062f\u0645 <code>read_committed</code>\u060c \u0648\u0625\u0644\u0627 <code>read_uncommitted</code> \u0623\u0633\u0631\u0639 \u0644\u0643\u0646\u0647 \u064a\u0631\u0649 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0645\u0644\u063a\u0627\u0629.  </li> <li>\u0627\u0636\u0628\u0637 \u0627\u0644\u062a\u0648\u0627\u0632\u064a \u0639\u0628\u0631 \u0632\u064a\u0627\u062f\u0629 \u0639\u062f\u062f \u0627\u0644\u0623\u0642\u0633\u0627\u0645 \u0623\u0648 \u0639\u062f\u062f \u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643\u064a\u0646 \u0641\u064a \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 (\u0645\u0633\u062a\u0647\u0644\u0643 \u0648\u0627\u062d\u062f \u0644\u0643\u0644 \u0642\u0633\u0645 \u0643\u062d\u062f \u0623\u0642\u0635\u0649).</li> </ol>"},{"location":"terms/consume-api/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Auto-Commit \u062b\u0645 \u0641\u0642\u062f\u0627\u0646 \u0631\u0633\u0627\u0626\u0644 \u0639\u0646\u062f \u0627\u0644\u0641\u0634\u0644 \u0628\u064a\u0646 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0648\u0627\u0644\u0627\u0644\u062a\u0632\u0627\u0645.  </li> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u062a\u0631\u062a\u064a\u0628 \u0639\u0627\u0644\u0645\u064a \u0639\u0628\u0631 \u0627\u0644\u0623\u0642\u0633\u0627\u0645 (\u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645 \u0641\u0642\u0637).  </li> <li>\u0645\u0647\u0644\u0629 \u0645\u0639\u0627\u0644\u062c\u0629 \u0623\u0637\u0648\u0644 \u0645\u0646 <code>max.poll.interval.ms</code> \u2192 Rebalance \u0645\u0641\u0627\u062c\u0626 \u0648\u0641\u0642\u062f \u062a\u0642\u062f\u0651\u0645 \u0639\u0645\u0644 \u0644\u0645 \u064a\u064f\u0643\u0645\u064e\u062a.  </li> <li>\u062a\u062c\u0627\u0647\u0644 DLT \u0623\u0648 \u062a\u0633\u062c\u064a\u0644 \u0633\u0628\u0628 \u0627\u0644\u0641\u0634\u0644 \u2192 \u201c\u0631\u0633\u0627\u0626\u0644 \u0639\u0627\u0644\u0642\u0629\u201d \u062a\u062a\u0643\u0631\u0651\u0631 \u0628\u0644\u0627 \u0646\u0647\u0627\u064a\u0629.  </li> <li>\u0639\u062f\u0645 \u0625\u063a\u0644\u0627\u0642 \u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643 \u0628\u0640 <code>Close()</code> \u2192 \u0636\u064a\u0627\u0639 \u0622\u062e\u0631 \u0627\u0644\u0627\u0644\u062a\u0632\u0627\u0645\u0627\u062a.  </li> <li>\u062a\u0641\u0639\u064a\u0644 <code>read_uncommitted</code> \u0645\u0639 \u0645\u0646\u062a\u062c\u064a\u0646 \u0628\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u062b\u0645 \u0627\u0644\u0627\u0633\u062a\u063a\u0631\u0627\u0628 \u0645\u0646 \u201c\u0627\u062e\u062a\u0641\u0627\u0621\u201d \u0631\u0633\u0627\u0626\u0644 (\u0643\u0627\u0646\u062a \u0645\u064f\u0644\u063a\u0627\u0629).</li> </ul>"},{"location":"terms/consume-api/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Consume API \u0642\u0631\u0627\u0621\u0629 \u0631\u0633\u0627\u0626\u0644 \u0648\u0625\u062f\u0627\u0631\u0629 Offsets \u0636\u0645\u0646 \u0645\u062c\u0645\u0648\u0639\u0629 Manual Commit \u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 Produce-API \u0646\u0634\u0631 \u0631\u0633\u0627\u0626\u0644 \u0625\u0644\u0649 Topic/Partition <code>acks</code>\u060c Key\u2192Partition\u060c Idempotence/Transactions"},{"location":"terms/consume-api/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Consume API = \u0642\u0631\u0627\u0621\u0629 \u0645\u0646\u0638\u0651\u0645\u0629 \u0639\u0628\u0631 Consumer Groups \u0645\u0639 \u062a\u062d\u0643\u0651\u0645 \u062f\u0642\u064a\u0642 \u0641\u064a Offsets. \u0627\u0639\u062a\u0645\u062f Manual Commit\u060c \u0627\u062c\u0639\u0644 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 Idempotent\u060c \u0623\u0636\u0641 DLT\u060c \u0648\u0627\u0636\u0628\u0637 \u0632\u0645\u0646\u064a\u0627\u062a/\u0639\u0632\u0644 \u0645\u0646\u0627\u0633\u0628\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0645\u0648\u062b\u0648\u0642\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0651\u0639\u060c \u0648\u0628\u0623\u0642\u0644 \u0641\u0642\u062f \u0648\u062a\u0643\u0631\u0627\u0631 \u0645\u0645\u0643\u0646. </p>"},{"location":"terms/container/","title":"Container","text":""},{"location":"terms/container/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Container \u2014 \u062d\u0627\u0648\u064a\u0629 (\u0639\u0632\u0644 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0634\u063a\u064a\u0644 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0628\u062e\u0641\u0651\u0629).</p>"},{"location":"terms/container/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u064a\u0626\u0629 \u062a\u0634\u063a\u064a\u0644 \u0645\u0639\u0632\u0648\u0644\u0629 \u062a\u0634\u0627\u0631\u0643 \u0646\u0648\u0627\u0629 \u0627\u0644\u0646\u0638\u0627\u0645\u060c \u0648\u062a\u063a\u0644\u0641 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 \u062a\u0628\u0639\u064a\u0627\u062a\u0647 \u062f\u0627\u062e\u0644 \u0635\u0648\u0631\u0629 (Image). \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 Namespaces \u0648cgroups (\u0644\u064a\u0646\u0643\u0633) \u0648\u062a\u064f\u062f\u0627\u0631 \u0639\u0628\u0631 Docker/Containerd \u0648\u062a\u064f\u0648\u0632\u0651\u064e\u0639 \u0628\u0635\u064a\u063a OCI.</p>"},{"location":"terms/container/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Image = \u0642\u0627\u0644\u0628 \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637.  </li> <li>Container = \u0646\u0633\u062e\u0629 \u062d\u064a\u0651\u0629 \u0645\u0646 \u0627\u0644\u0635\u0648\u0631\u0629 \u0645\u0639 \u0637\u0628\u0642\u0629 \u0643\u062a\u0627\u0628\u0629 \u0635\u063a\u064a\u0631\u0629.  </li> <li>\u062a\u0634\u0627\u0631\u0643 \u0627\u0644\u0646\u0648\u0627\u0629 \u0644\u0643\u0646 \u062a\u0641\u0635\u0644 \u0627\u0644\u0645\u0644\u0641\u0627\u062a/\u0627\u0644\u0634\u0628\u0643\u0629/\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a.  </li> <li>\u062a\u064f\u0642\u0644\u0651\u0635 \u201c\u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062c\u0647\u0627\u0632\u064a \u0641\u0642\u0637\u201d\u061b \u0646\u0641\u0633 \u0627\u0644\u0628\u064a\u0626\u0629 \u0623\u064a\u0646\u0645\u0627 \u0634\u063a\u0651\u0644\u062a\u0647\u0627.  </li> <li>\u062a\u064f\u0646\u0627\u0633\u0628 \u0627\u0644\u0646\u0634\u0631 \u0627\u0644\u0633\u062d\u0627\u0628\u064a \u0648\u0627\u0644\u062a\u0648\u0633\u0651\u0639 \u0648\u0627\u0644\u0623\u062a\u0645\u062a\u0629.</li> </ul>"},{"location":"terms/container/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0639\u0644\u0628\u0629 \u0637\u0639\u0627\u0645 \u0645\u062d\u0643\u0645\u0629. \u062a\u0636\u0639 \u0648\u062c\u0628\u062a\u0643 (\u0627\u0644\u062a\u0637\u0628\u064a\u0642 + \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a) \u062f\u0627\u062e\u0644 \u0627\u0644\u0639\u0644\u0628\u0629\u060c \u0641\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0641\u0633 \u0627\u0644\u0637\u0639\u0645 \u0623\u064a\u0646\u0645\u0627 \u0623\u062e\u0630\u062a\u0647\u0627 (\u062c\u0647\u0627\u0632 \u0645\u0637\u0648\u0651\u0631\u060c \u062e\u0627\u062f\u0645\u060c \u0633\u062d\u0627\u0628\u0629).</p>"},{"location":"terms/container/#aspnet-core-dockerfile","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u2014 ASP.NET Core \u062f\u0627\u062e\u0644 \u062d\u0627\u0648\u064a\u0629 (\u0643\u0648\u062f + Dockerfile)","text":""},{"location":"terms/container/#1-c-minimal-api","title":"1) \u062a\u0637\u0628\u064a\u0642 C# \u0628\u0633\u064a\u0637 (Minimal API)","text":"C#<pre><code>// Program.cs  (.NET 8/9)\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u0627\u0644\u0645\u0646\u0641\u0630 \u062a\u064f\u0645\u0631\u0651\u0631\u0647 \u0645\u0646\u0635\u0651\u0627\u062a PaaS \u0639\u0627\u062f\u0629\u064b \u0639\u0628\u0631 PORT\nif (int.TryParse(Environment.GetEnvironmentVariable(\"PORT\"), out var port))\n    builder.WebHost.ConfigureKestrel(o =&gt; o.ListenAnyIP(port));\n\nbuilder.Services.AddHealthChecks();\n\nvar app = builder.Build();\n\napp.MapGet(\"/\", () =&gt; Results.Ok(new { msg = \"Hello from container\", at = DateTime.UtcNow }));\napp.MapHealthChecks(\"/healthz\");\n\napp.Run();\n</code></pre>"},{"location":"terms/container/#2-dockerfile","title":"2) Dockerfile (\u0628\u0646\u0627\u0621 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0645\u0631\u0627\u062d\u0644 \u2014 \u0623\u0635\u063a\u0631 \u062d\u062c\u0645\u064b\u0627)","text":"Docker<pre><code># \u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0628\u0646\u0627\u0621\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY *.csproj ./\nRUN dotnet restore\nCOPY . .\nRUN dotnet publish -c Release -o /app /p:PublishSingleFile=true /p:PublishTrimmed=true\n\n# \u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u2014 \u0635\u0648\u0631\u0629 \u062e\u0641\u064a\u0641\u0629\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final\nWORKDIR /app\nCOPY --from=build /app ./\nENV ASPNETCORE_URLS=http://+:8080\nEXPOSE 8080\n# (\u0635\u0648\u0631 ASP.NET \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u062a\u0639\u0645\u0644 \u0643\u0645\u0633\u062a\u062e\u062f\u0645 \u063a\u064a\u0631-\u062c\u0630\u0631 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627\u060c \u0644\u0644\u062a\u0623\u0643\u064a\u062f:)\nUSER app\nENTRYPOINT [\"./Program\"]\n</code></pre>"},{"location":"terms/container/#3","title":"3) \u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u062a\u0634\u063a\u064a\u0644","text":"Bash<pre><code># \u0628\u0646\u0627\u0621 \u0627\u0644\u0635\u0648\u0631\u0629\ndocker build -t demo-api:latest .\n\n# \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u062d\u0627\u0648\u064a\u0629 (\u0645\u0646\u0641\u0630\u060c \u0645\u062a\u063a\u064a\u0631 \u0628\u064a\u0626\u0629\u060c \u0645\u062c\u0644\u062f \u0628\u064a\u0627\u0646\u0627\u062a)\ndocker run --rm -p 8080:8080 -e PORT=8080 --name demo demo-api:latest\n\n# \u0627\u062e\u062a\u0628\u0627\u0631\ncurl http://localhost:8080/\ncurl -f http://localhost:8080/healthz &amp;&amp; echo \"healthy\"\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u062a\u0636\u0639 \u062a\u0637\u0628\u064a\u0642\u0643 \u062f\u0627\u062e\u0644 Image \u0645\u0648\u062d\u0651\u062f\u0629. \u062a\u0634\u063a\u0651\u0644 Container \u0642\u0627\u0628\u0644\u064b\u0627 \u0644\u0644\u062a\u0643\u0631\u0627\u0631 \u0641\u064a \u0623\u064a \u0645\u0643\u0627\u0646.</p>"},{"location":"terms/container/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a","text":"<ul> <li>\u0635\u0645\u0651\u0645 \u0635\u0648\u0631\u0629 \u0635\u063a\u064a\u0631\u0629: \u0628\u0646\u0627\u0621 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0645\u0631\u0627\u062d\u0644\u060c \u062d\u0630\u0641 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0627\u0644\u0645\u0624\u0642\u062a\u0629.  </li> <li>\u0627\u0636\u0628\u0637 \u0627\u0644\u0635\u062d\u0629 (<code>/healthz</code>) \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0641\u064a \u0627\u0644\u0645\u0648\u0627\u0632\u0650\u0646/\u0627\u0644\u0623\u0648\u0631\u0643\u0633\u062a\u0631\u0627\u062a\u0648\u0631.  </li> <li>\u0639\u0627\u0645\u0650\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u062d\u0627\u0648\u064a\u0629 \u0643\u0640 \u0639\u0627\u0628\u0631\u061b \u0627\u0633\u062a\u062e\u062f\u0645 Volumes/DB/Object Storage \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062f\u0627\u0626\u0645\u0629.  </li> <li>\u062d\u062f\u0651\u0650\u062f \u0645\u0648\u0627\u0631\u062f (<code>--memory/--cpus</code>) \u0648\u062a\u0627\u0628\u0639 \u0627\u0644\u0645\u0642\u0627\u064a\u064a\u0633 (CPU/RAM/GC).  </li> <li>\u0623\u0636\u0650\u0641 \u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a \u0628\u064a\u0626\u0629 \u0644\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a (\u0644\u0627 \u0623\u0633\u0631\u0627\u0631 \u0641\u064a \u0627\u0644\u0635\u0648\u0631\u0629).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 .dockerignore \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062d\u062c\u0645.  </li> <li>\u0648\u0642\u0651\u0650\u0639 \u0627\u0644\u0635\u0648\u0631 \u0648\u0627\u0641\u062d\u0635 \u0627\u0644\u062b\u063a\u0631\u0627\u062a (SLSA/Sign/Scanner).</li> </ul>"},{"location":"terms/container/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0625\u0644\u0649 \u0646\u0638\u0627\u0645 \u0645\u0644\u0641\u0627\u062a \u0627\u0644\u062d\u0627\u0648\u064a\u0629 \u0643\u0623\u0646\u0647 \u062f\u0627\u0626\u0645.  </li> <li>\u0628\u0646\u0627\u0621 \u0635\u0648\u0631\u0629 \u0636\u062e\u0645\u0629 (\u0646\u0633\u062e \u0643\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639\u060c \u0639\u062f\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 restore/publish \u0628\u0634\u0643\u0644 \u0630\u0643\u064a).  </li> <li>\u062a\u0634\u063a\u064a\u0644 \u0643\u0640 root \u062f\u0648\u0646 \u062f\u0627\u0639\u064d.  </li> <li>\u0648\u0636\u0639 \u0623\u0633\u0631\u0627\u0631 \u062f\u0627\u062e\u0644 \u0627\u0644\u0635\u0648\u0631\u0629 \u0628\u062f\u0644 Secret Manager \u0623\u0648 Runtime Env.  </li> <li>\u0639\u062f\u0645 \u062a\u062d\u062f\u064a\u062f PORT/ASPNETCORE_URLS \u0623\u0648 \u0646\u0633\u064a\u0627\u0646 EXPOSE.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0635\u062d\u0629 \u0627\u0644\u062e\u062f\u0645\u0629 \u2192 \u0625\u0639\u0627\u062f\u0629 \u062a\u0634\u063a\u064a\u0644/\u062a\u0648\u0633\u0651\u0639 \u062e\u0627\u0637\u0626.</li> </ul>"},{"location":"terms/container/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Container \u062a\u0634\u063a\u064a\u0644 \u0645\u0639\u0632\u0648\u0644 \u0648\u062e\u0641\u064a\u0641 \u064a\u0634\u0627\u0631\u0643 \u0646\u0648\u0627\u0629 \u0627\u0644\u0646\u0638\u0627\u0645 \u0633\u0631\u064a\u0639 \u0627\u0644\u0625\u0642\u0644\u0627\u0639\u061b \u064a\u0639\u062a\u0645\u062f Images \u0628\u0635\u064a\u063a\u0629 OCI Virtual Machine \u0639\u0632\u0644 \u0643\u0627\u0645\u0644 \u0645\u0639 \u0646\u0648\u0627\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0623\u062b\u0642\u0644\u061b \u0645\u0631\u0648\u0646\u0629 \u0623\u0639\u0644\u0649 \u0641\u064a OS \u0644\u0643\u0646 \u0623\u0628\u0637\u0623 \u0648\u0623\u0643\u0628\u0631 Image (OCI) \u0642\u0627\u0644\u0628 \u0644\u0644\u0645\u0644\u0641\u0627\u062a \u0648\u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637\u061b \u062a\u0624\u0633\u0651\u064e\u0633 \u0645\u0646\u0647 \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a"},{"location":"terms/container/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u062d\u0627\u0648\u064a\u0629 \u062a\u0645\u0646\u062d\u0643 \u062a\u0634\u063a\u064a\u0644\u064b\u0627 \u0642\u0627\u0628\u0644\u064b\u0627 \u0644\u0644\u062a\u0643\u0631\u0627\u0631 \u0648\u062e\u0641\u064a\u0641\u064b\u0627 \u0644\u062a\u0637\u0628\u064a\u0642\u0643. \u0627\u0628\u0646\u0650 \u0635\u0648\u0631\u064b\u0627 \u0635\u063a\u064a\u0631\u0629\u060c \u0623\u062e\u0641\u0650 \u0627\u0644\u0623\u0633\u0631\u0627\u0631\u060c \u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0633\u0627\u0631\u0627\u062a \u0635\u062d\u0651\u0629\u060c \u0648\u0627\u062d\u0641\u0638 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062e\u0627\u0631\u062c \u0627\u0644\u062d\u0627\u0648\u064a\u0629\u2014\u0648\u0627\u0633\u062a\u0639\u062f\u0651 \u0644\u0644\u0623\u062a\u0645\u062a\u0629 \u0639\u0628\u0631 Kubernetes/Compose \u0639\u0646\u062f \u0627\u0644\u0646\u0645\u0648.</p>"},{"location":"terms/core/","title":"Core","text":""},{"location":"terms/core/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Core \u2014 \u0627\u0644\u0646\u0648\u0627\u0629/\u0627\u0644\u0642\u0644\u0628 (\u0627\u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629).</p>"},{"location":"terms/core/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u0643\u062b\u0631 \u062c\u0632\u0621 \u062b\u0627\u0628\u062a \u0641\u064a \u0627\u0644\u0646\u0638\u0627\u0645: \u064a\u062d\u0648\u064a \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062c\u0627\u0644 (Entities/Value Objects)\u060c \u0648\u0627\u0644\u0639\u0642\u0648\u062f (Interfaces/Ports) \u0627\u0644\u062a\u064a \u062a\u062d\u062a\u0627\u062c\u0647\u0627 \u0628\u0642\u064a\u0629 \u0627\u0644\u0637\u0628\u0642\u0627\u062a. \u0644\u0627 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0623\u0637\u0631 \u0623\u0648 \u062a\u0641\u0627\u0635\u064a\u0644 \u0628\u0646\u064a\u0629 (EF/HTTP) \u2014 \u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0646\u062d\u0648\u0647 \u0641\u0642\u0637.</p>"},{"location":"terms/core/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0645\u0627\u0630\u0627 \u064a\u0648\u062c\u062f \u0641\u064a Core\u061f</li> <li>Domain Model: \u0643\u064a\u0627\u0646\u0627\u062a\u060c \u0643\u0627\u0626\u0646\u0627\u062a \u0642\u064a\u0645\u0629\u060c \u062e\u062f\u0645\u0627\u062a \u0645\u062c\u0627\u0644\u060c \u0623\u062d\u062f\u0627\u062b \u0645\u062c\u0627\u0644.  </li> <li>Contracts: \u0648\u0627\u062c\u0647\u0627\u062a \u0644\u0644\u0645\u062e\u0627\u0632\u0646/\u0627\u0644\u0648\u0642\u062a/\u0627\u0644\u0631\u0633\u0627\u0626\u0644\u2026 \u064a\u0637\u0628\u0651\u0642\u0647\u0627 \u0627\u0644\u062e\u0627\u0631\u062c.  </li> <li>(\u0627\u062e\u062a\u064a\u0627\u0631\u064a) Use Cases \u0627\u0644\u062e\u0641\u064a\u0641\u0629 \u0625\u0646 \u0627\u062a\u0651\u0628\u0639\u062a \u0623\u0633\u0644\u0648\u0628 \u201cApplication \u062f\u0627\u062e\u0644 \u0627\u0644\u0640Core\u201d.</li> <li>\u0645\u0627\u0630\u0627 \u0644\u0627 \u064a\u0648\u062c\u062f\u061f  </li> <li>\u0644\u0627 EF/SQL\u060c \u0644\u0627 ASP.NET\u060c \u0644\u0627 IO \u0645\u0628\u0627\u0634\u0631.  </li> <li>\u0644\u0645\u0627\u0630\u0627\u061f  </li> <li>\u0644\u062a\u0628\u0642\u0649 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u062f\u0648\u0646 \u0643\u0633\u0631 \u0628\u0642\u064a\u0629 \u0627\u0644\u0646\u0638\u0627\u0645.</li> </ul>"},{"location":"terms/core/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0642\u0644\u0628 \u0627\u0644\u0645\u062d\u0631\u0651\u0643: \u062d\u064a\u062b \u062a\u064f\u0648\u0644\u064e\u062f \u0627\u0644\u0642\u0648\u0629 (\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644). \u0627\u0644\u0643\u0648\u0627\u0628\u0644 \u0648\u0627\u0644\u0623\u0646\u0627\u0628\u064a\u0628 (\u0627\u0644\u0628\u0646\u064a\u0629/\u0627\u0644\u0623\u0637\u0631) \u062a\u062a\u0628\u062f\u0651\u0644\u060c \u0644\u0643\u0646 \u0627\u0644\u0642\u0644\u0628 \u064a\u0628\u0642\u0649 \u0645\u0633\u062a\u0642\u0644\u0627\u064b \u0648\u062b\u0627\u0628\u062a\u064b\u0627.</p>"},{"location":"terms/core/#c-core","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0645\u0634\u0631\u0648\u0639 Core \u0641\u0642\u0637 (\u0645\u062c\u0627\u0644 + \u0639\u0642\u0648\u062f \u0628\u0644\u0627 \u062a\u0628\u0639\u064a\u0627\u062a \u062e\u0627\u0631\u062c\u064a\u0629)","text":"C#<pre><code>// Shop.Core (\u0645\u0643\u062a\u0628\u0629 \u0635\u0646\u0641\u064a\u0629) \u2014 \u0628\u062f\u0648\u0646 \u0645\u0631\u0627\u062c\u0639 \u0644\u0640 EF/ASP.NET\nnamespace Shop.Core.Domain;\n\n// ===== Value Object =====\npublic readonly record struct Money(decimal Amount)\n{\n    public static Money Zero =&gt; new(0);\n    public static Money operator +(Money a, Money b) =&gt; new(a.Amount + b.Amount);\n    public static Money operator *(Money a, int m)   =&gt; new(a.Amount * m);\n    public override string ToString() =&gt; Amount.ToString(\"0.00\");\n}\n\n// ===== Entity =====\npublic sealed class Order\n{\n    private readonly List&lt;OrderLine&gt; _lines = new();\n    public int Id { get; }\n    public string CustomerId { get; }\n    public IReadOnlyList&lt;OrderLine&gt; Lines =&gt; _lines;\n\n    public Order(int id, string customerId)\n    {\n        if (id &lt;= 0) throw new ArgumentOutOfRangeException(nameof(id));\n        if (string.IsNullOrWhiteSpace(customerId)) throw new ArgumentException(\"customer_required\");\n        Id = id; CustomerId = customerId;\n    }\n\n    public void AddLine(string sku, int qty, Money price)\n    {\n        if (string.IsNullOrWhiteSpace(sku)) throw new ArgumentException(nameof(sku));\n        if (qty &lt;= 0 || price.Amount &lt;= 0) throw new ArgumentOutOfRangeException();\n        _lines.Add(new OrderLine(sku, qty, price));\n    }\n\n    public Money Subtotal() =&gt; _lines.Aggregate(Money.Zero, (t, l) =&gt; t + (l.Price * l.Qty));\n}\n\npublic sealed record OrderLine(string Sku, int Qty, Money Price);\n\n// ===== Domain Service =====\npublic interface IPricingPolicy\n{\n    Money DiscountFor(Order order);\n}\n\npublic sealed class SimplePricingPolicy : IPricingPolicy\n{\n    public Money DiscountFor(Order order)\n    {\n        var subtotal = order.Subtotal();\n        return subtotal.Amount &gt;= 500 ? new Money(subtotal.Amount * 0.05m) : Money.Zero;\n    }\n}\n\n// ===== Ports/Contracts (\u062a\u064f\u0646\u0641\u0651\u0630 \u0641\u064a Infrastructure) =====\npublic interface IOrderRepository\n{\n    Task&lt;Order?&gt; GetAsync(int id, CancellationToken ct = default);\n    Task AddAsync(Order order, CancellationToken ct = default);\n    Task SaveChangesAsync(CancellationToken ct = default);\n}\n\npublic interface IClock { DateTime UtcNow { get; } }\n\n// ===== Use Case (\u0627\u062e\u062a\u064a\u0627\u0631\u064a \u062f\u0627\u062e\u0644 \u0627\u0644\u0640Core) =====\npublic sealed class PlaceOrder\n{\n    private readonly IOrderRepository _repo;\n    private readonly IPricingPolicy _pricing;\n    private readonly IClock _clock;\n    public PlaceOrder(IOrderRepository repo, IPricingPolicy pricing, IClock clock)\n        { _repo = repo; _pricing = pricing; _clock = clock; }\n\n    public async Task&lt;Result&gt; HandleAsync(Command cmd, CancellationToken ct = default)\n    {\n        var order = new Order(cmd.OrderId, cmd.CustomerId);\n        foreach (var it in cmd.Items) order.AddLine(it.Sku, it.Qty, new Money(it.Price));\n\n        var subtotal = order.Subtotal();\n        var discount = _pricing.DiscountFor(order);\n        await _repo.AddAsync(order, ct);\n        await _repo.SaveChangesAsync(ct);\n\n        return new Result(order.Id, subtotal.Amount, discount.Amount, _clock.UtcNow);\n    }\n\n    public sealed record Command(int OrderId, string CustomerId, List&lt;Item&gt; Items);\n    public sealed record Item(string Sku, int Qty, decimal Price);\n    public sealed record Result(int OrderId, decimal Subtotal, decimal Discount, DateTime PlacedAtUtc);\n}\n</code></pre> <p>\u0644\u0627\u062d\u0638: \u0644\u0627 \u064a\u0648\u062c\u062f EF/HTTP/\u0645\u0644\u0641\u0627\u062a. \u0627\u0644\u0640 Infrastructure \u0644\u0627\u062d\u0642\u064b\u0627 \u064a\u0637\u0628\u0651\u0642 <code>IOrderRepository</code>\u060c \u0648Presentation \u064a\u0633\u062a\u062f\u0639\u064a <code>PlaceOrder</code> \u0639\u0628\u0631 DI \u2014 \u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0625\u0644\u0649 \u0627\u0644\u0640Core.</p>"},{"location":"terms/core/#core_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 Core \u0642\u0648\u064a","text":"<ol> <li>\u0639\u0631\u0651\u0641 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062c\u0627\u0644 (Entities/Value Objects) \u0628\u0623 invariant \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u0627\u0643\u062a\u0628 \u0627\u0644\u0639\u0642\u0648\u062f \u0643\u0648\u0627\u062c\u0647\u0627\u062a (Ports) \u0644\u0645\u0627 \u062a\u062d\u062a\u0627\u062c\u0647 \u0645\u0646 \u0627\u0644\u062e\u0627\u0631\u062c: \u062a\u062e\u0632\u064a\u0646/\u0648\u0642\u062a/\u0631\u0633\u0627\u0626\u0644.  </li> <li>\u0627\u0645\u0646\u0639 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0639\u0644\u0649 \u0623\u064a \u0625\u0637\u0627\u0631 \u2014 \u0627\u062c\u0639\u0644 Core \u062e\u0641\u064a\u0641\u064b\u0627 \u0648\u0642\u0627\u0628\u0644\u0627\u064b \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062d\u062f\u0629 \u0645\u0643\u062b\u0651\u0641\u0629 \u0644\u0640 Core (\u0645\u0646 \u062f\u0648\u0646 DB/\u0634\u0628\u0643\u0629).  </li> <li>\u0644\u0627 \u062a\u0633\u0631\u0628 \u0645\u0641\u0627\u0647\u064a\u0645 \u0627\u0644\u0628\u0646\u064a\u0629 (DbContext/HttpRequest) \u0625\u0644\u0649 Core.  </li> <li>\u0625\u0646 \u0627\u062d\u062a\u062c\u062a Use Cases\u060c \u0627\u062c\u0639\u0644\u0647\u0627 \u0631\u0641\u064a\u0639\u0629 \u0648\u062a\u0646\u0633\u0651\u0642 \u0641\u0642\u0637 (Validation/Policies).</li> </ol>"},{"location":"terms/core/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0625\u062f\u062e\u0627\u0644 EF/DbContext \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u0627\u0644\u062e\u062f\u0645\u0627\u062a.  </li> <li>\u062c\u0639\u0644 \u0627\u0644\u0640Core \u0645\u062c\u0631\u0651\u062f DTO\u0627\u062a \u0628\u0644\u0627 \u0633\u0644\u0648\u0643 (Anemic Domain).  </li> <li>\u0631\u0628\u0637 \u0627\u0644\u0640Core \u0628\u0648\u0642\u062a \u0627\u0644\u0646\u0638\u0627\u0645 \u0645\u0628\u0627\u0634\u0631\u0629 (\u0627\u0633\u062a\u062e\u062f\u0645 <code>IClock</code>).  </li> <li>\u062e\u0644\u0637 \u0633\u064a\u0627\u0633\u0627\u062a \u0639\u0631\u0636/HTTP \u0641\u064a \u0627\u0644\u0640Core (Status Codes\u060c ModelState\u2026).  </li> <li>\u0639\u0642\u0648\u062f \u063a\u0627\u0645\u0636\u0629 \u0623\u0648 \u0639\u0627\u0645\u0629 \u062c\u062f\u064b\u0627 (<code>IRepository&lt;T&gt;</code> \u0628\u0644\u0627 \u062d\u062f\u0648\u062f \u0645\u062c\u0627\u0644).</li> </ul>"},{"location":"terms/core/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Core (Domain/Core Layer) \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 + \u0639\u0642\u0648\u062f \u0628\u0644\u0627 \u062a\u0628\u0639\u064a\u0627\u062a \u0623\u0637\u0631\u061b \u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0646\u062d\u0648\u0647 Application Layer \u062a\u0646\u0633\u064a\u0642 Use Cases/Transactions \u0642\u062f \u064a\u0643\u0648\u0646 \u062c\u0632\u0621\u064b\u0627 \u0645\u0646 Core \u0623\u0648 \u062e\u0627\u0631\u062c\u064e\u0647 \u062d\u0633\u0628 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 Infrastructure \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0639\u0642\u0648\u062f (DB/IO/HTTP) \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 Core \u0648\u0644\u0627 \u0627\u0644\u0639\u0643\u0633 Presentation \u0646\u0642\u0644/HTTP/UI \u064a\u0633\u062a\u062f\u0639\u064a Use Cases\u061b \u0628\u0644\u0627 \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 .NET/ASP.NET Core \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u062e\u062a\u0644\u0641 \u0639\u0646 \u0645\u0641\u0647\u0648\u0645 \u201cCore\u201d \u0643\u0646\u0648\u0627\u0629 \u062a\u0635\u0645\u064a\u0645"},{"location":"terms/core/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Core = \u0627\u0644\u0642\u0644\u0628 \u0627\u0644\u0630\u064a \u064a\u062d\u062a\u0648\u064a \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644\u0643 \u0648\u0639\u0642\u0648\u062f\u0643 \u0627\u0644\u062b\u0627\u0628\u062a\u0629. \u0623\u0628\u0639\u062f \u0639\u0646\u0647 \u0627\u0644\u0623\u0637\u0631 \u0648\u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644\u060c \u0648\u0627\u062c\u0639\u0644 \u0643\u0644 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u062a\u062a\u062c\u0647 \u0625\u0644\u064a\u0647\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0638\u0627\u0645 \u0645\u062a\u064a\u0646\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0648\u064a\u062a\u062d\u0648\u0651\u0631 \u0628\u0633\u0631\u0639\u0629 \u062f\u0648\u0646 \u0643\u0633\u0631 \u0627\u0644\u0628\u0642\u064a\u0629. </p>"},{"location":"terms/cross-platform/","title":"Cross-Platform","text":""},{"location":"terms/cross-platform/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Cross-Platform \u2014 \u0639\u064e\u0628\u0652\u0631 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a (\u0642\u0627\u0639\u062f\u0629 \u0643\u0648\u062f \u0648\u0627\u062d\u062f\u0629 \u062a\u0639\u0645\u0644 \u0639\u0644\u0649 \u0623\u0646\u0638\u0645\u0629 \u0645\u062a\u0639\u062f\u062f\u0629 \u0645\u0639 \u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0637\u0641\u064a\u0641\u0629).</p>"},{"location":"terms/cross-platform/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0637\u0648\u064a\u0631 \u0628\u0631\u0646\u0627\u0645\u062c \u0648\u0627\u062d\u062f \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 Windows / Linux / macOS (\u0648\u0623\u062d\u064a\u0627\u0646\u064b\u0627 Android/iOS) \u0645\u0639 \u0641\u0631\u0648\u0639 \u0635\u063a\u064a\u0631\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0641\u0631\u0648\u0642\u0627\u062a. \u0627\u0644\u0641\u0643\u0631\u0629: \u0645\u0634\u062a\u0631\u0643\u0627\u062a \u0643\u062b\u064a\u0631\u0629 + \u0646\u0650\u0642\u0627\u0637 \u062a\u0643\u064a\u0651\u0641 \u0645\u062d\u062f\u0648\u062f\u0629 \u0628\u062f\u0644 \u0643\u062a\u0627\u0628\u0629 \u0645\u0634\u0631\u0648\u0639 \u0645\u0646\u0641\u0635\u0644 \u0644\u0643\u0644 \u0646\u0638\u0627\u0645.</p>"},{"location":"terms/cross-platform/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<p>\u062a\u062e\u064a\u0651\u0644 \u0644\u0639\u0628\u0629 \u062a\u0639\u0645\u0644 \u0639\u0644\u0649 \u0643\u0644 \u0627\u0644\u0623\u062c\u0647\u0632\u0629\u060c \u0644\u0643\u0646 \u0639\u0646\u062f \u0643\u0644 \u062c\u0647\u0627\u0632 \u0641\u064a\u0647 \u0632\u0631\u0651 \u062a\u0634\u063a\u064a\u0644 \u0645\u062e\u062a\u0644\u0641. \u0646\u0643\u062a\u0628 \u0627\u0644\u0644\u0639\u0628\u0629 \u0645\u0631\u0629 \u0648\u0627\u062d\u062f\u0629\u060c \u0648\u0646\u0636\u064a\u0641 \u0637\u0628\u0642\u0629 \u0635\u063a\u064a\u0631\u0629 \u062a\u0639\u0631\u0641 \u0643\u064a\u0641 \u062a\u0634\u063a\u0651\u0644\u0647\u0627 \u0639\u0644\u0649 \u0643\u0644 \u062c\u0647\u0627\u0632: - \u0646\u0641\u0633 \u0627\u0644\u0645\u0646\u0637\u0642 \u0648\u0627\u0644\u0643\u0644\u0627\u0633\u0627\u062a \u0648\u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a. - \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u062f\u0642\u064a\u0642\u0629 \u0641\u0642\u0637 \u062d\u064a\u062b \u062a\u062e\u062a\u0644\u0641 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 (\u0641\u062a\u062d \u0645\u0644\u0641/\u0641\u062a\u062d URL/\u0623\u0645\u0631 \u0646\u0638\u0627\u0645). - \u0646\u0634\u0631 \u062d\u0650\u0632\u0645 \u0645\u062e\u0635\u0651\u0635\u0629 \u0644\u0643\u0644 \u0646\u0638\u0627\u0645 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.</p>"},{"location":"terms/cross-platform/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0645\u0642\u0628\u0633 \u0643\u0647\u0631\u0628\u0627\u0621 \u0639\u0627\u0644\u0645\u064a \u0645\u0639 \u0631\u0624\u0648\u0633 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0628\u062f\u064a\u0644: \u0627\u0644\u062c\u0647\u0627\u0632 \u0648\u0627\u062d\u062f (\u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0645\u0634\u062a\u0631\u0643)\u060c \u0648\u0627\u0644\u0631\u0623\u0633 \u064a\u062a\u0628\u062f\u0651\u0644 \u062d\u0633\u0628 \u0627\u0644\u062f\u0648\u0644\u0629 (\u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0627\u0644\u0646\u0638\u0627\u0645).</p>"},{"location":"terms/cross-platform/#cross-platform-net","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 Cross-Platform (NET.)","text":"<ul> <li>\u0627\u0633\u062a\u0647\u062f\u0641 net9.0 (\u0623\u0648 \u0645\u0627 \u064a\u0646\u0627\u0633\u0628\u0643) \u0648\u0627\u0633\u062a\u062e\u062f\u0645 APIs \u0645\u062d\u0627\u064a\u062f\u0629 \u062d\u064a\u062b\u0645\u0627 \u0623\u0645\u0643\u0646.  </li> <li>\u0627\u0639\u0632\u0644 \u0646\u0642\u0627\u0637 \u0627\u0644\u0627\u062e\u062a\u0644\u0627\u0641 \u0641\u064a Interfaces (\u0645\u062b\u0644 <code>IFilePicker</code>, <code>INotifier</code>), \u0648\u0642\u062f\u0651\u0645 \u062a\u0646\u0641\u064a\u0630\u064b\u0627 \u0644\u0643\u0644 \u0646\u0638\u0627\u0645.  </li> <li>\u0623\u0636\u0641 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a CI \u062a\u0628\u0646\u064a/\u062a\u0634\u063a\u0651\u0644 \u0639\u0644\u0649 Windows/Linux/macOS.  </li> <li>\u0644\u0644\u0646\u0634\u0631:</li> <li>\u0625\u0637\u0627\u0631-\u0645\u0639\u062a\u0645\u062f (Framework-Dependent): Bash<pre><code>dotnet publish -c Release -f net9.0\n</code></pre></li> <li>\u0645\u0633\u062a\u0642\u0644 \u0630\u0627\u062a\u064a\u064b\u0627 (Self-Contained) \u0644\u0643\u0644 \u0646\u0638\u0627\u0645: Bash<pre><code>dotnet publish -c Release -f net9.0 -r win-x64 --self-contained true\ndotnet publish -c Release -f net9.0 -r linux-x64 --self-contained true\ndotnet publish -c Release -f net9.0 -r osx-arm64 --self-contained true\n</code></pre></li> <li>\u0648\u062b\u0651\u0642 \u0645\u0627 \u0647\u0648 \u0645\u0634\u062a\u0631\u0643 \u0648\u0645\u0627 \u0647\u0648 \u0645\u062e\u0635\u0651\u0635 \u0644\u0643\u0644 \u0646\u0638\u0627\u0645\u060c \u0648\u0648\u0641\u0651\u0631 \u0628\u062f\u0627\u0626\u0644 \u0639\u0646\u062f \u063a\u064a\u0627\u0628 \u0623\u062f\u0648\u0627\u062a (\u0645\u062b\u0644 <code>xdg-open</code>).</li> </ul>"},{"location":"terms/cross-platform/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Platform-Independent \u064a\u0639\u0645\u0644 \u0643\u0645\u0627 \u0647\u0648 \u062f\u0648\u0646 \u0623\u064a \u0641\u0631\u0648\u0639 \u0634\u0631\u0637\u064a\u0629 \u064a\u0639\u062a\u0645\u062f \u0628\u0627\u0644\u0643\u0627\u0645\u0644 \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629 \u0648\u0645\u062d\u0627\u064a\u062f\u0629 Cross-Platform \u0642\u0627\u0639\u062f\u0629 \u0643\u0648\u062f \u0648\u0627\u062d\u062f\u0629 + \u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0645\u062d\u062f\u0648\u062f\u0629 \u0641\u0631\u0648\u0639 \u0635\u063a\u064a\u0631\u0629 (OS checks) \u0623\u0648 \u0637\u0628\u0642\u0629 \u062a\u062c\u0631\u064a\u062f Platform-Dependent \u0645\u064a\u0632\u0627\u062a \u0646\u0638\u0627\u0645 \u0645\u062d\u062f\u0651\u062f \u0623\u062f\u0627\u0621/\u0645\u064a\u0632\u0627\u062a \u0623\u0639\u0644\u0649 \u0645\u0642\u0627\u0628\u0644 \u0642\u0627\u0628\u0644\u064a\u0629 \u0646\u0642\u0644 \u0623\u0642\u0644"},{"location":"terms/cross-platform/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Cross-Platform \u064a\u0639\u0646\u064a: \u0645\u0634\u0631\u0648\u0639 \u0648\u0627\u062d\u062f\u060c \u0645\u0646\u0637\u0642 \u0645\u0634\u062a\u0631\u0643\u060c \u0648\u062a\u0639\u062f\u064a\u0644\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0623\u064a\u0646\u0645\u0627 \u062a\u062e\u062a\u0644\u0641 \u0627\u0644\u0623\u0646\u0638\u0645\u0629. \u0627\u0644\u0642\u0627\u0639\u062f\u0629: \u0627\u0639\u0632\u0644 \u0646\u0642\u0627\u0637 \u0627\u0644\u0627\u062e\u062a\u0644\u0627\u0641\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u062c\u0647\u0627\u062a + \u062a\u0646\u0641\u064a\u0630\u0627\u062a \u0644\u0643\u0644 \u0646\u0638\u0627\u0645 \u0639\u0646\u062f \u0627\u0644\u0636\u0631\u0648\u0631\u0629\u060c \u0645\u0639 \u0646\u0634\u0631 \u0645\u0644\u0627\u0626\u0645 \u0644\u0643\u0644 \u0628\u064a\u0626\u0629.</p>"},{"location":"terms/dashboard/","title":"Dashboard","text":""},{"location":"terms/dashboard/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Dashboard \u2014 \u0644\u0648\u062d\u0629 \u0642\u064a\u0627\u062f\u0629/\u0644\u0648\u062d\u0629 \u0645\u0624\u0634\u0631\u0627\u062a.</p>"},{"location":"terms/dashboard/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0648\u0627\u062c\u0647\u0629 \u062a\u064f\u0638\u0647\u0631 KPIs \u0648\u0631\u0633\u0648\u0645\u064b\u0627 \u0648\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0641\u064a \u0634\u0627\u0634\u0629 \u0648\u0627\u062d\u062f\u0629. \u0647\u062f\u0641\u0647\u0627 \u0631\u0624\u064a\u0629 \u0644\u062d\u0638\u064a\u0629\u060c \u0648\u0627\u062a\u062e\u0627\u0630 \u0642\u0631\u0627\u0631 \u0633\u0631\u064a\u0639\u060c \u0645\u0639 \u062a\u062d\u062f\u064a\u062b \u0645\u0628\u0627\u0634\u0631 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p>"},{"location":"terms/dashboard/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u062c\u0645\u0639 \u0645\u0642\u0627\u064a\u064a\u0633 \u0645\u0646 \u062e\u062f\u0645\u0627\u062a/\u0642\u0648\u0627\u0639\u062f \u0645\u062e\u062a\u0644\u0641\u0629.  </li> <li>\u062a\u0644\u062e\u0651\u0635\u0647\u0627 \u0641\u064a \u0628\u0637\u0627\u0642\u0627\u062a (Cards) \u0648\u0631\u0633\u0648\u0645 (Charts).  </li> <li>\u062a\u062d\u062f\u0651\u062b \u0627\u0644\u0623\u0631\u0642\u0627\u0645 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627 (Polling/SSE/WebSocket).  </li> <li>\u062a\u0639\u0631\u0636 \u062d\u0627\u0644\u0627\u062a (OK/Warn/Crit) \u0648\u0627\u062a\u062c\u0627\u0647\u0627\u062a (\u2191 \u2193).</li> </ul>"},{"location":"terms/dashboard/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0644\u0648\u062d\u0629 \u0633\u064a\u0627\u0631\u0629: \u0633\u0631\u0639\u0629\u060c \u0648\u0642\u0648\u062f\u060c \u062d\u0631\u0627\u0631\u0629. \u0646\u0638\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u0643\u0641\u064a \u0644\u062a\u0639\u0631\u0641 \u0627\u0644\u0648\u0636\u0639 \u0627\u0644\u0622\u0646 \u0648\u062a\u0642\u0631\u0651\u0631.</p>"},{"location":"terms/dashboard/#c-api-sse","title":"\u0645\u062b\u0627\u0644 C# \u2014 API \u0644\u0644\u0648\u062d\u0629 \u0645\u0624\u0634\u0631\u0627\u062a \u0645\u0639 \u0628\u062b\u0651 \u0645\u0628\u0627\u0634\u0631 SSE + \u0644\u0642\u0637\u0629 \u062d\u0627\u0644\u064a\u0629","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n DashboardApi &amp;&amp; cd DashboardApi &amp;&amp; dotnet run\nusing System.Threading.Channels;\nusing Microsoft.AspNetCore.Mvc;\nusing System.Text.Json;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u0642\u0646\u0627\u0629 \u0628\u062b\u0651 \u0645\u0642\u0627\u064a\u064a\u0633 + \u062e\u062f\u0645\u0629 \u062a\u0648\u0644\u064a\u062f \u062a\u062c\u0631\u064a\u0628\u064a\u0629\nbuilder.Services.AddSingleton&lt;MetricsBus&gt;();\nbuilder.Services.AddHostedService&lt;MetricsSampler&gt;();\n\nvar app = builder.Build();\napp.UseHttpsRedirection();\n\n// 1) \u0644\u0642\u0637\u0629 \u062d\u0627\u0644\u064a\u0629: GET /dashboard/kpis  \u2192 JSON\napp.MapGet(\"/dashboard/kpis\", ([FromServices] MetricsBus bus)\n    =&gt; Results.Ok(bus.Latest));\n\n// 2) \u0628\u062b\u0651 \u0645\u0628\u0627\u0634\u0631 (SSE): GET /dashboard/stream  \u2192 text/event-stream\napp.MapGet(\"/dashboard/stream\", async (HttpContext ctx, MetricsBus bus) =&gt;\n{\n    ctx.Response.Headers.CacheControl = \"no-store\";\n    ctx.Response.Headers.Connection   = \"keep-alive\";\n    ctx.Response.ContentType          = \"text/event-stream\";\n\n    await foreach (var kpi in bus.Reader.ReadAllAsync(ctx.RequestAborted))\n    {\n        var json = JsonSerializer.Serialize(kpi);\n        await ctx.Response.WriteAsync($\"data: {json}\\n\\n\", ctx.RequestAborted);\n        await ctx.Response.Body.FlushAsync(ctx.RequestAborted);\n    }\n});\n\n// (\u0627\u062e\u062a\u064a\u0627\u0631\u064a) \u0633\u0644\u0633\u0644\u0629 \u0632\u0645\u0646\u064a\u0629 \u0642\u0635\u064a\u0631\u0629 \u0644\u0644\u0631\u0633\u0645 \u0627\u0644\u0623\u0648\u0644\u064a: GET /dashboard/series\napp.MapGet(\"/dashboard/series\", ([FromServices] MetricsBus bus)\n    =&gt; Results.Ok(bus.Recent()));\n\napp.Run();\n\n\n// ====== \u0627\u0644\u0646\u0645\u0627\u0630\u062c/\u0627\u0644\u062e\u062f\u0645\u0627\u062a ======\npublic record KpisSnapshot(\n    DateTime TsUtc,\n    int ActiveUsers,\n    decimal RevenueUsd,\n    double ErrorRate,\n    double P95LatencyMs);\n\npublic class MetricsBus\n{\n    private readonly Channel&lt;KpisSnapshot&gt; _ch = Channel.CreateUnbounded&lt;KpisSnapshot&gt;();\n    private readonly LinkedList&lt;KpisSnapshot&gt; _buffer = new(); // \u0622\u062e\u0631 N \u0646\u0642\u0627\u0637\n    private readonly object _gate = new();\n    public KpisSnapshot Latest { get; private set; } = new(DateTime.UtcNow, 0, 0, 0, 0);\n\n    public ChannelReader&lt;KpisSnapshot&gt; Reader =&gt; _ch.Reader;\n\n    public void Publish(KpisSnapshot s)\n    {\n        Latest = s;\n        lock (_gate)\n        {\n            _buffer.AddLast(s);\n            if (_buffer.Count &gt; 120) _buffer.RemoveFirst(); // ~ \u0622\u062e\u0631 \u062f\u0642\u064a\u0642\u062a\u064a\u0646 (\u0625\u0630\u0627 \u0643\u0644 \u062b\u0627\u0646\u064a\u0629)\n        }\n        _ch.Writer.TryWrite(s);\n    }\n\n    public IEnumerable&lt;KpisSnapshot&gt; Recent()\n    {\n        lock (_gate) return _buffer.ToArray();\n    }\n}\n\npublic class MetricsSampler : BackgroundService\n{\n    private readonly MetricsBus _bus;\n    private readonly Random _rnd = new();\n    public MetricsSampler(MetricsBus bus) =&gt; _bus = bus;\n\n    protected override async Task ExecuteAsync(CancellationToken ct)\n    {\n        double err = 0.01, p95 = 120;\n        int users = 1200; decimal rev = 0;\n\n        while (!ct.IsCancellationRequested)\n        {\n            // \u0645\u062d\u0627\u0643\u0627\u0629 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0645\u0642\u0627\u064a\u064a\u0633\n            users = Math.Max(0, users + _rnd.Next(-15, 25));\n            rev += (decimal)_rnd.NextDouble() * 30m;\n            err = Math.Clamp(err + (_rnd.NextDouble() - 0.5) * 0.002, 0, 0.2);\n            p95 = Math.Clamp(p95 + (_rnd.NextDouble() - 0.5) * 5, 40, 400);\n\n            _bus.Publish(new KpisSnapshot(\n                TsUtc: DateTime.UtcNow,\n                ActiveUsers: users,\n                RevenueUsd: Math.Round(rev, 2),\n                ErrorRate: Math.Round(err, 4),\n                P95LatencyMs: Math.Round(p95, 1)));\n\n            await Task.Delay(1000, ct); // \u062a\u062d\u062f\u064a\u062b \u0643\u0644 \u062b\u0627\u0646\u064a\u0629\n        }\n    }\n}\n</code></pre> <p>\u0627\u0644\u0648\u0627\u062c\u0647\u0629 (SPA/Blazor/\u0623\u064a \u0625\u0637\u0627\u0631) \u062a\u062a\u0635\u0644 \u0628\u0640: - GET <code>/dashboard/kpis</code> \u0644\u0645\u0644\u0621 \u0627\u0644\u0628\u0637\u0627\u0642\u0627\u062a \u0641\u0648\u0631\u064b\u0627. - SSE <code>/dashboard/stream</code> \u0644\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0631\u0633\u0648\u0645 \u0648\u0627\u0644\u0628\u0637\u0627\u0642\u0627\u062a \u0644\u062d\u0638\u064a\u064b\u0627.</p>"},{"location":"terms/dashboard/#dashboard_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 Dashboard \u0645\u0641\u064a\u062f","text":"<ol> <li>\u0627\u062e\u062a\u0631 KPIs \u0642\u0644\u064a\u0644\u0629 \u0648\u0648\u0627\u0636\u062d\u0629: \u0623\u0645\u062b\u0644\u0629 (DAU\u060c \u0627\u0644\u0625\u064a\u0631\u0627\u062f/\u0627\u0644\u064a\u0648\u0645\u060c ErrorRate\u060c P95).  </li> <li>\u0645\u0635\u0627\u062f\u0631 \u0645\u0648\u062b\u0648\u0642\u0629: \u0627\u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0628\u0631 \u062e\u062f\u0645\u0629 \u062a\u062c\u0645\u064a\u0639 (Aggregator) \u0644\u0627 \u0645\u0646 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0645\u0628\u0627\u0634\u0631\u0629.  </li> <li>\u062a\u062d\u062f\u064a\u062b \u0645\u0628\u0627\u0634\u0631: SSE/WebSocket \u0644\u0644\u062d\u064a\u0651\u0629\u060c \u0648Cache \u0644\u0644\u0642\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u0628\u0627\u0631\u062f\u0629.  </li> <li>\u062d\u0627\u0644\u0627\u062a/\u0623\u0644\u0648\u0627\u0646: \u0642\u0648\u0627\u0639\u062f \u0639\u062a\u0628\u0627\u062a (OK/Warn/Crit) \u0648\u0627\u0636\u062d\u0629 \u0648\u0633\u0647\u0644\u0629 \u0627\u0644\u0642\u0631\u0627\u0621\u0629.  </li> <li>\u0648\u0642\u062a/\u0645\u0646\u0637\u0642\u0629: \u0627\u0639\u0631\u0636 \u0627\u0644\u0645\u0646\u0637\u0642\u0629 \u0627\u0644\u0632\u0645\u0646\u064a\u0629\u060c \u0648\u0627\u0633\u0645\u062d \u0628\u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0646\u0637\u0627\u0642 \u0627\u0644\u0632\u0645\u0646\u064a.  </li> <li>\u0623\u062f\u0627\u0621 \u0627\u0644\u0648\u0627\u062c\u0647\u0629: \u0627\u0641\u0635\u0644 \u0627\u0644\u0631\u0633\u0645 \u0625\u0644\u0649 canvas/virtualization\u060c \u0648\u062d\u062f\u0651\u062b \u0641\u0631\u0642\u0651\u064a\u064b\u0627 (diff).  </li> <li>Observability: \u0633\u062c\u0651\u0644 \u0643\u0644 \u062a\u062d\u062f\u064a\u062b \u0645\u0639 Correlation-Id \u0648\u0645\u0635\u062f\u0631 \u0627\u0644\u0642\u064a\u0627\u0633.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646: AuthZ \u0628\u062d\u0633\u0628 \u0627\u0644\u0641\u0631\u064a\u0642/\u0627\u0644\u0645\u0634\u0631\u0648\u0639\u060c \u0648\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062d\u0633\u0651\u0627\u0633\u0629 (PII).</li> </ol>"},{"location":"terms/dashboard/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0644\u0648\u062d\u0629 \u0645\u0632\u062f\u062d\u0645\u0629: \u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u0631\u0633\u0648\u0645 \u0628\u0644\u0627 \u0623\u0648\u0644\u0648\u064a\u0629 \u2192 \u0644\u0627 \u0642\u0631\u0627\u0631\u0627\u062a.  </li> <li>Polling \u0643\u062b\u064a\u0641 \u0628\u062f\u0644 SSE/WebSocket \u2192 \u062d\u0645\u0644 \u0632\u0627\u0626\u062f \u0648\u0632\u0645\u0646 \u0623\u0639\u0644\u0649.  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u062a\u062d\u0648\u064a\u0644/\u0627\u0644\u0645\u0646\u0637\u0642 \u0641\u064a \u0627\u0644\u0648\u0627\u062c\u0647\u0629\u061b \u064a\u062c\u0628 \u0623\u0646 \u064a\u062a\u0645 \u0641\u064a API \u0627\u0644\u062a\u062c\u0645\u064a\u0639\u064a\u0629.  </li> <li>\u0639\u062f\u0645 \u062a\u0648\u062d\u064a\u062f \u0627\u0644\u062a\u0648\u0642\u064a\u062a/\u0627\u0644\u0641\u0648\u0627\u0635\u0644 \u0628\u064a\u0646 \u0627\u0644\u0631\u0633\u0648\u0645 \u2192 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u0636\u0644\u0651\u0650\u0644\u0629.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0639\u062a\u0628\u0627\u062a/\u0627\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u2192 \u0644\u0648\u062d\u0629 \u201c\u062c\u0645\u064a\u0644\u0629\u201d \u0628\u0644\u0627 \u0641\u0627\u0626\u062f\u0629 \u0639\u0645\u0644\u064a\u0629.</li> </ul>"},{"location":"terms/dashboard/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Dashboard \u0631\u0624\u064a\u0629 \u0644\u062d\u0638\u064a\u0629 \u0644\u0627\u062a\u062e\u0627\u0630 \u0642\u0631\u0627\u0631 \u0633\u0631\u064a\u0639 \u0628\u062b\u0651 \u0645\u0628\u0627\u0634\u0631\u060c \u0628\u0637\u0627\u0642\u0627\u062a + \u0631\u0633\u0648\u0645\u060c \u0639\u062a\u0628\u0627\u062a Report \u062a\u0648\u062b\u064a\u0642 \u062f\u0648\u0631\u064a/\u062a\u0627\u0631\u064a\u062e\u064a PDF/Excel\u061b \u062a\u0641\u0635\u064a\u0644\u064a \u0644\u0627 \u0644\u062d\u0638\u064a Monitoring Board \u0635\u062d\u0629 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0648\u0627\u0644\u0628\u0646\u064a\u0629 Latency/Errors/Uptime\u061b Alerts Analytics \u062a\u062d\u0644\u064a\u0644\u0627\u062a \u0645\u062a\u0642\u062f\u0645\u0629/\u0627\u0633\u062a\u0643\u0634\u0627\u0641 Segments/Attribution\u061b \u0623\u0628\u0637\u0623 \u0648\u0623\u0639\u0645\u0642 KPI Card \u0645\u0642\u064a\u0627\u0633 \u0648\u0627\u062d\u062f \u0645\u0631\u0643\u0651\u0632 \u062c\u0632\u0621 \u0645\u0646 \u0644\u0648\u062d\u0629 \u0623\u0648 \u0635\u0641\u062d\u0629 \u0635\u063a\u064a\u0631\u0629"},{"location":"terms/dashboard/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Dashboard = \u0634\u0627\u0634\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u062c\u0645\u0639 \u0623\u0647\u0645 \u0645\u0624\u0634\u0631\u0627\u062a\u0643 \u0627\u0644\u0622\u0646. \u0627\u062c\u0645\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a API\u060c \u0627\u0639\u0631\u0636 KPIs \u0645\u062e\u062a\u0635\u0631\u0629\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 SSE/WebSocket \u0644\u062a\u062d\u062f\u064a\u062b \u062d\u064a\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0644\u0648\u062d\u0629 \u0639\u0645\u0644\u064a\u0629 \u062a\u0642\u0648\u062f \u0627\u0644\u0642\u0631\u0627\u0631 \u0628\u062f\u0644 \u0623\u0646 \u062a\u0643\u0648\u0646 \u0645\u062c\u0631\u062f \u0631\u0633\u0645 \u062c\u0645\u064a\u0644. </p>"},{"location":"terms/data-tier/","title":"Data Tier","text":""},{"location":"terms/data-tier/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Data Tier \u2014 \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u062a\u062e\u0632\u064a\u0646.</p>"},{"location":"terms/data-tier/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0627\u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u0629 \u0639\u0646 \u062a\u062e\u0632\u064a\u0646 \u0648\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (DB/Cache/Files/Queues) \u0639\u0628\u0631 \u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629. \u062a\u064f\u0646\u0641\u0651\u0630 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a (ORM/SQL) \u0648\u062a\u0636\u0645\u0646 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a\u060c \u0627\u0644\u0641\u0647\u0627\u0631\u0633\u060c \u0648\u0627\u0644\u0642\u064a\u0648\u062f\u2014\u0645\u0646 \u062f\u0648\u0646 \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644.</p>"},{"location":"terms/data-tier/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0645\u0635\u0627\u062f\u0631 \u0628\u064a\u0627\u0646\u0627\u062a: \u0642\u0648\u0627\u0639\u062f SQL/NoSQL\u060c \u0645\u0644\u0641\u0627\u062a\u060c Redis\u060c \u0631\u0633\u0627\u0626\u0644.  </li> <li>\u062a\u0648\u0641\u0651\u0631 \u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a/\u0648\u062d\u062f\u0627\u062a \u0639\u0645\u0644 (Repositories/UoW) \u062a\u064f\u062e\u0641\u064a \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646.  </li> <li>\u062a\u0636\u0645\u0646 \u0646\u0632\u0627\u0647\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (\u0642\u064a\u0648\u062f \u0648\u0641\u0647\u0627\u0631\u0633) \u0648\u0627\u062a\u0633\u0627\u0642\u064b\u0627 \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u0641\u0634\u0644 (Transactions).  </li> <li>\u062a\u064f\u062d\u0642\u0646 \u0641\u064a \u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u0643\u0640 Interfaces \u062a\u064f\u0646\u0641\u0651\u064e\u0630 \u0647\u0646\u0627.</li> </ul>"},{"location":"terms/data-tier/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u201c\u0627\u0644\u0645\u062e\u0632\u0646\u201d \u0641\u064a \u0627\u0644\u0634\u0631\u0643\u0629: \u0641\u064a\u0647 \u0631\u0641\u0648\u0641 \u0645\u0646\u0638\u0651\u0645\u0629 (\u062c\u062f\u0627\u0648\u0644 \u0648\u0641\u0647\u0627\u0631\u0633)\u060c \u0648\u0633\u064a\u0627\u0633\u0627\u062a \u0625\u062f\u062e\u0627\u0644/\u0625\u062e\u0631\u0627\u062c (\u0642\u064a\u0648\u062f/\u0645\u0639\u0627\u0645\u0644\u0627\u062a). \u0627\u0644\u0645\u0648\u0638\u0641\u0648\u0646 \u0641\u064a \u0627\u0644\u0645\u0643\u0627\u062a\u0628 (\u0627\u0644\u0623\u0639\u0645\u0627\u0644) \u0644\u0627 \u064a\u062a\u0639\u0627\u0645\u0644\u0648\u0646 \u0645\u0639 \u0627\u0644\u0631\u0641\u0648\u0641 \u0645\u0628\u0627\u0634\u0631\u0629\u061b \u064a\u0637\u0644\u0628\u0648\u0646 \u0639\u0628\u0631 \u0628\u0648\u0627\u0628\u0629 \u0645\u0646\u0636\u0628\u0637\u0629.</p>"},{"location":"terms/data-tier/#c-repository-ef-core-db","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u062a\u0646\u0641\u064a\u0630 Repository \u0628\u0640 EF Core + \u062a\u0643\u0648\u064a\u0646 DB + \u0645\u0639\u0627\u0645\u0644\u0629","text":"<p>\u064a\u0639\u062a\u0645\u062f \u0639\u0642\u062f <code>IOrderRepository</code> \u0645\u0646 \u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644\u060c \u0648\u064a\u064f\u062e\u0641\u064a EF/SQL \u062e\u0644\u0641\u0647.</p> C#<pre><code>// Infrastructure.Data \u2014 .NET 8/9\n// dotnet add package Microsoft.EntityFrameworkCore\n// dotnet add package Microsoft.EntityFrameworkCore.SqlServer\n\nusing Microsoft.EntityFrameworkCore;\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel.DataAnnotations.Schema;\n\n// ====== (1) \u0639\u0642\u0648\u062f \u0627\u0644\u0623\u0639\u0645\u0627\u0644 (\u0645\u0631\u062c\u0639 \u0645\u0646 \u0645\u0634\u0631\u0648\u0639 Business) ======\npublic interface IOrderRepository\n{\n    Task&lt;Order?&gt; GetAsync(int id, CancellationToken ct = default);\n    Task AddAsync(Order order, CancellationToken ct = default);\n    Task SaveChangesAsync(CancellationToken ct = default);\n}\n\n// \u0643\u064a\u0627\u0646\u0627\u062a \u0645\u062c\u0627\u0644 \u0645\u0628\u0633\u0651\u0637\u0629 (\u062a\u0639\u0631\u064a\u0641\u0647\u0627 \u0641\u064a Business \u0639\u0627\u062f\u0629\u064b)\npublic class Order\n{\n    private readonly List&lt;OrderLine&gt; _lines = new();\n    public int Id { get; }\n    public string CustomerId { get; }\n    public IReadOnlyList&lt;OrderLine&gt; Lines =&gt; _lines;\n    public decimal Total =&gt; _lines.Sum(l =&gt; l.Price * l.Qty);\n    public Order(int id, string customerId) { Id = id; CustomerId = customerId; }\n    public void AddLine(string sku, int qty, decimal price)\n    {\n        if (qty &lt;= 0 || price &lt;= 0) throw new ArgumentOutOfRangeException();\n        _lines.Add(new OrderLine(sku, qty, price));\n    }\n}\npublic record OrderLine(string Sku, int Qty, decimal Price);\n\n// ====== (2) \u0646\u0645\u0627\u0630\u062c EF (\u062c\u062f\u0627\u0648\u0644) ======\n[Table(\"Orders\")]\npublic class OrderRow\n{\n    [Key] public int Id { get; set; }\n    [Required, MaxLength(64)] public string CustomerId { get; set; } = \"\";\n    public DateTime CreatedUtc { get; set; } = DateTime.UtcNow;\n    public List&lt;OrderLineRow&gt; Lines { get; set; } = new();\n    [Timestamp] public byte[]? RowVersion { get; set; } // \u062a\u0641\u0627\u062f\u064a \u062a\u0639\u0627\u0631\u0636\u0627\u062a \u062a\u062d\u062f\u064a\u062b\n}\n\n[Table(\"OrderLines\")]\npublic class OrderLineRow\n{\n    [Key] public int Id { get; set; }\n    [ForeignKey(nameof(Order))] public int OrderId { get; set; }\n    [Required, MaxLength(32)] public string Sku { get; set; } = \"\";\n    [Range(1, int.MaxValue)] public int Qty { get; set; }\n    [Column(TypeName = \"decimal(18,2)\")] public decimal Price { get; set; }\n    public OrderRow? Order { get; set; }\n}\n\n// ====== (3) DbContext + \u062e\u0631\u0627\u0626\u0637 ======\npublic class AppDb : DbContext\n{\n    public AppDb(DbContextOptions&lt;AppDb&gt; options) : base(options) { }\n    public DbSet&lt;OrderRow&gt; Orders =&gt; Set&lt;OrderRow&gt;();\n    public DbSet&lt;OrderLineRow&gt; OrderLines =&gt; Set&lt;OrderLineRow&gt;();\n\n    protected override void OnModelCreating(ModelBuilder b)\n    {\n        b.Entity&lt;OrderRow&gt;()\n         .HasMany(o =&gt; o.Lines)\n         .WithOne(l =&gt; l.Order!)\n         .HasForeignKey(l =&gt; l.OrderId)\n         .OnDelete(DeleteBehavior.Cascade);\n\n        b.Entity&lt;OrderLineRow&gt;()\n         .HasIndex(l =&gt; new { l.OrderId, l.Sku }); // \u0641\u0647\u0631\u0633 \u0634\u0627\u0626\u0639 \u0644\u0644\u0628\u062d\u062b\n\n        // \u0642\u064a\u0648\u062f \u062a\u062d\u0642\u0642 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 DB\n        b.Entity&lt;OrderLineRow&gt;()\n         .ToTable(t =&gt; t.HasCheckConstraint(\"CK_OrderLine_Qty\", \"[Qty] &gt; 0\"));\n    }\n}\n\n// ====== (4) \u0627\u0644\u062a\u062d\u0648\u064a\u0644 \u0628\u064a\u0646 \u0627\u0644\u0645\u062c\u0627\u0644 \u0648EF ======\nstatic class Map\n{\n    public static OrderRow ToRow(this Order o) =&gt; new OrderRow\n    {\n        Id = o.Id,\n        CustomerId = o.CustomerId,\n        Lines = o.Lines.Select(l =&gt; new OrderLineRow { Sku = l.Sku, Qty = l.Qty, Price = l.Price }).ToList()\n    };\n\n    public static Order ToDomain(this OrderRow r)\n    {\n        var o = new Order(r.Id, r.CustomerId);\n        foreach (var l in r.Lines) o.AddLine(l.Sku, l.Qty, l.Price);\n        return o;\n    }\n}\n\n// ====== (5) Repository \u0628\u062a\u0646\u0641\u064a\u0630 EF Core + \u0645\u0639\u0627\u0645\u0644\u0629 ======\npublic class EfOrderRepository : IOrderRepository\n{\n    private readonly AppDb _db;\n    public EfOrderRepository(AppDb db) =&gt; _db = db;\n\n    public async Task&lt;Order?&gt; GetAsync(int id, CancellationToken ct = default)\n    {\n        var row = await _db.Orders\n            .Include(o =&gt; o.Lines)\n            .AsNoTracking()\n            .FirstOrDefaultAsync(o =&gt; o.Id == id, ct);\n        return row?.ToDomain();\n    }\n\n    public async Task AddAsync(Order order, CancellationToken ct = default)\n        =&gt; await _db.Orders.AddAsync(order.ToRow(), ct);\n\n    public async Task SaveChangesAsync(CancellationToken ct = default)\n        =&gt; await _db.SaveChangesAsync(ct);\n\n    // \u0645\u062b\u0627\u0644 \u0645\u0639\u0627\u0645\u0644\u0629 \u064a\u062f\u0648\u064a\u0629 \u0644\u0639\u062f\u0629 \u0639\u0645\u0644\u064a\u0627\u062a\n    public async Task&lt;bool&gt; SaveManyAtomicAsync(IEnumerable&lt;Order&gt; orders, CancellationToken ct = default)\n    {\n        using var tx = await _db.Database.BeginTransactionAsync(ct);\n        try\n        {\n            foreach (var o in orders) await _db.Orders.AddAsync(o.ToRow(), ct);\n            await _db.SaveChangesAsync(ct);\n            await tx.CommitAsync(ct);\n            return true;\n        }\n        catch\n        {\n            await tx.RollbackAsync(ct);\n            return false;\n        }\n    }\n}\n</code></pre> C#<pre><code>// Program.cs (\u062a\u0643\u0648\u064a\u0646 \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a Web/Composition Root)\n// dotnet add package Microsoft.EntityFrameworkCore.SqlServer\nusing Microsoft.EntityFrameworkCore;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddDbContext&lt;AppDb&gt;(opt =&gt;\n    opt.UseSqlServer(builder.Configuration.GetConnectionString(\"Sql\"))); // \u0623\u0648 \u0645\u0646 Secrets/Env\nbuilder.Services.AddScoped&lt;IOrderRepository, EfOrderRepository&gt;();\n</code></pre> <p>\u0646\u0645\u0648\u0630\u062c SQL (\u062a\u0648\u0644\u064a\u062f \u0645\u0628\u062f\u0626\u064a \u0625\u0646 \u0644\u0645 \u062a\u0633\u062a\u062e\u062f\u0645 Migrations): SQL<pre><code>CREATE TABLE Orders (\n  Id           INT        NOT NULL PRIMARY KEY,\n  CustomerId   NVARCHAR(64) NOT NULL,\n  CreatedUtc   DATETIME2  NOT NULL DEFAULT SYSUTCDATETIME(),\n  RowVersion   ROWVERSION\n);\nCREATE TABLE OrderLines (\n  Id       INT IDENTITY PRIMARY KEY,\n  OrderId  INT NOT NULL REFERENCES Orders(Id) ON DELETE CASCADE,\n  Sku      NVARCHAR(32) NOT NULL,\n  Qty      INT NOT NULL CHECK (Qty &gt; 0),\n  Price    DECIMAL(18,2) NOT NULL\n);\nCREATE INDEX IX_OrderLines_Order_Sku ON OrderLines(OrderId, Sku);\n</code></pre></p> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - \u062a\u064e\u0639\u0631\u0650\u0636 \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u0646\u0641\u064a\u0630\u064b\u0627 \u0644\u0644\u0639\u0642\u062f \u0641\u0642\u0637 (<code>IOrderRepository</code>). - \u062a\u064f\u062f\u064a\u0631 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a\u060c \u0627\u0644\u0642\u064a\u0648\u062f\u060c \u0648\u0627\u0644\u0641\u0647\u0627\u0631\u0633\u061b \u0648\u062a\u064f\u062e\u0641\u064a ORM/SQL \u0639\u0646 \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0627\u0644\u0639\u0644\u064a\u0627.</p>"},{"location":"terms/data-tier/#data-tier_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 Data Tier \u0642\u0648\u064a","text":"<ol> <li>\u0627\u0644\u0639\u0642\u0648\u062f \u0623\u0648\u0644\u064b\u0627: \u0639\u0631\u0651\u0641 <code>IRepository/UoW</code> \u0642\u0631\u0628 \u0627\u0644\u0645\u062c\u0627\u0644\u061b \u0646\u0641\u0651\u0630\u0647\u0627 \u0647\u0646\u0627.  </li> <li>\u0627\u0644\u0645\u062e\u0637\u0637: \u0635\u0645\u0651\u0645 \u062c\u062f\u0627\u0648\u0644/\u0645\u0641\u0627\u062a\u064a\u062d/\u0641\u0647\u0627\u0631\u0633 \u0648\u0642\u064a\u0648\u062f (NOT NULL/UNIQUE/CHECK/FK).  </li> <li>\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a: \u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629 \u0644\u0643\u0644 Use Case\u061b \u0627\u0641\u0635\u0644 \u0627\u0644\u0642\u0631\u0627\u0621\u0629/\u0627\u0644\u0643\u062a\u0627\u0628\u0629 (CQRS) \u0625\u0646 \u0644\u0632\u0645.  </li> <li>\u0627\u0644\u0623\u062f\u0627\u0621: \u0641\u0647\u0627\u0631\u0633 \u0645\u062d\u0633\u0648\u0628\u0629\u060c \u062a\u062a\u0628\u0651\u0639 \u062e\u0637\u0637 \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u060c Paginate\u060c \u0648\u062a\u062c\u0646\u0651\u0628 N+1 (<code>Include</code>/<code>SELECT \u2026 WHERE</code>).  </li> <li>\u0627\u0644\u062a\u0632\u0627\u0645\u0646: <code>rowversion</code>/ETag\u060c \u0648\u062a\u0641\u0627\u062f\u064a \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0645\u0641\u0642\u0648\u062f\u0629 (If-Match/ConcurrencyToken).  </li> <li>\u0627\u0644\u0623\u0633\u0631\u0627\u0631 \u0648\u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a: Connection Pool\u060c Timeouts\u060c Retry \u0645\u0639 Backoff\u060c \u0648\u0623\u0633\u0631\u0627\u0631 \u0641\u064a Vault.  </li> <li>\u0627\u0644\u0647\u062c\u0631\u0629/\u0627\u0644\u0625\u0635\u062f\u0627\u0631: EF Migrations/DbUp \u0645\u0639 \u062e\u0637\u0637 \u0631\u062c\u0648\u0639 (Rollback).  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u0642\u064a\u0627\u0633\u0627\u062a I/O\u060c Latency\u060c Deadlocks\u060c \u0648Errors\u061b \u0633\u062c\u0651\u0644 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0628\u0637\u064a\u0626\u0629.</li> </ol>"},{"location":"terms/data-tier/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0648\u0636\u0639 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u062f\u0627\u062e\u0644 \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (Triggers/Procedures \u062b\u0642\u064a\u0644\u0629) \u0628\u062f\u0644 \u0627\u0644\u0623\u0639\u0645\u0627\u0644.  </li> <li>\u062a\u0633\u0631\u064a\u0628 ORM/DbContext \u0625\u0644\u0649 \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0627\u0644\u0639\u0644\u064a\u0627 (\u0643\u0633\u0631 \u0627\u0644\u062d\u062f\u0648\u062f).  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u0641\u0647\u0627\u0631\u0633 \u0623\u0648 \u0643\u062a\u0627\u0628\u0629 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0628\u0644\u0627 \u062d\u062f\u0648\u062f/\u062a\u0631\u0642\u064a\u0645.  </li> <li>\u062a\u062c\u0627\u0647\u0644 Timeout/Retry/Transactions \u2192 \u062a\u062c\u0645\u0651\u062f/\u0639\u0637\u0628 \u0639\u0646\u062f \u0627\u0644\u0636\u063a\u0637.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Auto-Migrations \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u062f\u0648\u0646 \u0633\u064a\u0637\u0631\u0629.  </li> <li>\u0639\u062f\u0645 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062a\u0632\u0627\u0645\u0646 (RowVersion/ETag) \u2192 \u062a\u0639\u0627\u0631\u0636\u0627\u062a \u0635\u0627\u0645\u062a\u0629.</li> </ul>"},{"location":"terms/data-tier/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Data Tier \u062a\u062e\u0632\u064a\u0646/\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0645\u0639 \u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0648\u0642\u064a\u0648\u062f \u064a\u064f\u062e\u0641\u064a ORM/SQL \u062e\u0644\u0641 \u0639\u0642\u0648\u062f Business Tier \u0645\u0646\u0637\u0642 \u0627\u0644\u0645\u062c\u0627\u0644 \u0648\u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u064a\u0633\u062a\u062f\u0639\u064a \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a/\u0627\u0644\u0639\u0642\u0648\u062f Presentation Tier HTTP/UI \u0648\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0631\u062f \u0628\u0644\u0627 SQL \u0623\u0648 \u0645\u0646\u0637\u0642 \u0645\u062c\u0627\u0644 ORM (EF Core) \u0625\u0646\u062a\u0627\u062c\u064a\u0629 \u0639\u0627\u0644\u064a\u0629 \u0648\u062e\u0631\u064a\u0637\u0629 \u0643\u0627\u0626\u0646-\u0639\u0644\u0627\u0642\u0629 \u0631\u0627\u0642\u0628 \u0627\u0644\u0623\u062f\u0627\u0621 \u0648\u062a\u0641\u0627\u062f\u0649 N+1 Dapper/SQL \u062e\u0627\u0645 \u062a\u062d\u0643\u0645/\u0623\u062f\u0627\u0621 \u0623\u0639\u0644\u0649 \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u064a\u062f\u0648\u064a\u0651\u0629 \u0644\u0644\u0641\u062d\u0648\u0635/\u0627\u0644\u062e\u0631\u0627\u0626\u0637"},{"location":"terms/data-tier/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Data Tier = \u062d\u064a\u062b \u062a\u064f\u062d\u0641\u0638 \u0627\u0644\u062d\u0642\u064a\u0642\u0629 \u0627\u0644\u062f\u0627\u0626\u0645\u0629. \u0623\u062e\u0641\u0650 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u062e\u0644\u0641 \u0639\u0642\u0648\u062f\u060c \u0627\u0636\u0628\u0637 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a/\u0627\u0644\u0642\u064a\u0648\u062f/\u0627\u0644\u0641\u0647\u0627\u0631\u0633\u060c \u0648\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062a\u0632\u0627\u0645\u0646\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0642\u0627\u0639\u062f\u0629 \u0645\u062a\u064a\u0646\u0629 \u062a\u062f\u0639\u0645 \u0637\u0628\u0642\u0627\u062a\u0643 \u0627\u0644\u0639\u0644\u064a\u0627 \u0628\u0623\u0645\u0627\u0646 \u0648\u0623\u062f\u0627\u0621 \u0648\u0627\u0633\u062a\u062f\u0627\u0645\u0629. </p>"},{"location":"terms/dba/","title":"DBA \u2014 Database Administrator","text":""},{"location":"terms/dba/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Database Administrator (DBA) \u2014 \u0645\u0633\u0624\u0648\u0644 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</p>"},{"location":"terms/dba/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0634\u062e\u0635/\u062f\u0648\u0631 \u0645\u0633\u0624\u0648\u0644 \u0639\u0646 \u062a\u062b\u0628\u064a\u062a \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0623\u0645\u0646\u0647\u0627\u060c \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a/\u0627\u0644\u0627\u0633\u062a\u0631\u062c\u0627\u0639\u060c \u0627\u0644\u0636\u0628\u0637 \u0648\u0627\u0644\u0623\u062f\u0627\u0621\u060c \u0648\u0627\u0644\u062a\u0648\u0627\u0641\u0631 \u0627\u0644\u0639\u0627\u0644\u064a. \u064a\u0631\u0627\u0642\u0628 \u0648\u064a\u0624\u062a\u0645\u062a \u0648\u064a\u062e\u0637\u0651\u0637 \u0644\u0644\u0633\u0639\u0629 \u0648\u064a\u0639\u0627\u0644\u062c \u0627\u0644\u0623\u0639\u0637\u0627\u0644.</p>"},{"location":"terms/dba/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u062a\u0648\u0627\u0641\u0631: \u062a\u062c\u0645\u0651\u0639\u0627\u062a/\u0646\u0633\u062e\u060c \u0645\u0631\u0627\u0642\u0628\u0629\u060c \u062a\u0646\u0628\u064a\u0647\u0627\u062a.  </li> <li>\u0627\u0644\u062d\u0645\u0627\u064a\u0629: \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u062f\u0642\u064a\u0642\u0629\u060c \u062a\u0634\u0641\u064a\u0631\u060c \u062a\u062f\u0642\u064a\u0642.  </li> <li>\u0627\u0644\u0633\u0644\u0627\u0645\u0629: \u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0645\u064f\u062c\u0631\u0651\u0628 \u0627\u0644\u0627\u0633\u062a\u0631\u062c\u0627\u0639.  </li> <li>\u0627\u0644\u0623\u062f\u0627\u0621: \u0641\u0647\u0627\u0631\u0633\u060c \u0625\u062d\u0635\u0627\u0621\u0627\u062a\u060c \u0636\u0628\u0637 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a.  </li> <li>\u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a: \u062a\u0631\u062d\u064a\u0644 \u0645\u062e\u0637\u0637\u0627\u062a \u0628\u0622\u0645\u0627\u0646 (Migrations).  </li> <li>\u0627\u0644\u0633\u0639\u0629: \u062a\u062e\u0637\u064a\u0637 \u0645\u0633\u0627\u062d\u0629 \u0648IOPS.  </li> <li>\u0627\u0644\u0623\u062a\u0645\u062a\u0629: \u0645\u0647\u0627\u0645 \u0645\u062c\u062f\u0648\u0644\u0629 \u0648\u062a\u0642\u0627\u0631\u064a\u0631 \u0635\u062d\u0651\u0629.</li> </ul>"},{"location":"terms/dba/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0623\u0645\u064a\u0646 \u0645\u0643\u062a\u0628\u0629 + \u062d\u0627\u0631\u0633 \u0623\u0645\u0646 + \u0645\u064a\u0643\u0627\u0646\u064a\u0643\u064a: \u064a\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u0627\u0644\u0646\u0638\u0627\u0645\u060c \u064a\u0645\u0646\u0639 \u0627\u0644\u062f\u062e\u0648\u0644 \u063a\u064a\u0631 \u0627\u0644\u0645\u0635\u0631\u0651\u062d\u060c \u0648\u064a\u064f\u0635\u0644\u0651\u062d/\u064a\u0636\u0628\u0637 \u0627\u0644\u0622\u0644\u0629 \u0644\u062a\u0628\u0642\u0649 \u0633\u0631\u064a\u0639\u0629.</p>"},{"location":"terms/dba/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u0633\u0643\u0631\u0628\u062a \u0641\u062d\u0635 \u0633\u0631\u064a\u0639 (\u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a \u062d\u062f\u064a\u062b + \u0637\u0644\u0628\u0627\u062a \u0637\u0648\u064a\u0644\u0629)","text":"C#<pre><code>// .NET 8/9 \u2014 dotnet add package Microsoft.Data.SqlClient\nusing System;\nusing System.Data;\nusing Microsoft.Data.SqlClient;\n\nclass DbaQuickCheck\n{\n    static void Main()\n    {\n        var connStr = \"Server=localhost;Database=master;Trusted_Connection=True;TrustServerCertificate=True\";\n        using var cn = new SqlConnection(connStr);\n        cn.Open();\n\n        // 1) \u0622\u062e\u0631 \u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0643\u0627\u0645\u0644 \u0644\u0643\u0644 \u0642\u0627\u0639\u062f\u0629 (\u064a\u0648\u0645/\u0633\u0627\u0639\u0629 \u0645\u0636\u062a)\n        using (var cmd = cn.CreateCommand())\n        {\n            cmd.CommandText = @\"\nSELECT d.name AS [db],\n       DATEDIFF(hour, MAX(b.backup_finish_date), SYSUTCDATETIME()) AS hours_since_full\nFROM sys.databases d\nLEFT JOIN msdb.dbo.backupset b ON b.database_name = d.name AND b.type = 'D'\nGROUP BY d.name\nORDER BY hours_since_full DESC\";\n            using var r = cmd.ExecuteReader();\n            Console.WriteLine(\"== Backup age (hours) ==\");\n            while (r.Read())\n                Console.WriteLine($\"{r[\"db\"],-20}  {r[\"hours_since_full\"],5}\");\n        }\n\n        // 2) \u0623\u0639\u0644\u0649 5 \u0637\u0644\u0628\u0627\u062a \u062c\u0627\u0631\u064a\u0629 \u0632\u0645\u0646\u064b\u0627\n        using (var cmd = cn.CreateCommand())\n        {\n            cmd.CommandText = @\"\nSELECT TOP 5 r.session_id, r.status, r.command, r.wait_type, r.wait_time,\n       r.cpu_time, r.total_elapsed_time, SUBSTRING(t.text,1,200) AS sql_text\nFROM sys.dm_exec_requests r\nCROSS APPLY sys.dm_exec_sql_text(r.sql_handle) t\nWHERE r.session_id &lt;&gt; @@SPID\nORDER BY r.total_elapsed_time DESC\";\n            using var r = cmd.ExecuteReader();\n            Console.WriteLine(\"\\n== Long running requests ==\");\n            while (r.Read())\n                Console.WriteLine($\"sid={r[\"session_id\"]}  elapsed={r[\"total_elapsed_time\"]}ms  sql={r[\"sql_text\"]}\");\n        }\n    }\n}\n</code></pre> <p>\u0645\u0627\u0630\u0627 \u064a\u0641\u064a\u062f\u061f - \u064a\u064f\u0646\u0630\u0631 \u0644\u0648 \u062a\u0623\u062e\u0651\u0631 \u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a. - \u064a\u064f\u0638\u0647\u0631 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0628\u0637\u064a\u0626\u0629 \u0627\u0644\u0622\u0646 \u0644\u062a\u0628\u062f\u0623 \u0627\u0644\u062a\u0634\u062e\u064a\u0635.</p>"},{"location":"terms/dba/#t-sql-dba","title":"\u0623\u0645\u062b\u0644\u0629 T-SQL \u0633\u0631\u064a\u0639\u0629 \u064a\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0627\u0644\u0640DBA","text":"SQL<pre><code>-- \u0646\u0633\u062e\u0629 \u0627\u062d\u062a\u064a\u0627\u0637\u064a\u0629 \u0643\u0627\u0645\u0644\u0629 (SQL Server)\nBACKUP DATABASE MyDb TO DISK = 'E:\\backups\\MyDb_full.bak' WITH INIT, COMPRESSION, CHECKSUM;\n\n-- \u0627\u0633\u062a\u0631\u062c\u0627\u0639 (\u0627\u062e\u062a\u0628\u0631\u0647 \u062f\u0648\u0631\u064a\u064b\u0627!)\nRESTORE VERIFYONLY FROM DISK = 'E:\\backups\\MyDb_full.bak';\n-- RESTORE DATABASE MyDb FROM DISK = '...' WITH MOVE ..., REPLACE;\n\n-- \u0625\u062d\u0635\u0627\u0621\u0627\u062a \u0648\u0627\u0633\u062a\u064a\u0641\u0627\u0621 \u0627\u0644\u0641\u0647\u0627\u0631\u0633 (\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0623\u062f\u0627\u0621)\nUPDATE STATISTICS MyDb WITH FULLSCAN;\nALTER INDEX ALL ON dbo.Orders REBUILD WITH (ONLINE = ON);\n\n-- \u0623\u0642\u0644 \u0635\u0644\u0627\u062d\u064a\u0629 \u0644\u0627\u0632\u0645\u0629 (\u0645\u0628\u062f\u0623 \u0627\u0644\u0623\u0642\u0644 \u0627\u0645\u062a\u064a\u0627\u0632\u064b\u0627)\nCREATE USER appUser FOR LOGIN appLogin;\nEXEC sp_addrolemember 'db_datareader', 'appUser';\nEXEC sp_addrolemember 'db_datawriter', 'appUser';\n</code></pre>"},{"location":"terms/dba/#dba","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u064a\u0642\u0648\u0645 \u0628\u0647\u0627 \u0627\u0644\u0640DBA","text":"<ol> <li>\u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0627\u062a: \u062a\u062b\u0628\u064a\u062a/\u062a\u0631\u0642\u064a\u0629 \u0645\u062d\u0643\u0648\u0645\u0629\u060c \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0648\u0627\u0644\u0640TempDB\u060c \u0648\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0639\u0627\u0645\u0629.  </li> <li>\u0627\u0644\u0623\u0645\u0646: \u0645\u0635\u0627\u062f\u0642\u0629\u060c \u0623\u062f\u0648\u0627\u0631\u060c \u062a\u0634\u0641\u064a\u0631 (TDE/At-Rest)\u060c \u0623\u0633\u0631\u0627\u0631 \u0641\u064a Vault.  </li> <li>\u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a/\u0627\u0644\u0627\u0633\u062a\u0631\u062c\u0627\u0639: \u0633\u064a\u0627\u0633\u0629 <code>Full + Diff + Log</code>\u060c \u0648\u062c\u062f\u0648\u0644\u0629\u060c \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0633\u062a\u0631\u062c\u0627\u0639.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u0645\u0624\u0634\u0631\u0627\u062a (CPU/IO/Latch/Waits/Lag)\u060c \u0648\u062a\u062a\u0628\u0639 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0628\u0637\u064a\u0626\u0629.  </li> <li>\u0627\u0644\u0623\u062f\u0627\u0621: \u062a\u0635\u0645\u064a\u0645 \u0641\u0647\u0627\u0631\u0633\u060c \u062a\u062d\u062f\u064a\u062b \u0625\u062d\u0635\u0627\u0621\u0627\u062a\u060c \u0645\u0631\u0627\u062c\u0639\u0629 \u062e\u0637\u0637 \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u060c \u062d\u0635\u0631 N+1.  </li> <li>\u0627\u0644\u062a\u0648\u0627\u0641\u0631 \u0627\u0644\u0639\u0627\u0644\u064a: Always On / Replication / Failover / Backups \u062c\u063a\u0631\u0627\u0641\u064a\u0629.  </li> <li>\u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a: \u0645\u0633\u0627\u0631 \u062a\u0631\u062d\u064a\u0644 \u0645\u0646\u0638\u0645 (Migrations)\u060c \u0645\u0631\u0627\u062c\u0639\u0629 \u062a\u0623\u062b\u064a\u0631\u060c \u0646\u0627\u0641\u0630\u0629 \u0635\u064a\u0627\u0646\u0629.  </li> <li>\u0627\u0644\u062a\u0648\u062b\u064a\u0642: \u062e\u0631\u0627\u0626\u0637 \u0642\u0648\u0627\u0639\u062f\u060c \u0633\u064a\u0627\u0633\u0627\u062a\u060c \u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0623\u0639\u0637\u0627\u0644\u060c RPO/RTO.</li> </ol>"},{"location":"terms/dba/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0628\u062f\u0648\u0646 \u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0633\u062a\u0631\u062c\u0627\u0639.  </li> <li>\u062d\u0633\u0627\u0628\u0627\u062a \u062a\u0637\u0628\u064a\u0642 \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a sysadmin.  </li> <li>\u0641\u0647\u0627\u0631\u0633 \u0643\u062b\u064a\u0631\u0629/\u0642\u0644\u064a\u0644\u0629 \u0628\u0644\u0627 \u0642\u064a\u0627\u0633\u061b \u0625\u062d\u0635\u0627\u0621\u0627\u062a \u0642\u062f\u064a\u0645\u0629.  </li> <li>\u062a\u0639\u062f\u064a\u0644 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u062f\u0648\u0646 \u0646\u0627\u0641\u0630\u0629/\u062e\u0637\u0629 \u0631\u062c\u0648\u0639.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0645\u0631\u0627\u0642\u0628\u0629 Waits/IO \u0648\u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0641\u0642\u0637 \u0639\u0644\u0649 CPU.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0623\u062f\u0648\u0627\u062a GUI \u0641\u0642\u0637\u061b \u063a\u064a\u0627\u0628 \u0633\u0643\u0631\u0628\u062a\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0625\u0639\u0627\u062f\u0629.  </li> <li>\u062e\u0644\u0637 \u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a DBA \u0645\u0639 \u062a\u0637\u0628\u064a\u0642 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u062f\u0627\u062e\u0644 DB (Triggers \u0645\u0639\u0642\u062f\u0629 \u0628\u0644\u0627 \u062f\u0627\u0639\u064d).</li> </ul>"},{"location":"terms/dba/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 DBA \u062a\u0634\u063a\u064a\u0644/\u0623\u0645\u0646/\u062a\u0648\u0641\u0631/\u0623\u062f\u0627\u0621 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a\u060c \u0645\u0631\u0627\u0642\u0628\u0629\u060c \u0636\u0628\u0637\u060c \u0627\u0633\u062a\u0631\u062c\u0627\u0639 Database Engineer \u062a\u0635\u0645\u064a\u0645/\u0628\u0646\u0627\u0621 \u062d\u0644\u0648\u0644 DB \u0648\u0623\u062a\u0645\u062a\u0629 \u0642\u0631\u064a\u0628 \u0645\u0646 \u0627\u0644\u062a\u0637\u0648\u064a\u0631/\u0627\u0644\u0623\u062f\u0648\u0627\u062a Data Engineer \u062e\u0637\u0648\u0637 \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u062a\u062d\u0648\u064a\u0644\u0627\u062a/ETL \u064a\u0633\u062a\u0647\u0644\u0643 DBs\u061b \u0644\u064a\u0633 \u0645\u0634\u063a\u0651\u0644\u0647\u0627 \u0627\u0644\u0623\u0633\u0627\u0633\u064a SysAdmin/DevOps \u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629/\u0646\u0634\u0631 \u0639\u0627\u0645 \u064a\u062a\u0639\u0627\u0648\u0646 \u0645\u0639 DBA \u0644\u062a\u0648\u0641\u064a\u0631 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 SRE \u0645\u0648\u062b\u0648\u0642\u064a\u0629/\u0642\u0627\u0628\u0644\u064a\u0629 \u0645\u0644\u0627\u062d\u0638\u0629 \u064a\u0642\u064a\u0633 SLO/SLI \u0645\u0639 \u0641\u0631\u0642 \u0627\u0644\u0640DB"},{"location":"terms/dba/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>DBA \u064a\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a\u0643 \u0622\u0645\u0646\u0629\u060c \u0645\u062a\u0627\u062d\u0629\u060c \u0648\u0633\u0631\u064a\u0639\u0629. \u064a\u0624\u062a\u0645\u062a \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0648\u064a\u062e\u062a\u0628\u0631 \u0627\u0644\u0627\u0633\u062a\u0631\u062c\u0627\u0639\u060c \u064a\u0631\u0627\u0642\u0628\u060c \u064a\u0636\u0628\u0637 \u0627\u0644\u0641\u0647\u0627\u0631\u0633 \u0648\u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a\u060c \u0648\u064a\u064f\u062f\u064a\u0631 \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0648\u0627\u0644\u062a\u0648\u0627\u0641\u0631\u2014\u0644\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u0629 \u062a\u062f\u0639\u0645 \u0627\u0644\u0639\u0645\u0644 \u062f\u0648\u0646 \u0627\u0646\u0642\u0637\u0627\u0639. </p>"},{"location":"terms/debugger/","title":"Debugger","text":""},{"location":"terms/debugger/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Debugger \u2014 \u0645\u0635\u062d\u0651\u0650\u062d (\u0623\u062f\u0627\u0629 \u062a\u0646\u0641\u064a\u0630 \u062e\u0637\u0648\u0629 \u0628\u062e\u0637\u0648\u0629 \u0644\u0641\u062d\u0635 \u062d\u0627\u0644\u0629 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c).</p>"},{"location":"terms/debugger/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u062f\u0627\u0629 \u062a\u0633\u0645\u062d \u0644\u0643 \u0628\u062a\u0648\u0642\u064a\u0641 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0641\u064a \u0623\u064a \u0633\u0637\u0631\u060c \u062a\u0641\u062d\u0651\u0635 \u0627\u0644\u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a\u060c \u062a\u062a\u0628\u0651\u0639 \u0627\u0644\u0645\u0643\u062f\u0651\u0633 (Call Stack)\u060c \u0648\u0627\u0644\u0633\u064a\u0631 \u0633\u0637\u0631\u064b\u0627 \u0628\u0633\u0637\u0631 \u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0645\u0646\u0637\u0642\u064a\u0629 \u0648\u0633\u0644\u0648\u0643 \u0627\u0644\u0643\u0648\u062f \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644.</p>"},{"location":"terms/debugger/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0636\u0639 \u0646\u0642\u0637\u0629 \u062a\u0648\u0642\u0651\u0641 (Breakpoint) \u0641\u064a \u0633\u0637\u0631 \u0645\u0639\u064a\u0651\u0646\u061b \u0639\u0646\u062f \u0627\u0644\u0648\u0635\u0648\u0644 \u064a\u062a\u0648\u0642\u0651\u0641 \u0627\u0644\u062a\u0646\u0641\u064a\u0630.  </li> <li>\u062a\u0631\u0649 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u062d\u064a\u0651\u0629 \u0644\u0644\u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a \u0648\u062a\u0639\u062f\u0651\u0644\u0647\u0627 \u0625\u0646 \u0644\u0632\u0645.  </li> <li>\u062a\u0645\u0634\u064a \u062f\u0627\u062e\u0644 \u0627\u0644\u062f\u0627\u0644\u0629 (Step Into) \u0623\u0648 \u062a\u062a\u062c\u0627\u0648\u0632\u0647\u0627 (Step Over) \u0623\u0648 \u062a\u062e\u0631\u062c \u0645\u0646\u0647\u0627 (Step Out).  </li> <li>\u062a\u0636\u064a\u0641 \u0634\u0631\u0637\u064b\u0627 \u0644\u0644\u0646\u0642\u0637\u0629 (i == 3) \u0623\u0648 \u062a\u0648\u0642\u0641\u064b\u0627 \u0639\u0646\u062f \u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u0645\u0639\u064a\u0651\u0646.  </li> <li>\u062a\u0633\u062c\u0651\u0644 \u0631\u0633\u0627\u0626\u0644 \u0628\u062f\u0648\u0646 Console \u0639\u0628\u0631 Tracepoint/Logpoint.</li> </ul>"},{"location":"terms/debugger/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0643\u0627\u0645\u064a\u0631\u0627 \u0628\u0637\u064a\u0626\u0629 \u0641\u064a \u0645\u0628\u0627\u0631\u0627\u0629: \u062a\u0648\u0642\u0641 \u0627\u0644\u0644\u0642\u0637\u0629 \u0639\u0646\u062f \u0627\u0644\u0644\u062d\u0638\u0629 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u062a\u0643\u0628\u0651\u0631 \u0627\u0644\u0635\u0648\u0631\u0629 \u0644\u062a\u0631\u0649 \u0645\u0646 \u0644\u0645\u0633 \u0627\u0644\u0643\u0631\u0629\u060c \u062b\u0645 \u062a\u0643\u0645\u0644 \u0627\u0644\u0644\u0639\u0628.</p>"},{"location":"terms/debugger/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0635\u062d\u0651\u062d","text":"<p>C#<pre><code>// \u062c\u0631\u0651\u0628: \u0636\u0639 Breakpoint \u0639\u0644\u0649 \u0627\u0644\u0633\u0637\u0631 \u0627\u0644\u0630\u064a \u064a\u0633\u062a\u062f\u0639\u064a SumSquares\u060c \u062b\u0645 \u0627\u0633\u062a\u062e\u062f\u0645 F10/F11 \u0644\u0644\u062a\u0642\u062f\u0651\u0645.\n// F9: \u062a\u0641\u0639\u064a\u0644/\u0625\u0644\u063a\u0627\u0621 \u0646\u0642\u0637\u0629 \u0627\u0644\u062a\u0648\u0642\u0641 | F5: \u062a\u0634\u063a\u064a\u0644 \u0645\u0639 \u0627\u0644\u062a\u0635\u062d\u064a\u062d | F10: Step Over | F11: Step Into\nusing System;\n\nclass Program\n{\n    static void Main()\n    {\n        int n = 5;\n        int total = SumSquares(n); // \u2190 \u0636\u0639 \u0646\u0642\u0637\u0629 \u062a\u0648\u0642\u0651\u0641 \u0647\u0646\u0627 (Breakpoint)\n        Console.WriteLine($\"Total = {total}\");\n    }\n\n    static int SumSquares(int n)\n    {\n        int total = 0;\n        for (int i = 1; i &lt;= n; i++) // \u0631\u0627\u0642\u0628 i \u0648 total \u0641\u064a \u0646\u0627\u0641\u0630\u0629 Watch\n        {\n            total += i * i;\n\n            // \u0645\u062b\u0627\u0644 \"\u0634\u0631\u0637 \u0627\u0644\u062a\u0648\u0642\u0641\": \u0627\u062c\u0639\u0644 \u0627\u0644\u0640 Breakpoint \u064a\u062a\u0648\u0642\u0651\u0641 \u0641\u0642\u0637 \u0639\u0646\u062f\u0645\u0627 i == 3\n            // \u0641\u064a VS/VS Code: \u0627\u0646\u0642\u0631 \u064a\u0645\u064a\u0646 \u0639\u0644\u0649 \u0627\u0644\u0646\u0642\u0637\u0629 \u0648\u0623\u0636\u0641 Condition: i == 3\n        }\n\n        return total;\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0639\u0646\u062f \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0639\u0627\u062f\u064a: <code>Total = 55</code> (\u0623\u064a 1\u00b2+2\u00b2+3\u00b2+4\u00b2+5\u00b2). \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u062a\u0635\u062d\u064a\u062d \u0633\u062a\u0631\u0649 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a \u0648\u062a\u062a\u062d\u0643\u0651\u0645 \u0628\u0627\u0644\u062a\u0646\u0642\u0651\u0644 \u0633\u0637\u0631\u064b\u0627 \u0628\u0633\u0637\u0631.</p>"},{"location":"terms/debugger/#debugger_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Debugger \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0641\u0639\u0651\u0644 Breakpoint \u0639\u0644\u0649 \u0627\u0644\u0623\u0633\u0637\u0631 \u0627\u0644\u0645\u0634\u062a\u0628\u0647 \u0628\u0647\u0627\u061b \u062b\u0645 \u062d\u0648\u0651\u0644 \u0628\u0639\u0636\u0647\u0627 \u0625\u0644\u0649 Conditional \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0625\u064a\u0642\u0627\u0641 \u0627\u0644\u0636\u0648\u0636\u0627\u0626\u064a.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Watch/Locals/Autos \u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0627\u0644\u0642\u064a\u0645\u060c \u0648Immediate \u0644\u062a\u062c\u0631\u064a\u0628 \u062a\u0639\u0628\u064a\u0631\u0627\u062a \u0635\u063a\u064a\u0631\u0629.  </li> <li>\u0631\u0627\u0642\u0628 Call Stack \u0644\u0641\u0647\u0645 \u0633\u0644\u0633\u0644\u0629 \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0627\u0644\u062a\u064a \u0642\u0627\u062f\u062a \u0644\u0644\u0633\u0637\u0631 \u0627\u0644\u062d\u0627\u0644\u064a.  </li> <li>\u062c\u0631\u0651\u0628 Exception Breakpoints (\u062a\u0648\u0642\u0651\u0641 \u0639\u0646\u062f \u0631\u0645\u064a NullReferenceException \u0645\u062b\u0644\u064b\u0627).  </li> <li>\u0628\u062f\u0651\u0644 \u0628\u0639\u0636 \u0627\u0644\u0646\u0642\u0627\u0637 \u0625\u0644\u0649 Tracepoints/Logpoints \u0644\u0637\u0628\u0627\u0639\u0629 \u0631\u0633\u0627\u0644\u0629 \u0628\u062f\u0648\u0646 \u0625\u064a\u0642\u0627\u0641 \u0627\u0644\u062a\u062a\u0646\u0641\u064a\u0630.  </li> <li>\u0627\u0644\u062a\u0642\u0637 Dump \u0623\u0648 \u0627\u0633\u062a\u0639\u0645\u0644 Attach to Process \u0644\u0645\u0634\u0643\u0644\u0627\u062a \u062a\u062d\u062f\u062b \u0641\u0642\u0637 \u0641\u064a \u0628\u064a\u0626\u0629 \u0645\u0639\u064a\u0651\u0646\u0629.  </li> <li>\u0628\u0639\u062f \u0627\u0644\u0625\u0635\u0644\u0627\u062d\u060c \u0623\u0636\u0650\u0641 \u0627\u062e\u062a\u0628\u0627\u0631\u064b\u0627 \u064a\u0645\u0646\u0639 \u0639\u0648\u062f\u0629 \u0627\u0644\u062e\u0637\u0623.</li> </ul>"},{"location":"terms/debugger/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0640 Console.WriteLine \u0641\u0642\u0637 \u0628\u062f\u0644 \u0627\u0633\u062a\u0639\u0645\u0627\u0644 \u0627\u0644\u0645\u0635\u062d\u0651\u062d \u0628\u0642\u062f\u0631\u0627\u062a\u0647 \u0627\u0644\u0643\u0627\u0645\u0644\u0629.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0625\u0644\u063a\u0627\u0621 Breakpoints \u0623\u0648 \u062a\u0631\u0643\u0647\u0627 \u062f\u0648\u0646 \u0634\u0631\u0648\u0637 \u0641\u064a \u062d\u0644\u0642\u0627\u062a \u0643\u0628\u064a\u0631\u0629 \u2192 \u0625\u0628\u0637\u0627\u0621 \u0627\u0644\u062a\u0646\u0641\u064a\u0630.  </li> <li>\u062a\u062c\u0627\u0647\u0644 Call Stack \u0648\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u062a\u062e\u0645\u064a\u0646 \u0628\u062f\u0644\u0627\u064b \u0645\u0646 \u062a\u062a\u0628\u0651\u0639 \u0645\u0633\u0627\u0631 \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a.</li> </ul>"},{"location":"terms/debugger/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Code Editor \u062a\u062d\u0631\u064a\u0631 \u0646\u0635 \u0627\u0644\u0643\u0648\u062f \u0641\u0642\u0637 \u062e\u0641\u064a\u0641\u061b \u0642\u062f \u064a\u062d\u062a\u0627\u062c \u0625\u0636\u0627\u0641\u0629 Debugger \u0623\u0648 \u062a\u0634\u063a\u064a\u0644 \u062e\u0627\u0631\u062c\u064a Debugger \u062a\u0646\u0641\u064a\u0630 \u062e\u0637\u0648\u0629 \u0628\u062e\u0637\u0648\u0629 \u0648\u0641\u062d\u0635 \u0627\u0644\u062d\u0627\u0644\u0629 \u0646\u0642\u0627\u0637 \u062a\u0648\u0642\u0651\u0641/Watch/Call Stack/\u0634\u0631\u0648\u0637/\u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a/Logpoints IDE \u062a\u062d\u0631\u064a\u0631 + \u0628\u0646\u0627\u0621 + \u062a\u0635\u062d\u064a\u062d + \u0625\u062f\u0627\u0631\u0629 \u0645\u0634\u0631\u0648\u0639 \u064a\u062a\u0636\u0645\u0651\u0646 \u0645\u0635\u062d\u0651\u062d\u064b\u0627 \u0645\u062f\u0645\u062c\u064b\u0627 \u0639\u0627\u062f\u0629\u064b \u0648\u062a\u0643\u0627\u0645\u0644 \u0623\u062f\u0648\u0627\u062a \u0648\u0627\u0633\u0639"},{"location":"terms/debugger/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Debugger \u0647\u0648 \u0639\u062f\u0633\u062a\u0643 \u0627\u0644\u0645\u0643\u0628\u0651\u0631\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0648\u062f: \u064a\u0648\u0642\u0641 \u0627\u0644\u0632\u0645\u0646\u060c \u0648\u064a\u064f\u0631\u064a\u0643 \u0645\u0627 \u064a\u062d\u062f\u062b \u0641\u0639\u0644\u064b\u0627. \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0628\u0630\u0643\u0627\u0621 \u0639\u0628\u0631 \u0646\u0642\u0627\u0637 \u062a\u0648\u0642\u0641 \u0645\u0634\u0631\u0648\u0637\u0629\u060c \u0645\u0631\u0627\u0642\u0628\u0629 \u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a\u060c \u0648\u062a\u062a\u0628\u0639 \u0627\u0644\u0645\u0643\u062f\u0651\u0633 \u0644\u062a\u0635\u0644 \u0625\u0644\u0649 \u0623\u0635\u0644 \u0627\u0644\u0645\u0634\u0643\u0644\u0629 \u0628\u0633\u0631\u0639\u0629.</p>"},{"location":"terms/decryption/","title":"Decryption","text":""},{"location":"terms/decryption/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Decryption \u2014 \u0641\u0643\u0651 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 (\u0625\u0631\u062c\u0627\u0639 \u0627\u0644\u0646\u0635\u0651 \u0627\u0644\u0645\u064f\u0639\u0645\u0651\u0649 \u0625\u0644\u0649 \u0646\u0635\u0651\u064d \u0648\u0627\u0636\u062d \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0641\u062a\u0627\u062d \u0635\u062d\u064a\u062d).</p>"},{"location":"terms/decryption/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0639\u0645\u0644\u064a\u0629 \u0645\u0639\u0627\u0643\u0633\u0629 \u0644\u0644\u062a\u0634\u0641\u064a\u0631: \u062a\u0623\u062e\u0630 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0634\u0641\u0651\u0631\u0629 \u0648\u0627\u0644\u0645\u0641\u062a\u0627\u062d/\u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0648\u062a\u064f\u0639\u064a\u062f \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0623\u0635\u0644\u064a. \u0641\u064a \u0627\u0644\u0645\u062e\u0637\u0637\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629 (AEAD) \u064a\u062a\u062d\u0642\u0642 \u0641\u0643\u0651 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0623\u064a\u0636\u064b\u0627 \u0645\u0646 \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0648\u0623\u0635\u0627\u0644\u062a\u0647\u0627.</p>"},{"location":"terms/decryption/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u062f\u064a\u0643 \u0635\u0646\u062f\u0648\u0642 \u0645\u0642\u0641\u0648\u0644 (ciphertext) \u0648\u0645\u0641\u062a\u0627\u062d.  </li> <li>\u062a\u0641\u062a\u062d \u0627\u0644\u0635\u0646\u062f\u0648\u0642 \u0641\u062a\u0633\u062a\u0639\u064a\u062f \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0643\u0645\u0627 \u0643\u0627\u0646\u062a.  </li> <li>\u0625\u0646 \u063a\u064a\u0651\u0631 \u0623\u062d\u062f\u064c \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0635\u0646\u062f\u0648\u0642 \u0623\u0648 \u0643\u0627\u0646 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u062e\u0627\u0637\u0626\u064b\u0627 \u2192 \u062a\u0641\u0634\u0644 \u0627\u0644\u0639\u0645\u0644\u064a\u0629.  </li> <li>\u0646\u0648\u0639\u0627\u0646 \u0634\u0627\u0626\u0639\u0627\u0646:</li> <li>\u062a\u0645\u0627\u062b\u0644\u064a (Symmetric): \u0646\u0641\u0633 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0644\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0627\u0644\u0641\u0643 (\u0645\u062b\u0644 AES-GCM).  </li> <li>\u063a\u064a\u0631 \u062a\u0645\u0627\u062b\u0644\u064a (Asymmetric): \u0645\u0641\u062a\u0627\u062d \u0639\u0627\u0645 \u0644\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u062e\u0627\u0635 \u0644\u0644\u0641\u0643 (\u0645\u062b\u0644 RSA-OAEP).</li> </ul>"},{"location":"terms/decryption/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062c\u0647\u0627\u0632 \u062e\u0632\u0646\u0629 \u0628\u0643\u0648\u062f \u0633\u0631\u0651\u064a: \u0625\u0646 \u0623\u062f\u062e\u0644\u062a \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0635\u062d\u064a\u062d \u062a\u0641\u062a\u062d \u0627\u0644\u062e\u0632\u0646\u0629. \u0644\u0648 \u0623\u062e\u0637\u0623\u062a \u0628\u0627\u0644\u0643\u0648\u062f \u0623\u0648 \u062d\u0627\u0648\u0644\u062a \u0627\u0644\u0639\u0628\u062b \u0628\u0627\u0644\u0642\u0641\u0644\u060c \u0644\u0646 \u062a\u064f\u0641\u062a\u062d\u2014\u0648\u0623\u062d\u064a\u0627\u0646\u064b\u0627 \u064a\u0637\u0644\u0642 \u0625\u0646\u0630\u0627\u0631 (\u0641\u0634\u0644 \u062a\u062d\u0642\u0642 \u0627\u0644\u0633\u0644\u0627\u0645\u0629).</p>"},{"location":"terms/decryption/#c-aes-gcm","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (AES-GCM \u2014 \u0641\u0643\u0651 \u0641\u0642\u0637 \u0644\u0644\u062d\u0650\u0645\u0644 \u0627\u0644\u0645\u062c\u0645\u0651\u0639)","text":"<p>\u0646\u0641\u062a\u0631\u0636 \u0623\u0646 \u0627\u0644\u062d\u0650\u0645\u0644 \u0628\u0635\u064a\u063a\u0629: <code>SALT(16) | NONCE(12) | TAG(16) | CIPHERTEXT(...)</code> C#<pre><code>using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic static class Decryptor\n{\n    public static string DecryptAesGcm(string base64, string password)\n    {\n        byte[] pack = Convert.FromBase64String(base64);\n\n        byte[] salt  = new byte[16];\n        byte[] nonce = new byte[12];\n        byte[] tag   = new byte[16];\n        byte[] ct    = new byte[pack.Length - salt.Length - nonce.Length - tag.Length];\n\n        int o = 0;\n        Buffer.BlockCopy(pack, o, salt, 0, salt.Length);                o += salt.Length;\n        Buffer.BlockCopy(pack, o, nonce, 0, nonce.Length);              o += nonce.Length;\n        Buffer.BlockCopy(pack, o, tag,   0, tag.Length);                o += tag.Length;\n        Buffer.BlockCopy(pack, o, ct,    0, ct.Length);\n\n        using var kdf = new Rfc2898DeriveBytes(password, salt, 100_000, HashAlgorithmName.SHA256);\n        byte[] key = kdf.GetBytes(32); // 256-bit\n\n        byte[] pt = new byte[ct.Length];\n        using var aes = new AesGcm(key);\n        // \u064a\u0631\u0645\u064a CryptographicException \u0639\u0646\u062f \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u062e\u0627\u0637\u0626\u0629 \u0623\u0648 \u0639\u0628\u062b \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\n        aes.Decrypt(nonce, ct, tag, pt);\n\n        return Encoding.UTF8.GetString(pt);\n    }\n}\n\n// \u0645\u062b\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645:\n// string plaintext = Decryptor.DecryptAesGcm(tokenBase64, \"Strong#Passw0rd!\");\n</code></pre></p>"},{"location":"terms/decryption/#c-rsa-oaep","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0645\u062e\u062a\u0635\u0631 (RSA-OAEP \u2014 \u0641\u0643\u0651 \u0628\u0645\u0641\u062a\u0627\u062d \u062e\u0627\u0635)","text":"C#<pre><code>using System.Security.Cryptography;\nusing System.Text;\n\n// pemPrivateKey: \u0646\u0635 PEM \u0644\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635 (PKCS#8)\nstring DecryptRsaOaep(string base64, string pemPrivateKey)\n{\n    byte[] ct = Convert.FromBase64String(base64);\n\n    using var rsa = RSA.Create();\n    rsa.ImportFromPem(pemPrivateKey);\n\n    // OAEP \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 SHA-256 (\u0623\u0641\u0636\u0644 \u0645\u0646 PKCS#1 v1.5)\n    byte[] pt = rsa.Decrypt(ct, RSAEncryptionPadding.OaepSHA256);\n    return Encoding.UTF8.GetString(pt);\n}\n</code></pre>"},{"location":"terms/decryption/#checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0641\u0643\u0651 \u0622\u0645\u0646 (Checklist)","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u062e\u0637\u0637 \u062d\u062f\u064a\u062b AEAD (\u0645\u062b\u0644 AES-GCM \u0623\u0648 ChaCha20-Poly1305) \u0644\u0633\u0644\u0627\u0645\u0629+\u0633\u0631\u064a\u0651\u0629 \u0645\u0639\u064b\u0627.  </li> <li>\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0635\u064a\u063a\u0629 \u0627\u0644\u062d\u0650\u0645\u0644 (\u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u062d\u0642\u0648\u0644: salt/nonce/tag/ct) \u0648\u062b\u0628\u0651\u062a \u062a\u0646\u0633\u064a\u0642\u064b\u0627 \u0645\u0648\u062d\u0651\u062f\u064b\u0627.  </li> <li>\u0644\u0627 \u062a\u064f\u0639\u064a\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Nonce/IV \u0645\u0639 \u0646\u0641\u0633 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0641\u064a \u0627\u0644\u062a\u0645\u0627\u062b\u0644\u064a.  </li> <li>\u062e\u0632\u0651\u0646 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0641\u064a Key Vault/HSM\u060c \u0648\u0644\u0627 \u062a\u064f\u0636\u0645\u0651\u0646\u0647\u0627 \u0641\u064a \u0627\u0644\u0643\u0648\u062f/\u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639.  </li> <li>\u0639\u0627\u0644\u0650\u062c \u0627\u0644\u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a \u0643\u0641\u0634\u0644 \u0623\u0645\u0646\u064a \u0645\u062d\u062a\u0645\u0644 \u0648\u0633\u062c\u0651\u0644 \u0627\u0644\u062d\u062f\u062b \u062f\u0648\u0646 \u062a\u0633\u0631\u064a\u0628 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0651\u0627\u0633\u0629.  </li> <li>\u062e\u0637\u0651\u0637 \u0644\u0640 \u062a\u062f\u0648\u064a\u0631 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0648\u062a\u0631\u062d\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0642\u062f\u064a\u0645\u0629 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627.  </li> <li>\u0641\u064a RSA\u060c \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0626\u0645\u064b\u0627 OAEP \u0628\u062f\u0644 \u0627\u0644\u0645\u062e\u0637\u0637 \u0627\u0644\u0642\u062f\u064a\u0645 (PKCS#1 v1.5).</li> </ul>"},{"location":"terms/decryption/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 \u0641\u0643\u0651 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0641\u0643\u0651 \u0627\u0644\u062a\u0631\u0645\u064a\u0632 (Base64/UTF-8) \u2014 \u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0644\u064a\u0633 \u0623\u0645\u0627\u0646\u064b\u0627.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0642\u062f\u064a\u0645\u0629/\u0623\u0648\u0636\u0627\u0639 \u063a\u064a\u0631 \u0622\u0645\u0646\u0629 (AES-ECB\u060c \u0623\u0648 RSA \u0628\u062f\u0648\u0646 OAEP).  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0641\u0634\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0641\u064a AEAD \u0648\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639\u0647 \u0643\u0640 \u201c\u062a\u062d\u0630\u064a\u0631\u201d \u0628\u062f\u0644 \u0645\u0646\u0639 \u0627\u0644\u0642\u0631\u0627\u0621\u0629.  </li> <li>\u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Nonce \u0623\u0648 \u0645\u0641\u0627\u062a\u064a\u062d \u0633\u0627\u0643\u0646\u0629 \u0644\u0648\u0642\u062a \u0637\u0648\u064a\u0644 \u062f\u0648\u0646 \u062a\u062f\u0648\u064a\u0631.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0645\u0628\u0627\u0634\u0631\u0629 \u062f\u0648\u0646 KDF (PBKDF2/Argon2) \u0648Salt.</li> </ul>"},{"location":"terms/decryption/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Encryption \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0644\u064a\u0633\u062a\u0631\u062c\u0639\u0647 \u0645\u0646 \u064a\u0645\u0644\u0643 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u064a\u0641\u0636\u064e\u0651\u0644 AEAD (\u0645\u062b\u0644 AES-GCM) \u0648\u0625\u062f\u0627\u0631\u0629 \u0645\u0641\u0627\u062a\u064a\u062d \u0633\u0644\u064a\u0645\u0629 Decryption \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0646\u0635\u0651 \u0627\u0644\u0648\u0627\u0636\u062d \u0648\u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0633\u0644\u0627\u0645\u0629 \u064a\u0641\u0634\u0644 \u0639\u0646\u062f \u0645\u0641\u062a\u0627\u062d \u062e\u0627\u0637\u0626/\u0639\u0628\u062b \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (AEAD) Encoding \u062a\u0645\u062b\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0644\u0646\u0642\u0644/\u0627\u0644\u062a\u062e\u0632\u064a\u0646 (Base64/UTF-8) \u0644\u064a\u0633 \u0623\u0645\u0627\u0646\u064b\u0627\u061b \u0644\u0627 \u064a\u0645\u0646\u0639 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 Hashing \u0628\u0635\u0645\u0629 \u0623\u062d\u0627\u062f\u064a\u0629 \u0627\u0644\u0627\u062a\u0651\u062c\u0627\u0647 \u0644\u0644\u062a\u062d\u0642\u0642 \u0644\u0627 \u064a\u064f\u0641\u0643\u061b \u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0639 Salt/KDF \u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631"},{"location":"terms/decryption/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Decryption \u064a\u0639\u064a\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0625\u0644\u0649 \u0623\u0635\u0644\u0647\u0627 \u0641\u0642\u0637 \u0639\u0646\u062f \u0627\u0645\u062a\u0644\u0627\u0643 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0635\u062d\u064a\u062d \u0648\u0646\u062c\u0627\u062d \u062a\u062d\u0642\u0651\u0642 \u0627\u0644\u0633\u0644\u0627\u0645\u0629. \u0627\u0644\u062a\u0632\u0645 \u0628\u0645\u062e\u0637\u0637\u0627\u062a \u062d\u062f\u064a\u062b\u0629 (AEAD/RSA-OAEP)\u060c \u0635\u064a\u063a \u062d\u0650\u0645\u0644 \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0625\u062f\u0627\u0631\u0629 \u0645\u0641\u0627\u062a\u064a\u062d \u0622\u0645\u0646\u0629 \u0644\u062a\u0641\u0627\u062f\u064a \u0627\u0644\u0641\u0634\u0644 \u0648\u0627\u0644\u062a\u0633\u0631\u064a\u0628.</p>"},{"location":"terms/dependencyinjection/","title":"Dependency Injection","text":""},{"location":"terms/dependencyinjection/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Dependency Injection (DI) \u2014 \u062d\u0642\u0646 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a.</p>"},{"location":"terms/dependencyinjection/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u0633\u0644\u0648\u0628 \u064a\u0641\u0635\u0644 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u0639\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627. \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f (Dependency) \u064a\u064f\u0645\u0631\u0651\u064e\u0631 \u0645\u0646 \u0627\u0644\u062e\u0627\u0631\u062c (Container/Caller) \u0628\u062f\u0644 <code>new</code> \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0648\u062f. \u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u062a\u0641\u0643\u064a\u0643 \u0627\u0631\u062a\u0628\u0627\u0637\u060c \u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0633\u0647\u0644\u060c \u0648\u0642\u0627\u0628\u0644\u064a\u0629 \u062a\u0628\u062f\u064a\u0644.</p>"},{"location":"terms/dependencyinjection/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0623\u064a \u0635\u0646\u0641 \u064a\u062d\u062a\u0627\u062c \u062e\u062f\u0645\u0629\u061f \u0644\u0627 \u064a\u064f\u0646\u0634\u0626\u0647\u0627 \u0628\u0646\u0641\u0633\u0647. \u064a\u0633\u062a\u0642\u0628\u0644\u0647\u0627 \u0641\u064a \u0627\u0644\u0628\u0646\u0651\u0627\u0621 (Constructor).  </li> <li>\u064a\u0648\u062c\u062f Container \u064a\u0639\u0631\u0650\u0641 \u0643\u064a\u0641 \u064a\u0646\u0634\u0626 \u0643\u0644 \u062e\u062f\u0645\u0629 (Lifetimes/\u062a\u0647\u064a\u0626\u0629).  </li> <li>\u0641\u064a ASP.NET Core\u060c \u0627\u0644\u062d\u0627\u0648\u064a\u0629 \u0645\u062f\u0645\u062c\u0629 (<code>Microsoft.Extensions.DependencyInjection</code>).  </li> <li>\u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u062d\u0642\u0646: Constructor (\u0627\u0644\u0645\u0641\u0636\u0644)\u060c \u062b\u0645 Method/Property \u0644\u0644\u062d\u0627\u0644\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629.</li> </ul>"},{"location":"terms/dependencyinjection/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0641\u064a \u0627\u0644\u0645\u0646\u0632\u0644 \u0644\u0627 \u062a\u064f\u0648\u0644\u0651\u062f \u0643\u0647\u0631\u0628\u0627\u0621. \u062a\u062a\u0651\u0635\u0644 \u0628\u0645\u0642\u0628\u0633 (DI). \u063a\u064a\u0651\u0631\u062a \u0634\u0631\u0643\u0629 \u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621\u061f \u0644\u0627 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0623\u062c\u0647\u0632\u0629\u2014\u0641\u0642\u0637 \u0627\u0644\u0645\u0642\u0628\u0633 \u064a\u0645\u062f\u0651\u0643 \u0628\u0627\u0644\u0645\u0635\u062f\u0631 \u0627\u0644\u062c\u062f\u064a\u062f.</p>"},{"location":"terms/dependencyinjection/#c-di","title":"\u0645\u062b\u0627\u0644 C# \u0645\u062e\u062a\u0635\u0631 \u2014 \u0642\u0628\u0644/\u0628\u0639\u062f DI + \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062e\u062f\u0645\u0627\u062a + \u0627\u062e\u062a\u0628\u0627\u0631","text":""},{"location":"terms/dependencyinjection/#1-di","title":"(1) \u0642\u0628\u0644 DI \u2014 \u0627\u0642\u062a\u0631\u0627\u0646 \u0642\u0648\u064a","text":"C#<pre><code>public class OrderService\n{\n    public string PlaceOrder(decimal amount)\n    {\n        // \u0627\u0642\u062a\u0631\u0627\u0646 \u0642\u0648\u064a: \u0635\u0639\u0628 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631/\u0627\u0644\u062a\u0628\u062f\u064a\u0644\n        var gateway = new PaymentGateway();      // new \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0648\u062f\n        if (!gateway.Charge(amount)) return \"fail\";\n        return \"ok\";\n    }\n}\n\npublic class PaymentGateway\n{\n    public bool Charge(decimal amount) =&gt; amount &gt; 0; // \u062a\u0628\u0633\u064a\u0637\n}\n</code></pre>"},{"location":"terms/dependencyinjection/#2-di","title":"(2) \u0628\u0639\u062f DI \u2014 \u0648\u0627\u062c\u0647\u0629 + \u062d\u0642\u0646 \u0639\u0628\u0631 \u0627\u0644\u0628\u0646\u0651\u0627\u0621","text":"C#<pre><code>public interface IPaymentGateway { bool Charge(decimal amount); }\n\npublic class PaymentGateway : IPaymentGateway\n{\n    public bool Charge(decimal amount) =&gt; amount &gt; 0; // \u062a\u0628\u0633\u064a\u0637\n}\n\npublic class OrderService\n{\n    private readonly IPaymentGateway _gateway;\n    public OrderService(IPaymentGateway gateway) =&gt; _gateway = gateway;\n\n    public string PlaceOrder(decimal amount)\n        =&gt; _gateway.Charge(amount) ? \"ok\" : \"fail\";\n}\n</code></pre>"},{"location":"terms/dependencyinjection/#3-aspnet-core","title":"(3) \u062a\u0633\u062c\u064a\u0644 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0641\u064a ASP.NET Core","text":"C#<pre><code>// Program.cs  (.NET 8/9)\nvar builder = WebApplication.CreateBuilder(args);\n\n// Lifetimes: Transient (\u0643\u0644 \u0645\u0631\u0651\u0629) / Scoped (\u0644\u0643\u0644 \u0637\u0644\u0628) / Singleton (\u0637\u064a\u0644\u0629 \u0639\u0645\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642)\nbuilder.Services.AddScoped&lt;IPaymentGateway, PaymentGateway&gt;();\nbuilder.Services.AddScoped&lt;OrderService&gt;();\n\nvar app = builder.Build();\n\n// Minimal API: \u0627\u0644\u062d\u0642\u0646 \u0645\u0628\u0627\u0634\u0631\u0629 \u0641\u064a \u0627\u0644\u0645\u0639\u0627\u0644\u062c\napp.MapPost(\"/orders\", (decimal amount, OrderService svc)\n    =&gt; Results.Ok(new { status = svc.PlaceOrder(amount) }));\n\napp.Run();\n</code></pre>"},{"location":"terms/dependencyinjection/#4-fake","title":"(4) \u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u062d\u062f\u0627\u062a \u2014 \u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0628\u0640 Fake","text":"C#<pre><code>// xUnit\npublic class OrderServiceTests\n{\n    private class FakeGateway : IPaymentGateway\n    {\n        private readonly bool _ok;\n        public FakeGateway(bool ok) =&gt; _ok = ok;\n        public bool Charge(decimal amount) =&gt; _ok;\n    }\n\n    [Fact] public void Succeeds_When_Gateway_Ok()\n        =&gt; Assert.Equal(\"ok\", new OrderService(new FakeGateway(true)).PlaceOrder(100));\n\n    [Fact] public void Fails_When_Gateway_Fails()\n        =&gt; Assert.Equal(\"fail\", new OrderService(new FakeGateway(false)).PlaceOrder(100));\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0633\u062a\u0628\u062f\u0627\u0644 <code>PaymentGateway</code> \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u0641\u064a \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0628\u062f\u0648\u0646 \u062a\u0639\u062f\u064a\u0644 <code>OrderService</code>. \u0647\u0630\u0627 \u0647\u0648 \u0627\u0644\u062a\u0641\u0643\u064a\u0643 \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u0627\u0644\u0630\u064a \u064a\u0642\u062f\u0645\u0647 DI.</p>"},{"location":"terms/dependencyinjection/#di","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f DI","text":"<ol> <li>\u0639\u0631\u0651\u0641 \u0648\u0627\u062c\u0647\u0627\u062a \u0644\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0628\u062f\u064a\u0644 (Email, Payment, Clock, Repo\u2026).  </li> <li>\u062d\u0642\u0646 \u0639\u0628\u0631 \u0627\u0644\u0628\u0646\u0651\u0627\u0621 \u0641\u0642\u0637 \u0645\u0627 \u064a\u0644\u0632\u0645. \u062a\u062c\u0646\u0651\u0628 \u201cGod Constructor\u201d (\u0642\u0627\u0626\u0645\u0629 \u0643\u0628\u064a\u0631\u0629).  </li> <li>\u0642\u062f\u0651\u0645 Composition Root \u0648\u0627\u062d\u062f\u064b\u0627 (\u0645\u062b\u0644 <code>Program.cs</code>) \u0644\u062a\u0633\u062c\u064a\u0644 \u0643\u0644 \u0627\u0644\u062e\u062f\u0645\u0627\u062a.  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0640Lifetime \u0627\u0644\u0635\u062d\u064a\u062d:  </li> <li>Singleton: \u062b\u0627\u0628\u062a \u0648\u062e\u0641\u064a\u0641 \u0648\u062e\u064a\u0648\u0637 \u0622\u0645\u0646 (\u0645\u062b\u0644\u0627\u064b <code>HttpClientFactory</code> \u0646\u0641\u0633\u0647\u0627).  </li> <li>Scoped: \u0644\u0643\u0644 \u0637\u0644\u0628 \u0648\u064a\u0628 (\u0634\u0627\u0626\u0639 \u0645\u0639 <code>DbContext</code>).  </li> <li>Transient: \u062e\u0641\u064a\u0641 \u0642\u0635\u064a\u0631 \u0627\u0644\u0639\u0645\u0631.  </li> <li>\u0644\u0627 \u062a\u062d\u0642\u0646 Scoped \u062f\u0627\u062e\u0644 Singleton (\u062a\u0633\u0631\u064a\u0628 \u0639\u0645\u0631). \u0625\u0646 \u0627\u062d\u062a\u062c\u062a\u060c \u0627\u0633\u062a\u062e\u062f\u0645 Factory/<code>IServiceScopeFactory</code>.  </li> <li>\u0623\u0636\u0650\u0641 \u0648\u0627\u062c\u0647\u0627\u062a \u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0644\u0623\u0634\u064a\u0627\u0621 \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 (\u0627\u0644\u0648\u0642\u062a\u060c I/O\u060c HTTP) \u0644\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0639\u0634\u0648\u0627\u0626\u064a\u0629.</li> </ol>"},{"location":"terms/dependencyinjection/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0627\u0644\u062d\u0627\u0648\u064a\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0648\u062f (<code>IServiceProvider.GetService</code>) = Service Locator (\u0645\u0636\u0627\u062f \u0646\u0645\u0637).  </li> <li>Lifetimes \u062e\u0627\u0637\u0626\u0629 \u2192 \u062a\u0633\u0631\u064a\u0628\u0627\u062a/\u062a\u0636\u0627\u0631\u0628 \u062d\u0627\u0644\u0629 (\u062e\u0635\u0648\u0635\u064b\u0627 \u0645\u0639 <code>DbContext</code>).  </li> <li>\u062a\u0633\u062c\u064a\u0644\u0627\u062a \u0645\u0643\u0631\u0631\u0629 \u0623\u0648 \u062f\u0648\u0627\u0626\u0631 \u0625\u0639\u062a\u0645\u0627\u062f (Circular Dependency).  </li> <li>\u0645\u0646\u0637\u0642 \u0625\u0639\u062f\u0627\u062f \u062b\u0642\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0628\u0646\u0651\u0627\u0621 \u2192 \u0627\u062c\u0639\u0644\u0647 \u0641\u064a Factory \u0623\u0648 Hosted Service.  </li> <li>\u062d\u0642\u0646 \u0627\u0644\u0643\u062b\u064a\u0631 \u0641\u064a \u0635\u0646\u0641 \u0648\u0627\u062d\u062f \u2192 \u0641\u0643\u0651\u0647 \u0625\u0644\u0649 \u062e\u062f\u0645\u0627\u062a \u0623\u0635\u063a\u0631.</li> </ul>"},{"location":"terms/dependencyinjection/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Dependency Injection (DI) \u0641\u0635\u0644 \u0627\u0644\u0625\u0646\u0634\u0627\u0621 \u0639\u0646 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Constructor Injection + Lifetimes + Composition Root IoC Container \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0625\u0646\u0634\u0627\u0621 \u0648\u0627\u0644\u062d\u0642\u0646 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0645\u062f\u0645\u062c \u0641\u064a ASP.NET Core\u061b \u064a\u062f\u0639\u0645 Scopes Service Locator \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u062e\u062f\u0645\u0629 \u0645\u0646 \u0627\u0644\u062d\u0627\u0648\u064a\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0648\u062f \u064a\u064f\u0636\u0639\u0641 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u0648\u0636\u0648\u062d\u061b \u064a\u064f\u0646\u0635\u062d \u0628\u062a\u062c\u0646\u0651\u0628\u0647 Factory \u0625\u0646\u0634\u0627\u0621 \u0643\u0627\u0626\u0646\u0627\u062a \u0628\u0645\u0646\u0637\u0642 \u0645\u062e\u0635\u0651\u0635 \u062c\u064a\u062f \u0639\u0646\u062f\u0645\u0627 \u064a\u0639\u062a\u0645\u062f \u0627\u0644\u0625\u0646\u0634\u0627\u0621 \u0639\u0644\u0649 \u0645\u062f\u062e\u0644\u0627\u062a \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 Manual Wiring <code>new</code> \u064a\u062f\u0648\u064a \u0628\u062f\u0648\u0646 \u062d\u0627\u0648\u064a\u0629 \u0628\u0633\u064a\u0637 \u0644\u0645\u0634\u0627\u0631\u064a\u0639 \u0635\u063a\u064a\u0631\u0629\u061b \u064a\u0646\u0647\u0627\u0631 \u0645\u0639 \u0627\u0644\u062d\u062c\u0645/\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631"},{"location":"terms/dependencyinjection/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>DI \u064a\u062c\u0639\u0644 \u0627\u0644\u0643\u0648\u062f \u0642\u0627\u0628\u0644\u064b\u0627 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u0628\u062f\u064a\u0644 \u0639\u0628\u0631 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0628\u062f\u0644 \u0625\u0646\u0634\u0627\u0626\u0647\u0627. \u0633\u062c\u0651\u0644 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0628\u0640\u0640 Lifetime \u0645\u0646\u0627\u0633\u0628\u060c \u0627\u062d\u0642\u0646 \u0639\u0628\u0631 \u0627\u0644\u0628\u0646\u0651\u0627\u0621\u060c \u0648\u0627\u0628\u0642\u0650 \u0627\u0644\u062a\u0648\u0635\u064a\u0644 \u0641\u064a Composition Root\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0635\u0645\u064a\u0645 \u0623\u0646\u0638\u0641\u060c \u0642\u0627\u0628\u0644\u064a\u0629 \u0635\u064a\u0627\u0646\u0629 \u0623\u0639\u0644\u0649\u060c \u0648\u062a\u063a\u064a\u064a\u0631 \u0623\u0633\u0647\u0644 \u062f\u0648\u0646 \u0643\u0633\u0631 \u0627\u0644\u0646\u0638\u0627\u0645.</p>"},{"location":"terms/deployment/","title":"Deployment","text":""},{"location":"terms/deployment/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Deployment \u2014 \u0646\u0634\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0625\u0644\u0649 \u0628\u064a\u0626\u0629 \u062a\u0634\u063a\u064a\u0644 (Server/VM/Container/Kubernetes/PAAS).</p>"},{"location":"terms/deployment/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0639\u0645\u0644\u064a\u0629 \u0648\u0636\u0639 \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0627\u0644\u062c\u0627\u0647\u0632\u0629 (\u062d\u0632\u0645\u0629/\u0635\u0648\u0631\u0629) \u0641\u064a \u0627\u0644\u0628\u064a\u0626\u0629\u060c \u0645\u0639 \u062e\u0637\u0648\u0627\u062a \u0622\u0645\u0646\u0629: \u062a\u0647\u064a\u0626\u0629\u060c \u0641\u062d\u0635 \u0635\u062d\u064a\u0651\u0629\u060c \u062a\u0648\u062c\u064a\u0647 \u062d\u0631\u0643\u0629\u060c \u0645\u0631\u0627\u0642\u0628\u0629\u060c \u0648\u062e\u0637\u0651\u0629 \u0631\u062c\u0648\u0639.</p>"},{"location":"terms/deployment/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0628\u0646\u064a Artifact (\u0645\u062b\u0644\u0627\u064b \u0635\u0648\u0631\u0629 OCI).  </li> <li>\u0646\u0631\u0641\u0639\u0647\u0627 \u0625\u0644\u0649 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639.  </li> <li>\u0646\u0646\u0634\u0631\u0647\u0627 \u0639\u0644\u0649 \u0627\u0644\u0647\u062f\u0641 (VM/K8s/PAAS).  </li> <li>\u0646\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062c\u0627\u0647\u0632\u064a\u0629 \u0642\u0628\u0644 \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u062d\u0631\u0643\u0629.  </li> <li>\u0646\u0631\u0627\u0642\u0628 \u0648\u0646\u0645\u0644\u0643 Rollback \u0641\u0648\u0631\u064a.</li> </ul>"},{"location":"terms/deployment/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0641\u062a\u062a\u0627\u062d \u0645\u0637\u0639\u0645 \u062c\u062f\u064a\u062f: \u0646\u062c\u064e\u0647\u0651\u0632 \u0627\u0644\u0645\u0637\u0628\u062e\u060c \u0646\u062e\u062a\u0628\u0631 \u0627\u0644\u063a\u0627\u0632/\u0627\u0644\u0645\u0627\u0621\u060c \u0646\u0641\u062a\u062d \u0627\u0644\u0623\u0628\u0648\u0627\u0628 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627\u060c \u0646\u0631\u0627\u0642\u0628 \u0631\u0636\u0627 \u0627\u0644\u0632\u0628\u0627\u0626\u0646\u060c \u0648\u0646\u0628\u0642\u064a \u0628\u0627\u0628 \u0627\u0644\u0631\u062c\u0648\u0639 \u0645\u0641\u062a\u0648\u062d\u064b\u0627 \u0625\u0646 \u0638\u0647\u0631 \u0639\u0637\u0644.</p>"},{"location":"terms/deployment/#c-healthreadinesswarm-upshutdown","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u062e\u062f\u0645\u0629 \u062c\u0627\u0647\u0632\u0629 \u0644\u0644\u0646\u0634\u0631 \u0627\u0644\u0622\u0645\u0646 (Health/Readiness/Warm-up/Shutdown)","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// - /healthz: \u0641\u062d\u0635 \u062d\u064a\u0651\u0629 (\u0644\u0644\u0645\u0648\u0627\u0632\u0650\u0646/\u0627\u0644\u0640 Orchestrator).\n// - /ready  : \u062c\u0627\u0647\u0632\u064a\u0629 \u0628\u0639\u062f \u0625\u062a\u0645\u0627\u0645 Warm-up.\n// - /       : \u062a\u0642\u0631\u064a\u0631 \u0625\u0635\u062f\u0627\u0631/\u0645\u062b\u064a\u0644.\n// - \u0625\u0634\u0627\u0631\u0629 \u0625\u064a\u0642\u0627\u0641 \u0631\u0634\u064a\u0642: \u064a\u062c\u0639\u0644 /ready \u064a\u0641\u0634\u0644 \u0644\u0643\u064a \u064a\u062e\u0631\u062c \u0645\u0646 \u0627\u0644\u062a\u062c\u0645\u064a\u0639 \u0642\u0628\u0644 \u0627\u0644\u0625\u0646\u0647\u0627\u0621.\n\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddSingleton&lt;ReadinessState&gt;();\nbuilder.Services.AddHostedService&lt;WarmupService&gt;(); // \u062a\u0646\u0641\u064a\u0630 \u0645\u0647\u0627\u0645 \u062a\u0647\u064a\u0626\u0629 \u0642\u0628\u0644 \u0642\u0628\u0648\u0644 \u0627\u0644\u062d\u0631\u0643\u0629\n\nvar app = builder.Build();\n\nvar state = app.Services.GetRequiredService&lt;ReadinessState&gt;();\nvar lifetime = app.Lifetime;\n\n// \u0639\u0646\u062f \u0628\u062f\u0621 \u0627\u0644\u0625\u064a\u0642\u0627\u0641: \u0623\u0639\u0644\u0646 \u0639\u062f\u0645 \u0627\u0644\u062c\u0627\u0647\u0632\u064a\u0629 \u0644\u0643\u064a \u064a\u0648\u0642\u0641 \u0627\u0644\u0640 LB \u0627\u0644\u062a\u0648\u062c\u064a\u0647 \u0644\u0647\u0630\u0627 \u0627\u0644\u0645\u062b\u064a\u0644\nlifetime.ApplicationStopping.Register(() =&gt;\n{\n    state.Ready = false;\n    Console.WriteLine(\"Graceful shutdown: mark not-ready.\");\n});\n\napp.MapGet(\"/\", () =&gt; new\n{\n    service = \"orders-api\",\n    version = typeof(Program).Assembly.GetName().Version?.ToString() ?? \"0.0.0\",\n    instance = Environment.GetEnvironmentVariable(\"HOSTNAME\") ?? Environment.MachineName,\n    startedAtUtc = state.StartedAtUtc\n});\n\napp.MapGet(\"/healthz\", () =&gt; Results.Ok(new { status = \"healthy\" })); // \u062d\u064a\u0651\u0629 \u0623\u0633\u0627\u0633\u064a\u0629\n\napp.MapGet(\"/ready\", () =&gt;\n{\n    return state.Ready\n        ? Results.Ok(new { ready = true })\n        : Results.StatusCode(StatusCodes.Status503ServiceUnavailable);\n});\n\napp.Run();\n\n// \u062d\u0627\u0644\u0629 \u0627\u0644\u062c\u0627\u0647\u0632\u064a\u0629 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0629\npublic class ReadinessState\n{\n    public bool Ready { get; set; } = false;\n    public DateTime StartedAtUtc { get; } = DateTime.UtcNow;\n}\n\n// \u062e\u062f\u0645\u0629 Warm-up: \u062a\u062d\u0645\u064a\u0644 \u0642\u0648\u0627\u0644\u0628/\u0643\u0627\u0634/\u0627\u062a\u0635\u0627\u0644 DB \u0625\u0644\u062e \u0642\u0628\u0644 \u0642\u0628\u0648\u0644 \u0627\u0644\u062d\u0631\u0643\u0629\npublic class WarmupService : IHostedService\n{\n    private readonly ReadinessState _state;\n    public WarmupService(ReadinessState state) =&gt; _state = state;\n\n    public async Task StartAsync(CancellationToken ct)\n    {\n        Console.WriteLine(\"Warm-up: connecting to dependencies...\");\n        await Task.Delay(1500, ct); // \u0645\u062d\u0627\u0643\u0627\u0629 \u062a\u0647\u064a\u0626\u0629\n        _state.Ready = true;\n        Console.WriteLine(\"Warm-up: READY.\");\n    }\n    public Task StopAsync(CancellationToken ct) =&gt; Task.CompletedTask;\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - /ready \u0644\u0627 \u064a\u0631\u062c\u0639 200 \u0625\u0644\u0627 \u0628\u0639\u062f \u0627\u0644\u062a\u0647\u064a\u0626\u0629. - \u0639\u0646\u062f \u0627\u0644\u0625\u064a\u0642\u0627\u0641\u060c /ready \u064a\u0635\u0628\u062d 503 \u2192 \u0627\u0644\u0645\u0648\u0627\u0632\u0650\u0646 \u064a\u062e\u0631\u062c \u0627\u0644\u0645\u062b\u064a\u0644 \u0645\u0646 \u0627\u0644\u062a\u062c\u0645\u064a\u0639 \u0642\u0628\u0644 \u0642\u062a\u0644 \u0627\u0644\u0639\u0645\u0644\u064a\u0629. - \u0647\u0630\u0627 \u064a\u0645\u0643\u0651\u0646 Rolling/Blue-Green/Canary \u0628\u062f\u0648\u0646 \u0627\u0646\u0642\u0637\u0627\u0639.</p>"},{"location":"terms/deployment/#pipeline","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0646\u0634\u0631 \u0645\u0648\u062b\u0648\u0642 (Pipeline \u0645\u062e\u062a\u0635\u0631)","text":"<ol> <li>Build: \u062a\u0648\u0644\u064a\u062f Artifact (\u062d\u0632\u0645\u0629/\u0635\u0648\u0631\u0629) + \u0623\u0631\u0642\u0627\u0645 \u0625\u0635\u062f\u0627\u0631.  </li> <li>Test: \u0648\u062d\u062f\u0627\u062a/\u062a\u0643\u0627\u0645\u0644/\u0623\u0645\u0646/\u062a\u062d\u0644\u064a\u0644 \u0633\u0627\u0643\u0646 \u0641\u064a CI.  </li> <li>Package: \u0635\u0648\u0631\u0629 OCI \u0645\u0648\u0642\u0651\u0639\u0629 (SBOM \u0648\u0641\u062d\u0635 \u062b\u063a\u0631\u0627\u062a).  </li> <li>Deploy: \u0625\u0644\u0649 \u0628\u064a\u0626\u0629 staging \u0623\u0648\u0644\u0627\u064b.  </li> <li>Verify: \u0641\u062d\u0648\u0635 /healthz \u0648/ready + \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062f\u062e\u0648\u0644\u064a\u0651\u0629 \u0622\u0644\u064a\u0629.  </li> <li>Traffic: \u062d\u0648\u0644 \u062c\u0632\u0621\u064b\u0627 \u0645\u0646 \u0627\u0644\u062d\u0631\u0643\u0629 (Canary) \u0623\u0648 \u0628\u062f\u0651\u0644 \u0627\u0644\u0644\u0648\u0646 (Blue/Green).  </li> <li>Observe: \u0633\u062c\u0644\u0627\u062a/\u0642\u064a\u0627\u0633\u0627\u062a/P95 \u0623\u062e\u0637\u0627\u0621.  </li> <li>Rollback: \u0632\u0631 \u0631\u062c\u0648\u0639 \u0648\u0627\u0636\u062d (\u0625\u0635\u062f\u0627\u0631 \u0633\u0627\u0628\u0642/ReplicaSet \u0633\u0627\u0628\u0642).  </li> </ol> <p>\u0623\u0648\u0627\u0645\u0631 \u062a\u062d\u0642\u0642 \u0633\u0631\u064a\u0639\u0629 \u0628\u0639\u062f \u0627\u0644\u0646\u0634\u0631: Bash<pre><code>curl -f http://app/healthz   # \u064a\u062c\u0628 200\ncurl -f http://app/ready     # \u064a\u062c\u0628 200 \u0642\u0628\u0644 \u062a\u0648\u062c\u064a\u0647 \u0627\u0644\u062d\u0631\u0643\u0629\n</code></pre></p>"},{"location":"terms/deployment/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0639\u062f\u0645 \u0627\u0644\u062a\u0641\u0631\u064a\u0642 \u0628\u064a\u0646 \u062d\u064a\u0651\u0629 \u0648\u062c\u0627\u0647\u0632\u064a\u0629 \u2192 \u0627\u0646\u0642\u0637\u0627\u0639 \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a.  </li> <li>\u0646\u0634\u0631 \u064a\u062f\u0648\u064a \u062f\u0648\u0646 Rollback \u0645\u0639\u0644\u0648\u0645.  </li> <li>\u0633\u0631\u0651/\u0645\u0641\u0627\u062a\u064a\u062d \u062f\u0627\u062e\u0644 \u0627\u0644\u0635\u0648\u0631\u0629/\u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u2192 \u0627\u0643\u062a\u0634\u0627\u0641 \u0645\u062a\u0623\u062e\u0631 \u0644\u0644\u0623\u0639\u0637\u0627\u0644.  </li> <li>\u0625\u0637\u0644\u0627\u0642 Big-Bang \u0628\u062f\u0644 \u062a\u062f\u0631\u0651\u062c \u0627\u0644\u062d\u0631\u0643\u0629 (Canary) \u0623\u0648 Blue/Green.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 <code>latest</code> \u0628\u062f\u0644 \u0648\u0633\u0648\u0645/\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u062b\u0627\u0628\u062a\u0629.</li> </ul>"},{"location":"terms/deployment/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Deployment \u0648\u0636\u0639 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0641\u064a \u0627\u0644\u0628\u064a\u0626\u0629 \u0648\u062a\u0634\u063a\u064a\u0644\u0647 \u064a\u0634\u0645\u0644 \u062a\u0647\u064a\u0626\u0629\u060c \u0641\u062d\u0648\u0635\u060c \u062a\u0648\u062c\u064a\u0647 \u062d\u0631\u0643\u0629\u060c \u0645\u0631\u0627\u0642\u0628\u0629\u060c Rollback Release \u0625\u062a\u0627\u062d\u0629 \u0627\u0644\u0645\u064a\u0632\u0629 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0642\u062f \u062a\u064f\u0641\u0639\u0644 \u0639\u0628\u0631 Feature Flags \u0628\u0639\u062f \u0646\u0634\u0631 \u0627\u0644\u0643\u0648\u062f Continuous Delivery \u062c\u0627\u0647\u0632\u064a\u0629 \u062f\u0627\u0626\u0645\u0629 \u0644\u0644\u0646\u0634\u0631 \u0627\u0644\u0646\u0634\u0631 \u064a\u062a\u0637\u0644\u0628 \u0625\u0634\u0627\u0631\u0629 \u0628\u0634\u0631\u064a\u0629 \u0635\u063a\u064a\u0631\u0629 Continuous Deployment \u0646\u0634\u0631 \u062a\u0644\u0642\u0627\u0626\u064a \u0644\u0643\u0644 \u062a\u063a\u064a\u064a\u0631 \u0646\u0627\u062c\u062d \u064a\u0639\u062a\u0645\u062f \u0628\u0648\u0627\u0628\u0627\u062a \u062c\u0648\u062f\u0629 \u0642\u0648\u064a\u0629 Blue/Green \u0628\u064a\u0626\u062a\u0627\u0646\u060c \u062a\u0628\u062f\u064a\u0644 \u062d\u0631\u0643\u0629 \u0628\u064a\u0646\u0647\u0645\u0627 \u0631\u062c\u0648\u0639 \u0641\u0648\u0631\u064a \u0628\u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u0640 LB Canary \u0646\u0633\u0628\u0629 \u0635\u063a\u064a\u0631\u0629 \u0645\u0646 \u0627\u0644\u062d\u0631\u0643\u0629 \u0623\u0648\u0644\u064b\u0627 \u064a\u0642\u0644\u0651\u0644 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0628\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0627\u0644\u062a\u062f\u0631\u064a\u062c\u064a\u0629 Rolling Update \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u062a\u062f\u0631\u064a\u062c\u064a \u0644\u0644\u0640 Pods/Instances \u064a\u062d\u062a\u0627\u062c Readiness/Graceful shutdown \u0633\u0644\u064a\u0645\u0629"},{"location":"terms/deployment/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Deployment \u0627\u0644\u0646\u0627\u062c\u062d = Artifact \u062c\u064a\u062f + \u0635\u062d\u0651\u0629/\u062c\u0627\u0647\u0632\u064a\u0629 + \u062a\u0648\u062c\u064a\u0647 \u062d\u0631\u0643\u0629 \u0645\u062f\u0631\u0648\u0633 + \u0645\u0631\u0627\u0642\u0628\u0629 + \u0631\u062c\u0648\u0639 \u0633\u0631\u064a\u0639. \u062c\u0647\u0651\u0632 \u062e\u062f\u0645\u062a\u0643 \u0628\u0646\u0642\u0627\u0637 \u0641\u062d\u0635 \u0648\u062a\u0647\u064a\u0626\u0629 \u0648\u0625\u064a\u0642\u0627\u0641 \u0631\u0634\u064a\u0642\u060c \u062b\u0645 \u0627\u062e\u062a\u0631 \u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 (Canary/Blue-Green/Rolling) \u0644\u062a\u0646\u0634\u0631 \u0628\u062f\u0648\u0646 \u062a\u0648\u0642\u0641 \u0648\u0645\u0639 \u062b\u0642\u0629 \u0623\u0639\u0644\u0649.</p>"},{"location":"terms/devops/","title":"DevOps","text":""},{"location":"terms/devops/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>DevOps \u2014 Development + Operations (\u0627\u0644\u062a\u0637\u0648\u064a\u0631 + \u0627\u0644\u062a\u0634\u063a\u064a\u0644).</p>"},{"location":"terms/devops/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062b\u0642\u0627\u0641\u0629 \u0648\u0645\u0645\u0627\u0631\u0633\u0627\u062a \u062a\u0648\u062d\u0651\u062f \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0639\u0628\u0631 \u0623\u062a\u0645\u062a\u0629 \u0648\u062a\u0639\u0627\u0648\u0646 \u0648\u0645\u0631\u0627\u0642\u0628\u0629 \u0645\u0633\u062a\u0645\u0631\u0629. \u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u0633\u0631\u0639\u0629 \u0625\u0635\u062f\u0627\u0631 \u0623\u0639\u0644\u0649\u060c \u062c\u0648\u062f\u0629 \u0623\u0641\u0636\u0644\u060c \u0648\u0627\u0633\u062a\u0642\u0631\u0627\u0631 \u0645\u0639 \u0642\u062f\u0631\u0629 \u0633\u0631\u064a\u0639\u0629 \u0639\u0644\u0649 \u0627\u0644\u0627\u0633\u062a\u0631\u062c\u0627\u0639.</p>"},{"location":"terms/devops/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0633\u0631 \u0627\u0644\u062d\u0648\u0627\u062c\u0632 \u0628\u064a\u0646 \u0627\u0644\u0641\u0631\u0642. \u0641\u0631\u064a\u0642 \u0648\u0627\u062d\u062f \u064a\u0645\u0644\u0643 \u0627\u0644\u0643\u0648\u062f \u0648\u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644.  </li> <li>CI/CD: \u0628\u0646\u0627\u0621\u060c \u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0646\u0634\u0631 \u062a\u0644\u0642\u0627\u0626\u064a \u0645\u0639 \u062d\u0648\u0627\u062c\u0632 \u062c\u0648\u062f\u0629.  </li> <li>Infra as Code\u060c \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629/\u0627\u0644\u062a\u062a\u0628\u0651\u0639\u060c \u0648Feedback \u0633\u0631\u064a\u0639 \u0645\u0646 \u0627\u0644\u0625\u0646\u062a\u0627\u062c.  </li> <li>\u0647\u062f\u0641\u0627\u0646 \u062a\u0648\u0623\u0645: \u062a\u062f\u0641\u0651\u0642 \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0633\u0631\u064a\u0639 + \u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u0639\u0627\u0644\u064a\u0629.</li> </ul>"},{"location":"terms/devops/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0633\u064a\u0631 \u0634\u062d\u0646 \u0622\u0644\u064a: \u062e\u0637 \u0625\u0646\u062a\u0627\u062c \u064a\u0628\u0646\u064a \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a\u060c \u064a\u0641\u062d\u0635\u0647\u0627\u060c \u064a\u0648\u0633\u0645\u0647\u0627\u060c \u062b\u0645 \u064a\u0637\u0644\u0642\u0647\u0627 \u0644\u0644\u0633\u0641\u0646 \u0645\u0639 \u062a\u062a\u0628\u0651\u0639 GPS \u0648\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0641\u0648\u0631\u064a\u0629.</p>"},{"location":"terms/devops/#c-cicd-github-actions","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0645\u062e\u062a\u0635\u0631 \u2014 \u062e\u062f\u0645\u0629 C# + \u062e\u0637\u0651 CI/CD (GitHub Actions)","text":""},{"location":"terms/devops/#1-net-minimal-api","title":"1) \u062e\u062f\u0645\u0629 .NET Minimal API (\u0635\u062d\u064a\u0651\u0629 + \u0625\u0635\u062f\u0627\u0631)","text":"C#<pre><code>// Program.cs  (.NET 8/9)\nusing Microsoft.AspNetCore.Diagnostics.HealthChecks;\n\nvar b = WebApplication.CreateBuilder(args);\nb.Services.AddHealthChecks();\nvar app = b.Build();\n\napp.MapGet(\"/\", () =&gt; new {\n    service = \"orders-api\",\n    version = typeof(Program).Assembly.GetName().Version?.ToString() ?? \"0.0.0\",\n    time = DateTime.UtcNow\n});\napp.MapHealthChecks(\"/healthz\");      // \u0641\u062d\u0635 \u062d\u064a\u0648\u064a\u0629 \u0644\u0644\u0646\u0634\u0631/\u0627\u0644\u0645\u0648\u0627\u0632\u0650\u0646\napp.Run();\n</code></pre>"},{"location":"terms/devops/#2-dockerfile-multi-stage","title":"2) Dockerfile \u0628\u0633\u064a\u0637 (Multi-stage)","text":"Docker<pre><code># build\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY *.csproj ./\nRUN dotnet restore\nCOPY . .\nRUN dotnet publish -c Release -o /app /p:PublishTrimmed=true /p:PublishSingleFile=true\n\n# run\nFROM mcr.microsoft.com/dotnet/aspnet:8.0\nWORKDIR /app\nCOPY --from=build /app ./\nENV ASPNETCORE_URLS=http://+:8080\nEXPOSE 8080\nENTRYPOINT [\"./Program\"]\n</code></pre>"},{"location":"terms/devops/#3-cicd-github-actions","title":"3) CI/CD (GitHub Actions) \u2014 \u0628\u0646\u0627\u0621/\u0627\u062e\u062a\u0628\u0627\u0631/\u062d\u0627\u0648\u064a\u0629/\u062f\u0641\u0639 \u0644\u0644\u0633\u062c\u0644","text":"YAML<pre><code># .github/workflows/ci.yml\nname: ci-cd\non:\n  push: { branches: [ \"main\" ] }\n  pull_request: { branches: [ \"main\" ] }\n\nenv:\n  REGISTRY: ghcr.io\n  IMAGE_NAME: ${{ github.repository }}   # ghcr.io/&lt;owner&gt;/&lt;repo&gt;\n\njobs:\n  build-test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-dotnet@v4\n        with: { dotnet-version: \"8.0.x\" }\n      - run: dotnet restore\n      - run: dotnet build --no-restore -warnaserror\n      - run: dotnet test  --no-build --collect:\"XPlat Code Coverage\"\n\n  docker:\n    needs: build-test\n    if: github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    permissions:\n      contents: read\n      packages: write\n    steps:\n      - uses: actions/checkout@v4\n      - name: Log in to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ${{ env.REGISTRY }}\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n      - name: Build and push\n        uses: docker/build-push-action@v6\n        with:\n          push: true\n          tags: |\n            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}\n            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0643\u0644 \u062f\u0641\u0639 \u0625\u0644\u0649 <code>main</code> \u064a\u0628\u0646\u064a\u060c \u064a\u062e\u062a\u0628\u0631\u060c \u064a\u064f\u0646\u0634\u0626 \u0635\u0648\u0631\u0629\u060c \u0648\u064a\u062f\u0641\u0639\u0647\u0627 \u0644\u0640 GHCR. \u064a\u0645\u0643\u0646 \u0625\u0636\u0627\u0641\u0629 \u062e\u0637\u0648\u0629 \u0646\u0634\u0631 \u0644\u0627\u062d\u0642\u064b\u0627 (Kubernetes/VM/PAAS) \u0645\u0639 Blue/Green \u0623\u0648 Canary.</p>"},{"location":"terms/devops/#devops_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0628\u0646\u0651\u064a DevOps","text":"<ol> <li>\u0646\u0633\u0642 \u0639\u0645\u0644: Git \u0645\u0639\u064a\u0627\u0631 \u0648\u0627\u062d\u062f\u060c \u0641\u0631\u0648\u0639 \u062e\u0641\u064a\u0641\u0629\u060c \u0645\u0631\u0627\u062c\u0639\u0627\u062a PR \u0633\u0631\u064a\u0639\u0629.  </li> <li>CI: \u0628\u0646\u0627\u0621 + \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062d\u062f\u0629/\u062a\u0643\u0627\u0645\u0644 + \u062a\u062d\u0644\u064a\u0644 \u0633\u0627\u0643\u0646 + \u062a\u063a\u0637\u064a\u0629 \u0643\u062d\u062f \u0623\u062f\u0646\u0649.  </li> <li>\u062a\u0639\u0644\u064a\u0628: \u062d\u0627\u0648\u064a\u0627\u062a OCI \u0645\u0648\u0642\u0651\u0639\u0629 (cosign) + SBOM + \u0641\u062d\u0635 \u062b\u063a\u0631\u0627\u062a.  </li> <li>CD: \u0646\u0634\u0631 \u062a\u0644\u0642\u0627\u0626\u064a \u0628\u0628\u0648\u0627\u0628\u0627\u062a (\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a/\u0645\u0648\u0627\u0641\u0642\u0629) \u0648\u0646\u0647\u062c Blue/Green/Canary.  </li> <li>\u0623\u0633\u0631\u0627\u0631: \u0645\u062f\u064a\u0631 \u0623\u0633\u0631\u0627\u0631 (Vault/KMS) \u0648\u0628\u064a\u0626\u0627\u062a <code>dev/stage/prod</code> \u0645\u0641\u0635\u0648\u0644\u0629.  </li> <li>Infra as Code: Terraform/Bicep/Ansible\u061b \u062a\u062a\u0628\u0651\u0639 \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u062a\u062d\u062a Git.  </li> <li>\u0627\u0644\u0645\u0644\u0627\u062d\u0638\u0629: Logs/Metrics/Tracing \u0648SLIs/SLOs \u0648\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0648Runbooks.  </li> <li>\u0627\u0644\u062a\u0639\u0644\u0651\u0645 \u0627\u0644\u0645\u0633\u062a\u0645\u0631: Postmortems \u0628\u0644\u0627 \u0644\u0648\u0645\u060c \u062a\u062a\u0628\u0651\u0639 MTTR/Change Failure Rate.</li> </ol>"},{"location":"terms/devops/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0639\u062a\u0628\u0627\u0631 DevOps \u0623\u062f\u0627\u0629 \u0644\u0627 \u062b\u0642\u0627\u0641\u0629 + \u0639\u0645\u0644\u064a\u0629.  </li> <li>\u0646\u0634\u0631 \u064a\u062f\u0648\u064a/\u063a\u064a\u0631 \u0645\u0643\u0631\u0631\u060c \u0648\u0639\u062f\u0645 \u0648\u062c\u0648\u062f Rollback \u0648\u0627\u0636\u062d.  </li> <li>\u0623\u0633\u0631\u0627\u0631 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639/\u0627\u0644\u062d\u0627\u0648\u064a\u0629.  </li> <li>\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0647\u0634\u0629 \u0648\u0628\u0637\u064a\u0626\u0629 \u062a\u0639\u0631\u0642\u0644 \u0627\u0644\u062a\u062f\u0641\u0642.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u063a\u064a\u0627\u0628 \u0645\u0624\u0634\u0631\u0627\u062a SLI/SLO.  </li> <li>\u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629 \u062e\u0627\u0631\u062c Git (\u0644\u0627 \u064a\u0645\u0643\u0646 \u062a\u0643\u0631\u0627\u0631\u0647\u0627).</li> </ul>"},{"location":"terms/devops/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 DevOps \u062b\u0642\u0627\u0641\u0629 + \u0645\u0645\u0627\u0631\u0633\u0627\u062a \u0644\u0623\u062a\u0645\u062a\u0629 \u0648\u0628\u0646\u0627\u0621/\u0646\u0634\u0631/\u062a\u0634\u063a\u064a\u0644 \u0645\u0634\u062a\u0631\u0643 \u064a\u0634\u0645\u0644 CI/CD \u0648IaC \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 CI/CD \u0623\u062a\u0645\u062a\u0629 \u0628\u0646\u0627\u0621/\u0627\u062e\u062a\u0628\u0627\u0631/\u0646\u0634\u0631 \u062c\u0632\u0621 \u0645\u0646 DevOps SRE \u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u062a\u0634\u063a\u064a\u0644\u064a\u0629 \u0628\u0642\u064a\u0627\u0633 SLO/\u062e\u0637\u0637 \u0637\u0648\u0627\u0631\u0626 \u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u062a\u0634\u063a\u064a\u0644/\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u064a\u0629 Agile \u0625\u062f\u0627\u0631\u0629 \u062a\u0643\u0631\u0627\u0631\u064a\u0629 \u0644\u0644\u0645\u0646\u062a\u062c \u064a\u0643\u0645\u0644 DevOps (\u0633\u0631\u0639\u0629 + \u062a\u0639\u0644\u0651\u0645) GitOps \u062a\u0634\u063a\u064a\u0644 \u0628\u0627\u0644\u0628\u064f\u0646\u0649 \u0627\u0644\u062a\u0639\u0631\u064a\u0641\u064a\u0629 \u0639\u0628\u0631 Git \u062a\u0637\u0628\u064a\u0642 DevOps \u0644\u0644\u0646\u0634\u0631 \u0627\u0644\u0645\u0633\u062a\u0645\u0631 \u0644\u0644\u0628\u0646\u064a\u0629"},{"location":"terms/devops/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>DevOps \u064a\u0648\u062d\u0651\u062f \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0639\u0628\u0631 \u0627\u0644\u0623\u062a\u0645\u062a\u0629 \u0648\u0627\u0644\u062a\u0639\u0627\u0648\u0646 \u0648\u0627\u0644\u0642\u064a\u0627\u0633. \u0627\u0628\u0646\u0650 \u062e\u0637 CI/CD \u0635\u0644\u0628\u064b\u0627\u060c \u0627\u062d\u0641\u0638 \u0627\u0644\u0628\u0646\u064a\u0629 \u062a\u062d\u062a \u0643\u0648\u062f\u060c \u0631\u0627\u0642\u0628 \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0628\u0623\u0631\u0642\u0627\u0645 \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0627\u0639\u0645\u0644 \u0628\u062b\u0642\u0627\u0641\u0629 \u062a\u062d\u0633\u064a\u0646 \u0645\u0633\u062a\u0645\u0631\u2014\u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0633\u0631\u0639\u0629 \u0648\u0623\u0645\u0627\u0646 \u0648\u0627\u0633\u062a\u0642\u0631\u0627\u0631 \u0641\u064a \u0622\u0646 \u0648\u0627\u062d\u062f.</p>"},{"location":"terms/diagrams/","title":"Diagrams","text":""},{"location":"terms/diagrams/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Software/Systems Diagrams \u2014 \u0645\u062e\u0637\u0651\u0637\u0627\u062a \u0628\u0631\u0645\u062c\u064a\u0629/\u0646\u064f\u0638\u0645 \u0644\u0634\u0631\u062d \u0627\u0644\u0628\u0646\u064a\u0629 \u0648\u0627\u0644\u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0628\u0635\u0631\u064a\u064b\u0627.</p>"},{"location":"terms/diagrams/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0645\u062b\u064a\u0644 \u0631\u0633\u0648\u0645\u064a \u0645\u0642\u0635\u0648\u062f \u0648\u0645\u064f\u0628\u0633\u0651\u0637 \u0644\u062c\u0632\u0621 \u0645\u0646 \u0627\u0644\u0646\u0638\u0627\u0645: \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a\u060c \u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a\u060c \u062a\u062f\u0641\u0651\u0642 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u0623\u062d\u062f\u0627\u062b\u060c \u0623\u0648 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a\u2014\u0644\u0644\u062a\u0648\u0627\u0635\u0644 \u0648\u0627\u062a\u062e\u0627\u0630 \u0627\u0644\u0642\u0631\u0627\u0631 \u0628\u0633\u0631\u0639\u0629.</p>"},{"location":"terms/diagrams/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0633\u0627\u0639\u062f\u0643 \u0639\u0644\u0649 \u0627\u0644\u0641\u0647\u0645 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u060c \u0648\u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u0628\u0643\u0631\u064b\u0627.  </li> <li>\u064a\u062c\u0628 \u0623\u0646 \u062a\u0643\u0648\u0646 \u0645\u062d\u062f\u0651\u062f\u0629 \u0627\u0644\u0646\u0637\u0627\u0642\u060c \u0645\u062a\u0651\u0633\u0642\u0629 \u0641\u064a \u0627\u0644\u0631\u0645\u0648\u0632\u060c \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0635\u064a\u0627\u0646\u0629 \u0645\u0639 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0646\u0638\u0627\u0645.  </li> <li>\u0627\u0644\u0623\u0641\u0636\u0644: Docs-as-Code (\u0646\u0635\u0651 \u0645\u062b\u0644 Mermaid/PlantUML) \u0644\u0633\u0647\u0648\u0644\u0629 \u0627\u0644\u0645\u0631\u0627\u062c\u0639\u0629 \u0648\u0627\u0644\u0625\u0635\u062f\u0627\u0631.</li> </ul>"},{"location":"terms/diagrams/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062e\u0631\u064a\u0637\u0629 \u0645\u062a\u0631\u0648: \u062a\u064f\u0638\u0647\u0631 \u0627\u0644\u0645\u062d\u0637\u0651\u0627\u062a (\u0645\u0643\u0648\u0651\u0646\u0627\u062a)\u060c \u0627\u0644\u062e\u0637\u0648\u0637 (\u0648\u0627\u062c\u0647\u0627\u062a)\u060c \u0648\u0627\u0644\u0627\u062a\u062c\u0627\u0647\u0627\u062a (\u062a\u062f\u0641\u0651\u0642). \u0644\u064a\u0633\u062a \u0643\u0644 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0645\u062f\u064a\u0646\u0629\u2014\u0644\u0643\u0646 \u062a\u0643\u0641\u064a \u0644\u0644\u0631\u062d\u0644\u0629.</p>"},{"location":"terms/diagrams/#_5","title":"\u0627\u0644\u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u0634\u0627\u0626\u0639\u0629 \u2026 \u0628\u0633\u0631\u0639\u0629","text":"<ul> <li>C4: \u0645\u0633\u062a\u0648\u064a\u0627\u062a Context / Container / Component / Code \u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627.  </li> <li>Sequence: \u062a\u0633\u0644\u0633\u0644 \u0631\u0633\u0627\u0626\u0644 \u0628\u064a\u0646 \u0627\u0644\u0645\u0634\u0627\u0631\u0643\u064a\u0646 \u0639\u0628\u0631 \u0627\u0644\u0632\u0645\u0646 (Request/Response).  </li> <li>Class/ERD: \u0628\u0646\u064a\u0629 \u0627\u0644\u0643\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a (ORM/DB).  </li> <li>Flowchart/Activity: \u0645\u0646\u0637\u0642 \u0627\u0644\u0645\u0633\u0627\u0631 \u0648\u0627\u062a\u062e\u0627\u0630 \u0627\u0644\u0642\u0631\u0627\u0631.  </li> <li>State Machine: \u062d\u0627\u0644\u0627\u062a \u0648\u0627\u0646\u062a\u0642\u0627\u0644\u0627\u062a \u0643\u0627\u0626\u0646/\u0648\u0627\u062c\u0647\u0629.  </li> <li>Deployment: \u0623\u064a\u0646 \u062a\u064f\u0646\u0634\u0631 \u0627\u0644\u0623\u062c\u0632\u0627\u0621 (Nodes/Pods/VMs).  </li> <li>DFD/BPMN: \u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u0639\u0645\u0644\u064a\u0627\u062a \u0639\u0645\u0644.</li> </ul>"},{"location":"terms/diagrams/#mermaid-sequence","title":"\u0645\u062b\u0627\u0644 Mermaid \u2014 \u0645\u062e\u0637\u0651\u0637 \u062a\u0633\u0644\u0633\u0644\u064a (Sequence)","text":"Text Only<pre><code>sequenceDiagram\n  autonumber\n  participant C as Client\n  participant API as Orders API\n  participant SVC as Payment Service\n  participant DB as SQL DB\n\n  C-&gt;&gt;API: POST /orders\n  API-&gt;&gt;DB: INSERT Order (Pending)\n  API-&gt;&gt;SVC: Charge(amount, card)\n  SVC--&gt;&gt;API: OK(txId)\n  API-&gt;&gt;DB: UPDATE Order (Paid, txId)\n  API--&gt;&gt;C: 201 Created (orderId)\n</code></pre>"},{"location":"terms/diagrams/#mermaid-c4-container","title":"\u0645\u062b\u0627\u0644 Mermaid \u2014 C4 (\u0645\u0633\u062a\u0648\u0649 Container \u0645\u0628\u0633\u0651\u0637)","text":"Text Only<pre><code>flowchart LR\n  subgraph Internet\n    U[User]\n  end\n  subgraph Cloud\n    W[Web App (.NET)]\n    Q[(SQL Database)]\n    N[(Cache)]\n  end\n  U-- HTTP/HTTPS --&gt;W\n  W-- SQL --&gt;Q\n  W-- get/set --&gt;N\n</code></pre>"},{"location":"terms/diagrams/#c-graphviz-dot","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u062a\u0648\u0644\u064a\u062f Graphviz DOT \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0644\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062e\u062f\u0645\u0627\u062a","text":"<p>\u064a\u064f\u0646\u0634\u0626 \u0645\u0644\u0641 <code>system.dot</code> \u0645\u0646 \u0642\u0627\u0626\u0645\u0629 \u062e\u062f\u0645\u0627\u062a/\u0627\u0639\u062a\u0645\u0627\u062f\u0627\u062a. \u062b\u0645 \u0627\u0631\u0633\u0645\u0647: <code>dot -Tpng system.dot -o system.png</code></p> C#<pre><code>// .NET 8/9\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\n\nclass Edge { public string From=\"\", To=\"\"; public Edge(string f, string t){From=f;To=t;}}\n\nclass Program\n{\n    static void Main()\n    {\n        var services = new[] { \"Web\", \"Orders\", \"Payments\", \"Inventory\", \"SQL\", \"Redis\" };\n        var deps = new List&lt;Edge&gt;\n        {\n            new(\"Web\",\"Orders\"),\n            new(\"Web\",\"Payments\"),\n            new(\"Orders\",\"SQL\"),\n            new(\"Payments\",\"SQL\"),\n            new(\"Web\",\"Redis\"),\n            new(\"Orders\",\"Redis\")\n        };\n\n        using var w = new StreamWriter(\"system.dot\");\n        w.WriteLine(\"digraph G {\");\n        w.WriteLine(\"  rankdir=LR; node [shape=box, style=rounded];\");\n        foreach (var s in services) w.WriteLine($\"  \\\"{s}\\\";\");\n        foreach (var e in deps) w.WriteLine($\"  \\\"{e.From}\\\" -&gt; \\\"{e.To}\\\";\");\n        w.WriteLine(\"}\");\n        Console.WriteLine(\"Wrote system.dot (use Graphviz to render).\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u0635\u0648\u0631\u0629 \u062a\u064f\u0638\u0647\u0631 \u062e\u062f\u0645\u0627\u062a <code>Web/Orders/Payments/...</code> \u0628\u0623\u0633\u0647\u0645 \u0627\u0639\u062a\u0645\u0627\u062f \u0648\u0627\u0636\u062d\u0629.</p>"},{"location":"terms/diagrams/#_6","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0639\u0645\u0644 \u0645\u062e\u0637\u0651\u0637 \u201c\u0646\u0627\u0641\u0639\u201d","text":"<ul> <li>\u0639\u0631\u0651\u0641 \u0627\u0644\u062c\u0645\u0647\u0648\u0631 \u0648\u0627\u0644\u0647\u062f\u0641: \u0642\u0631\u0627\u0631 \u0645\u0639\u0645\u0627\u0631\u064a\u061f \u062a\u062f\u0631\u064a\u0628 \u0641\u0631\u064a\u0642\u061f \u062a\u0648\u062b\u064a\u0642 \u062a\u0634\u063a\u064a\u0644\u061f  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 (C4 \u064a\u0641\u064a\u062f \u0644\u0644\u062a\u062f\u0631\u0651\u062c).  </li> <li>\u0646\u0637\u0627\u0642 \u0648\u0627\u062d\u062f \u0644\u0643\u0644 \u0645\u062e\u0637\u0651\u0637\u061b \u0644\u0627 \u062a\u062d\u0634\u0631 \u0643\u0644 \u0634\u064a\u0621 \u0641\u064a \u0635\u0648\u0631\u0629 \u0648\u0627\u062d\u062f\u0629.  </li> <li>\u0623\u0636\u0650\u0641 \u0639\u0646\u0648\u0627\u0646\u064b\u0627/\u062a\u0639\u0631\u064a\u0641\u064b\u0627 \u0644\u0644\u0631\u0645\u0648\u0632 (Legend) \u0648\u0646\u0633\u062e\u0629/\u062a\u0627\u0631\u064a\u062e.  </li> <li>\u0627\u0644\u062a\u0632\u0645 \u0623\u0633\u0645\u0627\u0621 \u0645\u0648\u062d\u0651\u062f\u0629 (Service/DB/Topic) \u0648\u0623\u0644\u0648\u0627\u0646 \u0642\u0644\u064a\u0644\u0629.  </li> <li>\u0627\u062d\u0641\u0638\u0647 \u0643\u0646\u0635 (Mermaid/PlantUML/DOT) \u062a\u062d\u062a Git\u060c \u0648\u0627\u062f\u0645\u062c\u0647 \u0641\u064a \u0627\u0644\u0648\u064a\u0643\u064a/\u0627\u0644\u0640 README.  </li> <li>\u0631\u0627\u062c\u0639\u0647 \u062f\u0648\u0631\u064a\u064b\u0627 \u0645\u0639 \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u0643\u0648\u062f (ADR/PR checklist: \u201c\u0647\u0644 \u0627\u0644\u0645\u062e\u0637\u0651\u0637 \u064a\u062d\u062a\u0627\u062c \u062a\u062d\u062f\u064a\u062b\u064b\u0627\u061f\u201d).</li> </ul>"},{"location":"terms/diagrams/#_7","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0645\u062e\u0637\u0651\u0637 \u0645\u0632\u062f\u062d\u0645 \u0628\u0644\u0627 \u0623\u0648\u0644\u0648\u064a\u0651\u0629 \u0628\u0635\u0631\u064a\u0651\u0629.  </li> <li>\u0639\u062f\u0645 \u0630\u0643\u0631 \u0627\u0641\u062a\u0631\u0627\u0636\u0627\u062a/\u062d\u062f\u0648\u062f \u0627\u0644\u0646\u0637\u0627\u0642 \u2192 \u0633\u0648\u0621 \u0641\u0647\u0645.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u064a\u0642\u0648\u0646\u0627\u062a \u0645\u0628\u0647\u0631\u0629 \u062f\u0648\u0646 \u0645\u0639\u0646\u0649 \u062b\u0627\u0628\u062a.  </li> <li>\u0635\u0648\u0631 \u062b\u0627\u0628\u062a\u0629 \u062e\u0627\u0631\u062c Git \u2192 \u062a\u062a\u0642\u0627\u062f\u0645 \u0628\u0633\u0631\u0639\u0629.  </li> <li>\u062e\u0644\u0637 \u0645\u0633\u062a\u0648\u064a\u0627\u062a C4 \u0641\u064a \u0635\u0648\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u2192 \u0636\u0628\u0627\u0628\u064a\u0629.</li> </ul>"},{"location":"terms/diagrams/#_8","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Diagrams \u062a\u0648\u0627\u0635\u0644 \u0628\u0635\u0631\u064a \u0645\u0648\u062c\u0651\u0647 \u0627\u0644\u0647\u062f\u0641 Docs-as-Code \u0623\u0641\u0636\u0644 \u0644\u0644\u0635\u064a\u0627\u0646\u0629 C4 Model \u0637\u0628\u0642\u0627\u062a \u0633\u064a\u0627\u0642\u2192\u062d\u0627\u0648\u064a\u0627\u062a\u2192\u0645\u0643\u0648\u0651\u0646\u0627\u062a\u2192\u0643\u0648\u062f \u064a\u0648\u0636\u062d \u201c\u0645\u0646\u0638\u0648\u0631\u064b\u0627\u201d \u0648\u0627\u062d\u062f\u064b\u0627 \u0644\u0643\u0644 \u0645\u062e\u0637\u0651\u0637 Sequence Diagram \u0631\u0633\u0627\u0626\u0644 \u0632\u0645\u0646\u064a\u0629 \u0628\u064a\u0646 \u0627\u0644\u0645\u0634\u0627\u0631\u0643\u064a\u0646 \u0645\u0645\u062a\u0627\u0632 \u0644\u0640 APIs \u0648\u062a\u062f\u0641\u0651\u0642\u0627\u062a Sagas ERD / Class \u0646\u0645\u0648\u0630\u062c \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0639\u0644\u0627\u0642\u0627\u062a \u0644\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0645\u0646\u0637\u0642\u064a \u0644\u0644\u0640 DB/ORM Flowchart/Activity \u0645\u0646\u0637\u0642 \u0645\u0633\u0627\u0631 \u0648\u0642\u0631\u0627\u0631\u0627\u062a \u062c\u064a\u062f \u0644\u0633\u064a\u0631 \u0639\u0645\u0644/\u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 Deployment \u0623\u064a\u0646 \u062a\u064f\u0646\u0634\u0631 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0631\u0628\u0637 \u0628\u0640 Infra \u0648\u0628\u064a\u0626\u0627\u062a"},{"location":"terms/diagrams/#_9","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0645\u062e\u0637\u0651\u0637\u0627\u062a \u0623\u062f\u0627\u0629 \u062a\u0641\u0643\u064a\u0631 \u0648\u062a\u0648\u0627\u0635\u0644\u2014\u0627\u062e\u062a\u064e\u0631 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0635\u062d\u064a\u062d\u060c \u062d\u062f\u0651\u062f \u0627\u0644\u0646\u0637\u0627\u0642\u060c \u0648\u062f\u0648\u0651\u0646\u0647\u0627 \u0643\u0646\u0635 \u062a\u062d\u062a Git. \u0627\u062c\u0639\u0644\u0647\u0627 \u0628\u0633\u064a\u0637\u0629\u060c \u0645\u062a\u0646\u0627\u0633\u0642\u0629\u060c \u0648\u062d\u064a\u0651\u0629 \u0645\u0639 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0646\u0638\u0627\u0645\u061b \u062d\u064a\u0646\u0647\u0627 \u062a\u0635\u0628\u062d \u062c\u0632\u0621\u064b\u0627 \u0645\u0646 \u0639\u0645\u0644\u064a\u0629 \u0627\u062a\u062e\u0627\u0630 \u0627\u0644\u0642\u0631\u0627\u0631 \u0644\u0627 \u0645\u062c\u0631\u0651\u062f \u0631\u0633\u0645\u0629 \u062c\u0645\u064a\u0644\u0629.</p>"},{"location":"terms/digital-signature/","title":"Digital Signature","text":""},{"location":"terms/digital-signature/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Digital Signature \u2014 \u062a\u0648\u0642\u064a\u0639 \u0631\u0642\u0645\u064a \u064a\u062b\u0628\u062a \u0627\u0644\u0647\u0648\u064a\u0629 \u0648\u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062a\u0634\u0641\u064a\u0631 \u063a\u064a\u0631 \u0645\u062a\u0645\u0627\u062b\u0644.</p>"},{"location":"terms/digital-signature/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0622\u0644\u064a\u0629 \u062a\u064f\u0646\u062a\u062c \u0628\u0635\u0645\u0629 \u0645\u0648\u0642\u0651\u064e\u0639\u0629 \u0644\u0631\u0633\u0627\u0644\u0629/\u0645\u0644\u0641 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635 \u0644\u0644\u0645\u0631\u0633\u0644\u060c \u0648\u064a\u062a\u062d\u0642\u0642 \u0627\u0644\u0645\u062a\u0644\u0642\u064a \u0645\u0646\u0647\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645. \u062a\u0648\u0641\u0631 \u0623\u0635\u0627\u0644\u0629 (Authenticity) \u0648\u0633\u0644\u0627\u0645\u0629 (Integrity) \u0648\u0639\u062f\u0645 \u0625\u0646\u0643\u0627\u0631 \u0646\u0633\u0628\u064a\u064b\u0627.</p>"},{"location":"terms/digital-signature/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u062d\u0633\u0628 \u0647\u0627\u0634 \u0644\u0644\u0631\u0633\u0627\u0644\u0629 \u062b\u0645 \u0646\u064f\u0648\u0642\u0651\u0639 \u0627\u0644\u0647\u0627\u0634 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u062c\u0639 \u064a\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645 \u0644\u0644\u062a\u062d\u0642\u0642\u061b \u0625\u0630\u0627 \u062a\u063a\u064a\u0631\u062a \u0628\u0627\u064a\u062a \u0648\u0627\u062d\u062f \u062a\u0641\u0634\u0644.  </li> <li>\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0634\u0627\u0626\u0639\u0629: RSA-PSS\u060c ECDSA (P-256/P-384)\u060c Ed25519.  </li> <li>\u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0645\u0646\u0641\u0635\u0644\u064b\u0627 (Detached) \u0623\u0648 \u0645\u0631\u0641\u0642\u064b\u0627 \u0628\u0627\u0644\u0631\u0633\u0627\u0644\u0629.</li> </ul>"},{"location":"terms/digital-signature/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062e\u062a\u0645 \u0634\u0645\u0639\u064a \u062e\u0627\u0635 \u0628\u0643 \u0639\u0644\u0649 \u0631\u0633\u0627\u0644\u0629. \u0623\u064a \u0634\u062e\u0635 \u064a\u0639\u0631\u0641 \u0634\u0643\u0644 \u062e\u062a\u0645\u0643 (\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645) \u064a\u062a\u0623\u0643\u062f \u0623\u0646 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0645\u0646\u0643 \u0648\u0644\u0645 \u062a\u064f\u0639\u0628\u062b.</p>"},{"location":"terms/digital-signature/#c-rsa-pss-sha-256","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (RSA-PSS + SHA-256)","text":"C#<pre><code>using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass SignDemo\n{\n    static void Main()\n    {\n        // 1) \u062a\u0648\u0644\u064a\u062f \u0632\u0648\u062c \u0645\u0641\u0627\u062a\u064a\u062d (\u0644\u0644\u062a\u062c\u0631\u0628\u0629 \u0641\u0642\u0637\u061b \u0627\u062d\u0641\u0638 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0628\u0634\u0643\u0644 \u0622\u0645\u0646 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c)\n        using var rsa = RSA.Create(2048);\n\n        // 2) \u062a\u0648\u0642\u064a\u0639 \u0631\u0633\u0627\u0644\u0629\n        string message = \"Important payload\";\n        byte[] data = Encoding.UTF8.GetBytes(message);\n        byte[] sig = rsa.SignData(data, HashAlgorithmName.SHA256, RSASignaturePadding.Pss);\n\n        Console.WriteLine(Convert.ToBase64String(sig)); // \u062a\u0648\u0642\u064a\u0639 Base64\n\n        // 3) \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645\n        bool ok = rsa.VerifyData(data, sig, HashAlgorithmName.SHA256, RSASignaturePadding.Pss);\n        Console.WriteLine(ok); // True\n\n        // \u0645\u0644\u0627\u062d\u0638\u0629: \u062e\u0632\u0651\u0646 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635 \u0628\u0623\u0645\u0627\u0646 (HSM/KeyVault)\u060c \u0648\u0648\u0632\u0651\u0639 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645/\u0634\u0647\u0627\u062f\u0629 X.509 \u0644\u0644\u0645\u062a\u062d\u0642\u0642\u064a\u0646.\n    }\n}\n</code></pre> <p>\u0628\u062f\u0627\u0626\u0644 \u0645\u062e\u062a\u0635\u0631\u0629: - ECDsa: <code>using var ecdsa = ECDsa.Create(ECCurve.NamedCurves.nistP256);</code> \u062b\u0645 <code>ecdsa.SignData/VerifyData</code>. - Ed25519 (\u0641\u064a \u0645\u0643\u062a\u0628\u0627\u062a \u062e\u0627\u0631\u062c\u064a\u0629/\u0623\u0646\u0638\u0645\u0629 \u0623\u062e\u0631\u0649): \u0633\u0631\u064a\u0639 \u0648\u0628\u0633\u064a\u0637 \u0644\u0644\u0645\u0641\u0627\u062a\u064a\u062d.</p>"},{"location":"terms/digital-signature/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0627\u0644\u0631\u0642\u0645\u064a","text":"<ul> <li>\u0627\u062e\u062a\u0631 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0645\u0646\u0627\u0633\u0628\u0629: Ed25519/ECDSA \u0644\u0644\u0633\u0631\u0639\u0629 \u0648\u0627\u0644\u062d\u062c\u0645\u060c \u0623\u0648 RSA-PSS \u0644\u0644\u062a\u0648\u0627\u0641\u0642 \u0627\u0644\u0648\u0627\u0633\u0639.  </li> <li>\u062b\u0628\u0651\u062a \u0627\u0644\u062a\u063a\u0644\u064a\u0641/\u0627\u0644\u0635\u064a\u063a\u0629: JWS/JWT, CMS (PKCS#7), XMLDSig, \u0623\u0648 \u0628\u0635\u064a\u063a\u0629 \u062a\u0637\u0628\u064a\u0642\u0643 (Detached/Attached).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0647\u0627\u0634 \u062d\u062f\u064a\u062b (SHA-256 \u0623\u0648 \u0623\u0639\u0644\u0649) \u0648\u0648\u0633\u0645 \u0633\u064a\u0627\u0642\u064a \u0625\u0646 \u0644\u0632\u0645 (Domain Separation).  </li> <li>\u062e\u0632\u0651\u0646 \u0627\u0644\u062e\u0627\u0635 \u0641\u064a HSM/Key Vault\u060c \u0648\u062f\u0648\u0651\u0631 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0648\u062e\u0637\u0651\u0637 \u0644\u0644\u0625\u0628\u0637\u0627\u0644 (Revocation).  </li> <li>\u0644\u0644\u0645\u0644\u0641\u0627\u062a/\u0627\u0644\u0648\u062b\u0627\u0626\u0642 \u0637\u0648\u064a\u0644\u0629 \u0627\u0644\u0623\u0645\u062f: \u0623\u0636\u0641 \u062e\u062a\u0645 \u0632\u0645\u0646\u064a (Timestamp/TSA) \u0648\u062d\u0650\u0632\u0645 \u062b\u0642\u0629.  </li> <li>\u0645\u0639 JSON/XML: \u0637\u0628\u0651\u0642 \u062a\u0642\u0646\u064a\u0646 (Canonicalization) \u0644\u062a\u062c\u0646\u0651\u0628 \u0627\u062e\u062a\u0644\u0627\u0641\u0627\u062a \u0627\u0644\u062a\u0646\u0633\u064a\u0642 \u0639\u0646\u062f \u0627\u0644\u062a\u062d\u0642\u0642.  </li> <li>\u0627\u0631\u0628\u0637 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0628\u0647\u0648\u064a\u0629 \u0639\u0628\u0631 \u0634\u0647\u0627\u062f\u0629 X.509 \u0625\u0646 \u0623\u0631\u062f\u062a \u0647\u0648\u064a\u0629 \u0642\u0627\u0646\u0648\u0646\u064a\u0629/\u0645\u0624\u0633\u0633\u064a\u0629.</li> </ul>"},{"location":"terms/digital-signature/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 RSA PKCS#1 v1.5 \u0628\u062f\u0644 RSA-PSS \u0627\u0644\u062d\u062f\u064a\u062b\u0629.  </li> <li>\u062a\u0648\u0642\u064a\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062e\u0627\u0645 \u062f\u0648\u0646 \u062a\u062d\u062f\u064a\u062f \u0635\u064a\u063a\u0629/\u0642\u0648\u0627\u0639\u062f \u0648\u0627\u0636\u062d\u0629 \u2192 \u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u062a\u062d\u0642\u0642 \u0639\u0628\u0631 \u0627\u0644\u0623\u0646\u0638\u0645\u0629.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u062a\u0642\u0646\u064a\u0646 \u0644\u0640 JSON/XML \u2192 \u064a\u0641\u0634\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0631\u063a\u0645 \u0639\u062f\u0645 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0645\u0639\u0646\u0649.  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0645\u0639 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 (\u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0645\u0647\u0645): \u063a\u0627\u0644\u0628\u064b\u0627 \u0648\u0642\u0651\u0639 \u062b\u0645 \u0634\u0641\u0651\u0631 \u0623\u0648 \u0627\u0633\u062a\u062e\u062f\u0645 \u062d\u0627\u0648\u064a\u0629 \u062a\u062f\u0639\u0645 \u0627\u0644\u0627\u062b\u0646\u064a\u0646.  </li> <li>\u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0641\u0633 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0644\u0644\u062a\u0648\u0642\u064a\u0639 \u0648\u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0628\u0644\u0627 \u0633\u064a\u0627\u0633\u0629 \u0641\u0635\u0644 \u0623\u062f\u0648\u0627\u0631.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0625\u0628\u0637\u0627\u0644/\u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0621 \u0644\u0644\u0634\u0647\u0627\u062f\u0627\u062a \u0648\u0639\u062f\u0645 \u0645\u0631\u0627\u0642\u0628\u0629 \u0635\u0644\u0627\u062d\u064a\u062a\u0647\u0627.</li> </ul>"},{"location":"terms/digital-signature/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Encryption \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0644\u064a\u0633\u062a\u0631\u062c\u0639\u0647 \u0635\u0627\u062d\u0628 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u064a\u0648\u0641\u0631 \u0633\u0631\u0651\u064a\u0629\u061b \u0644\u064a\u0633 \u0625\u062b\u0628\u0627\u062a \u0647\u0648\u064a\u0629 \u0627\u0644\u0645\u0631\u0633\u0644 Digital Signature \u0623\u0635\u0627\u0644\u0629 \u0627\u0644\u0645\u0631\u0633\u0644 + \u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u062a\u062a\u062d\u0642\u0642 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645\u061b \u064a\u0648\u0635\u0649 \u0628\u0640 RSA-PSS/ECDSA/Ed25519 Hashing \u0628\u0635\u0645\u0629 \u0644\u0644\u062a\u062d\u0642\u0642/\u0627\u0644\u0641\u0647\u0631\u0633\u0629 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u0639\u0643\u0633\u061b \u0628\u062f\u0648\u0646 \u0647\u0648\u064a\u0629\u061b \u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0639 \u062a\u0648\u0642\u064a\u0639/HMAC \u0644\u0644\u062d\u0645\u0627\u064a\u0629"},{"location":"terms/digital-signature/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0627\u0644\u0631\u0642\u0645\u064a \u064a\u062b\u0628\u062a \u0623\u0646 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0645\u0646 \u0635\u0627\u062d\u0628 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635 \u0648\u0644\u0645 \u062a\u062a\u063a\u064a\u0651\u0631. \u0627\u062e\u062a\u0631 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u062d\u062f\u064a\u062b\u0629\u060c \u062b\u0628\u0651\u062a \u0635\u064a\u063a\u0629 \u0627\u0644\u062a\u0628\u0627\u062f\u0644\u060c \u0648\u0627\u062d\u0641\u0638 \u0645\u0641\u0627\u062a\u064a\u062d\u0643 \u0641\u064a \u062d\u0627\u0648\u064a\u0627\u062a \u0622\u0645\u0646\u0629 \u0645\u0639 \u0633\u064a\u0627\u0633\u0627\u062a \u062f\u0648\u0631\u0627\u0646 \u0648\u0625\u0628\u0637\u0627\u0644 \u0648\u0627\u0636\u062d\u0629.</p>"},{"location":"terms/dns/","title":"DNS","text":""},{"location":"terms/dns/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Domain Name System (DNS) \u2014 \u0646\u0638\u0627\u0645 \u0623\u0633\u0645\u0627\u0621 \u0627\u0644\u0646\u0637\u0627\u0642\u0627\u062a.</p>"},{"location":"terms/dns/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062f\u0641\u062a\u0631 \u0639\u0646\u0627\u0648\u064a\u0646 \u0645\u0648\u0632\u0651\u0639 \u064a\u062a\u0631\u062c\u0645 \u0623\u0633\u0645\u0627\u0621 \u0627\u0644\u0646\u0637\u0627\u0642\u0627\u062a \u0645\u062b\u0644 <code>example.com</code> \u0625\u0644\u0649 \u0639\u0646\u0627\u0648\u064a\u0646 IP \u0648\u0628\u064a\u0627\u0646\u0627\u062a \u0623\u062e\u0631\u0649. \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0633\u062c\u0644\u0627\u062a (A/AAAA/CNAME/MX/SRV/TXT\u2026) \u0648\u062a\u062e\u0632\u064a\u0646 \u0645\u0624\u0642\u0651\u062a (Caching) \u0648\u0632\u0645\u0646 \u0635\u0644\u0627\u062d\u064a\u0629 (TTL).</p>"},{"location":"terms/dns/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0628\u062f\u0623 \u0645\u0646 \u0627\u0644\u0645\u062d\u0644\u0651\u0644 \u0627\u0644\u062a\u0643\u0631\u0627\u0631\u064a (Recursive Resolver) \u0644\u062f\u0649 \u0645\u0632\u0648\u0651\u062f\u0643.  </li> <li>\u064a\u0635\u0639\u062f \u0625\u0644\u0649 \u0627\u0644\u062c\u0630\u0648\u0631 \u062b\u0645 TLD (<code>.com</code>) \u062b\u0645 \u0627\u0644\u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u0645\u062e\u0648\u0651\u0644\u0629 \u0644\u0627\u0633\u0645\u0643.  </li> <li>\u064a\u0639\u0648\u062f \u0628\u0640 \u0633\u062c\u0644\u0651 + TTL. \u0627\u0644\u0645\u062d\u0644\u0651\u0644 \u0648\u0627\u0644\u0645\u062a\u0635\u0641\u062d \u064a\u062e\u0632\u0651\u0646\u0627\u0646 \u0627\u0644\u0646\u062a\u064a\u062c\u0629 \u0645\u0624\u0642\u062a\u064b\u0627.  </li> <li>\u0623\u0646\u0648\u0627\u0639 \u0645\u0647\u0645\u0629:  </li> <li>A/AAAA: \u0639\u0646\u0648\u0627\u0646 IPv4/IPv6.  </li> <li>CNAME: \u0627\u0633\u0645 \u0645\u0633\u062a\u0639\u0627\u0631 \u0644\u0627\u0633\u0645 \u0622\u062e\u0631.  </li> <li>MX: \u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u0628\u0631\u064a\u062f.  </li> <li>NS: \u062e\u0648\u0627\u062f\u0645 \u0646\u0637\u0627\u0642\u0643 \u0627\u0644\u0645\u062e\u0648\u0651\u0644\u0629.  </li> <li>TXT: \u0646\u0635 \u0639\u0627\u0645 (\u0645\u062b\u0644 SPF/\u062a\u062d\u0642\u0642\u0627\u062a).  </li> <li>SRV: \u062e\u062f\u0645\u0629 + \u0645\u0646\u0641\u0630.  </li> <li>\u062f\u0639\u0645 \u0623\u0645\u0627\u0646 \u0627\u062e\u062a\u064a\u0627\u0631\u064a: DNSSEC \u064a\u0648\u0642\u0651\u0639 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0644\u0645\u0646\u0639 \u0627\u0644\u062a\u0644\u0627\u0639\u0628.</li> </ul>"},{"location":"terms/dns/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0645\u0631\u0643\u0632 \u0627\u062a\u0635\u0627\u0644\u0627\u062a: \u062a\u0639\u0637\u064a\u0647 \u0627\u0633\u0645 \u0627\u0644\u0634\u062e\u0635\u060c \u0641\u064a\u0628\u062d\u062b \u0641\u064a \u0627\u0644\u062f\u0644\u064a\u0644 \u0648\u064a\u0639\u0637\u064a\u0643 \u0631\u0642\u0645 \u0627\u0644\u0647\u0627\u062a\u0641 \u0627\u0644\u0635\u062d\u064a\u062d. \u064a\u062d\u0641\u0638 \u0627\u0644\u0623\u0631\u0642\u0627\u0645 \u0627\u0644\u0634\u0627\u0626\u0639\u0629 \u0645\u0624\u0642\u062a\u064b\u0627 \u0644\u062a\u0633\u0631\u064a\u0639 \u0627\u0644\u0645\u0643\u0627\u0644\u0645\u0627\u062a \u0627\u0644\u062a\u0627\u0644\u064a\u0629.</p>"},{"location":"terms/dns/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0639\u0646\u0627\u0648\u064a\u0646 + \u0639\u0643\u0633\u064a\u0629)","text":"<p>C#<pre><code>using System;\nusing System.Net;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    static async Task Main()\n    {\n        // 1) \u062a\u062d\u0648\u064a\u0644 \u0627\u0633\u0645 \u0625\u0644\u0649 \u0639\u0646\u0627\u0648\u064a\u0646 IP (A/AAAA \u062d\u0633\u0628 \u0627\u0644\u0645\u062a\u0627\u062d)\n        string host = \"example.com\";\n        IPAddress[] ips = await Dns.GetHostAddressesAsync(host);\n        foreach (var ip in ips)\n            Console.WriteLine($\"{host} -&gt; {ip}\");\n\n        // 2) \u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0639\u0643\u0633\u064a: IP -&gt; \u0627\u0633\u0645 (PTR)\u060c \u0625\u0646 \u062a\u0648\u0641\u0631\n        if (ips.Length &gt; 0)\n        {\n            try\n            {\n                var entry = await Dns.GetHostEntryAsync(ips[0]);\n                Console.WriteLine($\"{ips[0]} -&gt; {entry.HostName}\");\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine($\"Reverse lookup failed: {ex.Message}\");\n            }\n        }\n    }\n}\n</code></pre> \u0645\u0644\u0627\u062d\u0638\u0627\u062a: <code>Dns.*</code> \u064a\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0645\u062d\u0644\u0651\u0644 \u0641\u064a \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644. \u0644\u0627 \u064a\u0648\u0641\u0651\u0631 \u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0633\u062c\u0644\u0627\u062a \u063a\u064a\u0631 A/AAAA/PTR \u0645\u0628\u0627\u0634\u0631\u0629. \u0644\u0627\u0633\u062a\u062e\u0631\u0627\u062c MX/TXT/SRV \u0633\u062a\u062d\u062a\u0627\u062c \u0645\u0643\u062a\u0628\u0629 DNS \u0645\u062a\u062e\u0635\u0651\u0635\u0629 \u0623\u0648 \u0627\u0633\u062a\u0639\u0644\u0627\u0645 DoH/DoT \u0639\u0628\u0631 HTTP/TLS.</p>"},{"location":"terms/dns/#dns-checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0625\u062f\u0627\u0631\u0629 DNS (Checklist)","text":"<ul> <li>\u0627\u062d\u062c\u0632 \u0646\u0637\u0627\u0642\u0643 \u0645\u0646 \u0645\u0633\u062c\u0651\u0644.  </li> <li>\u0639\u064a\u0651\u0646 \u062e\u0648\u0627\u062f\u0645 \u0627\u0644\u0623\u0633\u0645\u0627\u0621 (NS) \u0625\u0644\u0649 \u0645\u0648\u0641\u0651\u0631 DNS \u0627\u0644\u0630\u064a \u0633\u062a\u062f\u064a\u0631 \u0639\u0646\u062f\u0647 \u0627\u0644\u0633\u062c\u0644\u0627\u062a.  </li> <li>\u0623\u0646\u0634\u0626 \u0633\u062c\u0644\u0627\u062a:  </li> <li>A/AAAA \u0644\u0640 <code>@</code> \u0648/\u0623\u0648 <code>www</code>.  </li> <li>CNAME \u0644\u0644\u0628\u064a\u0626\u0627\u062a \u0623\u0648 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u0636\u0627\u0641\u0629.  </li> <li>MX \u0644\u0644\u0628\u0631\u064a\u062f + TXT (SPF, DKIM, DMARC).  </li> <li>SRV \u0625\u0646 \u0643\u0627\u0646\u062a \u0644\u062f\u064a\u0643 \u062e\u062f\u0645\u0627\u062a \u062a\u0643\u062a\u0634\u0641 \u0622\u0644\u064a\u064b\u0627.  </li> <li>\u0627\u062e\u062a\u0631 TTL \u0645\u0646\u0627\u0633\u0628: \u0635\u063a\u064a\u0631 \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u0625\u0637\u0644\u0627\u0642/\u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a\u060c \u0623\u0643\u0628\u0631 \u0644\u0644\u0627\u0633\u062a\u0642\u0631\u0627\u0631.  </li> <li>\u0641\u0639\u0651\u0644 DNSSEC \u0625\u0646 \u0643\u0627\u0646 \u0627\u0644\u0645\u0633\u062c\u0651\u0644 \u0648\u0627\u0644\u0645\u0648\u0641\u0651\u0631 \u064a\u062f\u0639\u0645\u0627\u0646\u0647.  </li> <li>\u0627\u0641\u0647\u0645 Propagation: \u062a\u062d\u062f\u064a\u062b NS \u0642\u062f \u064a\u0633\u062a\u063a\u0631\u0642 \u0633\u0627\u0639\u0627\u062a\u061b \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u062f\u0627\u062e\u0644\u064a\u0629 \u062a\u062a\u0628\u0639 TTL.  </li> <li>\u0644\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0635\u0627\u062f\u0631: \u0627\u0636\u0628\u0637 PTR (Reverse DNS) \u0644\u062f\u0649 \u0645\u0632\u0648\u0651\u062f IP \u0644\u062a\u0641\u0627\u062f\u064a \u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0643\u0639\u0634\u0648\u0627\u0626\u064a\u0629.  </li> </ul>"},{"location":"terms/dns/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0648\u0636\u0639 CNAME \u0639\u0644\u0649 \u0627\u0644\u062c\u0630\u0631 <code>@</code> \u0644\u062f\u0649 \u0645\u0648\u0641\u0651\u0631\u064a\u0646 \u0644\u0627 \u064a\u062f\u0639\u0645\u0648\u0646 ALIAS/ANAME.  </li> <li>TTL \u0645\u0631\u062a\u0641\u0639 \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u062a\u0628\u062f\u064a\u0644 \u2192 \u062a\u0623\u062e\u064a\u0631 \u0627\u0646\u062a\u0634\u0627\u0631 \u0627\u0644\u062a\u063a\u064a\u064a\u0631.  </li> <li>\u062a\u0631\u0643 MX \u064a\u0634\u064a\u0631 \u0625\u0644\u0649 \u0645\u0636\u064a\u0641 \u0628\u0644\u0627 A/AAAA \u0635\u0627\u0644\u062d.  </li> <li>\u0625\u0639\u062f\u0627\u062f SPF \u062e\u0627\u0637\u0626 \u0623\u0648 \u062a\u0643\u0631\u0627\u0631 \u0645\u062a\u0636\u0627\u0631\u0628 \u0641\u064a \u0633\u062c\u0644\u0627\u062a TXT.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 DNS \u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642 \u062f\u0648\u0646 DNSSEC \u0641\u064a \u0628\u064a\u0626\u0627\u062a \u062d\u0633\u0651\u0627\u0633\u0629.  </li> </ul>"},{"location":"terms/dns/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 mDNS \u062d\u0644\u0651 \u0623\u0633\u0645\u0627\u0621 \u0645\u062d\u0644\u064a \u0628\u0644\u0627 \u062e\u0627\u062f\u0645 \u0645\u0631\u0643\u0632\u064a \u064a\u0639\u0645\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0645\u062d\u0644\u064a\u0629 \u0639\u0628\u0631 Multicast \u0641\u0642\u0637 DNS \u0646\u0638\u0627\u0645 \u062a\u0633\u0645\u064a\u0629 \u0645\u0648\u0632\u0651\u0639 \u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u0623\u0633\u0645\u0627\u0621 \u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0633\u062c\u0644\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 + TTL/Caching + \u0645\u062e\u0648\u0651\u064e\u0644/\u062a\u0643\u0631\u0627\u0631\u064a + \u062e\u064a\u0627\u0631 DNSSEC DoH/DoT \u062a\u0634\u0641\u064a\u0631 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a DNS \u0641\u0648\u0642 HTTPS/TLS \u064a\u062d\u0645\u064a \u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629 \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u0646\u0642\u0644\u061b \u0644\u0627 \u064a\u063a\u064a\u0651\u0631 \u062f\u0644\u0627\u0644\u0627\u062a \u0627\u0644\u0633\u062c\u0644\u0627\u062a"},{"location":"terms/dns/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>DNS \u0647\u0648 \u201c\u062f\u0641\u062a\u0631 \u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a\u201d. \u064a\u0631\u0628\u0637 \u0627\u0644\u0627\u0633\u0645 \u0628\u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0645\u0639 \u062a\u062e\u0632\u064a\u0646 \u0645\u0624\u0642\u062a \u0648TTL. \u0623\u062f\u0631 \u0633\u062c\u0644\u0627\u062a\u0643 \u0628\u0639\u0646\u0627\u064a\u0629\u060c \u0627\u0633\u062a\u062e\u062f\u0645 TTL \u0645\u0646\u0627\u0633\u0628\u064b\u0627\u060c \u0648\u0641\u0643\u0651\u0631 \u0641\u064a DNSSEC \u0648DoH/DoT \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0644\u062b\u0642\u0629 \u0648\u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629.</p>"},{"location":"terms/dom/","title":"DOM \u2014 Document Object Model","text":""},{"location":"terms/dom/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Document Object Model (DOM) \u2014 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0626\u0646\u064a \u0644\u0645\u0633\u062a\u0646\u062f \u0627\u0644\u0648\u064a\u0628.</p>"},{"location":"terms/dom/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0645\u062b\u064a\u0644 \u0634\u062c\u0631\u064a \u0644\u0635\u0641\u062d\u0629 HTML \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d. \u0643\u0644 \u0648\u0633\u0645\u064d \u064a\u0635\u0628\u062d \u0639\u0642\u062f\u0629/\u0639\u0646\u0635\u0631 \u0644\u0647\u0627 \u062e\u0635\u0627\u0626\u0635 \u0648\u0623\u062d\u062f\u0627\u062b. \u064a\u0645\u0643\u0646 \u0644\u0644\u0640 JS (\u0623\u0648 Blazor/\u063a\u064a\u0631\u0647) \u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0634\u062c\u0631\u0629 \u0648\u062a\u0639\u062f\u064a\u0644\u0647\u0627 \u0648\u0627\u0644\u0627\u0633\u062a\u0645\u0627\u0639 \u0644\u0644\u0623\u062d\u062f\u0627\u062b.</p>"},{"location":"terms/dom/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0635\u0641\u062d\u0629 = \u0634\u062c\u0631\u0629 \u062a\u0628\u062f\u0623 \u0645\u0646 <code>document</code> \u2192 \u0639\u0646\u0627\u0635\u0631 (<code>html</code> \u2192 <code>body</code> \u2192 \u2026).  </li> <li>\u062a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0639\u0646\u0627\u0635\u0631 \u0628\u0640 Selectors (<code>getElementById</code>, <code>querySelector</code>).  </li> <li>\u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0646\u0635/\u0627\u0644\u062e\u0635\u0627\u0626\u0635/\u0627\u0644\u0623\u0646\u0645\u0627\u0637 \u0648\u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0623\u062d\u062f\u0627\u062b (click, input\u2026).  </li> <li>\u0623\u064a \u062a\u0639\u062f\u064a\u0644 DOM \u0642\u062f \u064a\u0633\u0628\u0651\u0628 \u0625\u0639\u0627\u062f\u0629 \u062a\u062f\u0641\u0651\u0642/\u0631\u0633\u0645 (Reflow/Repaint) \u2192 \u0627\u0646\u062a\u0628\u0647 \u0644\u0644\u0623\u062f\u0627\u0621.</li> </ul>"},{"location":"terms/dom/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>DOM \u0645\u062b\u0644 \u0634\u062c\u0631\u0629 \u0639\u0627\u0626\u0644\u0629 \u0644\u0644\u0635\u0641\u062d\u0629: \u0643\u0644 \u0639\u0646\u0635\u0631 \u0647\u0648 \u0639\u064f\u0642\u062f\u0629 \u0644\u0647\u0627 \u0623\u0628\u0646\u0627\u0621 \u0648\u0625\u062e\u0648\u0629. \u0639\u0646\u062f\u0645\u0627 \u062a\u063a\u064a\u0651\u0631 \u0639\u0642\u062f\u0629\u060c \u0642\u062f \u062a\u062a\u0623\u062b\u0631 \u0641\u0631\u0648\u0639 \u0623\u062e\u0631\u0649 (\u0625\u0639\u0627\u062f\u0629 \u062a\u0631\u062a\u064a\u0628/\u0631\u0633\u0645).</p>"},{"location":"terms/dom/#javascript","title":"\u0645\u062b\u0627\u0644 \u0633\u0631\u064a\u0639 (JavaScript) \u2014 \u062a\u062d\u062f\u064a\u062f \u0639\u0646\u0635\u0631\u060c \u062a\u0639\u062f\u064a\u0644 \u0646\u0635\u060c \u062d\u062f\u062b\u060c \u0648\u0625\u062f\u0631\u0627\u062c \u0639\u0646\u0635\u0631","text":"HTML<pre><code>&lt;div id=\"msg\"&gt;&lt;/div&gt;\n&lt;ul id=\"list\"&gt;&lt;/ul&gt;\n&lt;button id=\"add\"&gt;Add Item&lt;/button&gt;\n\n&lt;script&gt;\n  // \u0642\u0631\u0627\u0621\u0627\u062a/\u062a\u0639\u062f\u064a\u0644\u0627\u062a \u0622\u0645\u0646\u0629: \u0627\u0633\u062a\u062e\u062f\u0645 textContent \u0644\u062a\u0641\u0627\u062f\u064a XSS\n  const msg = document.getElementById('msg');\n  msg.textContent = 'Hello DOM!';\n\n  // \u062a\u0641\u0648\u064a\u0636 \u0623\u062d\u062f\u0627\u062b: \u0645\u0633\u062a\u0645\u0639 \u0648\u0627\u062d\u062f \u0644\u0642\u0627\u0626\u0645\u0629 \u0643\u0627\u0645\u0644\u0629\n  const list = document.querySelector('#list');\n  document.getElementById('add').addEventListener('click', () =&gt; {\n    const li = document.createElement('li');\n    li.textContent = `Item ${list.children.length + 1}`;\n    list.appendChild(li); // \u0625\u062f\u0631\u0627\u062c \u0641\u064a \u0627\u0644\u0634\u062c\u0631\u0629\n  });\n&lt;/script&gt;\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0627\u062a: - \u0644\u0627 \u062a\u0633\u062a\u062e\u062f\u0645 <code>innerHTML</code> \u0645\u0639 \u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645. - \u0639\u062f\u0651\u0644 DOM \u062f\u0641\u0639\u0629 \u0648\u0627\u062d\u062f\u0629 \u0644\u062a\u0642\u0644\u064a\u0644 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u062f\u0641\u0651\u0642 (DocumentFragment / <code>requestAnimationFrame</code>).</p>"},{"location":"terms/dom/#c-blazor-dom-js-interop-c","title":"\u0645\u062b\u0627\u0644 C# (Blazor) \u2014 \u0646\u062f\u0627\u0621 DOM \u0639\u0628\u0631 JS Interop \u0628\u0644\u0627 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0627\u0644\u0645\u0628\u0627\u0634\u0631 \u0645\u0646 C","text":"C#<pre><code>// Index.razor\n@inject IJSRuntime JS\n&lt;h1 id=\"title\"&gt;Welcome&lt;/h1&gt;\n&lt;button @onclick=\"ChangeTitle\"&gt;Change&lt;/button&gt;\n\n@code {\n    private async Task ChangeTitle()\n        =&gt; await JS.InvokeVoidAsync(\"setText\", \"#title\", \"\u0645\u0631\u062d\u0628\u0627 DOM\");\n}\n\n// wwwroot/js/dom.js  (\u0623\u0636\u0641\u0647 \u0641\u064a index.html: &lt;script src=\"js/dom.js\"&gt;&lt;/script&gt;)\nwindow.setText = (selector, text) =&gt; {\n  const el = document.querySelector(selector);\n  if (el) el.textContent = text; // \u0622\u0645\u0646\n};\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u062a\u0628\u0642\u0649 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u0641\u064a C#\u060c \u0648\u0627\u0644\u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0641\u0639\u0644\u064a \u0644\u0644\u0640 DOM \u064a\u062a\u0645 \u062f\u0627\u062e\u0644 \u0648\u0638\u064a\u0641\u0629 JS \u0635\u063a\u064a\u0631\u0629.</p>"},{"location":"terms/dom/#dom","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 DOM \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>\u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0646\u0627\u0635\u0631: <code>getElementById</code> \u0644\u0644\u0623\u0633\u0631\u0639\u061b <code>querySelector(All)</code> \u0644\u0644\u0645\u0631\u0648\u0646\u0629.  </li> <li>\u0623\u0645\u0627\u0646: \u0627\u0633\u062a\u062e\u062f\u0645 <code>textContent</code>/<code>setAttribute</code> \u0628\u062f\u0644 <code>innerHTML</code> \u0645\u0639 \u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645.  </li> <li>\u0623\u062f\u0627\u0621:  </li> <li>\u062c\u0645\u0651\u0639 \u0627\u0644\u062a\u0639\u062f\u064a\u0644\u0627\u062a (Fragment / <code>append</code> \u062f\u0641\u0639\u0629 \u0648\u0627\u062d\u062f\u0629).  </li> <li>\u0642\u0644\u0651\u0644 \u0642\u0631\u0627\u0621\u0627\u062a/\u0643\u062a\u0627\u0628\u0627\u062a \u0645\u062a\u0628\u0627\u062f\u0644\u0629 (\u0627\u0642\u0631\u0623 \u0623\u0648\u0644\u064b\u0627\u060c \u062b\u0645 \u0627\u0643\u062a\u0628).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>classList</code> \u0628\u062f\u0644 <code>style</code> \u0627\u0644\u0645\u062a\u0643\u0631\u0631.  </li> <li>\u0623\u062d\u062f\u0627\u062b: \u062a\u0641\u0648\u064a\u0636 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0639\u0644\u0649 \u0639\u0646\u0635\u0631 \u0623\u0628 \u0644\u0639\u062f\u062f \u0643\u0628\u064a\u0631 \u0645\u0646 \u0627\u0644\u0623\u0628\u0646\u0627\u0621.  </li> <li>\u0642\u064a\u0627\u0633: \u0631\u0627\u0642\u0628 Reflow/Repaint \u0648\u0623\u0632\u0645\u0646\u0629 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 (Performance tab).  </li> <li>\u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631: \u0623\u0639\u0637\u0650 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 IDs/roles \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0628\u0646\u064a\u0629 HTML \u0627\u0644\u0647\u0634\u0651\u0629.</li> </ol>"},{"location":"terms/dom/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u0639\u0645\u0627\u0644 <code>innerHTML</code> \u0645\u0639 \u0646\u0635 \u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642 \u2192 XSS.  </li> <li>\u0644\u0645\u0633 DOM \u062f\u0627\u062e\u0644 \u062d\u0644\u0642\u0627\u062a \u0643\u062b\u064a\u0641\u0629 \u062f\u0648\u0646 \u062a\u062c\u0645\u064a\u0639 \u2192 \u0628\u0637\u0621 \u0648\u0627\u0636\u062d.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u062a\u0631\u062a\u064a\u0628 \u0639\u0642\u062f \u0645\u0639\u064a\u0651\u0646 \u062f\u0648\u0646 \u062a\u062b\u0628\u064a\u062a Selectors \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u062e\u0644\u0637 DOM \u0648\u062d\u0627\u0644\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u062f\u0648\u0646 \u0625\u062f\u0627\u0631\u0629 \u062d\u0627\u0644\u0629 \u2192 \u0633\u0644\u0648\u0643 \u0645\u062a\u0646\u0627\u0642\u0636.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0646\u0638\u064a\u0641 \u0639\u0646\u062f \u0625\u0632\u0627\u0644\u0629 \u0639\u0646\u0627\u0635\u0631 (\u0625\u0644\u063a\u0627\u0621 \u0645\u0633\u062a\u0645\u0639\u064a \u0627\u0644\u0623\u062d\u062f\u0627\u062b).</li> </ul>"},{"location":"terms/dom/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 DOM \u0634\u062c\u0631\u0629 \u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0635\u0641\u062d\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0642\u0631\u0627\u0621\u0629/\u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0623\u0633\u0627\u0633 \u0627\u0644\u062a\u0641\u0627\u0639\u0644 \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d Virtual DOM \u0637\u0628\u0642\u0629 \u0648\u0633\u064a\u0637\u0629 \u0644\u0645\u0642\u0627\u0631\u0646\u0629 \u0627\u0644\u0634\u062c\u0631\u0629 \u0648\u062a\u062d\u062f\u064a\u062b\u0647\u0627 \u0628\u0643\u0641\u0627\u0621\u0629 \u0634\u0627\u0626\u0639 \u0641\u064a React\u061b \u064a\u0642\u0644\u0651\u0644 \u0644\u0645\u0633 DOM \u0627\u0644\u0645\u0628\u0627\u0634\u0631 Shadow DOM \u0639\u0632\u0644 \u0646\u0645\u0637/\u0628\u0646\u064a\u0629 \u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0627\u0644\u0648\u064a\u0628 \u064a\u0645\u0646\u0639 \u062a\u0633\u0631\u0651\u0628 CSS \u0648\u0627\u0644\u0623\u0633\u0645\u0627\u0621 CSSOM \u0634\u062c\u0631\u0629 \u0623\u0646\u0645\u0627\u0637 (CSS) \u062a\u062a\u0643\u0627\u0645\u0644 \u0645\u0639 DOM \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u062a\u062e\u0637\u064a\u0637 BOM \u0643\u0627\u0626\u0646\u0627\u062a \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d (window, location, history) \u062e\u0627\u0631\u062c \u0634\u062c\u0631\u0629 \u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0635\u0641\u062d\u0629"},{"location":"terms/dom/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>DOM \u0647\u0648 \u0627\u0644\u0634\u062c\u0631\u0629 \u0627\u0644\u062d\u064a\u0651\u0629 \u0644\u0635\u0641\u062d\u062a\u0643. \u0627\u062e\u062a\u0631 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0628\u0630\u0643\u0627\u0621\u060c \u0639\u062f\u0651\u0644\u0647\u0627 \u0622\u0645\u0646\u064b\u0627 \u0648\u062f\u0641\u0639\u064a\u064b\u0627\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0641\u0648\u064a\u0636 \u0627\u0644\u0623\u062d\u062f\u0627\u062b\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u0633\u0631\u064a\u0639\u0629\u060c \u0622\u0645\u0646\u0629\u060c \u0648\u0633\u0647\u0644\u0629 \u0627\u0644\u0635\u064a\u0627\u0646\u0629. </p>"},{"location":"terms/encapsulation/","title":"Encapsulation","text":""},{"location":"terms/encapsulation/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Encapsulation \u2014 \u062a\u063a\u0644\u064a\u0641/\u0627\u062d\u062a\u0648\u0627\u0621 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a (\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0648\u0643\u0634\u0641 \u0648\u0627\u062c\u0647\u0629 \u0622\u0645\u0646\u0629).</p>"},{"location":"terms/encapsulation/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0645\u0628\u062f\u0623 \u0645\u0646 \u0645\u0628\u0627\u062f\u0626 OOP: \u0646\u062e\u0641\u064a \u0627\u0644\u062d\u0627\u0644\u0629 \u0648\u0631\u0627\u0621 \u0648\u0627\u062c\u0647\u0629 \u0645\u0636\u0628\u0648\u0637\u0629 (Properties/Methods)\u060c \u0648\u0646\u0645\u0646\u0639 \u0627\u0644\u062a\u0644\u0627\u0639\u0628 \u0627\u0644\u0645\u0628\u0627\u0634\u0631 \u0628\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0643\u0627\u0626\u0646. \u0646\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u062b\u0648\u0627\u0628\u062a (Invariants) \u0648\u0646\u0642\u062f\u0651\u0645 \u0639\u0645\u0644\u064a\u0627\u062a \u0635\u0627\u0644\u062d\u0629 \u0641\u0642\u0637.</p>"},{"location":"terms/encapsulation/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u0627 \u0646\u0643\u0634\u0641 \u0627\u0644\u062d\u0642\u0648\u0644 \u0645\u0628\u0627\u0634\u0631\u0629\u061b \u0646\u0648\u0641\u0651\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u062a\u0636\u0628\u0637 \u0627\u0644\u0642\u0631\u0627\u0621\u0629/\u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0648\u0627\u0644\u062a\u062d\u0642\u0642.  </li> <li>\u0646\u0633\u0645\u062d \u0628\u0645\u0627 \u064a\u0644\u0632\u0645 \u0641\u0642\u0637 (\u0645\u0628\u062f\u0623 \u0623\u0642\u0644 \u0627\u0645\u062a\u064a\u0627\u0632).  </li> <li>\u064a\u0641\u0635\u0644 \u201c\u0645\u0627 \u064a\u0645\u0643\u0646 \u0641\u0639\u0644\u0647\u201d \u0639\u0646 \u201c\u0643\u064a\u0641 \u064a\u064f\u0646\u0641\u0651\u0630 \u062f\u0627\u062e\u0644\u064a\u064b\u0627\u201d.</li> </ul>"},{"location":"terms/encapsulation/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u0637\u0627\u0642\u0629 \u0628\u0646\u0643: \u0644\u0643 \u0632\u0631 \u201c\u0633\u062d\u0628/\u0625\u064a\u062f\u0627\u0639\u201d \u0641\u0642\u0637. \u0644\u0627 \u062a\u0635\u0644 \u0644\u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u062a\u0639\u062f\u0651\u0644 \u0627\u0644\u0631\u0635\u064a\u062f \u064a\u062f\u0648\u064a\u064b\u0627. \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u064a\u0641\u0631\u0636 \u0627\u0644\u062d\u062f\u0648\u062f: \u0644\u0627 \u0633\u062d\u0628 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0627\u0644\u0631\u0635\u064a\u062f\u060c \u0644\u0627 \u0645\u0628\u0627\u0644\u063a \u0633\u0627\u0644\u0628\u0629.</p>"},{"location":"terms/encapsulation/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u062d\u0633\u0627\u0628 \u0628\u0646\u0643 \u0645\u0639 \u062a\u063a\u0644\u064a\u0641 \u0635\u0627\u0631\u0645 (\u062a\u062d\u0642\u0651\u0642 + \u062b\u0648\u0627\u0628\u062a)","text":"C#<pre><code>// .NET 8/9\nusing System;\n\npublic class BankAccount\n{\n    // \u0627\u0644\u062d\u0627\u0644\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0645\u062e\u0641\u064a\u0651\u0629\n    private decimal _balance;\n    private readonly string _iban;\n\n    // \u0648\u0627\u062c\u0647\u0629 \u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637\n    public decimal Balance =&gt; _balance;\n    public string Iban =&gt; _iban;\n\n    // \u0627\u0644\u062a\u063a\u0644\u064a\u0641 \u064a\u0628\u062f\u0623 \u0645\u0646 \u0627\u0644\u0645\u064f\u0646\u0634\u0626: \u062a\u062d\u0642\u0642 \u0623\u0648\u0644\u064a\n    public BankAccount(string iban, decimal openingBalance = 0m)\n    {\n        if (string.IsNullOrWhiteSpace(iban)) throw new ArgumentException(\"IBAN required\");\n        if (openingBalance &lt; 0) throw new ArgumentOutOfRangeException(nameof(openingBalance));\n        _iban = iban;\n        _balance = openingBalance;\n    }\n\n    // \u0639\u0645\u0644\u064a\u0627\u062a \u0622\u0645\u0646\u0629 \u0641\u0642\u0637 (\u0644\u0627 Setter \u0644\u0644\u0631\u0635\u064a\u062f)\n    public void Deposit(decimal amount)\n    {\n        if (amount &lt;= 0) throw new ArgumentOutOfRangeException(nameof(amount));\n        _balance += amount;\n    }\n\n    public bool TryWithdraw(decimal amount, out string? error)\n    {\n        if (amount &lt;= 0) { error = \"amount_must_be_positive\"; return false; }\n        if (amount &gt; _balance) { error = \"insufficient_funds\"; return false; }\n        _balance -= amount;\n        error = null;\n        return true;\n    }\n}\n\nclass Demo\n{\n    static void Main()\n    {\n        var acc = new BankAccount(\"JO71CBJO0000000000000131000302\", 1000m);\n        acc.Deposit(250m);\n        Console.WriteLine(acc.Balance); // 1250\n\n        if (!acc.TryWithdraw(2000m, out var err))\n            Console.WriteLine(err);     // insufficient_funds\n\n        // acc._balance = 1;          // \u2717 \u063a\u064a\u0631 \u0645\u0633\u0645\u0648\u062d (\u0645\u062e\u0641\u064a)\n        // acc.Balance = 0;           // \u2717 \u0644\u0627 Setter\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0644\u0627 \u0637\u0631\u064a\u0642\u0629 \u0644\u0643\u0633\u0631 \u0627\u0644\u0642\u0648\u0627\u0639\u062f. \u0643\u0644 \u062a\u0639\u062f\u064a\u0644 \u064a\u0645\u0631 \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u0629 \u062a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0629.</p>"},{"location":"terms/encapsulation/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u062a\u063a\u0644\u064a\u0641","text":"<ul> <li>\u0627\u0628\u062f\u0623 \u0628\u0640 \u062d\u0642\u0648\u0644 \u062e\u0627\u0635\u0629 (<code>private</code>) \u0648\u0648\u0641\u0651\u0631 Properties/\u0637\u0631\u0642 \u0644\u0644\u062a\u062d\u0643\u0645.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u062c\u0647\u0627\u062a \u0644\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0648\u062a\u0645\u0643\u064a\u0646 \u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644.  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u0645\u0646\u0634\u0626 \u0648\u0637\u0631\u0642 \u0627\u0644\u062a\u0639\u062f\u064a\u0644 \u062a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062b\u0648\u0627\u0628\u062a (Validation/Invariants).  </li> <li>\u0641\u0636\u0651\u0644 <code>private set</code> \u0648<code>init</code> \u0644\u0644\u062e\u0635\u0627\u0626\u0635 \u0627\u0644\u062a\u064a \u062a\u064f\u0643\u062a\u0628 \u0645\u0631\u0629.  </li> <li>\u0642\u0644\u0651\u0644 \u0645\u0633\u0627\u062d\u0629 \u0627\u0644\u0633\u0637\u062d \u0627\u0644\u0639\u0627\u0645\u0629: \u0644\u0627 \u062a\u0643\u0634\u0641 \u0645\u0627 \u0644\u0627 \u062a\u062d\u062a\u0627\u062c\u0647 (<code>internal</code>/<code>private</code>).  </li> <li>\u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0644\u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u0645\u0639\u0642\u0651\u062f\u0629\u060c \u0627\u0633\u062a\u062e\u062f\u0645 Factory/Builder \u0628\u062f\u0644 Setters \u0645\u0641\u062a\u0648\u062d\u0629.</li> </ul>"},{"location":"terms/encapsulation/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062c\u0639\u0644 \u0627\u0644\u062d\u0642\u0648\u0644/\u0627\u0644\u062e\u0635\u0627\u0626\u0635 public \u062b\u0645 \u0645\u062d\u0627\u0648\u0644\u0629 \u0636\u0628\u0637\u0647\u0627 \u064a\u062f\u0648\u064a\u064b\u0627 \u0641\u064a \u0643\u0644 \u0645\u0643\u0627\u0646.  </li> <li>Getter/Setter \u064a\u0645\u0631\u0627\u0646\u0631 \u062f\u0648\u0646 \u062a\u062d\u0642\u0642 \u2192 \u0643\u0633\u0631 \u0627\u0644\u062b\u0648\u0627\u0628\u062a \u0628\u0633\u0647\u0648\u0644\u0629.  </li> <li>\u0643\u0634\u0641 \u0646\u0645\u0648\u0630\u062c \u062f\u0627\u062e\u0644\u064a \u0628\u062f\u0644 DTO/\u0648\u0627\u062c\u0647\u0629 \u2192 \u0627\u0642\u062a\u0631\u0627\u0646 \u0642\u0648\u064a.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Service Locator \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0627\u0626\u0646 \u0628\u062f\u0644 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a (\u064a\u062a\u0639\u0627\u0631\u0636 \u0645\u0639 \u0627\u0644\u062a\u063a\u0644\u064a\u0641/DI).  </li> <li>\u062e\u0644\u0637 \u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a \u0643\u062b\u064a\u0631\u0629 \u0641\u064a \u0635\u0646\u0641 \u0648\u0627\u062d\u062f (\u0643\u0633\u0631 \u0627\u0644\u062a\u0645\u0627\u0633\u0643).</li> </ul>"},{"location":"terms/encapsulation/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Encapsulation \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062d\u0627\u0644\u0629 \u062e\u0644\u0641 \u0648\u0627\u062c\u0647\u0629 \u0622\u0645\u0646\u0629 \u064a\u062d\u0645\u064a \u0627\u0644\u062b\u0648\u0627\u0628\u062a \u0648\u064a\u0628\u0633\u0651\u0637 \u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644/\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Abstraction \u0648\u0635\u0641 \u0645\u0627 \u062f\u0648\u0646 \u0643\u064a\u0641 \u0627\u0644\u062a\u063a\u0644\u064a\u0641 \u064a\u0637\u0628\u0651\u0642 \u0627\u0644\u062a\u062c\u0631\u064a\u062f \u0639\u0645\u0644\u064a\u064b\u0627 \u0639\u0628\u0631 \u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a Inheritance \u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0628\u0631 \u062a\u0648\u0631\u064a\u062b \u0642\u062f \u064a\u0643\u0634\u0641 \u062a\u0641\u0627\u0635\u064a\u0644\u061b \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0628\u062d\u0630\u0631 \u0645\u0639 \u0627\u0644\u062a\u063a\u0644\u064a\u0641 Runtime Polymorphism \u0646\u0641\u0633 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u2192 \u062a\u0646\u0641\u064a\u0630 \u0645\u062e\u062a\u0644\u0641 \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 <code>virtual/abstract</code> + <code>override</code> \u0623\u0648 Interface"},{"location":"terms/encapsulation/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Encapsulation = \u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u062d\u0627\u0644\u0629 \u062e\u0644\u0641 \u0648\u0627\u062c\u0647\u0629 \u062a\u064f\u0641\u0631\u0636 \u0641\u064a\u0647\u0627 \u0627\u0644\u0642\u0648\u0627\u0639\u062f. \u0627\u0633\u062a\u062e\u062f\u0645 \u062d\u0642\u0648\u0644 \u062e\u0627\u0635\u0629 + \u0648\u0627\u062c\u0647\u0627\u062a + \u062a\u062d\u0642\u0642\u060c \u0648\u0642\u0644\u0651\u0644 \u0645\u0627 \u062a\u0643\u0634\u0641\u0647\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0643\u0648\u062f \u0623\u0643\u062b\u0631 \u0623\u0645\u0627\u0646\u064b\u0627\u060c \u0623\u0633\u0647\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u064b\u0627\u060c \u0648\u0623\u0642\u0644 \u0627\u0642\u062a\u0631\u0627\u0646\u064b\u0627. </p>"},{"location":"terms/encoding/","title":"Encoding","text":""},{"location":"terms/encoding/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Encoding \u2014 \u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (\u062a\u0645\u062b\u064a\u0644\u0647\u0627 \u0628\u0635\u064a\u063a\u0629 \u0642\u064a\u0627\u0633\u064a\u0629 \u0644\u0644\u0646\u0642\u0644/\u0627\u0644\u062a\u062e\u0632\u064a\u0646).</p>"},{"location":"terms/encoding/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0625\u0644\u0649 \u0635\u064a\u063a\u0629 \u0645\u062a\u0651\u0641\u0642 \u0639\u0644\u064a\u0647\u0627 \u0644\u064a\u062a\u0645 \u0646\u0642\u0644\u0647\u0627 \u0623\u0648 \u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0623\u0648 \u062a\u0628\u0627\u062f\u0644\u0647\u0627 \u0628\u0623\u0645\u0627\u0646 \u0645\u0646 \u062d\u064a\u062b \u0627\u0644\u062a\u0648\u0627\u0641\u0642. \u0623\u0645\u062b\u0644\u0629: UTF-8 (\u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0623\u062d\u0631\u0641)\u060c Base64 (\u0646\u0635 \u2194 \u062b\u0646\u0627\u0626\u064a)\u060c URL Encoding (\u062a\u0631\u0645\u064a\u0632 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0627\u0644\u0631\u0648\u0627\u0628\u0637).</p>"},{"location":"terms/encoding/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u064a\u0647\u062a\u0645 \u0628\u0640 \u0627\u0644\u0634\u0643\u0644 \u0644\u0627 \u0627\u0644\u0633\u0631\u0651\u064a\u0629.  </li> <li>\u064a\u0636\u0645\u0646 \u0623\u0646 \u0627\u0644\u0646\u0635\u0648\u0635/\u0627\u0644\u0628\u062a\u0651\u0627\u062a \u062a\u064f\u0641\u0647\u0645 \u0628\u0646\u0641\u0633 \u0627\u0644\u0637\u0631\u064a\u0642\u0629 \u0639\u0628\u0631 \u0627\u0644\u0623\u0646\u0638\u0645\u0629.  </li> <li>\u0623\u0634\u0647\u0631 \u0627\u0644\u0623\u0646\u0648\u0627\u0639:</li> <li>\u062a\u0631\u0645\u064a\u0632 \u0623\u062d\u0631\u0641: UTF-8/UTF-16 \u0644\u062a\u0645\u062b\u064a\u0644 Unicode \u0643\u0646\u0650\u0642\u0652\u0637 \u0628\u0627\u064a\u062a.  </li> <li>\u062b\u0646\u0627\u0626\u064a\u2192\u0646\u0635\u064a: Base64 \u0644\u062a\u0645\u0631\u064a\u0631 \u0628\u0627\u064a\u062a\u0627\u062a \u062f\u0627\u062e\u0644 JSON/\u0646\u0635.  </li> <li>\u0631\u0648\u0627\u0628\u0637: %XX \u0644\u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0623\u062d\u0631\u0641 \u0627\u0644\u062e\u0627\u0635\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u0627\u0631/\u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645.  </li> </ul>"},{"location":"terms/encoding/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0644\u063a\u0629 \u0643\u062a\u0627\u0628\u0629 \u0645\u0648\u062d\u0651\u062f\u0629 \u0628\u064a\u0646 \u0634\u0631\u0643\u0627\u0621: \u0646\u062a\u0651\u0641\u0642 \u0623\u0646 \u0646\u0643\u062a\u0628 \u0628\u0627\u0644\u0623\u062d\u0631\u0641 \u0627\u0644\u0644\u0627\u062a\u064a\u0646\u064a\u0629 (UTF-8) \u0648\u0623\u0646 \u0646\u063a\u0644\u0641 \u0627\u0644\u0635\u0648\u0631 \u0643\u0646\u0635 (Base64) \u0648\u0623\u0646 \u0646\u064f\u0647\u0630\u0651\u0628 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0644\u062a\u0646\u0627\u0633\u0628 \u0627\u0644\u0628\u0631\u064a\u062f (URL Encoding).</p>"},{"location":"terms/encoding/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637","text":"<p>C#<pre><code>using System;\nusing System.IO;\nusing System.Net;\nusing System.Text;\nusing System.Globalization;\n\nclass Program\n{\n    static void Main()\n    {\n        // 1) UTF-8: \u0646\u0635 \u2194 \u0628\u0627\u064a\u062a\u0627\u062a\n        string text = \"\u0645\u0631\u062d\u0628\u0627 \ud83c\udf0d\";\n        byte[] utf8 = Encoding.UTF8.GetBytes(text);\n        string back = Encoding.UTF8.GetString(utf8);\n        Console.WriteLine(back); // \u0645\u0631\u062d\u0628\u0627 \ud83c\udf0d\n\n        // 2) Base64: \u062b\u0646\u0627\u0626\u064a \u0643\u0646\u0635\n        string b64 = Convert.ToBase64String(utf8);\n        byte[] bytes2 = Convert.FromBase64String(b64);\n        Console.WriteLine(Encoding.UTF8.GetString(bytes2)); // \u0646\u0641\u0633 \u0627\u0644\u0646\u0635\n\n        // 3) URL Encoding \u0644\u0645\u0643\u0648\u0651\u0646 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0641\u0642\u0637\n        string q = \"\u0633\u0624\u0627\u0644: 1 + 2 &amp; \u062d\u0627\u0644\u0629\u061f\";\n        string url = \"https://example.com/search?q=\" + Uri.EscapeDataString(q);\n        Console.WriteLine(url);\n        // \u0644\u0627\u062d\u0638: \u0644\u0627 \u062a\u0631\u0645\u0651\u0632 URL \u0643\u0627\u0645\u0644\u064b\u0627\u061b \u0631\u0645\u0651\u0632 \"\u0627\u0644\u0623\u062c\u0632\u0627\u0621\" \u0641\u0642\u0637 (query/path segment).\n\n        // 4) \u0643\u062a\u0627\u0628\u0629 \u0645\u0644\u0641 UTF-8 \u0645\u0639/\u0628\u062f\u0648\u0646 BOM\n        File.WriteAllText(\"with-bom.txt\", text, new UTF8Encoding(true));\n        File.WriteAllText(\"no-bom.txt\",  text, new UTF8Encoding(false));\n\n        // 5) \u0635\u064a\u0627\u063a\u0629 \u0623\u0631\u0642\u0627\u0645/\u062a\u0648\u0627\u0631\u064a\u062e \u0628\u0635\u064a\u063a\u0629 \u0645\u0633\u062a\u0642\u0631\u0629 (Invariant)\n        string price = 12.34.ToString(CultureInfo.InvariantCulture); // \"12.34\" \u062f\u0627\u0626\u0645\u064b\u0627\n        Console.WriteLine(price);\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0637\u0628\u0627\u0639\u0629 \u0627\u0644\u0646\u0635 \u0627\u0644\u0623\u0635\u0644\u064a\u060c \u062b\u0645 \u0631\u0627\u0628\u0637 \u0645\u064f\u0631\u0645\u0651\u0632\u060c \u0648\u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641\u0651\u064e\u064a\u0646 \u0628\u062a\u0631\u0645\u064a\u0632 UTF-8 (\u0645\u0639/\u0628\u062f\u0648\u0646 BOM)\u060c \u0648\u0633\u0639\u0631 \u0628\u0635\u064a\u063a\u0629 \u062b\u0627\u0628\u062a\u0629.</p>"},{"location":"terms/encoding/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0628\u0633\u0644\u0627\u0645\u0629","text":"<ul> <li>\u0627\u0639\u062a\u0645\u062f UTF-8 \u0643\u0646\u0645\u0637 \u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0644\u0644\u0646\u0635\u0648\u0635. \u062d\u062f\u0651\u0650\u062f \u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0635\u0631\u0627\u062d\u0629 \u0639\u0646\u062f \u0627\u0644\u0642\u0631\u0627\u0621\u0629/\u0627\u0644\u0643\u062a\u0627\u0628\u0629.  </li> <li>\u0644\u0627 \u062a\u062e\u0644\u0637 \u0628\u064a\u0646 \u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0648\u0627\u0644\u062a\u0634\u0641\u064a\u0631: Base64 \u0644\u0627 \u064a\u062d\u0645\u064a \u0627\u0644\u0633\u0631\u0651\u064a\u0651\u0629.  </li> <li>\u0631\u0645\u0651\u0632 \u0645\u0643\u0648\u0651\u0646\u0627\u062a URL \u0641\u0642\u0637 (<code>Uri.EscapeDataString</code>) \u0648\u0644\u064a\u0633 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0643\u0627\u0645\u0644\u064b\u0627.  </li> <li>\u0639\u0646\u062f \u062a\u0628\u0627\u062f\u0644 \u062b\u0646\u0627\u0626\u064a \u062f\u0627\u062e\u0644 JSON\u060c \u0627\u0633\u062a\u062e\u062f\u0645 Base64 \u0648\u0627\u0630\u0643\u0631 \u0627\u0644\u062d\u0642\u0644 \u0628\u0648\u0636\u0648\u062d (\u0645\u062b\u0644\u0627\u064b <code>contentB64</code>).  </li> <li>\u062b\u0628\u0651\u062a CultureInfo.InvariantCulture \u0639\u0646\u062f \u062a\u062d\u0648\u064a\u0644 \u0623\u0631\u0642\u0627\u0645/\u062a\u0648\u0627\u0631\u064a\u062e \u0625\u0644\u0649 \u0646\u0635 \u0644\u0644\u062a\u062e\u0632\u064a\u0646/API.  </li> <li>\u0627\u0641\u062d\u0635 BOM \u0639\u0646\u062f \u0627\u0644\u062a\u0648\u0627\u0641\u0642 \u0645\u0639 \u0623\u0646\u0638\u0645\u0629 \u0642\u062f\u064a\u0645\u0629 (UTF-8 \u0628\u0644\u0627 BOM \u063a\u0627\u0644\u0628\u064b\u0627 \u0623\u0641\u0636\u0644 \u0644\u0644\u0648\u064a\u0628).  </li> <li>\u0648\u062b\u0651\u0642 \u0635\u064a\u063a\u0629 \u0627\u0644\u062d\u0650\u0645\u0644: \u0623\u064a\u0646 \u062a\u064f\u062e\u0632\u0651\u064e\u0646 Base64\u061f \u0645\u0627 \u0627\u0644\u062a\u0631\u0645\u064a\u0632\u061f \u0648\u0647\u0644 \u0647\u0646\u0627\u0643 \u0636\u063a\u0637 \u0642\u0628\u0644 \u0627\u0644\u062a\u0631\u0645\u064a\u0632\u061f</li> </ul>"},{"location":"terms/encoding/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0644\u0644\u0646\u0638\u0627\u0645 \u062f\u0648\u0646 \u062a\u062d\u062f\u064a\u062f\u0647 \u2192 \u0638\u0647\u0648\u0631 \u0623\u062d\u0631\u0641 \u0645\u0634\u0648\u0651\u0647\u0629.  </li> <li>Double-encoding \u0641\u064a \u0627\u0644\u0631\u0648\u0627\u0628\u0637 (\u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0646\u0635 \u062b\u0645 \u062a\u0631\u0645\u064a\u0632\u0647 \u062b\u0627\u0646\u064a\u0629).  </li> <li>\u0627\u0639\u062a\u0628\u0627\u0631 Base64 \u0646\u0648\u0639\u064b\u0627 \u0645\u0646 \u0627\u0644\u0623\u0645\u0627\u0646 \u2014 \u0647\u0648 \u0645\u062c\u0631\u062f \u062a\u0645\u062b\u064a\u0644 \u0646\u0635\u064a.  </li> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 ASCII \u0648UTF-8\u061b \u0627\u0644\u0623\u0648\u0644\u0649 \u0644\u0627 \u062a\u062f\u0639\u0645 \u0627\u0644\u0639\u0631\u0628\u064a\u0629/\u0627\u0644\u0625\u064a\u0645\u0648\u062c\u064a.  </li> <li>\u0625\u0647\u0645\u0627\u0644 Culture \u0639\u0646\u062f \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0623\u0631\u0642\u0627\u0645/\u0627\u0644\u062a\u0648\u0627\u0631\u064a\u062e \u0625\u0644\u0649 \u0646\u0635 (\u0641\u0648\u0627\u0635\u0644 \u0639\u0634\u0631\u064a\u0629 \u0645\u062e\u062a\u0644\u0641\u0629).  </li> <li>\u0645\u062d\u0627\u0648\u0644\u0629 Decode \u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u064a\u0633\u062a Base64 \u0623\u0635\u0644\u064b\u0627 \u2192 \u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a/\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u0627\u0644\u0641\u0629.</li> </ul>"},{"location":"terms/encoding/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Encryption \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0644\u064a\u0633\u062a\u0631\u062c\u0639\u0647 \u0635\u0627\u062d\u0628 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u064a\u0648\u0641\u0651\u0631 \u0633\u0631\u0651\u064a\u0629\u061b \u0642\u0627\u0628\u0644 \u0644\u0644\u0639\u0643\u0633 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d Encoding \u062a\u0645\u062b\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0644\u0646\u0642\u0644/\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0628\u0634\u0643\u0644 \u0645\u062a\u0648\u0627\u0641\u0642 \u0644\u0627 \u064a\u0648\u0641\u0651\u0631 \u0623\u0645\u0627\u0646\u064b\u0627\u061b \u0623\u0645\u062b\u0644\u0629: UTF-8, Base64, URL Encoding Hashing \u0628\u0635\u0645\u0629 \u0623\u062d\u0627\u062f\u064a\u0629 \u0627\u0644\u0627\u062a\u0651\u062c\u0627\u0647 \u0644\u0644\u062a\u062d\u0642\u0642/\u0627\u0644\u0641\u0647\u0631\u0633\u0629 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u0639\u0643\u0633 \u0639\u0645\u0644\u064a\u064b\u0627\u061b \u0627\u0633\u062a\u062e\u062f\u0645 KDF \u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631"},{"location":"terms/encoding/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Encoding \u064a\u0647\u062a\u0645 \u0628\u0643\u064a\u0641\u064a\u0629 \u062a\u0645\u062b\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0627 \u0628\u062d\u0645\u0627\u064a\u062a\u0647\u0627. \u0627\u062e\u062a\u0631 UTF-8 \u0644\u0644\u0646\u0635\u0648\u0635\u060c \u0627\u0633\u062a\u062e\u062f\u0645 Base64 \u0644\u0644\u062b\u0646\u0627\u0626\u064a \u062f\u0627\u062e\u0644 \u0627\u0644\u0646\u0635\u060c \u0648\u0631\u0645\u0651\u0632 \u0623\u062c\u0632\u0627\u0621 URL \u0628\u062f\u0642\u0651\u0629\u2014\u0648\u0644\u0627 \u062a\u062e\u0644\u0637\u0647 \u0645\u0639 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0623\u0648 \u0627\u0644\u062a\u062c\u0632\u0626\u0629.</p>"},{"location":"terms/encryption/","title":"Encryption","text":""},{"location":"terms/encryption/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Encryption \u2014 \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (\u062a\u062d\u0648\u064a\u0644\u0647\u0627 \u0625\u0644\u0649 \u0635\u064a\u063a\u0629 \u063a\u064a\u0631 \u0645\u0641\u0647\u0648\u0645\u0629 \u0625\u0644\u0627 \u0628\u0645\u0641\u062a\u0627\u062d).</p>"},{"location":"terms/encryption/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0642\u0646\u064a\u0629 \u062a\u062d\u0645\u064a \u0627\u0644\u0633\u0631\u064a\u0651\u0629 \u0639\u0628\u0631 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635\u0651 \u0627\u0644\u0648\u0627\u0636\u062d \u0625\u0644\u0649 \u0646\u0635\u0651 \u0645\u064f\u0639\u0645\u0651\u0649 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0641\u062a\u0627\u062d. \u0627\u0644\u0641\u0643\u0651 \u064a\u062a\u0645 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0635\u062d\u064a\u062d\u060c \u0648\u0642\u062f \u064a\u0634\u0645\u0644 \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0644\u0645\u0646\u0639 \u0627\u0644\u0639\u0628\u062b (AEAD).</p>"},{"location":"terms/encryption/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u062f\u064a\u0643 \u0631\u0633\u0627\u0644\u0629 + \u0645\u0641\u062a\u0627\u062d \u2192 \u062a\u062e\u0631\u062c \u0628\u064a\u0627\u0646\u0627\u062a \u063a\u064a\u0631 \u0645\u0641\u0647\u0648\u0645\u0629.  </li> <li>\u0645\u0646 \u064a\u0645\u0644\u0643 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0641\u0642\u0637 \u064a\u0633\u062a\u0637\u064a\u0639 \u0625\u0639\u0627\u062f\u062a\u0647\u0627 \u0625\u0644\u0649 \u0646\u0635\u0651\u0647\u0627 \u0627\u0644\u0623\u0635\u0644\u064a.  </li> <li>\u0646\u0648\u0639\u0627\u0646 \u0634\u0627\u0626\u0639\u0627\u0646:  </li> <li>\u0645\u062a\u0645\u0627\u062b\u0644 (Symmetric): \u0646\u0641\u0633 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0644\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0627\u0644\u0641\u0643 (AES).  </li> <li>\u063a\u064a\u0631 \u0645\u062a\u0645\u0627\u062b\u0644 (Asymmetric): \u0645\u0641\u062a\u0627\u062d \u0639\u0627\u0645 \u0644\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u062e\u0627\u0635 \u0644\u0644\u0641\u0643 (RSA/EC).  </li> <li>\u0627\u0644\u0623\u0641\u0636\u0644 \u0627\u0644\u064a\u0648\u0645 \u0645\u0639 \u0627\u0644\u062a\u0645\u0627\u062b\u0644: AES-GCM (\u062a\u0634\u0641\u064a\u0631 + \u0633\u0644\u0627\u0645\u0629 \u0641\u064a \u062e\u0637\u0648\u0629 \u0648\u0627\u062d\u062f\u0629).</li> </ul>"},{"location":"terms/encryption/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0642\u0641\u0644 \u0648\u0635\u0646\u062f\u0648\u0642. \u062a\u0636\u0639 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0641\u064a \u0627\u0644\u0635\u0646\u062f\u0648\u0642 \u0648\u062a\u064f\u0642\u0641\u0644\u0647\u0627. \u0645\u0646 \u0644\u062f\u064a\u0647 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0641\u0642\u0637 \u064a\u0641\u062a\u062d\u0647 \u0648\u064a\u0642\u0631\u0623 \u0627\u0644\u0631\u0633\u0627\u0644\u0629. \u0644\u0648 \u062d\u0627\u0648\u0644 \u0623\u062d\u062f \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0645\u062d\u062a\u0648\u0649\u060c \u0627\u0644\u0642\u0641\u0644 \u0627\u0644\u0630\u0643\u064a \u064a\u0643\u062a\u0634\u0641 \u0630\u0644\u0643.</p>"},{"location":"terms/encryption/#c-aes-gcm","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (AES-GCM \u0645\u0639 \u0627\u0634\u062a\u0642\u0627\u0642 \u0645\u0641\u062a\u0627\u062d \u0645\u0646 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631)","text":"<p>C#<pre><code>using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic static class CryptoDemo\n{\n    // \u064a\u062f\u0645\u062c: SALT(16) + NONCE(12) + TAG(16) + CIPHERTEXT(..)\n    public static string Encrypt(string plaintext, string password)\n    {\n        // 1) \u0627\u0634\u062a\u0642\u0627\u0642 \u0645\u0641\u062a\u0627\u062d 256-\u0628\u062a \u0645\u0646 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0639\u0628\u0631 PBKDF2\n        byte[] salt  = RandomNumberGenerator.GetBytes(16);\n        using var kdf = new Rfc2898DeriveBytes(password, salt, 100_000, HashAlgorithmName.SHA256);\n        byte[] key = kdf.GetBytes(32);\n\n        // 2) \u062a\u0648\u0644\u064a\u062f Nonce \u0641\u0631\u064a\u062f \u0644\u0643\u0644 \u0631\u0633\u0627\u0644\u0629 (12 \u0628\u0627\u064a\u062a)\n        byte[] nonce = RandomNumberGenerator.GetBytes(12);\n\n        // 3) \u062a\u0634\u0641\u064a\u0631 + \u0648\u0633\u0645 \u0633\u0644\u0627\u0645\u0629 (AEAD)\n        byte[] pt = Encoding.UTF8.GetBytes(plaintext);\n        byte[] ct = new byte[pt.Length];\n        byte[] tag = new byte[16];\n        using var aes = new AesGcm(key);\n        aes.Encrypt(nonce, pt, ct, tag); // \u064a\u0645\u0643\u0646 \u0625\u0636\u0627\u0641\u0629 AAD \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\n\n        // 4) \u0627\u0644\u062a\u062c\u0645\u064a\u0639 \u0644\u0644\u062a\u062e\u0632\u064a\u0646/\u0627\u0644\u0646\u0642\u0644\n        byte[] pack = new byte[salt.Length + nonce.Length + tag.Length + ct.Length];\n        Buffer.BlockCopy(salt,  0, pack, 0,               salt.Length);\n        Buffer.BlockCopy(nonce, 0, pack, salt.Length,     nonce.Length);\n        Buffer.BlockCopy(tag,   0, pack, salt.Length+nonce.Length, tag.Length);\n        Buffer.BlockCopy(ct,    0, pack, salt.Length+nonce.Length+tag.Length, ct.Length);\n\n        return Convert.ToBase64String(pack);\n    }\n\n    public static string Decrypt(string b64, string password)\n    {\n        byte[] pack = Convert.FromBase64String(b64);\n\n        byte[] salt  = new byte[16];\n        byte[] nonce = new byte[12];\n        byte[] tag   = new byte[16];\n        byte[] ct    = new byte[pack.Length - salt.Length - nonce.Length - tag.Length];\n\n        int o = 0;\n        Buffer.BlockCopy(pack, o, salt, 0, salt.Length); o += salt.Length;\n        Buffer.BlockCopy(pack, o, nonce, 0, nonce.Length); o += nonce.Length;\n        Buffer.BlockCopy(pack, o, tag, 0, tag.Length); o += tag.Length;\n        Buffer.BlockCopy(pack, o, ct, 0, ct.Length);\n\n        using var kdf = new Rfc2898DeriveBytes(password, salt, 100_000, HashAlgorithmName.SHA256);\n        byte[] key = kdf.GetBytes(32);\n\n        byte[] pt = new byte[ct.Length];\n        using var aes = new AesGcm(key);\n        aes.Decrypt(nonce, ct, tag, pt); // \u064a\u0631\u0645\u064a \u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u0639\u0646\u062f \u0627\u0644\u0639\u0628\u062b (\u0641\u0634\u0644 \u0627\u0644\u062a\u062d\u0642\u0642)\n\n        return Encoding.UTF8.GetString(pt);\n    }\n}\n\n// \u0645\u062b\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645:\n// string token = CryptoDemo.Encrypt(\"Secret message\", \"Strong#Passw0rd!\");\n// string msg   = CryptoDemo.Decrypt(token, \"Strong#Passw0rd!\");\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u0633\u0644\u0633\u0644\u0629 Base64 \u0645\u0634\u0641\u0651\u0631\u0629. \u0639\u0646\u062f \u0627\u0644\u0641\u0643 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0635\u062d\u064a\u062d\u060c \u062a\u0639\u0648\u062f <code>\"Secret message\"</code>. \u0625\u0646 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0628\u0627\u064a\u062a\u0627\u062a \u0623\u0648 \u0627\u0633\u062a\u064f\u062e\u062f\u0645\u062a \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u062e\u0627\u0637\u0626\u0629 \u2192 \u0627\u0633\u062a\u062b\u0646\u0627\u0621 (\u0641\u0634\u0644 \u0633\u0644\u0627\u0645\u0629).</p>"},{"location":"terms/encryption/#checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0634\u0641\u064a\u0631 \u0622\u0645\u0646 (Checklist)","text":"<ul> <li>\u0627\u062e\u062a\u0631 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u062d\u062f\u064a\u062b\u0629: AES-GCM (\u062a\u0645\u0627\u062b\u0644\u064a) \u0623\u0648 ChaCha20-Poly1305.  </li> <li>\u0644\u0627 \u062a\u0639\u0650\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Nonce/IV \u0645\u0639 \u0646\u0641\u0633 \u0627\u0644\u0645\u0641\u062a\u0627\u062d\u061b \u0648\u0644\u0651\u062f\u0647 \u0639\u0634\u0648\u0627\u0626\u064a\u064b\u0627 \u0644\u0643\u0644 \u0631\u0633\u0627\u0644\u0629.  </li> <li>\u0627\u0634\u062a\u0642 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0645\u0646 \u0643\u0644\u0645\u0627\u062a \u0645\u0631\u0648\u0631 \u0639\u0628\u0631 KDF \u0642\u0648\u064a (PBKDF2/Argon2) \u0645\u0639 Salt \u0648\u0639\u062f\u062f \u062f\u0648\u0631\u0627\u062a \u0639\u0627\u0644\u064d.  </li> <li>\u062e\u0632\u0651\u0646 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0641\u064a Secret Manager/Key Vault/HSM\u060c \u0648\u0644\u0627 \u062a\u0636\u0639\u0647\u0627 \u0641\u064a \u0627\u0644\u0643\u0648\u062f/\u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639.  </li> <li>\u062f\u0648\u0651\u0646 \u062a\u0646\u0633\u064a\u0642 \u0627\u0644\u062d\u0650\u0645\u0644 (\u0643\u064a\u0641 \u062a\u062d\u0641\u0638 salt/nonce/tag) \u0648\u0648\u062b\u0651\u0642\u0647.  </li> <li>\u0646\u0641\u0651\u0630 \u062a\u062f\u0648\u064a\u0631 \u0645\u0641\u0627\u062a\u064a\u062d (Key Rotation) \u0648\u062e\u0637\u0651\u0629 \u062a\u0631\u062d\u064a\u0644.  </li> <li>\u0627\u0645\u0646\u0639 \u0627\u0644\u062a\u0633\u0631\u064a\u0628 \u0627\u0644\u062c\u0627\u0646\u0628\u064a (Logs\u060c \u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a\u060c \u0645\u0641\u0627\u062a\u064a\u062d \u0641\u064a \u0630\u0627\u0643\u0631\u0629 \u0637\u0648\u064a\u0644\u0629 \u0627\u0644\u0639\u0645\u0631).  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0623\u062f\u0627\u0621 \u0648\u0627\u0644\u0635\u062d\u0651\u0629\u060c \u0648\u0623\u062f\u0631\u062c \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062a\u0641\u0634\u0644 \u0639\u0646\u062f \u0627\u0644\u0639\u0628\u062b (tamper tests).</li> </ul>"},{"location":"terms/encryption/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 AES-ECB \u0623\u0648 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u062f\u0648\u0646 \u062a\u0648\u062b\u064a\u0642 (\u0644\u0627 HMAC/AEAD).  </li> <li>\u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 IV/Nonce \u0645\u0639 \u0646\u0641\u0633 \u0627\u0644\u0645\u0641\u062a\u0627\u062d.  </li> <li>\u0645\u0641\u0627\u062a\u064a\u062d \u0635\u0644\u0628\u0629 \u0641\u064a \u0627\u0644\u0643\u0648\u062f \u0623\u0648 \u0628\u064a\u0626\u0627\u062a \u0628\u062f\u0648\u0646 \u0648\u0635\u0648\u0644 \u0645\u0642\u064a\u0651\u062f.  </li> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0627\u0644\u0647\u0627\u0634 \u0623\u0648 \u0627\u0644\u062a\u0631\u0645\u064a\u0632.  </li> <li>\u062a\u0637\u0648\u064a\u0631 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0645\u062e\u0635\u0651\u0635\u0629 \u0628\u062f\u0644 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629 \u0645\u062f\u0642\u0651\u0642\u0629.</li> </ul>"},{"location":"terms/encryption/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Hashing \u0628\u0635\u0645\u0629 \u0623\u062d\u0627\u062f\u064a\u0629 \u0627\u0644\u0627\u062a\u0651\u062c\u0627\u0647 \u0644\u0644\u062a\u062d\u0642\u0651\u0642/\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0644\u0627 \u064a\u064f\u0641\u0643\u061b \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0645\u0639 Salt + KDF Encryption \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0644\u064a\u0633\u062a\u0631\u062c\u0639\u0647 \u0645\u0646 \u064a\u0645\u0644\u0643 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u064a\u0641\u0636\u0651\u0644 AEAD (\u0645\u062b\u0644 AES-GCM)\u060c \u0648\u0625\u062f\u0627\u0631\u0629 \u0645\u0641\u0627\u062a\u064a\u062d/Nonce \u0635\u062d\u064a\u062d\u0629 Encoding \u062a\u0645\u062b\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0635\u064a\u063a\u0629 \u0646\u0642\u0644 (Base64/UTF-8) \u0644\u064a\u0633 \u0623\u0645\u0627\u0646\u064b\u0627\u061b \u0644\u0627 \u064a\u0645\u0646\u0639 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 Digital Signature \u0625\u062b\u0628\u0627\u062a \u0647\u0648\u064a\u0629 \u0627\u0644\u0645\u0631\u0633\u0644 \u0648\u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u063a\u064a\u0631 \u0633\u0631\u0651\u064a\u061b \u064a\u062a\u062d\u0642\u0642 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645 Decryption \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0646\u0635\u0651 \u0627\u0644\u0648\u0627\u0636\u062d \u0648\u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0633\u0644\u0627\u0645\u0629 \u064a\u0641\u0634\u0644 \u0639\u0646\u062f \u0645\u0641\u062a\u0627\u062d \u062e\u0627\u0637\u0626/\u0639\u0628\u062b \u0628\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (AEAD)"},{"location":"terms/encryption/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u064a\u062d\u0645\u064a \u0627\u0644\u0633\u0631\u064a\u0651\u0629. \u0637\u0628\u0651\u0642\u0647 \u0628\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u062d\u062f\u064a\u062b\u0629 (AEAD)\u060c \u0645\u0641\u0627\u062a\u064a\u062d \u0645\u064f\u062f\u0627\u0631\u0629 \u062c\u064a\u062f\u064b\u0627\u060c \u0648Nonces \u0641\u0631\u064a\u062f\u0629. \u062a\u0630\u0643\u0651\u0631: Encoding \u2260 Encryption \u2260 Hashing \u2014 \u0644\u0643\u0644 \u0648\u0627\u062d\u062f \u063a\u0631\u0636 \u0645\u062e\u062a\u0644\u0641.</p>"},{"location":"terms/etl-elt/","title":"ETL/ELT","text":""},{"location":"terms/etl-elt/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>ETL \u2014 \u0627\u0650\u0633\u062a\u0650\u062e\u0631\u0627\u062c \u2192 \u062a\u062d\u0648\u064a\u0644 \u2192 \u062a\u062d\u0645\u064a\u0644 ELT \u2014 \u0627\u0650\u0633\u062a\u0650\u062e\u0631\u0627\u062c \u2192 \u062a\u062d\u0645\u064a\u0644 \u2192 \u062a\u062d\u0648\u064a\u0644 Extract\u2013Transform\u2013Load / Extract\u2013Load\u2013Transform</p>"},{"location":"terms/etl-elt/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0637\u0631\u064a\u0642\u062a\u0627\u0646 \u0644\u0628\u0646\u0627\u0621 \u0645\u0648\u0627\u0633\u064a\u0631 \u0628\u064a\u0627\u0646\u0627\u062a (Data Pipelines): - ETL: \u0646\u064f\u062d\u064e\u0648\u0651\u0650\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0642\u0628\u0644 \u0625\u062f\u062e\u0627\u0644\u0647\u0627 \u0644\u0644\u0645\u062e\u0632\u0646. - ELT: \u0646\u062d\u0645\u0651\u0644 \u0627\u0644\u062e\u0627\u0645 \u0633\u0631\u064a\u0639\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0645\u062e\u0632\u0646/\u0627\u0644\u0628\u062d\u064a\u0631\u0629\u060c \u062b\u0645 \u0646\u064f\u062d\u064e\u0648\u0651\u0650\u0644\u0647\u0627 \u062f\u0627\u062e\u0644\u0647 (SQL/DBT).</p>"},{"location":"terms/etl-elt/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>ETL \u064a\u0646\u0627\u0633\u0628 \u0627\u0644\u062a\u062d\u0648\u064a\u0644\u0627\u062a \u0627\u0644\u062b\u0642\u064a\u0644\u0629 \u062e\u0627\u0631\u062c \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639\u060c \u0623\u0648 \u062d\u064a\u0646 \u0646\u062d\u062a\u0627\u062c \u062a\u0646\u0638\u064a\u0641\u064b\u0627 \u0635\u0627\u0631\u0645\u064b\u0627 \u0642\u0628\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646.  </li> <li>ELT \u064a\u0633\u062a\u0641\u064a\u062f \u0645\u0646 \u0642\u0648\u0629 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 (DW/Lakehouse) \u0648\u064a\u064f\u0633\u0631\u0651\u0650\u0639 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062e\u0627\u0645.  </li> <li>\u0643\u0644\u0627\u0647\u0645\u0627 \u064a\u062d\u062a\u0627\u062c: \u0639\u0642\u0648\u062f \u0633\u0643\u064a\u0645\u0629\u060c \u062a\u062a\u0628\u0651\u0639 \u0646\u0633\u062e/\u0625\u0635\u062f\u0627\u0631\u0627\u062a\u060c \u062a\u062d\u0642\u0651\u0642 \u062c\u0648\u062f\u0629\u060c \u062a\u0648\u0642\u064a\u062a (\u062f\u064f\u0641\u0639\u0627\u062a/\u0634\u0628\u0647 \u0644\u062d\u0638\u064a)\u060c \u0648Idempotency.</li> </ul>"},{"location":"terms/etl-elt/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u0646\u0642\u064a\u0629 \u0645\u0627\u0621 \u0627\u0644\u0646\u0647\u0631: - ETL = \u0646\u0646\u0642\u0651\u064a \u0627\u0644\u0645\u0627\u0621 \u062b\u0645 \u0646\u062e\u0632\u0651\u0646\u0647 \u0641\u064a \u0627\u0644\u062e\u0632\u0627\u0646. - ELT = \u0646\u062e\u0632\u0651\u0646 \u0627\u0644\u0645\u0627\u0621 \u0643\u0645\u0627 \u0647\u0648\u060c \u062b\u0645 \u0646\u0634\u063a\u0651\u0644 \u0641\u0644\u0627\u062a\u0631 \u0627\u0644\u062e\u0632\u0627\u0646 \u062f\u0627\u062e\u0644\u0647 \u0643\u0644\u0645\u0627 \u0627\u062d\u062a\u062c\u0646\u0627.</p>"},{"location":"terms/etl-elt/#etl-c-csv-sqlbulkcopy","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0645\u062e\u062a\u0635\u0631 \u2014 ETL \u0628\u0640 C# (CSV \u2192 \u062a\u0646\u0638\u064a\u0641 \u2192 <code>SqlBulkCopy</code>)","text":"<p>\u0627\u0641\u062a\u0631\u0627\u0636: CSV \u0628\u0633\u064a\u0637 \u0645\u0641\u0635\u0648\u0644 \u0628\u0641\u0648\u0627\u0635\u0644 \u0628\u062f\u0648\u0646 \u0627\u0642\u062a\u0628\u0627\u0633\u0627\u062a \u0645\u0639\u0642\u0651\u062f\u0629: <code>Id,Name,Price,CreatedUtc</code> \u0627\u0644\u0647\u062f\u0641: \u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0635\u0641\u0648\u0641 \u0627\u0644\u0633\u064a\u0626\u0629\u060c \u062a\u0646\u0633\u064a\u0642 \u0627\u0644\u0623\u0631\u0642\u0627\u0645/\u0627\u0644\u062a\u0648\u0627\u0631\u064a\u062e\u060c \u062b\u0645 Bulk Load \u0625\u0644\u0649 SQL Server.</p> C#<pre><code>// dotnet add package Microsoft.Data.SqlClient\nusing System;\nusing System.Data;\nusing System.Globalization;\nusing System.IO;\nusing Microsoft.Data.SqlClient;\n\nclass EtlCsvToSql\n{\n    static void Main()\n    {\n        string csv = Environment.GetEnvironmentVariable(\"CSV_PATH\") ?? \"products.csv\";\n        string connStr = Environment.GetEnvironmentVariable(\"SQL_CONN\") ?? \"Server=.;Database=Demo;Trusted_Connection=True;Encrypt=False\";\n\n        var table = new DataTable(\"Products\");\n        table.Columns.Add(\"Id\", typeof(int));\n        table.Columns.Add(\"Name\", typeof(string));\n        table.Columns.Add(\"Price\", typeof(decimal));\n        table.Columns.Add(\"CreatedUtc\", typeof(DateTime));\n\n        using var sr = new StreamReader(csv);\n        _ = sr.ReadLine(); // \u062a\u062e\u0637\u0651\u064a \u0627\u0644\u0639\u0646\u0648\u0627\u0646\n        string? line;\n        var inv = CultureInfo.InvariantCulture;\n\n        while ((line = sr.ReadLine()) is not null)\n        {\n            var cols = line.Split(',');\n            if (cols.Length &lt; 4) continue;\n\n            if (!int.TryParse(cols[0], out var id)) continue;\n            var name = cols[1].Trim();\n            if (string.IsNullOrWhiteSpace(name)) continue;\n            if (!decimal.TryParse(cols[2], NumberStyles.Any, inv, out var price)) continue;\n            if (!DateTime.TryParse(cols[3], CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal, out var ts)) continue;\n\n            table.Rows.Add(id, name, price, ts.ToUniversalTime());\n        }\n\n        using var con = new SqlConnection(connStr);\n        con.Open();\n        using var bulk = new SqlBulkCopy(con) { DestinationTableName = \"dbo.Products\" };\n        bulk.WriteToServer(table);\n        Console.WriteLine($\"ETL loaded rows: {table.Rows.Count}\");\n    }\n}\n</code></pre> <p>\u062c\u062f\u0648\u0644 \u0627\u0644\u0648\u062c\u0647\u0629 (T-SQL): SQL<pre><code>CREATE TABLE dbo.Products(\n  Id         INT PRIMARY KEY,\n  Name       NVARCHAR(100) NOT NULL,\n  Price      DECIMAL(18,2) NOT NULL,\n  CreatedUtc DATETIME2     NOT NULL\n);\n</code></pre></p>"},{"location":"terms/etl-elt/#elt-t-sql","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0645\u062e\u062a\u0635\u0631 \u2014 ELT (\u062a\u062d\u0645\u064a\u0644 \u062e\u0627\u0645 \u2192 T-SQL \u062a\u062d\u0648\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639)","text":"<p>\u0627\u0644\u062e\u0637\u0648\u0629 1 (E+L): \u062d\u0645\u0651\u0644 \u0643\u0645\u0627 \u0647\u0648 \u0625\u0644\u0649 \u062c\u062f\u0648\u0644 \u0648\u0633\u064a\u0637 <code>RawProducts</code> \u062b\u0645 \u062d\u0648\u0651\u0650\u0644 \u062f\u0627\u062e\u0644 SQL.</p> C#<pre><code>// \u0646\u0641\u0633 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 \u0644\u0643\u0646 \u0625\u0644\u0649 DataTable \u062e\u0627\u0645 (NVARCHAR \u0641\u0642\u0637)\u060c \u062b\u0645 BulkCopy \u0625\u0644\u0649 dbo.RawProducts\nvar raw = new DataTable(\"RawProducts\");\nraw.Columns.Add(\"Id\", typeof(string));\nraw.Columns.Add(\"Name\", typeof(string));\nraw.Columns.Add(\"Price\", typeof(string));\nraw.Columns.Add(\"CreatedUtc\", typeof(string));\n// \u2026 \u0627\u0645\u0644\u0623 \u0627\u0644\u0635\u0641\u0648\u0641 \u0645\u0628\u0627\u0634\u0631\u0629 \u0645\u0646 CSV \u062f\u0648\u0646 \u062a\u062d\u0642\u0642 \u0635\u0627\u0631\u0645 \u2026\nusing var bulk2 = new SqlBulkCopy(con) { DestinationTableName = \"dbo.RawProducts\" };\nbulk2.WriteToServer(raw);\n</code></pre> <p>\u062c\u062f\u0627\u0648\u0644 ELT \u0648\u0645\u064f\u0639\u0627\u0644\u062c\u0629 \u062f\u0627\u062e\u0644 SQL: SQL<pre><code>-- \u062c\u062f\u0648\u0644 \u062e\u0627\u0645\nCREATE TABLE dbo.RawProducts(\n  Id         NVARCHAR(50),\n  Name       NVARCHAR(200),\n  Price      NVARCHAR(50),\n  CreatedUtc NVARCHAR(50)\n);\n\n-- \u062a\u062d\u0648\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 (Stage -&gt; Target) \u0645\u0639 \u062a\u0646\u0638\u064a\u0641 \u0648\u0623\u0646\u0645\u0627\u0637 \u0641\u0634\u0644 \u0646\u0627\u0639\u0645\u0629\nMERGE dbo.Products AS T\nUSING (\n  SELECT\n    TRY_CONVERT(INT, Id)             AS Id,\n    NULLIF(LTRIM(RTRIM(Name)), '')   AS Name,\n    TRY_CONVERT(DECIMAL(18,2), Price) AS Price,\n    TRY_CONVERT(DATETIME2, CreatedUtc) AS CreatedUtc\n  FROM dbo.RawProducts\n) AS S\nON T.Id = S.Id\nWHEN MATCHED AND (T.Name &lt;&gt; S.Name OR T.Price &lt;&gt; S.Price OR T.CreatedUtc &lt;&gt; S.CreatedUtc)\n  THEN UPDATE SET Name=S.Name, Price=S.Price, CreatedUtc=S.CreatedUtc\nWHEN NOT MATCHED BY TARGET AND S.Id IS NOT NULL AND S.Name IS NOT NULL AND S.Price IS NOT NULL AND S.CreatedUtc IS NOT NULL\n  THEN INSERT (Id,Name,Price,CreatedUtc) VALUES (S.Id,S.Name,S.Price,S.CreatedUtc)\nWHEN NOT MATCHED BY SOURCE THEN /* \u0627\u062d\u062a\u0641\u0627\u0638 \u0627\u062e\u062a\u064a\u0627\u0631\u064a */ DO NOTHING; -- \u0623\u0648 \u0645\u0646\u0637\u0642 \u0623\u0631\u0634\u0641\u0629\n</code></pre></p> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0641\u064a ELT \u0646\u064f\u0646\u062c\u0632 \u0627\u0644\u062a\u0646\u0638\u064a\u0641/\u0627\u0644\u062f\u0645\u062c \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 (\u0623\u0642\u0648\u0649/\u0623\u0633\u0631\u0639 \u063a\u0627\u0644\u0628\u064b\u0627)\u060c \u0648\u0646\u062d\u062a\u0641\u0638 \u0628\u0627\u0644\u062e\u0627\u0645 \u0644\u0644\u0623\u062b\u0631 \u0627\u0644\u0631\u062c\u0639\u064a.</p>"},{"location":"terms/etl-elt/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 \u0628\u0627\u064a\u0628\u0644\u0627\u064a\u0646 \u0645\u062a\u064a\u0646","text":"<ul> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0645\u0635\u062f\u0631/\u0627\u0644\u0648\u062c\u0647\u0629/\u0627\u0644\u0633\u0643\u064a\u0645\u0629 \u0648\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062a\u0637\u0627\u0628\u0642 (Natural/Surrogate Key).  </li> <li>\u0627\u062e\u062a\u0631 \u062f\u0641\u0639\u0627\u062a/\u062a\u062f\u0641\u0642 (Batch/Streaming) \u0648\u062a\u0648\u0627\u062a\u0631 \u0627\u0644\u062a\u062d\u0645\u064a\u0644.  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u062a\u062d\u0645\u064a\u0644 Idempotent: \u0645\u0641\u0627\u062a\u064a\u062d \u0637\u0644\u0628/\u062a\u062c\u0632\u0626\u0629 \u0645\u062d\u062a\u0648\u0649/\u062c\u062f\u0627\u0648\u0644 Stage.  </li> <li>\u0623\u0636\u0650\u0641 \u062a\u062d\u0642\u0651\u0642 \u062c\u0648\u062f\u0629: \u0639\u062f\u0651 \u0627\u0644\u0635\u0641\u0648\u0641\u060c \u062d\u062f\u0648\u062f Null/\u0646\u0637\u0627\u0642\u0627\u062a\u060c \u0625\u0646\u0630\u0627\u0631\u0627\u062a.  </li> <li>\u0633\u062c\u0651\u0644 \u0627\u0644\u0623\u0646\u0633\u0627\u0628 (Lineage) \u0648\u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a (Schema Version).  </li> <li>\u0644\u0644\u0623\u062f\u0627\u0621: Bulk Load\u060c \u062a\u0642\u0633\u064a\u0645/\u0641\u0647\u0631\u0633\u0629\u060c \u0648Partitioning \u0644\u0644\u0643\u0628\u064a\u0631\u0629.  </li> <li>\u0644\u0644\u0623\u0645\u0627\u0646: \u062a\u0634\u0641\u064a\u0631 \u0633\u0631/\u0642\u0646\u0648\u0627\u062a\u060c \u0625\u062e\u0641\u0627\u0621/\u062a\u0642\u0646\u064a\u0639 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0651\u0627\u0633\u0629.  </li> <li>\u0644\u0644\u0623\u062a\u0645\u062a\u0629: Orchestrator (Airflow/ADF/SSIS) + dbt \u0644\u0640 ELT \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639.</li> </ul>"},{"location":"terms/etl-elt/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0625\u0639\u0627\u062f\u0629 \u062a\u062d\u0645\u064a\u0644 \u0643\u0627\u0645\u0644 \u062f\u0648\u0646 \u062d\u0627\u062c\u0629 \u21d2 \u062a\u0643\u0644\u0641\u0629/\u0642\u0641\u0644.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0645\u0646\u0627\u0637\u0642 \u0627\u0644\u0632\u0645\u0646\u064a\u0629/\u0627\u0644\u062a\u0648\u0627\u0631\u064a\u062e \u21d2 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u063a\u0644\u0648\u0637\u0629.  </li> <li>\u0639\u062f\u0645 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062a\u0643\u0631\u0627\u0631\u0627\u062a \u0623\u0648 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u0645\u0643\u0631\u0651\u0631\u0629.  </li> <li>\u062a\u0639\u0648\u064a\u0644 \u0639\u0644\u0649 CSV \u0645\u0639\u0642\u0651\u062f \u062f\u0648\u0646 \u0645\u0643\u062a\u0628\u0629 Parsing \u0645\u0646\u0627\u0633\u0628\u0629.  </li> <li>\u0627\u0644\u0633\u0643\u064a\u0645\u0629 \u062a\u062a\u063a\u064a\u0651\u0631 \u0628\u0644\u0627 Versioning/Migration.  </li> <li>\u063a\u064a\u0627\u0628 \u0645\u0631\u0627\u0642\u0628\u0629/\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0644\u0644\u0641\u0634\u0644 \u0623\u0648 \u0627\u0646\u0632\u064a\u0627\u062d\u0627\u062a \u0627\u0644\u062d\u062c\u0645.</li> </ul>"},{"location":"terms/etl-elt/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 ETL \u062a\u0646\u0638\u064a\u0641/\u062a\u062d\u0648\u064a\u0644 \u0642\u0628\u0644 \u0627\u0644\u062a\u062d\u0645\u064a\u0644 \u064a\u0642\u0644\u0651\u0644 \u201c\u0627\u0644\u062e\u0627\u0645\u201d \u0628\u0627\u0644\u0645\u062e\u0632\u0646\u061b \u062c\u064a\u0651\u062f \u0644\u0644\u0627\u0645\u062a\u062b\u0627\u0644 \u0627\u0644\u0635\u0627\u0631\u0645 \u0642\u0628\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 ELT \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062e\u0627\u0645 \u062b\u0645 \u0627\u0644\u062a\u062d\u0648\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 \u064a\u0633\u062a\u0641\u064a\u062f \u0645\u0646 \u0642\u0648\u0629 SQL/DW\u061b \u0623\u0633\u0631\u0639 \u0648\u0635\u0648\u0644\u061b \u064a\u062d\u062a\u0641\u0638 \u0628\u0627\u0644\u0623\u062b\u0631 \u0627\u0644\u062e\u0627\u0645 Streaming ETL \u0642\u0631\u0628 \u0644\u062d\u0638\u064a (Kafka/SSE/CDC) \u0646\u0648\u0627\u0641\u0630 \u0648\u0648\u0642\u062a \u062d\u062f\u062b/\u0627\u0633\u062a\u0644\u0627\u0645\u061b \u062a\u0639\u0642\u064a\u062f \u062a\u0631\u062a\u064a\u0628 \u0648Idempotency Data Quality \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062b\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a Checks/SLAs/\u062a\u0646\u0628\u064a\u0647\u0627\u062a\u061b \u0623\u0633\u0627\u0633\u064a \u0644\u0643\u0644\u0627 \u0627\u0644\u0646\u0647\u062c\u064a\u0646"},{"location":"terms/etl-elt/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>ETL \u0648ELT \u0637\u0631\u064a\u0642\u0627\u0646 \u0644\u0646\u0641\u0633 \u0627\u0644\u0647\u062f\u0641: \u0628\u064a\u0627\u0646\u0627\u062a \u0646\u0638\u064a\u0641\u0629 \u062c\u0627\u0647\u0632\u0629 \u0644\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643. \u0627\u062e\u062a\u0631 ETL \u0639\u0646\u062f\u0645\u0627 \u064a\u0644\u0632\u0645 \u062a\u0646\u0638\u064a\u0641 \u0642\u0628\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646\u060c \u0648ELT \u0639\u0646\u062f\u0645\u0627 \u062a\u0631\u064a\u062f \u0633\u0631\u0639\u0629 \u0627\u0644\u062a\u062d\u0645\u064a\u0644 \u0648\u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646 \u0642\u0648\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639. \u0623\u062d\u0643\u0645\u0647\u0645\u0627 \u0628\u0640 Idempotency\u060c \u0645\u0631\u0627\u0642\u0628\u0629\u060c \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062c\u0648\u062f\u0629\u060c \u0648\u0625\u062f\u0627\u0631\u0629 \u0633\u0643\u064a\u0645\u0629\u2014\u0648\u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0628\u0627\u064a\u0628\u0644\u0627\u064a\u0646 \u0645\u0648\u062b\u0648\u0642 \u0648\u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0639.</p>"},{"location":"terms/framework/","title":"Framework","text":"<p>(\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a: ASP.NET Core)</p>"},{"location":"terms/framework/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Software Framework \u2014 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0628\u0631\u0645\u062c\u064a</p>"},{"location":"terms/framework/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0645\u0643\u062a\u0628\u0629 + \u0647\u064a\u0643\u0644 \u062c\u0627\u0647\u0632 \u064a\u062d\u062f\u0651\u062f \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0639\u0645\u0644 \u0648\u064a\u0642\u062f\u0651\u0645 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u062c\u0627\u0647\u0632\u0629 (\u062a\u0648\u062c\u064a\u0647\u060c DI\u060c \u0633\u062c\u0644\u0627\u062a\u2026). \u0623\u0646\u062a \u062a\u0643\u062a\u0628 \u0627\u0644\u0645\u0646\u0637\u0642 \u0627\u0644\u062e\u0627\u0635 \u0628\u0643 \u062f\u0627\u062e\u0644 \u0641\u062a\u062d\u0627\u062a \u064a\u0648\u0641\u0651\u0631\u0647\u0627 \u0627\u0644\u0625\u0637\u0627\u0631\u060c \u0648\u0647\u0648 \u064a\u062a\u0648\u0644\u0651\u0649 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0648\u0627\u0644\u062a\u0631\u0643\u064a\u0628.</p>"},{"location":"terms/framework/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0645\u0643\u062a\u0628\u0629: \u0623\u0646\u062a \u062a\u0633\u062a\u062f\u0639\u064a\u0647\u0627 \u0645\u062a\u0649 \u0634\u0626\u062a.  </li> <li>\u0627\u0644\u0625\u0637\u0627\u0631: \u0647\u0648 \u0645\u0646 \u064a\u0633\u062a\u062f\u0639\u064a\u0643 (Inversion of Control).  </li> <li>\u064a\u0645\u0646\u062d\u0643 \u0642\u0648\u0627\u0639\u062f + \u062e\u062f\u0645\u0627\u062a \u0645\u0634\u062a\u0631\u0643\u0629: \u0645\u0635\u0627\u062f\u0642\u0629\u060c \u062a\u0648\u062c\u064a\u0647\u060c \u062d\u0642\u0646 \u062a\u0628\u0639\u064a\u0627\u062a\u060c Middleware\u2026  </li> <li>\u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u0633\u0631\u0639\u0629 \u0628\u0646\u0627\u0621\u060c \u0627\u062a\u0651\u0633\u0627\u0642\u060c \u0623\u0642\u0644 \u0643\u0648\u062f \u0645\u0643\u0631\u0651\u0631.</li> </ul>"},{"location":"terms/framework/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0645\u0631\u0643\u0632 \u062a\u062c\u0627\u0631\u064a \u0645\u062c\u0647\u0651\u0632: \u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621\u060c \u0627\u0644\u0623\u0645\u0646\u060c \u0627\u0644\u0644\u0648\u062d\u0627\u062a\u060c \u0627\u0644\u0645\u062e\u0627\u0631\u062c \u0645\u0648\u062c\u0648\u062f\u0629. \u0623\u0646\u062a \u062a\u0641\u062a\u062d \u0645\u062a\u062c\u0631\u0643 \u062f\u0627\u062e\u0644 \u0647\u0630\u0627 \u0627\u0644\u0625\u0637\u0627\u0631 \u0648\u062a\u062a\u0651\u0628\u0639 \u0642\u0648\u0627\u0639\u062f\u0647\u060c \u0641\u062a\u0646\u062c\u0632 \u0623\u0633\u0631\u0639 \u0648\u0628\u0623\u0645\u0627\u0646.</p>"},{"location":"terms/framework/#c-aspnet-core-minimal-api","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (ASP.NET Core Minimal API)","text":"<p>\u064a\u0628\u064a\u0651\u0646: \u062a\u0648\u062c\u064a\u0647\u060c DI\u060c Middleware\u060c \u062a\u0647\u064a\u0626\u0629.</p> C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n ShopApi\n// dotnet run\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// 1) Services (Dependency Injection) \u2014 \u062a\u0633\u062c\u0651\u0644 \u062e\u062f\u0645\u0627\u062a \u0644\u062a\u064f\u062d\u0642\u0646 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627\nbuilder.Services.AddSingleton&lt;IClock, SystemClock&gt;();     // \u062e\u062f\u0645\u0629 \u0648\u0642\u062a\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();                         // \u062a\u0648\u062b\u064a\u0642 \u062a\u0644\u0642\u0627\u0626\u064a\n\nvar app = builder.Build();\n\n// 2) Middleware Pipeline \u2014 \u062e\u0637\u0648\u0627\u062a \u062a\u0645\u0631\u0651 \u0628\u0647\u0627 \u0643\u0644\u0651 \u0637\u0644\u0628\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\napp.UseHttpsRedirection();                                // \u062a\u062d\u0648\u064a\u0644 \u0625\u0644\u0649 HTTPS\napp.Use(async (ctx, next) =&gt;                              // Middleware \u0628\u0633\u064a\u0637 (Log)\n{\n    Console.WriteLine($\"[{DateTime.UtcNow:O}] {ctx.Request.Method} {ctx.Request.Path}\");\n    await next();\n});\n\n// 3) Routing/Handlers \u2014 \u0646\u0642\u0627\u0637 \u0627\u0644\u0646\u0647\u0627\u064a\u0629 (Endpoints)\napp.MapGet(\"/time\", (IClock clock) =&gt; new                // \u062d\u0642\u0646 IClock \u062a\u0644\u0642\u0627\u0626\u064a\u0627\u064b\n{\n    utc = clock.UtcNow,\n    hello = \"ASP.NET Core Framework!\"\n});\n\napp.MapPost(\"/echo\", (Message m) =&gt; Results.Ok(new { youSent = m.Text }));\n\napp.Run();\n\n// \u0646\u0645\u0627\u0630\u062c/\u062e\u062f\u0645\u0627\u062a\nrecord Message(string Text);\n\npublic interface IClock { DateTime UtcNow { get; } }\npublic class SystemClock : IClock\n{\n    public DateTime UtcNow =&gt; DateTime.UtcNow;\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - GET <code>/time</code> \u2192 JSON \u064a\u062d\u0648\u064a \u0648\u0642\u062a UTC \u0648\u0631\u0633\u0627\u0644\u0629. - POST <code>/echo</code> \u0645\u0639 <code>{ \"text\": \"hi\" }</code> \u2192 \u064a\u0639\u064a\u062f <code>{ \"youSent\": \"hi\" }</code>. - Swagger UI \u0645\u062a\u0627\u062d \u0641\u064a \u0627\u0644\u062a\u0637\u0648\u064a\u0631.</p>"},{"location":"terms/framework/#aspnet-core","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 (ASP.NET Core \u0645\u062b\u0627\u0644)","text":"<ol> <li>\u0623\u0646\u0634\u0626 \u0645\u0634\u0631\u0648\u0639\u064b\u0627: Bash<pre><code>dotnet new web -n ShopApi\ncd ShopApi\ndotnet run\n</code></pre></li> <li>\u0627\u0641\u062a\u062d <code>https://localhost:*****</code> \u0648\u062c\u0631\u0628 <code>/time</code> \u0648<code>/echo</code>.  </li> <li>\u0623\u0636\u0641 \u062e\u062f\u0645\u0629 \u062c\u062f\u064a\u062f\u0629 (\u0645\u062b\u0644\u0627\u064b <code>IEmailSender</code>) \u0648\u0633\u062c\u0651\u0644\u0647\u0627 \u0641\u064a <code>builder.Services</code>.  </li> <li>\u0623\u0646\u0634\u0626 Middleware \u0645\u062e\u0635\u0635\u064b\u0627 (\u0645\u0635\u0627\u062f\u0642\u0629/\u0633\u062c\u0644\u0627\u062a/\u062a\u0639\u0631\u064a\u0628).  </li> <li>\u0641\u0639\u0651\u0644 Swagger \u0648HSTS/HTTPS \u0644\u0644\u0625\u0646\u062a\u0627\u062c.  </li> <li>\u0627\u0646\u0634\u0631 \u0639\u0644\u0649 IIS/NGINX/Container \u062d\u0633\u0628 \u0628\u064a\u0626\u062a\u0643.</li> </ol>"},{"location":"terms/framework/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062e\u0644\u0637 \u0627\u0644\u0645\u0643\u062a\u0628\u0629 \u0628\u0627\u0644\u0625\u0637\u0627\u0631: \u0639\u062f\u0645 \u0627\u062d\u062a\u0631\u0627\u0645 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u0627\u0644\u0625\u0637\u0627\u0631 \u0623\u0648 \u062a\u062c\u0646\u0651\u0628 DI.  </li> <li>\u0648\u0636\u0639 \u0645\u0646\u0637\u0642 \u062b\u0642\u064a\u0644 \u062f\u0627\u062e\u0644 Middleware \u062f\u0648\u0646 \u062d\u062f\u0648\u062f/\u0645\u0647\u0644\u0627\u062a.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0628\u064a\u0626\u0629 (<code>Development/Production</code>) \u0648\u062a\u0641\u0639\u064a\u0644 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c.  </li> <li>\u0639\u062f\u0645 \u062a\u0639\u0631\u064a\u0641 \u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629 (\u0646\u0645\u0627\u0630\u062c \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629) \u0648\u062a\u0631\u0643 \u0627\u0644\u0640 JSON \u0639\u0634\u0648\u0627\u0626\u064a\u064b\u0627.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 (Exception Handling) \u0648\u0646\u062a\u0627\u0626\u062c HTTP \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629.</li> </ul>"},{"location":"terms/framework/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Framework (ASP.NET Core) \u0647\u064a\u0643\u0644 + \u062e\u062f\u0645\u0627\u062a \u062c\u0627\u0647\u0632\u0629\u061b \u0627\u0644\u0625\u0637\u0627\u0631 \u064a\u0633\u062a\u062f\u0639\u064a \u0643\u0648\u062f\u0643 DI/Middleware/Routing/Config/Hosting Library \u062f\u0648\u0627\u0644/\u0643\u0644\u0627\u0633\u0627\u062a \u062a\u0633\u062a\u062f\u0639\u064a\u0647\u0627 \u0623\u0646\u062a \u0644\u0627 \u064a\u0641\u0631\u0636 \u0623\u0633\u0644\u0648\u0628 \u0645\u0634\u0631\u0648\u0639\u0643 SDK \u0623\u062f\u0648\u0627\u062a + \u062d\u0632\u0645 + \u0642\u0648\u0627\u0644\u0628 \u064a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u0627\u0644\u0628\u0646\u0627\u0621/\u0627\u0644\u0646\u0634\u0631 (CLI/\u0642\u0648\u0627\u0644\u0628) Platform \u0628\u064a\u0626\u0629 \u062a\u0634\u063a\u064a\u0644/\u0627\u0633\u062a\u0636\u0627\u0641\u0629 \u0646\u0638\u0627\u0645 + Runtime + \u062e\u062f\u0645\u0627\u062a (\u0645\u062b\u0644\u0627\u064b Azure/Windows) Runtime (.NET) \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0627\u0644\u0645\u064f\u062f\u0627\u0631\u0629 \u0648 GC \u064a\u0634\u063a\u0651\u0644 \u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0643 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0646\u0635\u0651\u0629"},{"location":"terms/framework/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Framework \u064a\u0642\u062f\u0651\u0645 \u0644\u0643 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u0633\u0631\u064a\u0639 \u0644\u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u062a\u0651\u0633\u0642\u0629 \u0648\u0633\u0631\u064a\u0639\u0629 \u0627\u0644\u062a\u0637\u0648\u064a\u0631. \u0645\u0639 ASP.NET Core \u0633\u062a\u062c\u062f: \u062a\u0648\u062c\u064a\u0647\u060c Middleware\u060c DI\u060c \u062a\u0648\u062b\u064a\u0642\u060c \u0623\u0645\u0627\u0646 \u2014 \u0627\u0643\u062a\u0628 \u0645\u0646\u0637\u0642\u0643 \u0648\u0627\u062a\u0631\u0643 \u0627\u0644\u0625\u0637\u0627\u0631 \u064a\u062f\u064a\u0631 \u0627\u0644\u0628\u0627\u0642\u064a.</p>"},{"location":"terms/functionality-testing/","title":"Functionality Testing","text":""},{"location":"terms/functionality-testing/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Functionality (Functional) Testing \u2014 \u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0638\u064a\u0641\u064a/\u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0648\u0638\u0627\u0626\u0641</p>"},{"location":"terms/functionality-testing/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u064a\u062a\u062d\u0642\u0642 \u0623\u0646 \u0627\u0644\u0645\u064a\u0651\u0632\u0627\u062a \u062a\u0639\u0645\u0644 \u062d\u0633\u0628 \u0627\u0644\u0645\u062a\u0637\u0644\u0651\u0628\u0627\u062a: \u0645\u062f\u062e\u0644\u0627\u062a \u0635\u062d\u064a\u062d\u0629/\u062e\u0627\u0637\u0626\u0629\u060c \u0645\u0633\u0627\u0631\u0627\u062a \u0646\u062c\u0627\u062d/\u0641\u0634\u0644\u060c \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621\u060c \u0648\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644.</p>"},{"location":"terms/functionality-testing/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0645\u0627\u0630\u0627 \u064a\u0641\u0639\u0644 \u0627\u0644\u0646\u0638\u0627\u0645 (\u0627\u0644\u0639\u0642\u062f \u0648\u0627\u0644\u0633\u0644\u0648\u0643)\u060c \u0644\u0627 \u0639\u0644\u0649 \u0627\u0644\u0623\u062f\u0627\u0621 \u0623\u0648 \u0627\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643.  </li> <li>\u064a\u0634\u0645\u0644: \u0627\u062e\u062a\u0628\u0627\u0631 \u0642\u0628\u0648\u0644\u060c \u062a\u0643\u0627\u0645\u0644\u060c \u062f\u062e\u0648\u0644\u064a (Smoke)\u060c \u0645\u0631\u062c\u0639\u064a (Regression)\u060c \u062d\u0627\u0644\u0627\u062a \u062d\u0648\u0627\u0641/ \u062d\u062f\u0648\u062f.  </li> <li>\u0623\u0633\u0627\u0644\u064a\u0628 \u0645\u0641\u064a\u062f\u0629: \u062a\u0642\u0633\u064a\u0645 \u0645\u0643\u0627\u0641\u0626\u060c \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u062d\u062f\u0651\u064a\u0629\u060c \u062c\u062f\u0627\u0648\u0644 \u0642\u0631\u0627\u0631.</li> </ul>"},{"location":"terms/functionality-testing/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0631\u064a\u0645\u0648\u062a \u0627\u0644\u062a\u0644\u0641\u0627\u0632: \u0646\u062c\u0631\u0651\u0628 \u0643\u0644 \u0632\u0631\u2014\u0642\u0646\u0627\u0629\u060c \u0635\u0648\u062a\u060c \u0643\u062a\u0645\u2014\u0648\u0646\u062a\u0623\u0643\u062f \u0623\u0646 \u0627\u0644\u0646\u062a\u064a\u062c\u0629 \u0627\u0644\u0645\u062a\u0648\u0642\u0651\u064e\u0639\u0629 \u062a\u062d\u062f\u062b. \u0644\u0627 \u064a\u0647\u0645\u0646\u0627 \u0643\u064a\u0641 \u0635\u064f\u0646\u0650\u0639 \u0627\u0644\u0631\u064a\u0645\u0648\u062a \u062f\u0627\u062e\u0644\u064a\u064b\u0627.</p>"},{"location":"terms/functionality-testing/#c","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0638\u064a\u0641\u064a \u0644\u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 (\u0642\u0628\u0648\u0644 + \u0633\u0627\u0644\u0628)","text":"<p>\u0627\u0644\u0645\u062a\u0637\u0644\u0651\u0628: - \u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062f\u062e\u0648\u0644 \u0635\u062d\u064a\u062d\u0629 \u0648\u0644\u0645 \u064a\u0643\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0645\u0642\u0641\u0648\u0644\u064b\u0627 \u2192 \u0646\u062c\u0627\u062d + Token. - \u0625\u0646 \u0643\u0627\u0646\u062a \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u062e\u0627\u0637\u0626\u0629 \u0623\u0648 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0645\u0642\u0641\u0648\u0644\u064b\u0627 \u2192 \u0641\u0634\u0644 \u0628\u0631\u0633\u0627\u0644\u0629 \u0645\u0646\u0627\u0633\u0628\u0629. - \u062d\u0633\u0627\u0628 \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u062e\u0627\u0637\u0626\u0629 \u0644\u0625\u0642\u0641\u0627\u0644 \u0645\u0624\u0642\u062a \u0628\u0639\u062f 3 \u0645\u062d\u0627\u0648\u0644\u0627\u062a.</p> C#<pre><code>// LoginService.cs\nusing System;\nusing System.Collections.Concurrent;\nusing System.Threading.Tasks;\n\npublic record LoginResult(bool Success, string? Token = null, string? Error = null);\n\npublic interface IUserStore\n{\n    Task&lt;bool&gt; VerifyPasswordAsync(string email, string password);\n    Task&lt;bool&gt; IsLockedAsync(string email);\n    Task IncrementFailuresAsync(string email);\n    Task ResetFailuresAsync(string email);\n}\n\npublic class InMemoryUserStore : IUserStore\n{\n    private readonly ConcurrentDictionary&lt;string, (string Pwd, int Failures, DateTimeOffset? LockedUntil)&gt; _db = new();\n    public InMemoryUserStore()\n        =&gt; _db[\"user@example.com\"] = (\"N3wP@ss\", 0, null);\n\n    public Task&lt;bool&gt; VerifyPasswordAsync(string email, string password)\n        =&gt; Task.FromResult(_db.TryGetValue(email, out var u) &amp;&amp; u.Pwd == password);\n\n    public Task&lt;bool&gt; IsLockedAsync(string email)\n        =&gt; Task.FromResult(_db.TryGetValue(email, out var u) &amp;&amp; u.LockedUntil is DateTimeOffset t &amp;&amp; t &gt; DateTimeOffset.UtcNow);\n\n    public Task IncrementFailuresAsync(string email)\n    {\n        _db.AddOrUpdate(email,\n            addValueFactory: _ =&gt; (\"\", 1, null),\n            updateValueFactory: (_, u) =&gt;\n            {\n                int f = u.Failures + 1;\n                var locked = f &gt;= 3 ? DateTimeOffset.UtcNow.AddMinutes(5) : u.LockedUntil;\n                return (u.Pwd, f, locked);\n            });\n        return Task.CompletedTask;\n    }\n\n    public Task ResetFailuresAsync(string email)\n    {\n        if (_db.TryGetValue(email, out var u)) _db[email] = (u.Pwd, 0, null);\n        return Task.CompletedTask;\n    }\n}\n\npublic class LoginService\n{\n    private readonly IUserStore _store;\n    public LoginService(IUserStore store) =&gt; _store = store;\n\n    // \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0645\u062a\u0637\u0644\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u064a\n    public async Task&lt;LoginResult&gt; LoginAsync(string email, string password)\n    {\n        if (await _store.IsLockedAsync(email))\n            return new LoginResult(false, Error: \"locked\");\n\n        if (!await _store.VerifyPasswordAsync(email, password))\n        {\n            await _store.IncrementFailuresAsync(email);\n            return new LoginResult(false, Error: \"invalid_credentials\");\n        }\n\n        await _store.ResetFailuresAsync(email);\n        var token = Convert.ToBase64String(Guid.NewGuid().ToByteArray()); // \u062a\u0645\u062b\u064a\u0644 \u0628\u0633\u064a\u0637\n        return new LoginResult(true, Token: token);\n    }\n}\n</code></pre>"},{"location":"terms/functionality-testing/#xunit","title":"\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u0638\u064a\u0641\u064a\u0629 (xUnit) \u2014 \u0646\u062c\u0627\u062d\u060c \u062e\u0637\u0623\u060c \u0642\u0641\u0644\u060c \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629","text":"C#<pre><code>// dotnet add package xunit\n// dotnet add package xunit.runner.visualstudio\nusing System.Threading.Tasks;\nusing Xunit;\n\npublic class LoginFunctionalTests\n{\n    [Fact] // \u0642\u0628\u0648\u0644: \u0628\u064a\u0627\u0646\u0627\u062a \u0635\u062d\u064a\u062d\u0629\n    public async Task Login_Succeeds_With_Correct_Credentials()\n    {\n        var store = new InMemoryUserStore();\n        var svc = new LoginService(store);\n\n        var res = await svc.LoginAsync(\"user@example.com\", \"N3wP@ss\");\n        Assert.True(res.Success);\n        Assert.False(string.IsNullOrEmpty(res.Token));\n    }\n\n    [Fact] // \u0633\u0627\u0644\u0628: \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u062e\u0627\u0637\u0626\u0629 + \u0631\u0633\u0627\u0626\u0644 \u0645\u0641\u0647\u0648\u0645\u0629\n    public async Task Login_Fails_With_Wrong_Password()\n    {\n        var store = new InMemoryUserStore();\n        var svc = new LoginService(store);\n\n        var res = await svc.LoginAsync(\"user@example.com\", \"wrong\");\n        Assert.False(res.Success);\n        Assert.Equal(\"invalid_credentials\", res.Error);\n    }\n\n    [Fact] // \u0642\u0641\u0644 \u0628\u0639\u062f 3 \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u062e\u0627\u0637\u0626\u0629\n    public async Task Account_Locks_After_Three_Failures()\n    {\n        var store = new InMemoryUserStore();\n        var svc = new LoginService(store);\n\n        await svc.LoginAsync(\"user@example.com\", \"x\");\n        await svc.LoginAsync(\"user@example.com\", \"y\");\n        await svc.LoginAsync(\"user@example.com\", \"z\");\n\n        var res = await svc.LoginAsync(\"user@example.com\", \"N3wP@ss\");\n        Assert.False(res.Success);\n        Assert.Equal(\"locked\", res.Error);\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a Black-Box \u0639\u0644\u0649 \u0639\u0642\u062f \u0627\u0644\u062e\u062f\u0645\u0629 (\u0645\u062f\u062e\u0644\u0627\u062a/\u0645\u062e\u0631\u062c\u0627\u062a). \u0646\u063a\u0637\u0651\u064a \u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u0646\u062c\u0627\u062d + \u0633\u0627\u0644\u0628 + \u062d\u0627\u0644\u0629 \u062d\u062f\u0651\u064a\u0629 (\u0627\u0644\u0642\u0641\u0644 \u0628\u0639\u062f 3).</p>"},{"location":"terms/functionality-testing/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0638\u064a\u0641\u064a \u0641\u0639\u0651\u0627\u0644","text":"<ol> <li>\u062d\u0648\u0651\u0644 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0625\u0644\u0649 \u062d\u0627\u0644\u0627\u062a \u0627\u062e\u062a\u0628\u0627\u0631 (Given/When/Then + \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644).  </li> <li>\u063a\u0637\u0651\u0650 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0648\u0627\u0644\u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a \u0648\u0627\u0644\u062d\u062f\u0648\u062f (0/1/Many\u060c \u0637\u0648\u0644\u060c \u0646\u0637\u0627\u0642).  </li> <li>\u062c\u0647\u0651\u0632 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0642\u0639\u064a\u0629 \u0648\u0622\u0645\u0646\u0629 (\u0645\u062c\u0647\u0648\u0644\u0629\u060c \u063a\u064a\u0631 \u0625\u0646\u062a\u0627\u062c\u064a\u0629).  </li> <li>\u0627\u0628\u0646\u0650 \u062d\u0632\u0645\u0629 Regression \u062a\u064f\u0634\u063a\u0651\u064e\u0644 \u0622\u0644\u064a\u064b\u0627 \u0641\u064a CI \u0639\u0646\u062f \u0643\u0644 \u062a\u063a\u064a\u064a\u0631.  </li> <li>\u0627\u0633\u062a\u0639\u0645\u0644 \u062a\u062a\u0628\u0651\u0639 Req \u2194 Test (RTM) \u0644\u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u062a\u063a\u0637\u064a\u0629.  </li> <li>\u0644\u0644\u0648\u0627\u062c\u0647\u0627\u062a \u0627\u0644\u0634\u0628\u0643\u064a\u0629: \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062a\u0643\u0627\u0645\u0644/E2E \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0645\u064a\u0644 HTTP \u0623\u0648 \u0623\u062f\u0627\u0629 UI \u0645\u0646\u0627\u0633\u0628\u0629.  </li> <li>\u0648\u062b\u0651\u0642 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u062a\u0646\u0641\u064a\u0630 (\u062a\u0645\u0631\u064a\u0631/\u0641\u0634\u0644) \u0648\u062e\u0637\u0651\u0629 \u0639\u0644\u0627\u062c \u0627\u0644\u0639\u064a\u0648\u0628.</li> </ol>"},{"location":"terms/functionality-testing/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 \u0627\u0644\u0648\u0638\u064a\u0641\u064a \u0648\u0627\u0644\u0644\u0627-\u0648\u0638\u064a\u0641\u064a (\u0623\u062f\u0627\u0621/\u0623\u0645\u0627\u0646) \u0648\u0641\u0642\u062f\u0627\u0646 \u0627\u0644\u062a\u0631\u0643\u064a\u0632.  </li> <li>\u0625\u0647\u0645\u0627\u0644 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u062d\u0648\u0627\u0641 \u0623\u0648 \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u062e\u0637\u0623 \u0627\u0644\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0641\u0647\u0645.  </li> <li>\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062d\u0627\u0644\u0629 \u0645\u0634\u062a\u0631\u0643\u0629 \u0647\u0634\u0629 (\u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u062a\u0646\u0641\u064a\u0630).  </li> <li>\u0639\u062f\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0639\u0646\u062f \u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u2192 \u0646\u062a\u0627\u0626\u062c \u0645\u0636\u0644\u0651\u0644\u0629.  </li> <li>\u063a\u064a\u0627\u0628 Regression \u0628\u0639\u062f \u0625\u0635\u0644\u0627\u062d \u0627\u0644\u0639\u064a\u0648\u0628 \u2192 \u0639\u0648\u062f\u0629 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0642\u062f\u064a\u0645\u0629.</li> </ul>"},{"location":"terms/functionality-testing/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Functionality Testing \u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0648\u0641\u0642 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u0639\u0642\u062f \u0648\u0627\u0644\u0633\u0644\u0648\u0643 \u0627\u0644\u0645\u062a\u0648\u0642\u0639 Non-Functional (NFR) \u0623\u062f\u0627\u0621/\u0623\u0645\u0627\u0646/\u062a\u0648\u0627\u0641\u0631/\u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u0645\u0644 \u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0648\u0638\u0627\u0626\u0641 Smoke/Sanity \u0641\u062d\u0635 \u0633\u0631\u064a\u0639 \u0644\u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u064a\u0633\u0628\u0642 \u0623\u0639\u0645\u0642 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a Regression \u0645\u0646\u0639 \u0639\u0648\u062f\u0629 \u0639\u064a\u0648\u0628 \u0642\u062f\u064a\u0645\u0629 \u064a\u064f\u0634\u063a\u064e\u0651\u0644 \u0622\u0644\u064a\u064b\u0627 \u0645\u0639 \u0643\u0644 \u062a\u063a\u064a\u064a\u0631 Black-Box \u0627\u062e\u062a\u0628\u0627\u0631 \u0645\u062f\u062e\u0644\u0627\u062a/\u0645\u062e\u0631\u062c\u0627\u062a \u0641\u0642\u0637 \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0642\u0628\u0648\u0644 \u0648\u0627\u0644\u062a\u0643\u0627\u0645\u0644"},{"location":"terms/functionality-testing/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Functionality Testing \u064a\u062b\u0628\u062a \u0623\u0646 \u0627\u0644\u0645\u064a\u0651\u0632\u0627\u062a \u062a\u0639\u0645\u0644 \u0643\u0645\u0627 \u0648\u064f\u0635\u0641\u062a \u0644\u0643\u0644 \u0627\u0644\u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0645\u0647\u0645\u0629\u060c \u0645\u0639 \u062d\u0627\u0644\u0627\u062a \u062d\u0648\u0627\u0641/\u0633\u0644\u0628\u064a\u0629 \u0648\u062d\u0632\u0645\u0629 Regression \u0622\u0644\u064a\u0629\u2014\u0641\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062b\u0642\u0629 \u062d\u0642\u064a\u0642\u064a\u0629 \u0639\u0646\u062f \u0643\u0644 \u0625\u0635\u062f\u0627\u0631.</p>"},{"location":"terms/hashing/","title":"Hashing","text":""},{"location":"terms/hashing/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Hashing / Hash Function \u2014 \u062a\u062c\u0632\u0626\u0629/\u062f\u0627\u0644\u0629 \u0647\u0627\u0634 \u062a\u0646\u062a\u062c \u0628\u0635\u0645\u0629 \u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0637\u0648\u0644 \u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0625\u062f\u062e\u0627\u0644.</p>"},{"location":"terms/hashing/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u062d\u0648\u064a\u0644 \u062d\u062a\u0645\u064a \u0644\u0623\u064a \u0628\u064a\u0627\u0646\u0627\u062a \u0625\u0644\u0649 \u0628\u0635\u0645\u0629 \u0642\u0635\u064a\u0631\u0629 \u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0637\u0648\u0644. \u0627\u0644\u0647\u062f\u0641: \u0627\u0644\u062a\u062d\u0642\u0642 \u0648\u0627\u0644\u0641\u0647\u0631\u0633\u0629 \u0648\u0633\u0644\u0627\u0645\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u2014 \u0644\u064a\u0633 \u0644\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0648\u0644\u0627 \u064a\u0645\u0643\u0646 \u0639\u0643\u0633\u0647 \u0639\u0645\u0644\u064a\u064b\u0627.</p>"},{"location":"terms/hashing/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0641\u0633 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u2192 \u0646\u0641\u0633 \u0627\u0644\u0628\u0635\u0645\u0629 \u062f\u0627\u0626\u0645\u064b\u0627.  </li> <li>\u062a\u063a\u064a\u0651\u0631 \u0628\u0633\u064a\u0637 \u0641\u064a \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u2192 \u0628\u0635\u0645\u0629 \u0645\u062e\u062a\u0644\u0641\u0629 \u062c\u0630\u0631\u064a\u064b\u0627 (Avalanche).  </li> <li>\u062e\u0635\u0627\u0626\u0635 \u0645\u0637\u0644\u0648\u0628\u0629: \u0645\u0642\u0627\u0648\u0645\u0629 \u0627\u0644\u062a\u0635\u0627\u062f\u0645\u060c \u0645\u0642\u0627\u0648\u0645\u0629 \u0627\u0644\u0635\u0648\u0631\u0629 \u0627\u0644\u0623\u0648\u0644\u0649/\u0627\u0644\u062b\u0627\u0646\u064a\u0629.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a: \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0645\u0644\u0641\u0627\u062a\u060c \u0628\u0646\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (HashTable)\u060c \u062a\u062e\u0632\u064a\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0639\u0628\u0631 KDF + Salt.</li> </ul>"},{"location":"terms/hashing/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0622\u0644\u0629 \u062a\u0635\u0646\u0639 \u062e\u062a\u0645\u064b\u0627 \u0644\u0648\u0631\u0642\u0629. \u0627\u0644\u062e\u062a\u0645 \u064a\u062b\u0628\u062a \u0623\u0646\u0647\u0627 \u0646\u0641\u0633 \u0627\u0644\u0648\u0631\u0642\u0629 \u0644\u0627\u062d\u0642\u064b\u0627\u060c \u0644\u0643\u0646 \u0644\u0627 \u064a\u0645\u0643\u0646\u0643 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0648\u0631\u0642\u0629 \u0645\u0646 \u0627\u0644\u062e\u062a\u0645 \u0648\u062d\u062f\u0647.</p>"},{"location":"terms/hashing/#c-sha-256-hmac-pbkdf2","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (SHA-256 + HMAC + \u062a\u062e\u0632\u064a\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0628\u0640 PBKDF2)","text":"<p>C#<pre><code>using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass HashingDemo\n{\n    // 1) \u0647\u0627\u0634 \u0639\u0627\u0645 (SHA-256) \u2014 \u0644\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0633\u0644\u0627\u0645\u0629 \u0645\u0644\u0641/\u0646\u0635\n    public static string Sha256(string text)\n    {\n        using var sha = SHA256.Create();\n        byte[] bytes = sha.ComputeHash(Encoding.UTF8.GetBytes(text));\n        return Convert.ToHexString(bytes); // \u0628\u0635\u0645\u0629 \u0633\u062f\u0627\u0633\u064a\u0629\n    }\n\n    // 2) HMAC-SHA256 \u2014 \u0628\u0635\u0645\u0629 \u0645\u0639 \u0645\u0641\u062a\u0627\u062d \u0633\u0631\u0651\u064a (\u0633\u0644\u0627\u0645\u0629 + \u0623\u0635\u0627\u0644\u0629 \u0631\u0633\u0627\u0644\u0629)\n    public static string HmacSha256(string text, byte[] key)\n    {\n        using var hmac = new HMACSHA256(key);\n        return Convert.ToHexString(hmac.ComputeHash(Encoding.UTF8.GetBytes(text)));\n    }\n\n    // 3) \u062a\u062e\u0632\u064a\u0646 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631: PBKDF2 (KDF \u0628\u0637\u064a\u0621) + Salt\n    // \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0642\u062a\u0631\u062d: Base64( salt | iterations(4B) | hash )\n    public static string HashPassword(string password, int iterations = 100_000)\n    {\n        byte[] salt = RandomNumberGenerator.GetBytes(16);\n        using var kdf = new Rfc2898DeriveBytes(password, salt, iterations, HashAlgorithmName.SHA256);\n        byte[] hash = kdf.GetBytes(32); // 256-bit\n\n        byte[] pack = new byte[salt.Length + 4 + hash.Length];\n        Buffer.BlockCopy(salt, 0, pack, 0, salt.Length);\n        BitConverter.GetBytes(iterations).CopyTo(pack, salt.Length);\n        Buffer.BlockCopy(hash, 0, pack, salt.Length + 4, hash.Length);\n        return Convert.ToBase64String(pack);\n    }\n\n    public static bool VerifyPassword(string password, string stored)\n    {\n        byte[] pack = Convert.FromBase64String(stored);\n        byte[] salt = new byte[16];\n        Buffer.BlockCopy(pack, 0, salt, 0, salt.Length);\n        int iterations = BitConverter.ToInt32(pack, salt.Length);\n        byte[] hash = new byte[32];\n        Buffer.BlockCopy(pack, salt.Length + 4, hash, 0, hash.Length);\n\n        using var kdf = new Rfc2898DeriveBytes(password, salt, iterations, HashAlgorithmName.SHA256);\n        byte[] candidate = kdf.GetBytes(32);\n        return CryptographicOperations.FixedTimeEquals(hash, candidate); // \u0645\u0642\u0627\u0631\u0646\u0629 \u0622\u0645\u0646\u0629 \u0632\u0645\u0646\u064a\u0627\u064b\n    }\n\n    static void Main()\n    {\n        Console.WriteLine(Sha256(\"hello\")); // 2CF24DBA...\n\n        var key = Encoding.UTF8.GetBytes(\"secret\");\n        Console.WriteLine(HmacSha256(\"msg\", key)); // HMAC\n\n        string rec = HashPassword(\"P@ssw0rd!\");\n        Console.WriteLine(VerifyPassword(\"P@ssw0rd!\", rec)); // True\n        Console.WriteLine(VerifyPassword(\"wrong\", rec));     // False\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0628\u0635\u0645\u0629 SHA-256 \u0644\u0640<code>hello</code>. - \u0628\u0635\u0645\u0629 HMAC \u0644\u0644\u0646\u0635 <code>msg</code>. - True/False \u0644\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631.</p>"},{"location":"terms/hashing/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u062c\u0632\u0626\u0629 \u0628\u0623\u0645\u0627\u0646","text":"<ul> <li>\u0627\u062e\u062a\u0631 \u062f\u0648\u0627\u0644 \u062d\u062f\u064a\u062b\u0629: SHA-256/512 \u0623\u0648 BLAKE2/3 (\u062d\u0633\u0628 \u0627\u0644\u062f\u0639\u0645).  </li> <li>\u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631: \u0644\u0627 \u062a\u0633\u062a\u062e\u062f\u0645 SHA \u0645\u0628\u0627\u0634\u0631\u0629\u061b \u0627\u0633\u062a\u062e\u062f\u0645 KDF \u0628\u0637\u064a\u0621: PBKDF2/Argon2/bcrypt \u0645\u0639 Salt \u0641\u0631\u064a\u062f.  </li> <li>\u0644\u0644\u062a\u0648\u062b\u064a\u0642 \u0645\u0639 \u0633\u0631\u0651 \u0645\u0634\u062a\u0631\u0643: HMAC \u0628\u062f\u0644 \u0627\u0644\u0647\u0627\u0634 \u0627\u0644\u0639\u0627\u062f\u064a.  </li> <li>\u062f\u0648\u0651\u0646 \u062a\u0646\u0633\u064a\u0642 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 (salt/iterations/hash) \u0648\u062e\u0637\u0651\u0629 \u062a\u062f\u0648\u064a\u0631 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0648\u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d.  </li> <li>\u0642\u0627\u0631\u0646 \u0627\u0644\u0628\u0635\u0645\u0627\u062a \u0639\u0628\u0631 \u062f\u0627\u0644\u0629 \u0632\u0645\u0646 \u062b\u0627\u0628\u062a \u0644\u062a\u062c\u0646\u0651\u0628 \u0642\u0646\u0648\u0627\u062a \u062c\u0627\u0646\u0628\u064a\u0629.  </li> <li>\u062a\u062c\u0646\u0651\u0628 SHA-1/MD5 \u0644\u0644\u0623\u0645\u0627\u0646 (\u063a\u064a\u0631 \u0645\u0648\u0635\u0649 \u0628\u0647\u0645\u0627 \u0628\u0633\u0628\u0628 \u062a\u0635\u0627\u062f\u0645\u0627\u062a).</li> </ul>"},{"location":"terms/hashing/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 Hashing \u0648Encryption \u0648Encoding.  </li> <li>\u062a\u062e\u0632\u064a\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0628\u0640 SHA-256 \u0641\u0642\u0637 \u062f\u0648\u0646 Salt/KDF.  </li> <li>\u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Salt \u0623\u0648 \u062a\u062c\u0627\u0647\u0644 \u0632\u064a\u0627\u062f\u0629 iterations \u0628\u0645\u0631\u0648\u0631 \u0627\u0644\u0648\u0642\u062a.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0627\u0634 \u0639\u0627\u062f\u064a \u0644\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0628\u064a\u0646\u0645\u0627 \u064a\u062c\u0628 HMAC \u0623\u0648 \u062a\u0648\u0642\u064a\u0639 \u0631\u0642\u0645\u064a.  </li> <li>\u0645\u0642\u0627\u0631\u0646\u0629 \u0628\u0635\u0645\u0627\u062a \u0628\u0633\u0630\u0627\u062c\u0629 (<code>==</code>) \u0628\u062f\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0632\u0645\u0646 \u062b\u0627\u0628\u062a.</li> </ul>"},{"location":"terms/hashing/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Encryption \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0644\u064a\u0633\u062a\u0631\u062c\u0639\u0647 \u0635\u0627\u062d\u0628 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0642\u0627\u0628\u0644 \u0644\u0644\u0639\u0643\u0633 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d\u061b \u064a\u0648\u0641\u0651\u0631 \u0633\u0631\u064a\u0651\u0629 Hashing \u0628\u0635\u0645\u0629 \u0623\u062d\u0627\u062f\u064a\u0629 \u0627\u0644\u0627\u062a\u0651\u062c\u0627\u0647 \u0644\u0644\u062a\u062d\u0642\u0651\u0642/\u0627\u0644\u0641\u0647\u0631\u0633\u0629 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u0639\u0643\u0633\u061b \u0627\u0633\u062a\u062e\u062f\u0645 KDF+Salt \u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 Encoding \u062a\u0645\u062b\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0644\u0646\u0642\u0644 (Base64/UTF-8) \u0644\u064a\u0633 \u0623\u0645\u0627\u0646\u064b\u0627\u061b \u0644\u0627 \u064a\u0645\u0646\u0639 \u0627\u0644\u0642\u0631\u0627\u0621\u0629"},{"location":"terms/hashing/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Hashing \u064a\u0646\u062a\u062c \u0628\u0635\u0645\u0629 \u062b\u0627\u0628\u062a\u0629 \u0644\u0627 \u062a\u064f\u0639\u0643\u0633 \u0639\u0645\u0644\u064a\u064b\u0627. \u0644\u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0633\u0631\u0651\u064a\u0629: \u0627\u0633\u062a\u0639\u0645\u0644 KDF \u0628\u0637\u064a\u0626\u064b\u0627 \u0645\u0639 Salt\u061b \u0644\u0644\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0645\u0648\u0642\u0651\u064e\u0639\u0629 \u0633\u0631\u0651\u064a\u064b\u0627: HMAC. \u062a\u0630\u0643\u0651\u0631: Hashing \u2260 Encryption \u2260 Encoding \u2014 \u0644\u0643\u0644 \u063a\u0631\u0636\u0647.</p>"},{"location":"terms/hsts/","title":"HSTS","text":""},{"location":"terms/hsts/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>HTTP Strict-Transport-Security (HSTS) \u2014 \u0633\u064a\u0627\u0633\u0629 \u0627\u0644\u0646\u0642\u0644 \u0627\u0644\u0622\u0645\u0646 \u0627\u0644\u0635\u0627\u0631\u0645\u0629 \u0639\u0628\u0631 HTTP.</p>"},{"location":"terms/hsts/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0631\u0648\u064a\u0633\u0629 \u0623\u0645\u0627\u0646 \u062a\u064f\u062c\u0628\u0631 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d \u0639\u0644\u0649 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 HTTPS \u0641\u0642\u0637 \u0644\u0645\u0648\u0642\u0639\u0643 \u0644\u0645\u062f\u0651\u0629 \u0645\u062d\u062f\u062f\u0629. \u062a\u0645\u0646\u0639 \u0627\u0644\u0631\u062c\u0648\u0639 \u0625\u0644\u0649 HTTP \u0648\u062a\u062e\u0641\u0651\u0641 \u0647\u062c\u0645\u0627\u062a SSL Stripping \u0648\u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0645\u062e\u062a\u0644\u0637.</p>"},{"location":"terms/hsts/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0645\u0631\u0629 \u0627\u0644\u0623\u0648\u0644\u0649 \u0639\u0628\u0631 HTTPS \u064a\u0642\u0631\u0623 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d \u062a\u0631\u0648\u064a\u0633\u0629 HSTS.  </li> <li>\u0628\u0639\u062f\u0647\u0627\u060c \u0623\u064a \u0645\u062d\u0627\u0648\u0644\u0629 \u0644\u0644\u0648\u0635\u0648\u0644 \u0628\u0640 <code>http://</code> \u062a\u064f\u062d\u0648\u0651\u064e\u0644 \u062f\u0627\u062e\u0644\u064a\u064b\u0627 \u0625\u0644\u0649 <code>https://</code> \u0642\u0628\u0644 \u0627\u0644\u0627\u062a\u0635\u0627\u0644.  </li> <li>\u062e\u064a\u0627\u0631\u0627\u062a \u0645\u0647\u0645\u0629:  </li> <li><code>max-age</code>: \u0645\u062f\u0651\u0629 \u0627\u0644\u0625\u0644\u0632\u0627\u0645 \u0628\u0627\u0644\u062b\u0648\u0627\u0646\u064a (\u064a\u0641\u0636\u0651\u0644 \u2265 \u0633\u0646\u0629 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c).  </li> <li><code>includeSubDomains</code>: \u064a\u0634\u0645\u0644 \u0643\u0644 \u0627\u0644\u0646\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0641\u0631\u0639\u064a\u0629.  </li> <li><code>preload</code>: \u0637\u0644\u0628 \u0625\u062f\u0631\u0627\u062c \u0646\u0637\u0627\u0642\u0643 \u0641\u064a \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d\u0627\u062a \u0627\u0644\u0645\u0633\u0628\u0642\u0629 (\u0644\u0627 \u062a\u062d\u062a\u0627\u062c \u0627\u0644\u0632\u064a\u0627\u0631\u0629 \u0627\u0644\u0623\u0648\u0644\u0649).</li> </ul>"},{"location":"terms/hsts/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0639\u0644\u0627\u0645\u0629 \u0639\u0644\u0649 \u0628\u0627\u0628 \u0627\u0644\u0645\u0628\u0646\u0649: \u201c\u062f\u062e\u0648\u0644 \u0639\u0628\u0631 \u0627\u0644\u0628\u0648\u0627\u0628\u0629 \u0627\u0644\u0622\u0645\u0646\u0629 \u0641\u0642\u0637\u201d. \u062d\u062a\u0649 \u0644\u0648 \u062d\u0627\u0648\u0644 \u0623\u062d\u062f\u0647\u0645 \u062a\u0648\u062c\u064a\u0647\u0643 \u0644\u0644\u0628\u0648\u0627\u0628\u0629 \u0627\u0644\u0639\u0627\u062f\u064a\u0629\u060c \u0633\u064a\u0645\u0646\u0639\u0643 \u0627\u0644\u062d\u0627\u0631\u0633 \u0648\u064a\u0639\u064a\u062f\u0643 \u0644\u0644\u0628\u0648\u0627\u0628\u0629 \u0627\u0644\u0622\u0645\u0646\u0629.</p>"},{"location":"terms/hsts/#_5","title":"\u0623\u0645\u062b\u0644\u0629 \u0625\u0639\u062f\u0627\u062f (\u0643\u0648\u062f \u0642\u0635\u064a\u0631)","text":""},{"location":"terms/hsts/#1-aspnet-core","title":"1) ASP.NET Core","text":"C#<pre><code>// Program.cs (.NET 8/9)\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddHsts(o =&gt;\n{\n    o.MaxAge = TimeSpan.FromDays(365);   // max-age=31536000\n    o.IncludeSubDomains = true;          // includeSubDomains\n    o.Preload = true;                    // preload (\u0628\u0639\u062f \u0627\u0633\u062a\u064a\u0641\u0627\u0621 \u0634\u0631\u0648\u0637 \u0627\u0644\u0642\u0627\u0626\u0645\u0629)\n});\n\nvar app = builder.Build();\n\nif (!app.Environment.IsDevelopment())\n{\n    app.UseHsts();              // \u064a\u0636\u064a\u0641 \u062a\u0631\u0648\u064a\u0633\u0629 HSTS\n    app.UseHttpsRedirection();  // 308 \u0645\u0646 HTTP \u0625\u0644\u0649 HTTPS\n}\n\napp.MapGet(\"/\", () =&gt; \"Hello HSTS\");\napp.Run();\n</code></pre>"},{"location":"terms/hsts/#2-nginx","title":"2) Nginx","text":"Nginx Configuration File<pre><code>server {\n  listen 443 ssl http2;\n  server_name example.com;\n  # ... SSL/TLS config ...\n\n  add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\" always;\n}\n\n# \u062a\u0623\u0643\u062f \u0623\u0646 \u0645\u0646\u0641\u0630 80 \u064a\u062d\u0648\u0651\u0644 \u062f\u0627\u0626\u0645\u064b\u0627 \u0625\u0644\u0649 HTTPS\nserver {\n  listen 80;\n  server_name example.com;\n  return 308 https://$host$request_uri;\n}\n</code></pre>"},{"location":"terms/hsts/#3","title":"3) \u0627\u0644\u062a\u0631\u0648\u064a\u0633\u0629 \u0646\u0641\u0633\u0647\u0627","text":"Text Only<pre><code>Strict-Transport-Security: max-age=31536000; includeSubDomains; preload\n</code></pre>"},{"location":"terms/hsts/#hsts_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0641\u0639\u064a\u0644 HSTS \u0628\u0623\u0645\u0627\u0646","text":"<ul> <li>\u0641\u0639\u0651\u0644 HTTPS \u0643\u0627\u0645\u0644 \u0623\u0648\u0644\u064b\u0627 (\u0634\u0647\u0627\u062f\u0627\u062a \u0635\u062d\u064a\u062d\u0629\u060c \u0633\u0644\u0627\u0633\u0644 \u062b\u0642\u0629 \u0645\u0643\u062a\u0645\u0644\u0629).  </li> <li>\u0623\u0636\u0650\u0641 HSTS \u0628\u0642\u064a\u0645\u0629 \u0635\u063a\u064a\u0631\u0629 \u0645\u0628\u062f\u0626\u064a\u064b\u0627 (\u0645\u062b\u0644\u0627\u064b \u0623\u064a\u0627\u0645) \u0641\u064a \u0628\u064a\u0626\u0629 \u0625\u0646\u062a\u0627\u062c \u0645\u062d\u062f\u0648\u062f\u0629\u060c \u062b\u0645 \u0627\u0631\u0641\u0639\u0647\u0627 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627.  </li> <li>\u0628\u0639\u062f \u0627\u0644\u0627\u0633\u062a\u0642\u0631\u0627\u0631\u060c \u0627\u0633\u062a\u062e\u062f\u0645 <code>max-age</code> \u2265 \u0633\u0646\u0629 + <code>includeSubDomains</code>.  </li> <li>\u0623\u0636\u0641 <code>preload</code> \u0641\u0642\u0637 \u0639\u0646\u062f \u0627\u0644\u062a\u0623\u0643\u062f \u0623\u0646 \u0643\u0644 \u0627\u0644\u0646\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0641\u0631\u0639\u064a\u0629 \u062a\u0639\u0645\u0644 \u0639\u0644\u0649 HTTPS \u0648\u062a\u062d\u0648\u064a\u0644 80\u2192443 \u062f\u0627\u0626\u0645.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0646\u062a\u0647\u0627\u0621 \u0627\u0644\u0634\u0647\u0627\u062f\u0627\u062a \u0648\u062c\u062f\u0651\u062f\u0647\u0627 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0644\u0645\u0646\u0639 \u062d\u0638\u0631 \u0627\u0644\u0648\u0635\u0648\u0644 \u0639\u0646\u062f \u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0621.</li> </ul>"},{"location":"terms/hsts/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0641\u0639\u064a\u0644 <code>preload</code> \u0642\u0628\u0644 \u062c\u0627\u0647\u0632\u064a\u0629 \u0643\u0644 \u0627\u0644\u0646\u0637\u0627\u0642\u0627\u062a \u0627\u0644\u0641\u0631\u0639\u064a\u0629 \u2192 \u0642\u0641\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u062e\u0627\u0631\u062c \u0627\u0644\u062e\u062f\u0645\u0629.  </li> <li>\u0627\u0644\u0625\u0628\u0642\u0627\u0621 \u0639\u0644\u0649 <code>max-age</code> \u0642\u0635\u064a\u0631\u064b\u0627 \u062c\u062f\u064b\u0627 \u2192 \u0641\u0627\u0639\u0644\u064a\u0629 \u0645\u0646\u062e\u0641\u0636\u0629 \u0636\u062f \u0627\u0644\u0647\u062c\u0645\u0627\u062a.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u062a\u062d\u0648\u064a\u0644 \u0645\u0646 HTTP \u0625\u0644\u0649 HTTPS \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0641\u0630 80.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0641\u064a \u0628\u064a\u0626\u0627\u062a \u062a\u062c\u0631\u064a\u0628\u064a\u0629/\u0645\u062d\u0644\u064a\u0629 \u0639\u0644\u0649 \u0646\u0637\u0627\u0642\u0627\u062a \u062d\u0642\u064a\u0642\u064a\u0629.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 HSTS \u0648\u062d\u062f\u0647 \u062f\u0648\u0646 \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0645\u062e\u062a\u0644\u0637 \u0648\u0633\u064a\u0627\u0633\u0627\u062a \u0645\u062b\u0644 CSP.</li> </ul>"},{"location":"terms/hsts/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 HTTPS \u0642\u0646\u0627\u0629 \u0648\u064a\u0628 \u0645\u0634\u0641\u0651\u0631\u0629 \u0648\u0647\u0648\u064a\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u062d\u0645\u064a \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u061b \u0644\u0627 \u064a\u062c\u0628\u0631 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d \u062f\u0627\u0626\u0645\u064b\u0627 \u0639\u0644\u0649 HTTPS HSTS \u0625\u062c\u0628\u0627\u0631 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d \u0639\u0644\u0649 HTTPS \u062f\u0648\u0645\u064b\u0627 max-age/includeSubDomains/preload\u061b \u064a\u0645\u0646\u0639 \u0627\u0644\u0631\u062c\u0648\u0639 \u0625\u0644\u0649 HTTP TLS \u062a\u0634\u0641\u064a\u0631/\u0633\u0644\u0627\u0645\u0629/\u062a\u0648\u062b\u064a\u0642 \u0639\u0644\u0649 \u0637\u0628\u0642\u0629 \u0627\u0644\u0646\u0642\u0644 \u064a\u0633\u062a\u062e\u062f\u0645 \u062a\u062d\u062a HTTPS \u0648\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0623\u062e\u0631\u0649"},{"location":"terms/hsts/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>HSTS \u064a\u0636\u0645\u0646 \u0623\u0646 \u0645\u0648\u0642\u0639\u0643 \u064a\u064f\u0632\u0627\u0631 \u0639\u0628\u0631 HTTPS \u0641\u0642\u0637 \u062e\u0644\u0627\u0644 \u0645\u062f\u0651\u0629 \u0645\u062d\u062f\u062f\u0629\u060c \u0641\u064a\u0642\u0636\u064a \u0639\u0645\u0644\u064a\u064b\u0627 \u0639\u0644\u0649 \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u0627\u0644\u0631\u062c\u0648\u0639 \u0625\u0644\u0649 HTTP \u0648\u064a\u0642\u0648\u0651\u064a \u0648\u0636\u0639 \u0627\u0644\u0623\u0645\u0627\u0646\u2014\u062e\u0635\u0648\u0635\u064b\u0627 \u0645\u0639 <code>includeSubDomains</code> \u0648<code>preload</code> \u0628\u0639\u062f \u0627\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0644\u062c\u0627\u0647\u0632\u064a\u0629.</p>"},{"location":"terms/http/","title":"Http","text":"<p># HTTP**</p>"},{"location":"terms/http/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Hypertext Transfer Protocol (HTTP) \u2014 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0646\u0642\u0644 \u0627\u0644\u0646\u0635 \u0627\u0644\u0641\u0627\u0626\u0642</p>"},{"location":"terms/http/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0637\u0644\u0628/\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0639\u0644\u0649 \u0637\u0628\u0642\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0644\u0631\u0628\u0637 \u0639\u0645\u064a\u0644 (\u0645\u062a\u0635\u0641\u062d/\u062a\u0637\u0628\u064a\u0642) \u0628\u0640 \u062e\u0627\u062f\u0645 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0629. \u064a\u062f\u0639\u0645 \u0637\u0631\u0642\u064b\u0627 (GET/POST/PUT/DELETE\u2026) \u0648\u0631\u0624\u0648\u0633\u064b\u0627 (Headers) \u0648\u0647\u064a\u0626\u0627\u062a \u0628\u064a\u0627\u0646\u0627\u062a (JSON/HTML/\u0645\u0644\u0641\u0627\u062a)\u060c \u0645\u0639 \u0631\u0645\u0648\u0632 \u062d\u0627\u0644\u0629 \u0648\u0627\u0636\u062d\u0629.</p>"},{"location":"terms/http/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u0631\u0633\u0644 Request \u0625\u0644\u0649 \u0645\u0633\u0627\u0631 (URL) \u0645\u0639 Method \u0648\u0631\u0624\u0648\u0633/\u062c\u0633\u0645 \u0627\u062e\u062a\u064a\u0627\u0631\u064a.  </li> <li>\u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0631\u062f\u0651 \u0628\u0640 Status Code (200/201/404/500\u2026) + \u0631\u0624\u0648\u0633 + Body.  </li> <li>\u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a: HTTP/1.1 (\u0633\u0644\u0633\u0644\u064a)\u060c HTTP/2 (\u062a\u0639\u062f\u062f \u0642\u0646\u0648\u0627\u062a \u0639\u0644\u0649 \u0627\u062a\u0635\u0627\u0644 \u0648\u0627\u062d\u062f)\u060c HTTP/3 (\u0623\u0633\u0631\u0639 \u0641\u0648\u0642 QUIC).  </li> <li>\u0645\u0641\u0627\u0647\u064a\u0645 \u0645\u0647\u0645\u0651\u0629: Idempotency (GET/PUT/DELETE \u0622\u0645\u0646\u0629 \u0644\u0644\u062a\u0643\u0631\u0627\u0631)\u060c Caching (ETag, Cache-Control)\u060c Content-Type/Accept.</li> </ul>"},{"location":"terms/http/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0643\u062a\u0628 \u0628\u0631\u064a\u062f: \u062a\u0636\u0639 \u0631\u0633\u0627\u0644\u062a\u0643 \u062f\u0627\u062e\u0644 \u0638\u0631\u0641 \u0628\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0637\u0648\u0627\u0628\u0639 (Headers/Method/URL)\u060c \u062b\u0645 \u062a\u0635\u0644\u0643 \u0631\u0633\u0627\u0644\u0629 \u062c\u0648\u0627\u0628 \u0645\u062e\u062a\u0648\u0645\u0629 \u0628\u0646\u062a\u064a\u062c\u0629 \u0627\u0644\u0637\u0644\u0628 (Status + \u0645\u062d\u062a\u0648\u0649).</p>"},{"location":"terms/http/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062e\u0627\u062f\u0645 + \u0639\u0645\u064a\u0644)","text":""},{"location":"terms/http/#aspnet-core-minimal-api","title":"\u062e\u0627\u062f\u0645 (ASP.NET Core Minimal API)","text":"C#<pre><code>// Program.cs\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapGet(\"/api/products/{id:int}\", (int id) =&gt;\n{\n    if (id &lt;= 0) return Results.BadRequest(new { error = \"Invalid id\" });\n\n    // \u0623\u0645\u062b\u0644\u0629 \u0631\u0624\u0648\u0633 \u0645\u0641\u064a\u062f\u0629\n    return Results.Ok(new { id, name = \"Laptop\", price = 999 })\n                 .WithHeader(\"Cache-Control\", \"public, max-age=60\")\n                 .WithHeader(\"ETag\", \"\\\"p-999\\\"\");\n});\n\napp.MapPost(\"/api/orders\", (OrderDto dto) =&gt;\n{\n    if (string.IsNullOrWhiteSpace(dto.ProductId) || dto.Qty &lt;= 0)\n        return Results.BadRequest(new { error = \"Invalid payload\" });\n\n    var id = 123;\n    return Results.Created($\"/api/orders/{id}\", new { orderId = id, status = \"created\" });\n});\n\napp.Run();\nrecord OrderDto(string ProductId, int Qty);\n</code></pre>"},{"location":"terms/http/#httpclient","title":"\u0639\u0645\u064a\u0644 (\u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0639\u0628\u0631 HttpClient)","text":"C#<pre><code>using var http = new HttpClient { BaseAddress = new Uri(\"https://localhost:5001\") };\n\n// GET \u0645\u0639 \u062a\u0631\u0648\u064a\u0633\u0629 Accept\nvar req = new HttpRequestMessage(HttpMethod.Get, \"/api/products/5\");\nreq.Headers.Accept.ParseAdd(\"application/json\");\nusing var res = await http.SendAsync(req, HttpCompletionOption.ResponseHeadersRead);\nConsole.WriteLine((int)res.StatusCode);\nConsole.WriteLine(await res.Content.ReadAsStringAsync());\n\n// POST JSON\nvar create = await http.PostAsJsonAsync(\"/api/orders\", new { ProductId = \"5\", Qty = 2 });\nConsole.WriteLine((int)create.StatusCode);         // 201\nConsole.WriteLine(create.Headers.Location);        // /api/orders/123\n\n// \u0645\u0647\u0644\u0627\u062a \u0648\u0625\u0644\u063a\u0627\u0621\nhttp.Timeout = TimeSpan.FromSeconds(10);\n// \u0627\u0633\u062a\u062e\u062f\u0645 CancellationToken \u0639\u0646\u062f \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0637\u0648\u064a\u0644\u0629\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - <code>GET</code> \u064a\u0639\u064a\u062f <code>200</code> \u0645\u0639 JSON \u0644\u0644\u0645\u0646\u062a\u062c \u0648\u0631\u0624\u0648\u0633 Caching. - <code>POST</code> \u064a\u0639\u064a\u062f <code>201 Created</code> \u0648\u062a\u0631\u0648\u064a\u0633\u0629 <code>Location</code> \u0628\u0631\u0627\u0628\u0637 \u0627\u0644\u0645\u0648\u0631\u062f \u0627\u0644\u062c\u062f\u064a\u062f.</p>"},{"location":"terms/http/#http","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 HTTP \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0635\u0645\u0651\u0645 \u0627\u0644\u0639\u0642\u0648\u062f \u0628\u0648\u0636\u0648\u062d (\u0646\u0645\u0627\u0630\u062c JSON\u060c \u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u0623\u062e\u0637\u0627\u0621\u060c \u0627\u0644\u062d\u0642\u0648\u0644 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629).  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629: GET \u0644\u0644\u0642\u0631\u0627\u0621\u0629\u060c POST \u0644\u0644\u0625\u0646\u0634\u0627\u0621\u060c PUT \u0644\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644\u060c PATCH \u0644\u0644\u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u062c\u0632\u0626\u064a\u060c DELETE \u0644\u0644\u062d\u0630\u0641.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Status Codes \u0628\u062f\u0642\u0629 \u0648\u0631\u0633\u0627\u0626\u0644 \u062e\u0637\u0623 \u0645\u0641\u0647\u0648\u0645\u0629.  </li> <li>\u0641\u0639\u0651\u0644 Caching (ETag/Last-Modified/Cache-Control) \u0644\u0644\u0642\u0648\u0627\u0626\u0645 \u0648\u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0627\u0644\u062b\u0627\u0628\u062a\u0629.  </li> <li>\u0627\u062d\u062a\u0631\u0645 Idempotency \u0648\u0627\u062f\u0639\u0645 \u0645\u0641\u0627\u062a\u064a\u062d Idempotency \u0644\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0651\u0627\u0633\u0629 (\u062f\u0641\u0639/\u0625\u0646\u0634\u0627\u0621).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 HTTPS \u062f\u0627\u0626\u0645\u064b\u0627 (TLS)\u060c \u0648\u062d\u062f\u0651\u062f Content-Type/Accept \u0648CORS \u0644\u0644\u0645\u062a\u0635\u0641\u062d.  </li> <li>\u0623\u0636\u0641 Rate Limiting \u0648Retry + Backoff \u0648Timeouts \u0641\u064a \u0627\u0644\u0639\u0645\u064a\u0644.  </li> <li>\u0627\u0633\u062a\u063a\u0644 \u0645\u0632\u0627\u064a\u0627 HTTP/2/3 (Multiplexing/\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0640 RTT) \u0639\u0646\u062f \u0627\u0644\u0625\u0645\u0643\u0627\u0646.  </li> <li>\u0648\u062b\u0651\u0642 \u0639\u0628\u0631 OpenAPI/Swagger \u0648\u0627\u062e\u062a\u0628\u0631 \u0628\u0640 curl/Postman \u0648CI.</li> </ul>"},{"location":"terms/http/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 HTTP \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0637\u0644\u0628/\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0644\u0646\u0642\u0644 \u0627\u0644\u0646\u0635 \u0648\u0627\u0644\u0648\u0633\u0627\u0626\u0637 \u0625\u0635\u062f\u0627\u0631\u0627\u062a 1.1/2/3\u061b \u064a\u0639\u0645\u0644 \u0641\u0648\u0642 TCP (1.1/2) \u0623\u0648 QUIC (3) HTTPS HTTP \u0639\u0628\u0631 \u0642\u0646\u0627\u0629 \u0645\u0634\u0641\u0651\u0631\u0629 (TLS) \u064a\u062d\u0645\u064a \u0627\u0644\u0633\u0631\u064a\u0629 \u0648\u0627\u0644\u0633\u0644\u0627\u0645\u0629 \u0648\u0647\u0648\u064a\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 WebSocket \u0627\u062a\u0635\u0627\u0644 \u062b\u0646\u0627\u0626\u064a \u0645\u0633\u062a\u0645\u0631 \u064a\u0628\u062f\u0623 \u0639\u0628\u0631 HTTP \u062b\u0645 \u064a\u062a\u0631\u0642\u0651\u0649\u061b \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0641\u0648\u0631\u064a\u0629"},{"location":"terms/http/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>HTTP \u0647\u0648 \u0627\u0644\u0639\u0645\u0648\u062f \u0627\u0644\u0641\u0642\u0631\u064a \u0644\u0644\u0648\u064a\u0628: \u0637\u0644\u0628 \u0648\u0627\u0636\u062d \u2192 \u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0648\u0627\u0636\u062d\u0629. \u0627\u062e\u062a\u064e\u0631 \u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0635\u062d\u064a\u062d\u0629\u060c \u0627\u0644\u062a\u0632\u0645 \u0628\u0627\u0644\u0631\u0645\u0648\u0632 \u0648\u0627\u0644\u0631\u0624\u0648\u0633\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 HTTPS \u0648\u0645\u064a\u0632\u0627\u062a caching \u0648HTTP/2/3 \u0644\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0627\u062a \u0633\u0631\u064a\u0639\u0629 \u0648\u0622\u0645\u0646\u0629. **</p>"},{"location":"terms/https/","title":"HTTPS","text":""},{"location":"terms/https/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Hypertext Transfer Protocol Secure (HTTPS) \u2014 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0646\u0642\u0644 \u0627\u0644\u0646\u0635 \u0627\u0644\u0641\u0627\u0626\u0642 \u0627\u0644\u0622\u0645\u0646 (HTTP \u0641\u0648\u0642 TLS).</p>"},{"location":"terms/https/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0633\u062e\u0629 \u0645\u0634\u0641\u0651\u064e\u0631\u0629 \u0648\u0645\u064f\u0648\u062b\u0651\u064e\u0642\u0629 \u0645\u0646 HTTP \u062a\u0639\u0645\u0644 \u0641\u0648\u0642 TLS: - \u062a\u0634\u0641\u064a\u0631 \u064a\u0645\u0646\u0639 \u0627\u0644\u062a\u062c\u0633\u0651\u0633. - \u0633\u0644\u0627\u0645\u0629 \u062a\u0645\u0646\u0639 \u0627\u0644\u0639\u0628\u062b \u0628\u0627\u0644\u0645\u062d\u062a\u0648\u0649. - \u062a\u0648\u062b\u064a\u0642 \u064a\u062b\u0628\u062a \u0647\u0648\u064a\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u0639\u0628\u0631 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u062b\u0648\u0642\u0629.</p>"},{"location":"terms/https/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u062a\u0635\u0644 \u0628\u0627\u0644\u062e\u0627\u062f\u0645 \u0648\u064a\u062c\u0631\u064a\u0627\u0646 \u0645\u0635\u0627\u0641\u062d\u0629 TLS \u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0648\u0625\u0646\u0634\u0627\u0621 \u0645\u0641\u0627\u062a\u064a\u062d.  </li> <li>\u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0642\u062f\u0651\u0645 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u0642\u0651\u0639\u0629 \u0645\u0646 \u0645\u0631\u062c\u0639 \u062b\u0642\u0629 (CA).  </li> <li>\u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0635\u0627\u0641\u062d\u0629\u060c \u062a\u064f\u0646\u0642\u0644 \u0637\u0644\u0628\u0627\u062a/\u0627\u0633\u062a\u062c\u0627\u0628\u0627\u062a HTTP \u062f\u0627\u062e\u0640\u0644 \u0642\u0646\u0627\u0629 \u0622\u0645\u0646\u0629.  </li> <li>\u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629: TLS 1.2/1.3 (\u0627\u0644\u0623\u0641\u0636\u0644 \u0627\u0639\u062a\u0645\u0627\u062f\u064b\u0627 \u0639\u0644\u0649 \u062f\u0639\u0645\u0643).</li> </ul>"},{"location":"terms/https/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u0631\u0633\u0644 \u0631\u0633\u0627\u0644\u0629 \u0641\u064a \u0638\u0631\u0641 \u0645\u0642\u0641\u0648\u0644 \u0648\u0645\u062e\u062a\u0648\u0645 \u0628\u0627\u0633\u0645 \u0627\u0644\u0645\u0631\u0633\u0644 \u0627\u0644\u062d\u0642\u064a\u0642\u064a. \u062d\u062a\u0649 \u0644\u0648 \u0645\u0631\u0651\u062a \u0639\u0644\u0649 \u0648\u0633\u064a\u0637\u060c \u0644\u0627 \u064a\u0633\u062a\u0637\u064a\u0639 \u0641\u062a\u062d\u0647\u0627 \u0623\u0648 \u062a\u0632\u0648\u064a\u0631 \u0645\u064f\u0631\u0633\u0644\u0647\u0627.</p>"},{"location":"terms/https/#c-aspnet-core","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (\u062e\u0627\u062f\u0645 ASP.NET Core + \u0639\u0645\u064a\u0644 \u0622\u0645\u0646)","text":""},{"location":"terms/https/#https_1","title":"\u062e\u0627\u062f\u0645 (\u062a\u0645\u0643\u064a\u0646 HTTPS \u0648\u0627\u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a)","text":"C#<pre><code>// Program.cs (.NET 8/9)\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u064a\u0641\u0639\u0651\u0644 HTTPS Redirection \u0648HSTS (\u0641\u064a Production)\nbuilder.Services.AddHsts(o =&gt; { o.MaxAge = TimeSpan.FromDays(180); o.IncludeSubDomains = true; });\n\nvar app = builder.Build();\n\nif (!app.Environment.IsDevelopment())\n{\n    app.UseHsts();                 // Strict-Transport-Security\n    app.UseHttpsRedirection();     // 308 \u0645\u0646 HTTP \u0625\u0644\u0649 HTTPS\n}\n\napp.MapGet(\"/api/secure\", () =&gt; Results.Ok(new { ok = true, tls = true }));\n\napp.Run();\n</code></pre>"},{"location":"terms/https/#pinning","title":"\u0639\u0645\u064a\u0644 (\u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0634\u0647\u0627\u062f\u0629 + Pinning \u0627\u062e\u062a\u064a\u0627\u0631\u064a)","text":"C#<pre><code>using System.Net.Http;\nusing System.Security.Cryptography.X509Certificates;\n\nvar handler = new HttpClientHandler\n{\n    // \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 \u064a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0633\u0644\u0627\u0633\u0644 \u0627\u0644\u062b\u0642\u0629 \u0648\u0627\u0633\u0645 \u0627\u0644\u0645\u0636\u064a\u0641.\n    // \u0645\u062b\u0627\u0644 (\u0627\u062e\u062a\u064a\u0627\u0631\u064a): Pinning \u0639\u0628\u0631 \u0628\u0635\u0645\u0629 SHA-256 \u0644\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0639\u0627\u0645 (SPKI)\n    ServerCertificateCustomValidationCallback = (req, cert, chain, errors) =&gt;\n    {\n        if (errors == System.Net.Security.SslPolicyErrors.None) return true;\n\n        // \u0625\u0646 \u0623\u0631\u062f\u062a Pinning: \u0642\u0627\u0631\u0646 \u0628\u0635\u0645\u0629 \u0645\u0639\u0631\u0648\u0641\u0629 (\u0645\u062b\u0627\u0644 \u062a\u0648\u0636\u064a\u062d\u064a \u0641\u0642\u0637)\n        // var spkiSha256 = Convert.ToHexString(cert!.GetPublicKey());\n        // return spkiSha256.Equals(\"...\");\n\n        return false; // \u0627\u0631\u0641\u0636 \u0625\u0646 \u0644\u0645 \u062a\u0637\u0627\u0628\u0642 \u0627\u0644\u0633\u064a\u0627\u0633\u0629\n    }\n};\n\nusing var http = new HttpClient(handler) { BaseAddress = new Uri(\"https://api.example.com\") };\nvar res = await http.GetAsync(\"/api/secure\");\nConsole.WriteLine($\"{(int)res.StatusCode} {res.IsSuccessStatusCode}\");\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0627\u062a: - \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0627\u0633\u062a\u062e\u062f\u0645 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 (\u0645\u062b\u0627\u0644: Let\u2019s Encrypt)\u060c \u0648\u0644\u0627 \u062a\u0633\u0645\u062d \u0628\u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u062a\u062d\u0642\u0642. - \u0644\u0627 \u062a\u0639\u062a\u0645\u062f pinning \u0628\u0644\u0627 \u062e\u0637\u0629 \u062f\u0648\u0631\u0627\u0646 \u0645\u0641\u0627\u062a\u064a\u062d (Key Rotation) \u0644\u062a\u0641\u0627\u062f\u064a \u0627\u0646\u0642\u0637\u0627\u0639 \u0627\u0644\u062e\u062f\u0645\u0629.</p>"},{"location":"terms/https/#https-checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0623\u0645\u064a\u0646 HTTPS (Checklist)","text":"<ul> <li>\u0627\u062d\u0635\u0644 \u0639\u0644\u0649 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 (ACME/Let\u2019s Encrypt \u0623\u0648 \u0645\u0632\u0648\u0651\u062f\u0643)\u060c \u0648\u062c\u062f\u0651\u0650\u062f\u0647\u0627 \u0622\u0644\u064a\u064b\u0627.  </li> <li>\u0641\u0639\u0651\u0644 \u0641\u0642\u0637 TLS 1.2/1.3 \u0648\u0623\u0648\u0642\u0641 \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a/\u0627\u0644\u0623\u062c\u0646\u062d\u0629 \u0627\u0644\u0636\u0639\u064a\u0641\u0629.  </li> <li>\u0637\u0628\u0651\u0642 HSTS (\u0645\u0639 <code>includeSubDomains</code> \u0648/\u0623\u0648 preload \u0628\u0639\u062f \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631).  </li> <li>\u062d\u0648\u0651\u0644 HTTP \u21a6 HTTPS \u0628\u0640 301/308\u060c \u0648\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629.  </li> <li>\u0627\u0645\u0646\u0639 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0645\u062e\u062a\u0644\u0637 (Mixed Content)\u061b \u062d\u0645\u0651\u0644 \u0643\u0644 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0639\u0628\u0631 HTTPS.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 ALPN (HTTP/2/3) \u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0623\u062f\u0627\u0621 \u0639\u0646\u062f \u0627\u0644\u0625\u0645\u0643\u0627\u0646.  </li> <li>\u0631\u0627\u0642\u0628 \u0635\u0644\u0627\u062d\u064a\u0629 \u0627\u0644\u0634\u0647\u0627\u062f\u0629 \u0648\u0627\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0642\u0628\u0644 \u0627\u0646\u062a\u0647\u0627\u0626\u0647\u0627 \u0628\u0648\u0642\u062a \u0643\u0627\u0641\u064d.</li> </ul>"},{"location":"terms/https/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0634\u063a\u064a\u0644 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u0642\u0651\u0639\u0629 \u0630\u0627\u062a\u064a\u064b\u0627 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0623\u0648 \u062a\u0639\u0637\u064a\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0641\u064a \u0627\u0644\u0639\u0645\u064a\u0644.  </li> <li>\u062a\u0631\u0643 TLS 1.0/1.1 \u0623\u0648 \u0623\u062c\u0646\u062d\u0629 \u062a\u0634\u0641\u064a\u0631 \u0642\u062f\u064a\u0645\u0629 \u0645\u0641\u0639\u0651\u0644\u0629.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u062a\u0641\u0639\u064a\u0644 HSTS \u0623\u0648 \u0627\u0644\u0633\u0645\u0627\u062d \u0628\u0645\u062d\u062a\u0648\u0649 \u0645\u062e\u062a\u0644\u0637.  </li> <li>\u0639\u062f\u0645 \u062a\u062f\u0648\u064a\u0631 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0623\u0648 \u062e\u0637\u0637 \u0627\u0644\u062a\u062c\u062f\u064a\u062f \u0627\u0644\u0622\u0644\u064a \u0644\u0644\u0634\u0647\u0627\u062f\u0629.  </li> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 HTTPS \u0648\u062d\u062f\u0647 \u064a\u0643\u0641\u064a \u062f\u0648\u0646 AuthZ/Rate Limit/CSRF/CORS.</li> </ul>"},{"location":"terms/https/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 HTTP \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0637\u0644\u0628/\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0628\u062f\u0648\u0646 \u062a\u0634\u0641\u064a\u0631 \u0645\u0646\u0627\u0633\u0628 \u0641\u0642\u0637 \u062f\u0627\u062e\u0644 \u0642\u0646\u0648\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u0629/\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0645\u062d\u0644\u064a\u0629 HTTPS HTTP \u0639\u0628\u0631 \u0642\u0646\u0627\u0629 \u0645\u0634\u0641\u0651\u0631\u0629 (TLS) \u0633\u0631\u064a\u0629 + \u0633\u0644\u0627\u0645\u0629 + \u0647\u0648\u064a\u0629 \u0627\u0644\u062e\u0627\u062f\u0645\u061b \u064a\u0648\u0635\u0649 \u0628\u0647 \u062f\u0627\u0626\u0645\u064b\u0627 \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a mTLS \u062a\u0648\u062b\u064a\u0642 \u0645\u062a\u0628\u0627\u062f\u0644 (\u0639\u0645\u064a\u0644 \u0648\u062e\u0627\u062f\u0645) \u0641\u0648\u0642 TLS \u0642\u0648\u064a \u0644\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629/\u0627\u0644\u0645\u064a\u0643\u0631\u0648\u0633\u064a\u0631\u0641\u0650\u0633\u061b \u064a\u062d\u062a\u0627\u062c \u0625\u062f\u0627\u0631\u0629 \u0634\u0647\u0627\u062f\u0627\u062a \u0644\u0644\u0639\u0645\u0644\u0627\u0621"},{"location":"terms/https/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>HTTPS = HTTP + TLS: \u064a\u0648\u0641\u0651\u0631 \u0642\u0646\u0627\u0629 \u0622\u0645\u0646\u0629 \u0648\u0647\u0648\u064a\u0629 \u0645\u0624\u0643\u062f\u0629. \u0641\u0639\u0651\u0644 TLS \u0627\u0644\u062d\u062f\u064a\u062b\u060c HSTS\u060c \u0648\u0627\u0644\u062a\u062d\u0648\u064a\u0644 \u0625\u0644\u0649 HTTPS\u060c \u0648\u062a\u062d\u0642\u0642 \u0635\u0627\u0631\u0645 \u0645\u0646 \u0627\u0644\u0634\u0647\u0627\u062f\u0627\u062a \u0644\u062a\u0623\u0645\u064a\u0646 \u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0643.</p>"},{"location":"terms/hypervisor/","title":"Hypervisor","text":""},{"location":"terms/hypervisor/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Hypervisor / Virtual Machine Monitor (VMM) \u2014 \u0645\u0631\u0627\u0642\u0650\u0628/\u0645\u064f\u0634\u0631\u0641 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629.</p>"},{"location":"terms/hypervisor/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0637\u0628\u0642\u0629 \u062a\u0634\u063a\u0651\u0644 \u0623\u0646\u0638\u0645\u0629 \u062a\u0634\u063a\u064a\u0644 \u0645\u062a\u0639\u062f\u062f\u0629 \u0643\u0640 \u0645\u0627\u0643\u064a\u0646\u0627\u062a \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 (VMs) \u0641\u0648\u0642 \u0639\u062a\u0627\u062f \u0648\u0627\u062d\u062f. \u062a\u062f\u064a\u0631 \u0627\u0644\u0639\u0632\u0644\u060c \u062c\u062f\u0648\u0644\u0629 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0627\u062a\u060c \u0627\u0644\u0630\u0627\u0643\u0631\u0629\u060c \u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629\u060c \u0648\u0645\u064a\u0632\u0627\u062a \u0645\u062b\u0644 Snapshots \u0648Live Migration.</p>"},{"location":"terms/hypervisor/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0647\u062f\u0641\u0647: \u062a\u0642\u0633\u064a\u0645 \u062c\u0647\u0627\u0632 \u0648\u0627\u062d\u062f \u0625\u0644\u0649 \u0639\u062f\u0651\u0629 \u0623\u062c\u0647\u0632\u0629 \u0645\u0646\u0637\u0642\u064a\u0629 \u0645\u0639\u0632\u0648\u0644\u0629.  </li> <li>\u0646\u0648\u0639\u0627\u0646 \u0631\u0626\u064a\u0633\u064a\u0627\u0646:  </li> <li>Type-1 (Bare-Metal): \u064a\u0639\u0645\u0644 \u0645\u0628\u0627\u0634\u0631\u0629 \u0639\u0644\u0649 \u0627\u0644\u0639\u062a\u0627\u062f (Hyper-V/ESXi/KVM).  </li> <li>Type-2 (Hosted): \u064a\u0639\u0645\u0644 \u0643\u0628\u0631\u0646\u0627\u0645\u062c \u0641\u0648\u0642 \u0646\u0638\u0627\u0645 \u062a\u0634\u063a\u064a\u0644 (VirtualBox/VMware Workstation).  </li> <li>\u064a\u0633\u062a\u0641\u064a\u062f \u0645\u0646 \u0639\u062a\u0627\u062f \u0645\u062b\u0644 Intel VT-x/VT-d \u0648AMD-V/IOMMU.  </li> <li>\u064a\u062f\u0639\u0645 \u062a\u0639\u0631\u064a\u0641\u0627\u062a \u0634\u0628\u0647 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 (Paravirt/virtio) \u0644\u0623\u062f\u0627\u0621 \u0623\u0641\u0636\u0644\u060c \u0648SR-IOV \u0644\u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u0627\u0631\u062f \u0627\u0644\u0634\u0628\u0643\u0629.</li> </ul>"},{"location":"terms/hypervisor/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0643\u0641\u0646\u062f\u0642 \u0643\u0628\u064a\u0631. \u0627\u0644\u0647\u0627\u064a\u0628\u0631\u0641\u0627\u064a\u0632\u0631 \u0647\u0648 \u0627\u0644\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u062a\u064a \u062a\u0648\u0632\u0651\u0639 \u0627\u0644\u063a\u0631\u0641 (CPU/RAM/IO) \u0639\u0644\u0649 \u0627\u0644\u0646\u0632\u0644\u0627\u0621 (\u0627\u0644\u0640 VMs)\u060c \u0648\u062a\u0636\u0645\u0646 \u0627\u0644\u0639\u0632\u0644\u060c \u0648\u062a\u0633\u0645\u062d \u0628\u062a\u062c\u0645\u064a\u062f \u0627\u0644\u062d\u0627\u0644\u0629 (Snapshot) \u0623\u0648 \u0646\u0642\u0644 \u0627\u0644\u0646\u0632\u064a\u0644 \u0644\u063a\u0631\u0641\u0629 \u0623\u062e\u0631\u0649 \u062d\u064a\u0651\u064b\u0627 (Live Migration).</p>"},{"location":"terms/hypervisor/#c-vm","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (\u0642\u0635\u064a\u0631) \u2014 \u0643\u0634\u0641 \u0647\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u062f\u0627\u062e\u0644 VM \u0648\u0627\u0633\u0645 \u0627\u0644\u0628\u0627\u0626\u0639","text":"<p>\u0648\u064a\u0646\u062f\u0648\u0632: \u0639\u0628\u0631 WMI. \u0644\u064a\u0646\u0643\u0633/\u0645\u0627\u0643: \u0639\u0628\u0631 \u0645\u0644\u0641\u0627\u062a DMI \u0625\u0646 \u0648\u064f\u062c\u062f\u062a.</p> C#<pre><code>// dotnet add package System.Management   // \u0639\u0644\u0649 \u0648\u064a\u0646\u062f\u0648\u0632 \u0641\u0642\u0637\nusing System;\nusing System.IO;\nusing System.Runtime.InteropServices;\n#if WINDOWS\nusing System.Management;\n#endif\n\nclass VmDetect\n{\n    static void Main()\n    {\n        string vendor = \"Unknown\";\n        bool inVm = false;\n\n        if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))\n        {\n#if WINDOWS\n            using var cs = new ManagementObjectSearcher(\"SELECT Manufacturer, Model FROM Win32_ComputerSystem\");\n            foreach (ManagementObject mo in cs.Get())\n            {\n                var m = (mo[\"Manufacturer\"]?.ToString() ?? \"\").ToLower();\n                var model = (mo[\"Model\"]?.ToString() ?? \"\").ToLower();\n                vendor = $\"{m} {model}\";\n                inVm = m.Contains(\"microsoft\") &amp;&amp; model.Contains(\"virtual\")\n                       || m.Contains(\"vmware\") || m.Contains(\"xen\")\n                       || m.Contains(\"qemu\")   || model.Contains(\"kvm\");\n            }\n#endif\n        }\n        else\n        {\n            string Read(string p) =&gt; File.Exists(p) ? File.ReadAllText(p).Trim() : \"\";\n            var sys = Read(\"/sys/class/dmi/id/sys_vendor\").ToLower();\n            var prod = Read(\"/sys/class/dmi/id/product_name\").ToLower();\n            vendor = $\"{sys} {prod}\".Trim();\n            inVm = sys.Contains(\"microsoft\") || sys.Contains(\"vmware\") || sys.Contains(\"xen\")\n                   || sys.Contains(\"qemu\") || prod.Contains(\"kvm\") || prod.Contains(\"virtual\");\n        }\n\n        Console.WriteLine($\"In VM? {inVm} | Vendor: {vendor}\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u064a\u0637\u0628\u0639 \u0625\u0646 \u0643\u0627\u0646 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u062f\u0627\u062e\u0644 VM \u0648\u0627\u0633\u0645 \u0627\u0644\u0628\u0627\u0626\u0639 \u0627\u0644\u062a\u0642\u0631\u064a\u0628\u064a (VMware/Hyper-V/KVM\u2026).</p>"},{"location":"terms/hypervisor/#c-snapshot-vm-hyper-v-powershell","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (\u0627\u062e\u062a\u064a\u0627\u0631\u064a) \u2014 \u0623\u062e\u0630 Snapshot \u0644\u0640 VM \u0639\u0644\u0649 Hyper-V \u0639\u0628\u0631 PowerShell","text":"<p>\u064a\u062a\u0637\u0644\u0628 \u0648\u064a\u0646\u062f\u0648\u0632 \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u0633\u0624\u0648\u0644 \u0648\u062a\u0645\u0643\u064a\u0646 Hyper-V. \u064a\u0634\u063a\u0651\u0644 \u0623\u0645\u0631 PowerShell \u0645\u0646 C#.</p> C#<pre><code>// dotnet add package Microsoft.PowerShell.SDK\nusing System;\nusing System.Management.Automation;\n\nclass HvSnapshot\n{\n    static void Main()\n    {\n        var vmName = \"MyVM\";\n        using var ps = PowerShell.Create();\n        ps.AddScript($\"Checkpoint-VM -Name '{vmName}' -SnapshotName 'snap-{DateTime.UtcNow:yyyyMMdd-HHmmss}'\");\n        var results = ps.Invoke();\n        if (ps.HadErrors) throw new Exception(\"Snapshot failed\");\n        Console.WriteLine($\"Snapshot created for {vmName}\");\n    }\n}\n</code></pre>"},{"location":"terms/hypervisor/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0647\u0627\u064a\u0628\u0631\u0641\u0627\u064a\u0632\u0631 \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0641\u0639\u0651\u0644 VT-x/AMD-V \u0648IOMMU (VT-d/AMD-Vi) \u0645\u0646 \u0627\u0644\u0640 BIOS/UEFI.  </li> <li>\u062e\u0637\u0651\u0637 Sizing: CPU/RAM/Storage \u0648Overcommit \u0645\u062f\u0631\u0648\u0633 (\u062e\u0627\u0635\u0629 \u0627\u0644\u0630\u0627\u0643\u0631\u0629).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Paravirtual/virtio \u0648Synthetic Drivers \u0644\u062a\u062d\u0633\u064a\u0646 I/O \u0648Network.  </li> <li>\u0641\u0639\u0651\u0644 vTPM/Secure Boot \u0648\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0623\u0642\u0631\u0627\u0635 \u062f\u0627\u062e\u0644 \u0627\u0644\u0640 VM.  </li> <li>\u0627\u0639\u062a\u0645\u062f Templates/Cloud-Init \u0644\u0644\u062a\u0643\u0631\u0627\u0631 \u0627\u0644\u0633\u0631\u064a\u0639\u060c \u0648Snapshots \u0628\u062d\u0630\u0631 (\u0644\u064a\u0633\u062a \u0628\u062f\u064a\u0644\u064b\u0627 \u0639\u0646 \u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a).  </li> <li>\u0644\u0644\u0645\u0624\u0633\u0633\u0627\u062a: Live Migration\u060c \u0645\u062e\u0627\u0632\u0646 \u0645\u0634\u062a\u0631\u0643\u0629 (SAN/NFS), \u0648Anti-Affinity \u0628\u064a\u0646 \u0627\u0644\u0639\u064f\u0642\u062f.  </li> <li>\u0631\u0627\u0642\u0628: CPU Ready/Steal, \u0636\u063a\u0637 \u0627\u0644\u0630\u0627\u0643\u0631\u0629/ballooning\u060c IOPS/Latency\u060c \u0648\u062f\u0631\u062c\u0629 \u0627\u0644\u062d\u0631\u0627\u0631\u0629.</li> </ul>"},{"location":"terms/hypervisor/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Type-2 \u0644\u062d\u0645\u0648\u0644\u0627\u062a \u0625\u0646\u062a\u0627\u062c\u064a\u0629 \u062b\u0642\u064a\u0644\u0629 \u0628\u062f\u0644 Type-1.  </li> <li>Overcommit \u0645\u0641\u0631\u0637 \u0644\u0644\u0630\u0627\u0643\u0631\u0629 \u2192 \u0636\u063a\u0637/Swapping \u0634\u062f\u064a\u062f \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0636\u064a\u0641 \u0648\u0627\u0644\u0636\u064a\u0648\u0641.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u062a\u0639\u0631\u064a\u0641\u0627\u062a virtio \u2192 I/O \u0628\u0637\u064a\u0621 \u062c\u062f\u064b\u0627.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Snapshots \u0643\u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0637\u0648\u064a\u0644 \u0627\u0644\u0623\u0645\u062f.  </li> <li>\u062a\u062c\u0627\u0647\u0644 NUMA/CPU Topology \u0639\u0646\u062f \u0623\u062d\u0645\u0627\u0644 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0643\u062b\u064a\u0641\u0629.  </li> <li>\u062a\u0645\u0631\u064a\u0631 \u0623\u062c\u0647\u0632\u0629 \u0628\u0644\u0627 \u0639\u0632\u0644 (PCI Passthrough) \u062f\u0648\u0646 \u0641\u0647\u0645 \u062a\u0628\u0639\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646/\u0627\u0644\u062a\u0648\u0627\u0641\u0631.</li> </ul>"},{"location":"terms/hypervisor/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Hypervisor Type-1 \u062a\u0634\u063a\u064a\u0644 VMs \u0641\u0648\u0642 \u0627\u0644\u0639\u062a\u0627\u062f \u0645\u0628\u0627\u0634\u0631\u0629 \u0623\u062f\u0627\u0621/\u062b\u0628\u0627\u062a \u0623\u0639\u0644\u0649\u061b \u0623\u0645\u062b\u0644\u0629: Hyper-V, ESXi, KVM Hypervisor Type-2 \u062a\u0634\u063a\u064a\u0644 VMs \u0641\u0648\u0642 \u0646\u0638\u0627\u0645 \u0645\u0636\u064a\u0641 \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u062a\u0637\u0648\u064a\u0631/\u0627\u0644\u062a\u062c\u0627\u0631\u0628\u061b \u0623\u0645\u062b\u0644\u0629: VirtualBox, Workstation Virtual Machine \u0646\u0638\u0627\u0645 \u062a\u0634\u063a\u064a\u0644 \u0643\u0627\u0645\u0644 \u0645\u0639\u0632\u0648\u0644 \u0645\u0631\u0646 \u0648\u0642\u0648\u064a \u0627\u0644\u0639\u0632\u0644\u061b \u0623\u062b\u0642\u0644 \u0645\u0646 \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a Container \u0639\u0632\u0644 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0646\u0638\u0627\u0645 \u064a\u0634\u0627\u0631\u0643 \u0627\u0644\u0646\u0648\u0627\u0629\u061b \u0623\u062e\u0641 \u0648\u0623\u0633\u0631\u0639 \u0625\u0642\u0644\u0627\u0639\u064b\u0627 Bare Metal \u062a\u0634\u063a\u064a\u0644 \u0645\u0628\u0627\u0634\u0631 \u0639\u0644\u0649 \u0627\u0644\u0639\u062a\u0627\u062f \u0623\u0639\u0644\u0649 \u0623\u062f\u0627\u0621\u061b \u0644\u0627 \u062a\u0639\u062f\u062f\u064a\u0629 \u0636\u064a\u0648\u0641"},{"location":"terms/hypervisor/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Hypervisor \u064a\u062a\u064a\u062d \u0644\u0643 \u062a\u0634\u063a\u064a\u0644 \u0639\u062f\u0651\u0629 \u0623\u0646\u0638\u0645\u0629 \u062a\u0634\u063a\u064a\u0644 \u0645\u0639\u0632\u0648\u0644\u0629 \u0639\u0644\u0649 \u0646\u0641\u0633 \u0627\u0644\u0639\u062a\u0627\u062f\u060c \u0645\u0639 \u0625\u062f\u0627\u0631\u0629 \u0645\u0648\u0627\u0631\u062f \u0645\u062a\u0642\u062f\u0651\u0645\u0629 \u0648\u0645\u064a\u0632\u0627\u062a \u0643\u0640 Snapshots \u0648Live Migration. \u0627\u062e\u062a\u0631 Type-1 \u0644\u0644\u0625\u0646\u062a\u0627\u062c\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0639\u0631\u064a\u0641\u0627\u062a paravirt\u060c \u0648\u0627\u0636\u0628\u0637 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0628\u0639\u0646\u0627\u064a\u0629.</p>"},{"location":"terms/iaas/","title":"IaaS","text":""},{"location":"terms/iaas/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Infrastructure as a Service (IaaS) \u2014 \u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629 \u0643\u062e\u062f\u0645\u0629.</p>"},{"location":"terms/iaas/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0633\u062a\u0623\u062c\u0631 \u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 (\u062e\u0648\u0627\u062f\u0645\u060c \u0634\u0628\u0643\u0627\u062a\u060c \u062a\u062e\u0632\u064a\u0646\u060c \u0645\u0648\u0627\u0632\u0646\u0627\u062a \u062d\u0645\u0644) \u0645\u0646 \u0645\u0632\u0648\u0651\u062f \u0633\u062d\u0627\u0628\u064a. \u0623\u0646\u062a \u062a\u062f\u064a\u0631 \u0627\u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644\u064a \u0648\u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a\u061b \u0627\u0644\u0645\u0632\u0648\u0651\u062f \u064a\u062f\u064a\u0631 \u0627\u0644\u0639\u062a\u0627\u062f\u060c \u0627\u0644\u0637\u0627\u0642\u0629\u060c \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0641\u064a\u0632\u064a\u0627\u0626\u064a\u0629\u060c \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629.</p>"},{"location":"terms/iaas/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0628\u0646\u064a \u0622\u0644\u0627\u062a \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 (VMs)\u060c \u0634\u0628\u0643\u0627\u062a (VPC/VNet)\u060c \u0623\u0642\u0631\u0627\u0635\u064b\u0627\u060c IP \u0639\u0627\u0645/\u062e\u0627\u0635.  </li> <li>\u062a\u062f\u0641\u0639 \u0628\u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 (\u0633\u0627\u0639\u0629/\u062b\u0627\u0646\u064a\u0629\u060c \u062a\u062e\u0632\u064a\u0646/\u0646\u0642\u0644 \u0628\u064a\u0627\u0646\u0627\u062a).  </li> <li>\u062a\u062a\u062d\u0643\u0651\u0645 \u0641\u064a \u0627\u0644\u0646\u0638\u0627\u0645 (Windows/Linux)\u060c \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a\u060c \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0646\u0638\u0627\u0645\u060c \u0648\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0646\u0634\u0631.  </li> <li>\u0627\u0644\u0623\u062a\u0645\u062a\u0629 \u0639\u0628\u0631 SDKs \u0648IaC (\u0645\u062b\u0644 Terraform/ARM/CloudFormation).</li> </ul>"},{"location":"terms/iaas/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u062f\u0644 \u0634\u0631\u0627\u0621 \u0645\u0632\u0631\u0639\u0629 \u062e\u0648\u0627\u062f\u0645\u060c \u062a\u0633\u062a\u0623\u062c\u0631 \u0631\u0641\u064b\u0627 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 \u0641\u064a \u0645\u0631\u0643\u0632 \u0628\u064a\u0627\u0646\u0627\u062a: \u062a\u062e\u062a\u0627\u0631 \u0639\u062f\u062f \u0627\u0644\u062e\u0648\u0627\u062f\u0645\u060c \u0627\u0644\u0634\u0628\u0643\u0627\u062a\u060c \u0648\u0627\u0644\u0623\u0642\u0631\u0627\u0635 \u0643\u0645\u0627 \u062a\u0634\u0627\u0621\u060c \u0648\u062a\u062f\u064a\u0631 \u0646\u0638\u0627\u0645\u0647\u0627 \u0648\u0628\u0631\u0627\u0645\u062c\u0647\u0627.</p>"},{"location":"terms/iaas/#c-aws-ec2","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 \u2014 \u0625\u0646\u0634\u0627\u0621/\u0625\u064a\u0642\u0627\u0641 \u0622\u0644\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 (AWS EC2)","text":"<p>\u064a\u0628\u064a\u0651\u0646 \u0643\u064a\u0641 \u062a\u062a\u0639\u0627\u0645\u0644 \u0628\u0631\u0645\u062c\u064a\u064b\u0627 \u0645\u0639 IaaS. (\u062a\u062d\u062a\u0627\u062c \u062d\u0633\u0627\u0628 AWS \u0648\u0645\u0641\u0627\u062a\u064a\u062d \u0625\u0639\u062f\u0627\u062f \u0639\u0628\u0631 <code>~/.aws/credentials</code>\u061b \u0642\u062f \u062a\u064f\u062d\u062a\u0633\u0628 \u062a\u0643\u0644\u0641\u0629!)</p> <p>\u0627\u0644\u062a\u062b\u0628\u064a\u062a: Bash<pre><code>dotnet add package AWSSDK.EC2\n</code></pre></p> <p>\u0627\u0644\u0643\u0648\u062f: C#<pre><code>// Program.cs (.NET 8/9)\n// \u0645\u062b\u0627\u0644 \u0645\u062e\u062a\u0635\u0631 \u0644\u062a\u0634\u063a\u064a\u0644 \u062b\u0645 \u0625\u064a\u0642\u0627\u0641 EC2 Instance\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Amazon;\nusing Amazon.EC2;\nusing Amazon.EC2.Model;\n\nclass IaasDemo\n{\n    static async Task Main()\n    {\n        // \u0627\u062e\u062a\u0631 \u0627\u0644\u0625\u0642\u0644\u064a\u0645 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\n        var ec2 = new AmazonEC2Client(RegionEndpoint.EUWest1);\n\n        // 1) \u062a\u0634\u063a\u064a\u0644 \u0622\u0644\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0635\u063a\u064a\u0631\u0629 (Ubuntu \u0645\u062b\u0627\u0644) \u062f\u0627\u062e\u0644 \u0634\u0628\u0643\u0629 \u0641\u0631\u0639\u064a\u0629 \u0645\u062d\u062f\u062f\u0629\n        var run = new RunInstancesRequest\n        {\n            ImageId = \"ami-xxxxxxxx\",            // \u0636\u0639 AMI \u0635\u0627\u0644\u062d\u064b\u0627 \u0644\u0644\u0625\u0642\u0644\u064a\u0645\n            InstanceType = InstanceType.T3Micro, // \u0637\u0628\u0642\u0629 \u0645\u062c\u0627\u0646\u064a\u0629 \u063a\u0627\u0644\u0628\u064b\u0627\n            MinCount = 1,\n            MaxCount = 1,\n            KeyName = \"my-keypair\",              // \u0644\u0645\u0641\u0627\u062a\u064a\u062d SSH\n            SecurityGroupIds = new List&lt;string&gt; { \"sg-xxxxxxxx\" }, // \u064a\u0641\u062a\u062d \u0627\u0644\u0645\u0646\u0641\u0630 22/80\u2026 \u062d\u0633\u0628 \u062d\u0627\u062c\u062a\u0643\n            SubnetId = \"subnet-xxxxxxxx\",\n            TagSpecifications = new List&lt;TagSpecification&gt; {\n                new TagSpecification {\n                    ResourceType = \"instance\",\n                    Tags = new List&lt;Tag&gt; { new Tag(\"Name\",\"demo-iaas\") }\n                }\n            }\n        };\n\n        var resp = await ec2.RunInstancesAsync(run);\n        var id = resp.Reservation.Instances[0].InstanceId;\n        Console.WriteLine($\"Launched: {id}\");\n\n        // \u2026 \u0647\u0646\u0627 \u062a\u0646\u0641\u0651\u0630 \u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 (SSH/Cloud-Init)\u060c \u062b\u0645 \u0639\u0646\u062f \u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0621:\n        var stopReq = new StopInstancesRequest { InstanceIds = new() { id } };\n        await ec2.StopInstancesAsync(stopReq);\n        Console.WriteLine($\"Stopped: {id}\");\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0637\u0628\u0627\u0639\u0629 \u0645\u0639\u0631\u0651\u0641 \u0627\u0644\u0622\u0644\u0629 \u0639\u0646\u062f \u0627\u0644\u0625\u0637\u0644\u0627\u0642 \u062b\u0645 \u0631\u0633\u0627\u0644\u0629 \u0627\u0644\u0625\u064a\u0642\u0627\u0641.  </p> <p>\u0628\u062f\u0651\u0644 <code>ImageId/SubnetId/SecurityGroupIds/KeyName</code> \u0628\u0642\u064a\u0645\u0643. \u0627\u0641\u062a\u062d \u0627\u0644\u0645\u0646\u0627\u0641\u0630 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0641\u064a Security Group.</p>"},{"location":"terms/iaas/#iaas-checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f IaaS (Checklist)","text":"<ul> <li>\u0627\u062e\u062a\u064e\u0631 \u0627\u0644\u0625\u0642\u0644\u064a\u0645 \u0627\u0644\u0642\u0631\u064a\u0628 \u0645\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646.  </li> <li>\u0635\u0645\u0651\u0645 \u0627\u0644\u0634\u0628\u0643\u0629: VPC/VNet\u060c \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0641\u0631\u0639\u064a\u0629 (\u0639\u0627\u0645/\u062e\u0627\u0635)\u060c NAT/Internet Gateway.  </li> <li>\u062d\u062f\u0651\u062f \u0623\u062d\u062c\u0627\u0645 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 (CPU/RAM)\u060c \u0646\u0648\u0639 \u0627\u0644\u0623\u0642\u0631\u0627\u0635 (SSD/HDD)\u060c \u0648\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a/\u0627\u0644\u0644\u0642\u0637\u0627\u062a.  </li> <li>\u0623\u0639\u062f\u0651 \u0627\u0644\u0623\u0645\u0627\u0646: Security Groups/NSG\u060c \u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0638\u0627\u0645\u060c \u0645\u0641\u0627\u062a\u064a\u062d SSH\u060c \u0625\u062f\u0627\u0631\u0629 \u0647\u0648\u064a\u0651\u0629 \u0648\u0635\u0644\u0627\u062d\u064a\u0627\u062a (IAM).  </li> <li>\u0623\u062a\u0645\u062a \u0627\u0644\u0646\u0634\u0631 \u0628\u0640 IaC (Terraform/CloudFormation/ARM/Bicep) \u0648/CI/CD.  </li> <li>\u0641\u0639\u0651\u0644 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u062a\u0646\u0628\u064a\u0647\u0627\u062a (Logs/Metrics/Tracing).  </li> <li>\u062e\u0637\u0651\u0637 \u0644\u0644\u062a\u0648\u0633\u0651\u0639 (Scale Out/In) \u0648\u0627\u0644\u062a\u0648\u0627\u0641\u0631 (Multi-AZ/Availability Set).  </li> <li>\u0631\u0627\u062c\u0639 \u0627\u0644\u062a\u0643\u0644\u0641\u0629 \u062f\u0648\u0631\u064a\u064b\u0627 (Right-sizing\u060c \u0625\u0637\u0641\u0627\u0621 \u063a\u064a\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u060c \u062d\u062c\u0648\u0632\u0627\u062a).</li> </ul>"},{"location":"terms/iaas/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0634\u063a\u064a\u0644 \u062e\u0648\u0627\u062f\u0645 \u0628\u062f\u0648\u0646 Security Group/NSG \u0645\u0636\u0628\u0648\u0637 \u2192 \u0645\u0646\u0627\u0641\u0630 \u0645\u0641\u062a\u0648\u062d\u0629 \u0644\u0644\u0639\u0627\u0644\u0645.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a/\u0627\u0644\u0644\u0642\u0637\u0627\u062a \u0644\u0644\u0623\u0642\u0631\u0627\u0635.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 IP \u0639\u0627\u0645 \u062b\u0627\u0628\u062a \u062f\u0648\u0646 DNS/TTL \u0645\u0646\u0627\u0633\u0628\u061b \u0635\u0639\u0648\u0628\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u062a\u0628\u062f\u064a\u0644.  </li> <li>\u0625\u0639\u062f\u0627\u062f \u064a\u062f\u0648\u064a \u0645\u062a\u0641\u0631\u0651\u0642 \u0628\u062f\u0648\u0646 IaC \u2192 \u0628\u064a\u0626\u0627\u062a \u0645\u062a\u0628\u0627\u064a\u0646\u0629 \u0648\u0635\u0639\u0648\u0628\u0629 \u062a\u0643\u0631\u0627\u0631.  </li> <li>\u0625\u0647\u0645\u0627\u0644 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 \u0644\u0644\u0646\u0638\u0627\u0645\u061b \u0641\u064a IaaS \u0645\u0633\u0624\u0648\u0644\u064a\u062a\u0643 \u0623\u0646\u062a.  </li> <li>\u0633\u0648\u0621 \u062a\u0642\u062f\u064a\u0631 \u0627\u0644\u062d\u062c\u0645/\u0627\u0644\u062a\u0643\u0644\u0641\u0629 (Instances \u0643\u0628\u064a\u0631\u0629 \u0628\u0644\u0627 \u062d\u0627\u062c\u0629\u060c \u0623\u0642\u0631\u0627\u0635 \u0645\u0641\u0631\u0637\u0629).</li> </ul>"},{"location":"terms/iaas/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IaaS \u0628\u0646\u064a\u0629 \u062a\u062d\u062a\u064a\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u062a\u062f\u064a\u0631 \u0646\u0638\u0627\u0645\u0647\u0627 \u0628\u0646\u0641\u0633\u0643 VM/\u0634\u0628\u0643\u0627\u062a/\u0623\u0642\u0631\u0627\u0635/IP\u061b \u0645\u0631\u0648\u0646\u0629 \u0639\u0627\u0644\u064a\u0629 \u0645\u0642\u0627\u0628\u0644 \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0623\u0639\u0644\u0649 PaaS \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0643\u0648\u062f \u0639\u0644\u0649 \u0645\u0646\u0635\u0651\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0646\u0634\u0631 \u0633\u0631\u064a\u0639\u060c Autoscale\u060c \u062a\u062d\u0643\u0651\u0645 \u0623\u0642\u0644 \u0628\u0627\u0644\u0646\u0638\u0627\u0645 SaaS \u062a\u0637\u0628\u064a\u0642 \u062c\u0627\u0647\u0632 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0646\u0647\u0627\u0626\u064a \u0644\u0627 \u062a\u0646\u0634\u0631 \u0643\u0648\u062f\u064b\u0627\u061b \u0623\u0642\u0644 \u062a\u062e\u0635\u064a\u0635 \u0639\u0644\u0649 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062f\u0627\u062e\u0644\u064a"},{"location":"terms/iaas/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>IaaS \u064a\u0645\u0646\u062d\u0643 \u0642\u0637\u0639 LEGO \u0645\u0646\u062e\u0641\u0636\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 (VM/\u0634\u0628\u0643\u0627\u062a/\u062a\u062e\u0632\u064a\u0646) \u0644\u062a\u0628\u0646\u064a \u0645\u0627 \u062a\u0634\u0627\u0621 \u0628\u0645\u0631\u0648\u0646\u0629. \u0627\u0633\u062a\u062e\u062f\u0645 SDK/IaC \u0644\u0644\u0623\u062a\u0645\u062a\u0629\u060c \u0634\u062f\u0651\u062f \u0627\u0644\u0623\u0645\u0627\u0646 (IAM/SG/\u062a\u062d\u062f\u064a\u062b\u0627\u062a)\u060c \u0648\u0631\u0627\u0642\u0628 \u0627\u0644\u062a\u0643\u0644\u0641\u0629 \u0648\u0627\u0644\u0623\u062f\u0627\u0621 \u0628\u0627\u0633\u062a\u0645\u0631\u0627\u0631.</p>"},{"location":"terms/ide/","title":"IDE","text":""},{"location":"terms/ide/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Integrated Development Environment (IDE) \u2014 \u0628\u064a\u0626\u0629 \u062a\u0637\u0648\u064a\u0631 \u0645\u062a\u0643\u0627\u0645\u0644\u0629</p>"},{"location":"terms/ide/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0646\u0627\u0645\u062c \u064a\u062c\u0645\u0639 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0641\u064a \u0645\u0643\u0627\u0646 \u0648\u0627\u062d\u062f: \u0645\u062d\u0631\u0651\u0631 \u0643\u0648\u062f + \u0628\u0646\u0627\u0621/\u062a\u0634\u063a\u064a\u0644 + \u062a\u0635\u062d\u064a\u062d (Debug) + \u0625\u062f\u0627\u0631\u0629 \u0645\u0634\u0631\u0648\u0639. \u064a\u0648\u0641\u0651\u0631 \u0625\u0643\u0645\u0627\u0644\u064b\u0627 \u0630\u0643\u064a\u064b\u0627 (IntelliSense)\u060c \u0625\u0639\u0627\u062f\u0629 \u062a\u0633\u0645\u064a\u0629/\u0625\u0639\u0627\u062f\u0629 \u062a\u0634\u0643\u064a\u0644 (Refactor)\u060c \u062a\u0643\u0627\u0645\u0644 Git\u060c \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a.</p>"},{"location":"terms/ide/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0628\u062f\u0644 \u0641\u062a\u062d 10 \u0623\u062f\u0648\u0627\u062a\u060c \u062a\u0641\u062a\u062d \u0623\u062f\u0627\u0629 \u0648\u0627\u062d\u062f\u0629 \u0641\u064a\u0647\u0627 \u0643\u0644 \u0634\u064a\u0621.  </li> <li>\u062a\u0643\u062a\u0628 \u0627\u0644\u0643\u0648\u062f\u060c \u062a\u0628\u0646\u064a\u060c \u062a\u0634\u063a\u0651\u0644\u060c \u062a\u0636\u0628\u0637 \u0646\u0642\u0637\u0629 \u062a\u0648\u0642\u0641\u060c \u062a\u0631\u0649 \u0627\u0644\u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a\u060c \u0648\u062a\u0639\u062f\u0651\u0644\u2026 \u0645\u0646 \u0646\u0641\u0633 \u0627\u0644\u0648\u0627\u062c\u0647\u0629.  </li> <li>\u062a\u0642\u0644\u0651\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0628\u062a\u0644\u0645\u064a\u062d\u0627\u062a \u0641\u0648\u0631\u064a\u0629 \u0648\u062a\u062c\u0645\u064a\u0639 \u0633\u0631\u064a\u0639 \u0648\u0631\u0633\u0627\u0626\u0644 \u0648\u0627\u0636\u062d\u0629.</li> </ul>"},{"location":"terms/ide/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0648\u0631\u0634\u0629 \u062d\u062f\u0627\u062f\u0629 \u0645\u062a\u0643\u0627\u0645\u0644\u0629: \u0641\u064a \u0646\u0641\u0633 \u0627\u0644\u0645\u0643\u0627\u0646 \u062a\u0648\u062c\u062f \u0645\u062e\u0631\u0637\u0629\u060c \u0645\u062b\u0642\u0627\u0628\u060c \u0645\u064a\u0632\u0627\u0646\u060c \u0648\u062e\u0632\u0646\u0629 \u0623\u062f\u0648\u0627\u062a. \u062a\u0639\u0645\u0644 \u0623\u0633\u0631\u0639 \u0644\u0623\u0646 \u0643\u0644 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u062c\u0627\u0647\u0632\u0629 \u0648\u0645\u062a\u0631\u0627\u0628\u0637\u0629\u060c \u0628\u062f\u0644 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 \u0628\u064a\u0646 \u0648\u0631\u0634 \u0645\u062a\u0641\u0631\u0651\u0642\u0629.</p>"},{"location":"terms/ide/#ide_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u062e\u062a\u064a\u0627\u0631/\u0627\u0633\u062a\u062e\u062f\u0627\u0645 IDE","text":"<ul> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u0644\u0645\u0643\u062f\u0651\u0633\u0643:</li> <li>Visual Studio (Windows): \u0642\u0648\u064a \u0644\u0640 .NET/C#/C++\u060c \u0648\u0627\u062c\u0647\u0629 \u0645\u0634\u0627\u0631\u064a\u0639 \u063a\u0646\u064a\u0629.  </li> <li>Rider (\u0645\u062a\u0639\u062f\u0651\u062f \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a): IntelliJ + .NET\u060c \u0633\u0631\u064a\u0639 \u0648\u0630\u0643\u064a.  </li> <li>VS Code + Extensions: \u0645\u062d\u0631\u0651\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0639\u0629 \u0644\u064a\u0635\u0628\u062d \u0634\u0628\u0647-IDE \u0639\u0628\u0631 \u0627\u0644\u0625\u0636\u0627\u0641\u0627\u062a.</li> <li>\u0623\u0646\u0634\u0626 \u0645\u0634\u0631\u0648\u0639\u064b\u0627 \u062c\u062f\u064a\u062f\u064b\u0627 \u0645\u0646 \u0627\u0644\u0642\u0648\u0627\u0644\u0628\u060c \u0634\u063a\u0651\u0644 Debug (F5)\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 Breakpoints.  </li> <li>\u0641\u0639\u0651\u0644 Git: \u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639\u060c \u062a\u0646\u0641\u064a\u0630 Commit/Branch/PR \u0645\u0646 \u062f\u0627\u062e\u0644 IDE.  </li> <li>\u0627\u0633\u062a\u0639\u0645\u0644 Refactor: \u0625\u0639\u0627\u062f\u0629 \u062a\u0633\u0645\u064a\u0629 (Rename) \u0622\u0645\u0646\u0629 \u0644\u0644\u0645\u0634\u0631\u0648\u0639 \u0643\u0644\u0647.  </li> <li>\u0623\u0636\u0641 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u0634\u063a\u0651\u0644\u0647\u0627 \u0645\u0646 Test Explorer.  </li> <li>\u0627\u0636\u0628\u0637 Tasks/Build Configurations \u0648Formatters/Linters \u0644\u062a\u0648\u062d\u064a\u062f \u0627\u0644\u0646\u0645\u0637.</li> </ul>"},{"location":"terms/ide/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Code Editor \u062a\u062d\u0631\u064a\u0631 \u0646\u0635 \u0627\u0644\u0643\u0648\u062f \u0641\u0642\u0637 \u062e\u0641\u064a\u0641\u061b \u0645\u064a\u0632\u0627\u062a \u0639\u0628\u0631 \u0625\u0636\u0627\u0641\u0627\u062a\u061b \u0644\u0627 \u0628\u0646\u0627\u0621/\u062a\u0635\u062d\u064a\u062d \u0645\u062f\u0645\u062c \u062f\u0627\u0626\u0645\u064b\u0627 IDE \u062a\u062d\u0631\u064a\u0631 + \u0628\u0646\u0627\u0621 + \u062a\u0635\u062d\u064a\u062d + \u0625\u062f\u0627\u0631\u0629 \u0645\u0634\u0631\u0648\u0639 \u062a\u0643\u0627\u0645\u0644 \u0623\u062f\u0648\u0627\u062a \u0641\u064a \u0645\u0643\u0627\u0646 \u0648\u0627\u062d\u062f (IntelliSense/Refactor/VCS) SDK \u0623\u062f\u0648\u0627\u062a \u0648\u0645\u062a\u0631\u062c\u0645\u0627\u062a \u0648\u0645\u0643\u062a\u0628\u0627\u062a \u0644\u0644\u062a\u0637\u0648\u064a\u0631 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0645\u0646 IDE \u0623\u0648 CLI\u061b \u0644\u064a\u0633 \u0628\u064a\u0626\u0629 \u062a\u062d\u0631\u064a\u0631 Debugger \u062a\u0646\u0641\u064a\u0630 \u062e\u0637\u0648\u0629 \u0628\u062e\u0637\u0648\u0629 \u0648\u0641\u062d\u0635 \u0627\u0644\u062d\u0627\u0644\u0629 \u0642\u062f \u064a\u0643\u0648\u0646 \u062c\u0632\u0621\u064b\u0627 \u0645\u0646 IDE \u0623\u0648 \u0623\u062f\u0627\u0629 \u0645\u0633\u062a\u0642\u0644\u0629"},{"location":"terms/ide/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0640 IDE \u064a\u0633\u0631\u0651\u0639 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0628\u062a\u062c\u0645\u064a\u0639 \u0623\u062f\u0648\u0627\u062a\u0643 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0641\u064a \u0648\u0627\u062c\u0647\u0629 \u0648\u0627\u062d\u062f\u0629 \u0645\u062a\u0645\u0627\u0633\u0643\u0629. \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0644\u0632\u064a\u0627\u062f\u0629 \u0627\u0644\u0625\u0646\u062a\u0627\u062c\u064a\u0629 \u0648\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621\u060c \u0645\u0639 \u062a\u0643\u0627\u0645\u0644 \u0627\u0644\u0628\u0646\u0627\u0621 \u0648\u0627\u0644\u062a\u0635\u062d\u064a\u062d \u0648\u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0628\u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a.</p>"},{"location":"terms/iis/","title":"IIS \u2014 Internet Information Services","text":""},{"location":"terms/iis/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Internet Information Services (IIS) \u2014 \u062e\u062f\u0645\u0627\u062a \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0625\u0646\u062a\u0631\u0646\u062a (\u062e\u0627\u062f\u0645 \u0648\u064a\u0628 \u0645\u0646 \u0645\u0627\u064a\u0643\u0631\u0648\u0633\u0648\u0641\u062a \u0639\u0644\u0649 \u0648\u064a\u0646\u062f\u0648\u0632).</p>"},{"location":"terms/iis/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062e\u0627\u062f\u0645 \u0648\u064a\u0628/\u0639\u0643\u0633 \u0648\u0643\u064a\u0644 \u064a\u064f\u062f\u064a\u0631 \u0645\u0648\u0627\u0642\u0639 \u0648\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0639\u0644\u0649 \u0648\u064a\u0646\u062f\u0648\u0632: \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u0645\u0648\u0627\u0642\u0639/Bindings\u060c App Pools\u060c Modules (\u0645\u062b\u0644 URL Rewrite)\u060c \u0648\u064a\u062f\u0639\u0645 HTTP/2/3\u060c TLS/SSL\u060c \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 (Windows/Basic)\u060c \u0648\u0627\u0644\u0633\u062c\u0644\u0627\u062a/\u0627\u0644\u062a\u062a\u0628\u0651\u0639.</p>"},{"location":"terms/iis/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0648\u0627\u062c\u0647\u0629 \u0627\u0633\u062a\u0642\u0628\u0627\u0644: \u064a\u0633\u062a\u0642\u0628\u0644 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0627\u0641\u0630 \u0648\u0627\u0644\u0634\u0647\u0627\u062f\u0627\u062a\u060c \u0648\u064a\u064f\u0648\u062c\u0651\u0647\u0647\u0627 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a.  </li> <li>\u0645\u0639 ASP.NET Core \u064a\u0639\u0645\u0644 \u0643\u0640 Reverse Proxy \u0639\u0628\u0631 ASP.NET Core Module (ANCM)\u060c   \u0625\u0645\u0627 In-Process \u062f\u0627\u062e\u0644 \u0639\u0627\u0645\u0644 IIS (<code>w3wp</code>) \u0623\u0648 Out-of-Process \u062e\u0644\u0641 Kestrel.  </li> <li>\u0625\u062f\u0627\u0631\u0629 App Pools \u062a\u0645\u0646\u062d \u0639\u0632\u0644\u064b\u0627\u060c \u0625\u0639\u0627\u062f\u0629 \u062a\u062f\u0648\u064a\u0631\u060c \u0648\u062d\u062f\u0648\u062f \u0645\u0648\u0627\u0631\u062f.  </li> <li>Modules \u062a\u0636\u064a\u0641 \u0645\u064a\u0632\u0627\u062a: \u0625\u0639\u0627\u062f\u0629 \u0643\u062a\u0627\u0628\u0629 \u0639\u0646\u0627\u0648\u064a\u0646\u060c \u0636\u063a\u0637\u060c \u062a\u0635\u0641\u064a\u0629 \u0637\u0644\u0628\u0627\u062a\u060c \u062a\u062e\u0648\u064a\u0644.</li> </ul>"},{"location":"terms/iis/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0641\u0643\u0651\u0631\u0647 \u0643\u0640 \u0644\u0648\u0628\u064a \u0627\u0644\u0645\u0628\u0646\u0649: \u0627\u0644\u0628\u0648\u0651\u0627\u0628 (IIS) \u064a\u0633\u062a\u0642\u0628\u0644 \u0627\u0644\u0632\u0648\u0651\u0627\u0631\u060c \u064a\u0641\u062d\u0635 \u0627\u0644\u0628\u0637\u0627\u0642\u0627\u062a (TLS/Auth)\u060c \u062b\u0645 \u064a\u0648\u062c\u0651\u0647\u0647\u0645 \u0644\u0644\u0645\u0643\u062a\u0628 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 (\u062a\u0637\u0628\u064a\u0642\u0643) \u0648\u064a\u0637\u0628\u0651\u0642 \u0633\u064a\u0627\u0633\u0627\u062a \u0627\u0644\u0645\u0628\u0646\u0649 (Modules/Rules).</p>"},{"location":"terms/iis/#c-aspnet-core-iis-forwarded","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (ASP.NET Core \u062e\u0644\u0641 IIS + \u0631\u0624\u0648\u0633 Forwarded)","text":"C#<pre><code>// Program.cs (.NET 8/9)\nusing Microsoft.AspNetCore.HttpOverrides;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u0625\u0630\u0627 \u0643\u0646\u062a \u062e\u0644\u0641 IIS/Proxy\u060c \u0641\u0639\u0651\u0644 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0631\u0624\u0648\u0633 \u0644\u0627\u0633\u062a\u0639\u0627\u062f\u0629 Scheme/IP \u0627\u0644\u062d\u0642\u064a\u0642\u064a\u064a\u0646\nbuilder.Services.Configure&lt;ForwardedHeadersOptions&gt;(o =&gt;\n{\n    o.ForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto;\n});\n\nvar app = builder.Build();\n\napp.UseForwardedHeaders();\n\nif (!app.Environment.IsDevelopment())\n{\n    app.UseHsts();                 // \u0645\u0639 IIS: \u0641\u0639\u0644 HTTPS \u0648HSTS\n    app.UseHttpsRedirection();\n}\n\napp.MapGet(\"/\", (HttpContext ctx) =&gt; new\n{\n    scheme = ctx.Request.Scheme,   // \u0633\u064a\u0635\u0628\u062d \"https\" \u0639\u0646\u062f \u062a\u0645\u0631\u064a\u0631 X-Forwarded-Proto\n    ip = ctx.Connection.RemoteIpAddress?.ToString(),\n    server = \"IIS + ASP.NET Core\"\n});\n\napp.Run();\n</code></pre>"},{"location":"terms/iis/#webconfig","title":"\u0645\u0644\u0641 <code>web.config</code> \u0646\u0645\u0648\u0630\u062c\u064a (\u062c\u0630\u0631 \u0627\u0644\u0646\u0634\u0631)","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;configuration&gt;\n  &lt;system.webServer&gt;\n    &lt;!-- ASP.NET Core Module V2 --&gt;\n    &lt;handlers&gt;\n      &lt;add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModuleV2\" resourceType=\"Unspecified\"/&gt;\n    &lt;/handlers&gt;\n    &lt;aspNetCore processPath=\"dotnet\"\n                arguments=\"MyApp.dll\"\n                hostingModel=\"inprocess\"\n                stdoutLogEnabled=\"true\"\n                stdoutLogFile=\".\\logs\\stdout\"\n                disableStartUpErrorPage=\"true\"&gt;\n      &lt;environmentVariables&gt;\n        &lt;add name=\"ASPNETCORE_ENVIRONMENT\" value=\"Production\" /&gt;\n      &lt;/environmentVariables&gt;\n    &lt;/aspNetCore&gt;\n    &lt;!-- \u0645\u062b\u0627\u0644 \u0642\u0627\u0639\u062f\u0629 \u0644\u0625\u062c\u0628\u0627\u0631 HTTPS \u0625\u0646 \u0644\u0645 \u062a\u0643\u0646 \u062a\u0633\u062a\u062e\u062f\u0645 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0648\u062c\u064a\u0647 \u0639\u0644\u0649 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 --&gt;\n    &lt;rewrite&gt;\n      &lt;rules&gt;\n        &lt;rule name=\"HTTPS redirect\" enabled=\"true\" stopProcessing=\"true\"&gt;\n          &lt;match url=\"(.*)\" /&gt;\n          &lt;conditions&gt;\n            &lt;add input=\"{HTTPS}\" pattern=\"off\" ignoreCase=\"true\" /&gt;\n          &lt;/conditions&gt;\n          &lt;action type=\"Redirect\" url=\"https://{HTTP_HOST}/{R:1}\" redirectType=\"Permanent\" /&gt;\n        &lt;/rule&gt;\n      &lt;/rules&gt;\n    &lt;/rewrite&gt;\n  &lt;/system.webServer&gt;\n&lt;/configuration&gt;\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u0645\u0639 In-Process \u064a\u0643\u0641\u064a \u0639\u0627\u062f\u0629 <code>hostingModel=\"inprocess\"</code> \u0648<code>processPath=\"dotnet\"</code> + <code>arguments=\"MyApp.dll\"</code>. \u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0630\u0648\u0646\u0627\u062a \u0645\u062c\u0644\u062f \u0627\u0644\u0646\u0634\u0631 (<code>IIS_IUSRS</code>) \u0648\u0645\u062c\u0644\u062f <code>logs</code>.</p>"},{"location":"terms/iis/#aspnet-iis","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0646\u0634\u0631 ASP.NET/\u0648\u064a\u0628 \u0639\u0644\u0649 IIS","text":"<ol> <li>\u062a\u062b\u0628\u064a\u062a IIS: \u0645\u0646 Turn Windows features on/off \u2192 Web Server (IIS) (+ Management Tools).  </li> <li>(\u0644\u0640 ASP.NET Core) \u062b\u0628\u0651\u062a .NET Hosting Bundle \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645.  </li> <li>\u0625\u0646\u0634\u0627\u0621 \u0645\u0648\u0642\u0639:  </li> <li>\u062d\u062f\u0651\u062f Physical Path \u0644\u0645\u062c\u0644\u062f \u0627\u0644\u0646\u0634\u0631 (<code>dotnet publish -c Release</code>).  </li> <li>\u0623\u0646\u0634\u0626 App Pool \u0645\u062e\u0635\u0651\u0635\u064b\u0627 \u0648\u0627\u0633\u062a\u062e\u062f\u0645 No Managed Code \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a Core.  </li> <li>Bindings: \u0623\u0636\u0650\u0641 HTTPS \u0648\u0627\u062e\u062a\u0631 \u0634\u0647\u0627\u062f\u0629 \u0635\u062d\u064a\u062d\u0629 (SNI \u0639\u0646\u062f \u0648\u062c\u0648\u062f \u0623\u0633\u0645\u0627\u0621 \u0645\u062a\u0639\u062f\u062f\u0629).  </li> <li>Modules/Rewrite: \u062b\u0628\u0651\u062a URL Rewrite \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0633\u064a\u0627\u0633\u0627\u062a (www/HTTPS/SPA).  </li> <li>Logging/Tracing: \u0641\u0639\u0651\u0644 W3C Logs \u0648Failed Request Tracing (FREB) \u0644\u062a\u0634\u062e\u064a\u0635 4xx/5xx.  </li> <li>\u0623\u0645\u0627\u0646: \u0641\u0639\u0651\u0644 \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 (Windows/Basic/Anonymous)\u060c Request Filtering\u060c \u0648\u062d\u062f\u0648\u062f \u0627\u0644\u0623\u062d\u062c\u0627\u0645.  </li> <li>Reverse Proxy: \u0625\u0646 \u0643\u0646\u062a \u062e\u0644\u0641 \u062c\u0647\u0627\u0632 \u062a\u0648\u062c\u064a\u0647/Proxy\u060c \u0627\u0636\u0628\u0637 X-Forwarded-* \u0641\u064a \u0627\u0644\u0640 Proxy\u060c    \u0648\u0641\u0639\u0651\u0644 <code>UseForwardedHeaders</code> \u0641\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0643\u0645\u0627 \u0641\u064a \u0627\u0644\u0645\u062b\u0627\u0644.  </li> <li>\u0635\u064a\u0627\u0646\u0629: \u0627\u0633\u062a\u062e\u062f\u0645 \u0625\u0639\u0627\u062f\u0629 \u062a\u062f\u0648\u064a\u0631 App Pool \u0627\u0644\u0645\u062c\u062f\u0648\u0644\u0629\u060c \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0639\u0628\u0631 Event Viewer/PerfMon.</li> </ol>"},{"location":"terms/iis/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0646\u0633\u064a\u0627\u0646 \u062a\u062b\u0628\u064a\u062a .NET Hosting Bundle \u2192 \u062e\u0637\u0623 500.31/500.30 (ANCM).  </li> <li>\u0625\u0639\u062f\u0627\u062f App Pool \u0639\u0644\u0649 CLR v4 \u0628\u062f\u0644 No Managed Code \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a Core.  </li> <li>\u0623\u0630\u0648\u0646\u0627\u062a \u0645\u062c\u0644\u062f \u0627\u0644\u0646\u0634\u0631 \u063a\u064a\u0631 \u0643\u0627\u0641\u064a\u0629 \u0644\u0645\u0633\u062a\u062e\u062f\u0645 IIS AppPool\\YourPool.  </li> <li>\u062a\u0641\u0639\u064a\u0644 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0648\u062c\u064a\u0647 \u0645\u0631\u062a\u064a\u0646 (\u0641\u064a IIS \u0648\u0641\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642) \u2192 \u062d\u0644\u0642\u0627\u062a Redirect.  </li> <li>\u0639\u062f\u0645 \u062a\u0645\u0631\u064a\u0631 \u0631\u0624\u0648\u0633 <code>X-Forwarded-*</code> \u0623\u0648 \u0639\u062f\u0645 \u0627\u0644\u062b\u0642\u0629 \u0628\u0627\u0644\u0640 Proxy \u0627\u0644\u0645\u0648\u062b\u0648\u0642.  </li> <li>\u062a\u0631\u0643 HTTP \u0641\u0642\u0637 \u0628\u0644\u0627 TLS/HSTS \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c.</li> </ul>"},{"location":"terms/iis/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IIS \u062e\u0627\u062f\u0645 \u0648\u064a\u0628 \u0648\u064a\u0646\u062f\u0648\u0632 + \u0625\u062f\u0627\u0631\u0629 App Pools/Modules \u062a\u0643\u0627\u0645\u0644 \u0645\u0639 Windows/TLS/Auth/URL Rewrite\u061b \u064a\u062f\u0639\u0645 ASP.NET/Core IIS Express \u0646\u0633\u062e\u0629 \u062e\u0641\u064a\u0641\u0629 \u0644\u0644\u062a\u0637\u0648\u064a\u0631 \u0645\u0639 Visual Studio\u061b \u063a\u064a\u0631 \u0645\u0646\u0627\u0633\u0628\u0629 \u0644\u0644\u0625\u0646\u062a\u0627\u062c Kestrel \u062e\u0627\u062f\u0645 HTTP \u0627\u0644\u062e\u0627\u0635 \u0628\u0640 ASP.NET Core \u064a\u0633\u062a\u062e\u062f\u0645 \u062e\u0644\u0641 IIS/NGINX \u0639\u0627\u062f\u0629\u061b \u062e\u0641\u064a\u0641 \u0648\u0633\u0631\u064a\u0639 Nginx \u062e\u0627\u062f\u0645 \u0648\u064a\u0628/\u0648\u0643\u064a\u0644 \u0639\u0643\u0633\u064a \u0639\u0644\u0649 \u0644\u064a\u0646\u064f\u0643\u0633 \u0628\u062f\u064a\u0644 \u0634\u0627\u0626\u0639 \u062e\u0627\u0631\u062c \u0648\u064a\u0646\u062f\u0648\u0632\u061b \u0645\u0631\u0646 \u0641\u064a \u0627\u0644\u0640 Rewrite/Proxy"},{"location":"terms/iis/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>IIS \u0647\u0648 \u062e\u0627\u062f\u0645 \u0627\u0644\u0648\u064a\u0628 \u0627\u0644\u0631\u0633\u0645\u064a \u0639\u0644\u0649 \u0648\u064a\u0646\u062f\u0648\u0632: \u064a\u0633\u062a\u0642\u0628\u0644 \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a\u060c \u064a\u0637\u0628\u0642 \u0633\u064a\u0627\u0633\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646/\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0643\u062a\u0627\u0628\u0629\u060c \u0648\u064a\u0634\u063a\u0651\u0644 \u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0643 (\u062e\u0627\u0635\u0629 ASP.NET Core) \u0628\u0643\u0641\u0627\u0621\u0629 \u0639\u0628\u0631 ANCM\u2014\u0645\u0639 \u0633\u062c\u0644\u0627\u062a \u0648\u0623\u062f\u0648\u0627\u062a \u062a\u0634\u062e\u064a\u0635 \u0645\u062a\u0642\u062f\u0645\u0629.</p>"},{"location":"terms/image-index/","title":"Image Index (OCI Manifest List)","text":""},{"location":"terms/image-index/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>OCI Image Index / Docker Manifest List \u2014 \u0641\u0647\u0631\u0633 \u0635\u0648\u0631 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u062a\u062d\u062a \u0648\u0633\u0645 \u0648\u0627\u062d\u062f.</p>"},{"location":"terms/image-index/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0642\u0637\u0639\u0629 \u0648\u0635\u0641 (Artifact) \u062a\u064f\u0634\u064a\u0631 \u0625\u0644\u0649 \u0639\u062f\u0651\u0629 \u0645\u0627\u0646\u064a\u0641\u0633\u062a\u0627\u062a \u0635\u0648\u0631 \u0644\u0643\u0644 \u0646\u0638\u0627\u0645/\u0645\u0639\u0645\u0627\u0631\u064a\u0629. \u0639\u0646\u062f \u0627\u0644\u0633\u062d\u0628 <code>pull</code>\u060c \u064a\u062e\u062a\u0627\u0631 \u0627\u0644\u0639\u0645\u064a\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0627\u0644\u0645\u0627\u0646\u064a\u0641\u0633\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628 (\u0645\u062b\u0644\u0627\u064b <code>linux/amd64</code> \u0623\u0648 <code>linux/arm64</code>) \u0645\u0646 \u0646\u0641\u0633 \u0627\u0644\u0648\u0633\u0645.</p>"},{"location":"terms/image-index/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0648\u0633\u0645 (Tag) \u0644\u0627 \u064a\u0634\u064a\u0631 \u0644\u0635\u0648\u0631\u0629 \u0648\u0627\u062d\u062f\u0629\u060c \u0628\u0644 \u0625\u0644\u0649 Image Index \u064a\u062d\u0648\u064a \u0642\u0627\u0626\u0645\u0629 <code>manifests[]</code>.  </li> <li>\u0643\u0644 \u0639\u0646\u0635\u0631 \u064a\u062d\u062f\u062f: Digest \u0644\u0644\u0635\u0648\u0631\u0629\u060c mediaType\u060c \u0627\u0644\u062d\u062c\u0645\u060c \u0648<code>platform.os/architecture</code>.  </li> <li>\u064a\u062f\u0639\u0645 \u0645\u0646\u0635\u0651\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 (Multi-Arch) \u0648\u0623\u0646\u0638\u0645\u0629 \u0645\u062e\u062a\u0644\u0641\u0629 (Linux/Windows).  </li> <li>\u0627\u0644\u0635\u064a\u063a \u0627\u0644\u0642\u064a\u0627\u0633\u064a\u0629:  </li> <li><code>application/vnd.oci.image.index.v1+json</code> (OCI).  </li> <li><code>application/vnd.docker.distribution.manifest.list.v2+json</code> (Docker).</li> </ul>"},{"location":"terms/image-index/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0641\u0647\u0631\u0633 \u0641\u064a \u0645\u0642\u062f\u0645\u0629 \u0643\u062a\u0627\u0628 \u064a\u0648\u062c\u0651\u0647\u0643 \u0625\u0644\u0649 \u0627\u0644\u0641\u0635\u0644 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u062d\u0633\u0628 \u0644\u063a\u062a\u0643. \u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u0642\u0631\u0623 \u0627\u0644\u0641\u0647\u0631\u0633\u060c \u062b\u0645 \u064a\u0641\u062a\u062d \u0627\u0644\u0641\u0635\u0644 \u0627\u0644\u0645\u0644\u0627\u0626\u0645 \u0644\u0645\u0646\u0635\u062a\u0647.</p>"},{"location":"terms/image-index/#json-oci","title":"\u0645\u062b\u0627\u0644 JSON \u0645\u0628\u0633\u0651\u0637 (\u0641\u0647\u0631\u0633 OCI)","text":"JSON<pre><code>{\n  \"schemaVersion\": 2,\n  \"mediaType\": \"application/vnd.oci.image.index.v1+json\",\n  \"manifests\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"digest\": \"sha256:aaa...\",\n      \"size\": 901234,\n      \"platform\": { \"os\": \"linux\", \"architecture\": \"amd64\" }\n    },\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"digest\": \"sha256:bbb...\",\n      \"size\": 889123,\n      \"platform\": { \"os\": \"linux\", \"architecture\": \"arm64\" }\n    }\n  ]\n}\n</code></pre>"},{"location":"terms/image-index/#c-image-index-registry","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u0642\u0631\u0627\u0621\u0629 Image Index \u0645\u0646 Registry \u0648\u0639\u0631\u0636 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a","text":"<p>\u064a\u062a\u0637\u0644\u0628 \u062a\u0648\u0643\u0646 \u0639\u0646\u062f \u0628\u0639\u0636 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a (Docker Hub/\u062e\u0627\u0635). \u0636\u0639 <code>REGISTRY</code>, <code>REPO</code>, <code>TAG</code>, <code>TOKEN</code>.</p> <p>C#<pre><code>// dotnet add package System.Text.Json\nusing System;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Text.Json;\nusing System.Text.Json.Serialization;\nusing System.Threading.Tasks;\n\nrecord OciPlatform([property:JsonPropertyName(\"os\")] string Os,\n                   [property:JsonPropertyName(\"architecture\")] string Arch,\n                   [property:JsonPropertyName(\"variant\")] string? Variant);\n\nrecord OciManifestRef(\n    [property:JsonPropertyName(\"mediaType\")] string MediaType,\n    [property:JsonPropertyName(\"digest\")] string Digest,\n    [property:JsonPropertyName(\"size\")] long Size,\n    [property:JsonPropertyName(\"platform\")] OciPlatform Platform);\n\nrecord OciIndex(\n    [property:JsonPropertyName(\"schemaVersion\")] int SchemaVersion,\n    [property:JsonPropertyName(\"mediaType\")] string MediaType,\n    [property:JsonPropertyName(\"manifests\")] OciManifestRef[] Manifests);\n\nclass Program\n{\n    static async Task Main()\n    {\n        string registry = Environment.GetEnvironmentVariable(\"REGISTRY\") ?? \"ghcr.io\";\n        string repo     = Environment.GetEnvironmentVariable(\"REPO\")     ?? \"acme/demo-api\";\n        string tag      = Environment.GetEnvironmentVariable(\"TAG\")      ?? \"latest\";\n        string token    = Environment.GetEnvironmentVariable(\"TOKEN\")     ?? \"\"; // \u0627\u062e\u062a\u064a\u0627\u0631\u064a\n\n        using var http = new HttpClient { BaseAddress = new Uri($\"https://{registry}/\") };\n        http.DefaultRequestHeaders.Accept.ParseAdd(\"application/vnd.oci.image.index.v1+json\");\n        http.DefaultRequestHeaders.Accept.ParseAdd(\"application/vnd.docker.distribution.manifest.list.v2+json\");\n        if (!string.IsNullOrEmpty(token))\n            http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token);\n\n        var url = $\"v2/{repo}/manifests/{tag}\";\n        using var res = await http.GetAsync(url);\n        res.EnsureSuccessStatusCode();\n\n        var json = await res.Content.ReadAsStringAsync();\n        var idx = JsonSerializer.Deserialize&lt;OciIndex&gt;(json);\n\n        if (idx?.Manifests is null) { Console.WriteLine(\"Not an index/empty.\"); return; }\n\n        Console.WriteLine($\"MediaType: {idx.MediaType}  | Items: {idx.Manifests.Length}\");\n        foreach (var m in idx.Manifests)\n        {\n            string plat = $\"{m.Platform.Os}/{m.Platform.Arch}\" + (m.Platform.Variant is {Length:&gt;0} v ? $\"/{v}\" : \"\");\n            Console.WriteLine($\"- {plat}  -&gt; {m.Digest}  ({m.Size} bytes)\");\n        }\n    }\n}\n</code></pre> \u0627\u0644\u0641\u0643\u0631\u0629: \u0646\u0637\u0644\u0628 \u0627\u0644\u0640 Index \u0628\u0642\u0628\u0648\u0644 (Accept) \u0646\u0648\u0639\u064e\u064a OCI/Docker. \u0646\u0637\u0628\u0639 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0648\u0627\u0644\u062f\u062c\u0633\u062a \u0644\u0643\u0644 \u0635\u0648\u0631\u0629.</p>"},{"location":"terms/image-index/#image-index-multi-arch","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0625\u0646\u0634\u0627\u0621 \u0648\u062f\u0641\u0639 Image Index (Multi-Arch)","text":"<ul> <li> <p>\u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Docker Buildx: Bash<pre><code>docker buildx create --use\ndocker buildx build \\\n  --platform linux/amd64,linux/arm64 \\\n  -t ghcr.io/acme/demo-api:1.0 \\\n  --push .\n</code></pre>   \u0633\u064a\u0646\u062a\u062c Image Index \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0644\u0644\u0648\u0633\u0645 <code>1.0</code>.</p> </li> <li> <p>\u0627\u0644\u062a\u062d\u0642\u0642: Bash<pre><code>docker buildx imagetools inspect ghcr.io/acme/demo-api:1.0\n</code></pre>   \u0633\u062a\u0631\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u062a\u062d\u062a \u0627\u0644\u0648\u0633\u0645 \u0646\u0641\u0633\u0647.</p> </li> <li> <p>\u0646\u0635\u0627\u0626\u062d:</p> </li> <li>\u0648\u0641\u0651\u0631 Base Images \u0644\u0643\u0644\u0627 \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u062a\u064a\u0646.  </li> <li>\u0631\u0627\u0639\u0650 Windows \u0628\u0625\u0636\u0627\u0641\u0629 <code>os.version</code> \u0639\u0646\u062f \u0635\u0648\u0631 Windows.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Labels \u0648\u062a\u0648\u0642\u064a\u0639 (cosign) \u0644\u0644\u0641\u0647\u0631\u0633 \u0623\u064a\u0636\u064b\u0627.</li> </ul>"},{"location":"terms/image-index/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062f\u0641\u0639 \u0635\u0648\u0631 \u0645\u0646\u0641\u0635\u0644\u0629 \u0644\u0643\u0644 \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0628\u0646\u0641\u0633 \u0627\u0644\u0648\u0633\u0645 \u062f\u0648\u0646 \u0641\u0647\u0631\u0633 \u2192 \u0622\u062e\u0631 \u062f\u0641\u0639 \u064a\u0637\u063a\u0649.  </li> <li>\u0646\u0633\u064a\u0627\u0646 <code>--platform</code> \u2192 \u062a\u064f\u0628\u0646\u0649 \u0635\u0648\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u0641\u0642\u0637 (\u0644\u0627 \u064a\u0648\u062c\u062f Index).  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 <code>:latest</code> \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u062f\u0648\u0646 \u062a\u062c\u0645\u064a\u062f \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a.  </li> <li>\u0641\u0647\u0631\u0633 \u064a\u0634\u064a\u0631 \u0625\u0644\u0649 \u0645\u0627\u0646\u064a\u0641\u0633\u062a\u0627\u062a \u0628\u0640 mediaType \u063a\u064a\u0631 \u0645\u062a\u0648\u0627\u0641\u0642 \u0645\u0639 \u0627\u0644\u0631\u0646-\u062a\u0627\u064a\u0645 \u0627\u0644\u0645\u0633\u062a\u0647\u062f\u0641.  </li> <li>\u062a\u062c\u0627\u0647\u0644 <code>os.version/os.features</code> \u0644\u0635\u0648\u0631 Windows \u2192 \u0633\u062d\u0628 \u0641\u0627\u0634\u0644 \u0639\u0644\u0649 \u0628\u0639\u0636 \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a.</li> </ul>"},{"location":"terms/image-index/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Image (OCI) \u0635\u0648\u0631\u0629 \u0644\u0645\u0646\u0635\u0651\u0629 \u0648\u0627\u062d\u062f\u0629 (OS/Arch) \u0637\u0628\u0642\u0627\u062a + \u0645\u0627\u0646\u064a\u0641\u0633\u062a \u0648\u0627\u062d\u062f Image Index \u062a\u062c\u0645\u064a\u0639 \u0645\u0627\u0646\u064a\u0641\u0633\u062a\u0627\u062a \u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u062a\u062d\u062a \u0648\u0633\u0645 \u0648\u0627\u062d\u062f \u064a\u062e\u062a\u0627\u0631 \u0627\u0644\u0639\u0645\u064a\u0644 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 Multi-Arch Build \u0637\u0631\u064a\u0642\u0629 \u0628\u0646\u0627\u0621 \u0635\u0648\u0631 \u0639\u062f\u0629 \u0645\u0646\u0635\u0651\u0627\u062a \u064a\u0648\u0644\u0651\u062f \u0639\u0627\u062f\u0629\u064b Image Index \u0639\u0646\u062f <code>--push</code>"},{"location":"terms/image-index/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Image Index \u064a\u062c\u0639\u0644 \u0627\u0644\u0648\u0633\u0645 \u0627\u0644\u0648\u0627\u062d\u062f \u064a\u062e\u062f\u0645 \u0639\u062f\u0651\u0629 \u0645\u0646\u0635\u0651\u0627\u062a \u0628\u0634\u0643\u0644 \u0634\u0641\u0627\u0641. \u0627\u0628\u0646\u0650 \u0628\u0635\u064a\u063a\u0629 Multi-Arch\u060c \u0627\u062f\u0641\u0639 \u0627\u0644\u0641\u0647\u0631\u0633\u060c \u0648\u062a\u062d\u0642\u0642 \u0639\u0628\u0631 <code>imagetools inspect</code>\u2014\u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0633\u062d\u0628 \u062a\u0644\u0642\u0627\u0626\u064a \u0644\u0644\u0635\u0648\u0631\u0629 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0644\u0643\u0644 \u062c\u0647\u0627\u0632.</p>"},{"location":"terms/image-oci/","title":"Image (OCI)","text":""},{"location":"terms/image-oci/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Open Container Initiative Image (OCI Image) \u2014 \u0635\u0648\u0631\u0629 \u062d\u0627\u0648\u064a\u0629 \u0642\u064a\u0627\u0633\u064a\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0628\u0627\u062f\u0644 \u0628\u064a\u0646 \u0627\u0644\u0623\u062f\u0648\u0627\u062a.</p>"},{"location":"terms/image-oci/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062d\u0632\u0645\u0629 \u0645\u062d\u062a\u0648\u0649 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0639\u0646\u0648\u0646\u0629 \u0628\u0627\u0644\u0640 Digest \u062a\u062a\u0643\u0648\u0651\u0646 \u0645\u0646: Manifest (\u064a\u0635\u0641 \u0627\u0644\u0637\u0628\u0642\u0627\u062a)\u060c Config (\u0628\u064a\u0626\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644/\u0627\u0644\u062a\u0627\u0631\u064a\u062e)\u060c \u0648Layers (\u0641\u0631\u0648\u0642 \u0646\u0638\u0627\u0645 \u0627\u0644\u0645\u0644\u0641\u0627\u062a). \u062a\u064f\u062e\u0632\u0651\u064e\u0646/\u062a\u064f\u0646\u0642\u0644 \u0639\u0628\u0631 Registry (\u0645\u062b\u0644 Docker Hub/ACR/ECR/GCR) \u0648\u062a\u0639\u0645\u0644 \u0628\u0623\u064a Runtime \u0645\u062a\u0648\u0627\u0641\u0642 \u0645\u0639 OCI.</p>"},{"location":"terms/image-oci/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Layers: \u0623\u0631\u0634\u064a\u0641\u0627\u062a (tar.gz/zstd) \u062a\u064f\u0637\u0628\u0651\u064e\u0642 \u0628\u0627\u0644\u062a\u0633\u0644\u0633\u0644 \u0644\u062a\u064f\u0646\u0634\u0626 \u0627\u0644\u062c\u0630\u0631 (<code>/</code>) \u062f\u0627\u062e\u0644 \u0627\u0644\u062d\u0627\u0648\u064a\u0629.  </li> <li>Config: \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 (Entrypoint/Cmd/Env/WorkingDir/OS/Arch \u0648DiffIDs).  </li> <li>Manifest: \u064a\u0631\u0628\u0637 \u0627\u0644\u0640 Config \u0648\u0627\u0644\u0640 Layers \u0645\u0639 Media Types \u0648\u0623\u062d\u062c\u0627\u0645 \u0648Digests (<code>sha256:...</code>).  </li> <li>Image Index (Manifest List): \u062d\u0627\u0648\u064a\u0629 \u0645\u064a\u062a\u0627 \u062a\u064f\u0634\u064a\u0631 \u0625\u0644\u0649 \u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0645\u0646\u0635\u0651\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 (amd64/arm64).  </li> <li>Content-addressable: \u0643\u0644 Blob \u064a\u064f\u0639\u0631\u0651\u064e\u0641 \u0628\u0640\u0640 Digest\u061b \u0627\u0644\u0646\u0632\u0648\u0644/\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u0645\u0636\u0645\u0648\u0646 \u0644\u0627 \u0627\u0644\u0627\u0633\u0645.  </li> <li>\u0645\u062a\u0648\u0627\u0641\u0642: Docker/Containerd/Podman \u062a\u0628\u0627\u062f\u0644\u0647\u0627 \u0644\u0623\u0646 OCI \u062d\u062f\u0651\u062f \u0627\u0644\u0635\u064a\u063a.</li> </ul>"},{"location":"terms/image-oci/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0643\u0639\u0643\u0629 \u0637\u0628\u0642\u0627\u062a: \u0643\u0644 \u0637\u0628\u0642\u0629 \u062a\u0636\u064a\u0641 \u0645\u0644\u0641\u0627\u062a. \u0648\u0631\u0642\u0629 \u062a\u0639\u0644\u064a\u0645\u0627\u062a (Manifest) \u062a\u0642\u0648\u0644: \u201c\u0627\u0633\u062a\u0639\u0645\u0644 \u0647\u0630\u0647 \u0627\u0644\u0637\u0628\u0642\u0627\u062a\u060c \u0648\u0647\u0630\u0627 \u0645\u0644\u0641 \u0627\u0644\u0625\u0639\u062f\u0627\u062f (Config)\u201d.</p>"},{"location":"terms/image-oci/#dockerfile-oci","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0633\u0631\u064a\u0639 \u2014 Dockerfile (\u0628\u0646\u0627\u0621 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0645\u0631\u0627\u062d\u0644 + \u0645\u0644\u0635\u0642\u0627\u062a OCI)","text":"Docker<pre><code># \u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0628\u0646\u0627\u0621\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY *.csproj ./\nRUN dotnet restore\nCOPY . .\nRUN dotnet publish -c Release -o /app /p:PublishTrimmed=true /p:PublishSingleFile=true\n\n# \u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 (\u0635\u0648\u0631\u0629 \u0623\u0635\u063a\u0631)\nFROM mcr.microsoft.com/dotnet/aspnet:8.0\nWORKDIR /app\nCOPY --from=build /app ./\nEXPOSE 8080\nENV ASPNETCORE_URLS=http://+:8080\n# \u0645\u0644\u0635\u0642\u0627\u062a OCI \u0642\u064a\u0627\u0633\u064a\u0629 (\u062a\u064f\u0633\u0627\u0639\u062f \u0641\u064a \u0627\u0644\u062a\u0639\u0642\u0651\u0628/\u0627\u0644\u062a\u0648\u062b\u064a\u0642)\nLABEL org.opencontainers.image.title=\"demo-api\" \\\n      org.opencontainers.image.description=\"Minimal API\" \\\n      org.opencontainers.image.source=\"https://example.com/repo\" \\\n      org.opencontainers.image.licenses=\"MIT\"\nENTRYPOINT [\"./Program\"]\n</code></pre> <p>\u0623\u0648\u0627\u0645\u0631 \u0634\u0627\u0626\u0639\u0629 Bash<pre><code># \u0628\u0646\u0627\u0621 \u0648\u062f\u0641\u0639\ndocker build -t ghcr.io/acme/demo-api:1.0 .\ndocker push ghcr.io/acme/demo-api:1.0\n\n# \u0641\u062d\u0635 \u0627\u0644\u0645\u0627\u0646\u064a\u0641\u0633\u062a \u0648\u0627\u0644\u0637\u0628\u0642\u0627\u062a\ndocker buildx imagetools inspect ghcr.io/acme/demo-api:1.0\ndocker image inspect ghcr.io/acme/demo-api:1.0 | jq '.[0].RootFS.Layers'\n\n# \u0625\u0646\u0634\u0627\u0621 \u0635\u0648\u0631\u0629 \u0645\u062a\u0639\u062f\u062f\u0629 \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0627\u062a\ndocker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/acme/demo-api:1.1 --push .\n</code></pre></p>"},{"location":"terms/image-oci/#c-digest","title":"\u0645\u062b\u0627\u0644 C# \u0642\u0635\u064a\u0631 \u2014 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 Digest (\u0641\u0643\u0631\u0629 \u0627\u0644\u0639\u0646\u0648\u0627\u0646\u0629 \u0628\u0627\u0644\u0645\u062d\u062a\u0648\u0649)","text":"<p>C#<pre><code>// dotnet add package System.Text.Json\nusing System;\nusing System.IO;\nusing System.Security.Cryptography;\n\nclass OciDigest\n{\n    // \u064a\u062d\u0633\u0628 sha256:... \u0644\u0645\u0644\u0641 (\u0645\u062b\u0644\u0627\u064b layer.tar) \u0644\u0645\u0642\u0627\u0631\u0646\u062a\u0647 \u0628\u0645\u0627 \u0641\u064a \u0627\u0644\u0640 Manifest\n    public static string Sha256Digest(string path)\n    {\n        using var s = File.OpenRead(path);\n        using var sha = SHA256.Create();\n        var hash = sha.ComputeHash(s);\n        return \"sha256:\" + Convert.ToHexString(hash).ToLowerInvariant();\n    }\n\n    static void Main(string[] args)\n    {\n        var file = args.Length &gt; 0 ? args[0] : \"layer.tar\";\n        Console.WriteLine(Sha256Digest(file)); // \u0645\u062b\u0627\u0644: sha256:3b1e...\n    }\n}\n</code></pre> \u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0640 Registry \u0648Runtime \u064a\u0639\u062a\u0645\u062f\u0648\u0646 \u0627\u0644\u0640 Digest \u0644\u0644\u062a\u0623\u0643\u0651\u062f \u0623\u0646 \u0627\u0644\u0640 Blob (\u0637\u0628\u0642\u0629/Config) \u0647\u0648 \u0646\u0641\u0633\u0647 \u0627\u0644\u0645\u062a\u0648\u0642\u0651\u064e\u0639 \u0641\u064a \u0627\u0644\u0640 Manifest.</p>"},{"location":"terms/image-oci/#oci","title":"\u0643\u064a\u0641 \u062a\u064f\u063a\u5305 \u0627\u0644\u0635\u0648\u0631\u0629 \u062d\u0633\u0628 \u0645\u0639\u064a\u0627\u0631 OCI (\u0645\u062e\u062a\u0635\u0631)","text":"<ul> <li>Manifest (<code>application/vnd.oci.image.manifest.v1+json</code>):   \u064a\u0634\u064a\u0631 \u0625\u0644\u0649 Config \u0648Layers (MediaType/Size/Digest).  </li> <li>Config (<code>application/vnd.oci.image.config.v1+json</code>):   \u062d\u0642\u0644 <code>config</code> (Entrypoint/Cmd/Env/Volumes/ExposedPorts) + <code>rootfs.diff_ids</code> (\u0647\u0627\u0634\u0627\u062a \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0628\u0639\u062f \u0641\u0643 \u0627\u0644\u0636\u063a\u0637).  </li> <li>Layers: \u0623\u0631\u0634\u064a\u0641\u0627\u062a \u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u062a\u064f\u0637\u0628\u0651\u0642 \u0628\u0627\u0644\u062a\u0631\u062a\u064a\u0628.</li> </ul> <p>\u0627\u0644\u0639\u0645\u0644\u064a: \u0644\u0627 \u062a\u062d\u062a\u0627\u062c \u0644\u0635\u0646\u0639 \u0647\u0630\u0647 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u064a\u062f\u0648\u064a\u064b\u0627\u2014\u0627\u0644\u0623\u062f\u0648\u0627\u062a (Docker/BuildKit/Buildx/Podman) \u062a\u0648\u0644\u0651\u062f\u0647\u0627 \u0648\u0641\u0642 OCI.</p>"},{"location":"terms/image-oci/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629/\u0646\u0635\u0627\u0626\u062d","text":"<ul> <li>\u0635\u063a\u0651\u0631 \u0627\u0644\u0635\u0648\u0631\u0629: Multi-stage\u060c \u062d\u0630\u0641 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0628\u0646\u0627\u0621\u060c \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0635\u0648\u0631 \u0623\u0633\u0627\u0633 \u0646\u062d\u064a\u0641\u0629 (alpine/distroless/aspnet).  </li> <li>\u062b\u0628\u0651\u062a \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a (Pin) \u0648\u062a\u062c\u0646\u0651\u0628 <code>:latest</code> \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c.  </li> <li>\u0623\u0636\u0650\u0641 Labels OCI (\u0627\u0644\u0639\u0646\u0648\u0627\u0646/\u0627\u0644\u0645\u0635\u062f\u0631/\u0627\u0644\u0646\u0633\u062e\u0629/\u0627\u0644\u0631\u062e\u0651\u0635).  </li> <li>\u0644\u0627 \u062a\u0636\u0639 \u0623\u0633\u0631\u0627\u0631\u064b\u0627 \u0641\u064a \u0627\u0644\u0637\u0628\u0642\u0627\u062a (\u062a\u0638\u0644\u0651 \u0641\u064a \u0627\u0644\u062a\u0627\u0631\u064a\u062e). \u0627\u0633\u062a\u062e\u062f\u0645 Build Secrets/Runtime Env.  </li> <li>\u0641\u0639\u0651\u0644 SBOM \u0648\u0627\u0644\u062a\u0648\u0642\u064a\u0639:  </li> <li>SBOM (spdx/cyclonedx) + cosign attest.  </li> <li>\u062a\u0648\u0642\u064a\u0639 cosign sign \u0644\u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u0645\u0635\u062f\u0631 (Sigstore/SLSA).  </li> <li>\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0625\u0646\u062a\u0627\u062c: \u062b\u0628\u0651\u062a \u0627\u0644\u0648\u0642\u062a/\u0627\u0644\u0645\u0646\u0627\u0637\u0642/\u0623\u0648\u0627\u0645\u0631 <code>COPY</code> \u0627\u0644\u0645\u062a\u0651\u0633\u0642\u0629 \u0644\u062a\u0642\u0644\u064a\u0644 \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0637\u0628\u0642\u0627\u062a.  </li> <li>\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629: \u0627\u0633\u062a\u062e\u062f\u0645 <code>buildx --platform</code> \u0648\u0627\u062f\u0641\u0639 Manifest List.  </li> <li>\u0627\u0641\u062d\u0635 \u0627\u0644\u062b\u063a\u0631\u0627\u062a: trivy/grype \u0642\u0628\u0644 \u0627\u0644\u0646\u0634\u0631.</li> </ul>"},{"location":"terms/image-oci/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 <code>:latest</code> \u2192 \u062a\u0643\u0631\u0627\u0631\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u062d\u0643\u0651\u064e\u0645 \u0628\u0647\u0627 \u0648\u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u0631\u062c\u0648\u0639.  </li> <li>\u0635\u0648\u0631 \u0636\u062e\u0645\u0629 \u0628\u0633\u0628\u0628 \u062a\u0631\u062a\u064a\u0628 \u062e\u0637\u0648\u0627\u062a \u062e\u0627\u0637\u0626 (\u0648\u0636\u0639 <code>COPY . .</code> \u0642\u0628\u0644 <code>restore</code> \u064a\u064f\u0628\u0637\u0644 \u0627\u0644\u0643\u0627\u0634).  </li> <li>\u062a\u0636\u0645\u064a\u0646 Secrets (\u0645\u0641\u0627\u062a\u064a\u062d/\u062a\u0648\u0643\u0646\u0627\u062a) \u062f\u0627\u062e\u0644 \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0623\u0648 \u0627\u0644\u0633\u062c\u0644\u0651.  </li> <li>\u0625\u0647\u0645\u0627\u0644 Labels/SBOM/Signatures \u2192 \u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u062a\u0639\u0642\u0651\u0628 \u0648\u0627\u0644\u062b\u0642\u0629.  </li> <li>\u0628\u0646\u0627\u0621 \u0635\u0648\u0631\u0629 \u0644\u0645\u0646\u0635\u0651\u0629 \u0648\u0627\u062d\u062f\u0629 \u0641\u0642\u0637 \u062b\u0645 \u062a\u0634\u063a\u064a\u0644\u0647\u0627 \u0639\u0644\u0649 \u0645\u0639\u0645\u0627\u0631\u064a\u0629 \u0645\u062e\u062a\u0644\u0641\u0629.  </li> <li>\u0639\u062f\u0645 \u0627\u062d\u062a\u0631\u0627\u0645 OCI Media Types \u0639\u0646\u062f \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0628\u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0645\u0646\u062e\u0641\u0636\u0629 (oras/skopeo).</li> </ul>"},{"location":"terms/image-oci/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Image (OCI) \u062d\u0632\u0645\u0629 \u0637\u0628\u0642\u0627\u062a + Manifest/Config \u0628\u0639\u0646\u0648\u0646\u0629 Digest \u0642\u064a\u0627\u0633\u064a\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0646\u0642\u0644 \u0628\u064a\u0646 Docker/Containerd/Podman/Registries Container \u062a\u0646\u0641\u064a\u0630 \u062d\u064a\u0651 \u0644\u0635\u0648\u0631\u0629 \u0645\u0639 \u0637\u0628\u0642\u0629 \u0643\u062a\u0627\u0628\u0629 \u0639\u0645\u0631 \u0642\u0635\u064a\u0631\u060c \u064a\u0634\u0627\u0631\u0643 \u0646\u0648\u0627\u0629 \u0627\u0644\u0645\u0636\u064a\u0641 Image Index \u0642\u0627\u0626\u0645\u0629 \u0645\u0627\u0646\u064a\u0641\u0633\u062a\u0627\u062a \u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0644\u0640\u0640 amd64/arm64\u2026\u061b \u064a\u062f\u0639\u0645\u0647 buildx/registries VM Image \u0635\u0648\u0631\u0629 \u0646\u0638\u0627\u0645 \u062a\u0634\u063a\u064a\u0644 \u0643\u0627\u0645\u0644 (AMI/VHD) \u0623\u062b\u0642\u0644\u061b \u0644\u064a\u0633\u062a \u0648\u0641\u0642 OCI\u061b \u0644\u0627 \u062a\u064f\u062f\u0627\u0631 \u0628\u0627\u0644\u0640 Registry \u0646\u0641\u0633\u0647"},{"location":"terms/image-oci/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>OCI Image = \u0637\u0628\u0642\u0627\u062a \u0645\u062d\u062a\u0648\u0649 + \u0648\u0635\u0641 \u0642\u064a\u0627\u0633\u064a \u064a\u064f\u0646\u0642\u0644 \u0648\u064a\u064f\u0634\u063a\u0651\u064e\u0644 \u0641\u064a \u0623\u064a \u0628\u064a\u0626\u0629 \u0645\u062a\u0648\u0627\u0641\u0642\u0629. \u0627\u0628\u0646\u0650 \u0635\u0648\u0631\u064b\u0627 \u0635\u063a\u064a\u0631\u0629 \u0648\u0645\u0648\u0642\u0651\u064e\u0639\u0629 \u0648\u0628\u0644\u0627 \u0623\u0633\u0631\u0627\u0631\u060c \u0623\u0636\u0650\u0641 Labels/SBOM\u060c \u0648\u0627\u062f\u0641\u0639 Manifest List \u0644\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0634\u0631 \u0623\u0633\u0631\u0639\u060c \u0645\u0648\u062b\u0648\u0642\u060c \u0648\u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u062a\u0628\u0639.</p>"},{"location":"terms/implementation/","title":"Implementation","text":""},{"location":"terms/implementation/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Implementation \u2014 \u062a\u0646\u0641\u064a\u0630/\u062a\u062d\u0642\u064a\u0642 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0625\u0644\u0649 \u0628\u0631\u0645\u062c\u064a\u0629 \u0639\u0627\u0645\u0644\u0629 (\u0643\u0648\u062f + \u0625\u0639\u062f\u0627\u062f + \u0633\u0643\u0631\u0628\u062a\u0627\u062a + IaC).</p>"},{"location":"terms/implementation/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0645\u062a\u0637\u0644\u0651\u0628\u0627\u062a \u0648\u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0625\u0644\u0649 \u062d\u0644\u0648\u0644 \u062a\u0639\u0645\u0644: \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0643\u0648\u062f\u060c \u0636\u0628\u0637 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a\u060c \u0627\u0644\u0647\u062c\u0631\u0629 (Migrations)\u060c \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u0648\u0627\u0644\u062a\u0639\u0628\u0626\u0629/\u0627\u0644\u0646\u0634\u0631 \u0627\u0644\u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0643\u0631\u0627\u0631.</p>"},{"location":"terms/implementation/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0623\u062e\u0630 \u0645\u0627 \u064a\u062c\u0628 \u0623\u0646 \u064a\u062d\u062f\u062b (Requirements/Design) \u0648\u0646\u0628\u0646\u064a\u0647 \u0641\u0639\u0644\u064a\u064b\u0627.  </li> <li>\u064a\u0634\u0645\u0644: \u0647\u064a\u0627\u0643\u0644 \u0643\u0648\u062f\u060c \u062d\u0631\u0633 \u0623\u062e\u0637\u0627\u0621\u060c \u0623\u062f\u0627\u0621\u060c \u0623\u0645\u0646\u060c Observability (Logs/Metrics/Tracing).  </li> <li>\u064a\u0639\u0643\u0633 NFRs: \u0645\u0647\u0644\u0627\u062a\u060c \u0630\u0627\u0643\u0631\u0629\u060c \u062a\u0648\u0641\u0651\u0631\u060c \u062a\u0634\u0641\u064a\u0631\u2026  </li> <li>\u064a\u0646\u062a\u0647\u064a \u0628\u0640 Artifact \u062c\u0627\u0647\u0632: \u062d\u0632\u0645\u0629/\u0635\u0648\u0631\u0629/\u0645\u0644\u0641 \u062a\u0646\u0641\u064a\u0630 + \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062e\u0636\u0631\u0627\u0621 \u0648\u0648\u062b\u0627\u0626\u0642 \u0645\u062d\u062f\u062b\u0629.</li> </ul>"},{"location":"terms/implementation/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0644\u0645\u062e\u0637\u0651\u0637 \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a \u0644\u0644\u0628\u064a\u062a \u0634\u064a\u0621\u060c \u0648\u0627\u0644\u0628\u0646\u0627\u0621 \u0639\u0644\u0649 \u0627\u0644\u0623\u0631\u0636 \u0634\u064a\u0621 \u0622\u062e\u0631. \u0627\u0644\u062a\u0646\u0641\u064a\u0630 = \u0627\u0644\u0639\u0645\u0627\u0644 \u0648\u0627\u0644\u062e\u0631\u0633\u0627\u0646\u0629 \u0648\u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621 \u062d\u062a\u0649 \u064a\u0633\u0643\u0646 \u0627\u0644\u0646\u0627\u0633.</p>"},{"location":"terms/implementation/#c-pbkdf2","title":"\u0645\u062b\u0627\u0644 C# \u0642\u0635\u064a\u0631 \u2014 \u062a\u0646\u0641\u064a\u0630 \u0645\u062a\u0637\u0644\u0628 \u0623\u0645\u0627\u0646: \u062a\u062e\u0632\u064a\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 (PBKDF2)","text":"<p>\u0627\u0644\u0645\u062a\u0637\u0644\u0628 (NFR/SEC-001): - \u0647\u0627\u0634 \u0628\u0643\u0650\u0644\u0641\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0636\u0628\u0637 (Iterations). - \u0645\u0644\u062d \u0641\u0631\u064a\u062f \u0644\u0643\u0644 \u0643\u0644\u0645\u0629 (Salt). - \u0645\u0642\u0627\u0631\u0646\u0629 \u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0648\u0642\u062a. - \u0635\u064a\u063a\u0629 \u0646\u0635\u064a\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0646\u0642\u0644: <code>pbkdf2:sha256$iter$salt_base64$hash_base64</code></p> C#<pre><code>// .NET 8/9\nusing System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic interface IPasswordHasher\n{\n    string Hash(string password);                          // \u0625\u0646\u0634\u0627\u0621 \u062a\u0645\u062b\u064a\u0644 \u0622\u0645\u0646\n    bool Verify(string password, string encodedHash);      // \u062a\u062d\u0642\u0642 \u062b\u0627\u0628\u062a \u0627\u0644\u0648\u0642\u062a\n}\n\npublic class Pbkdf2PasswordHasher : IPasswordHasher\n{\n    private const int SaltBytes = 16;\n    private const int HashBytes = 32;                      // \u0644\u0640 sha256\n    private readonly int _iterations;\n\n    public Pbkdf2PasswordHasher(int iterations = 100_000)  // \u0642\u0627\u0628\u0644 \u0644\u0644\u0636\u0628\u0637 \u062d\u0633\u0628 \u0627\u0644\u0623\u062f\u0627\u0621\n        =&gt; _iterations = iterations;\n\n    public string Hash(string password)\n    {\n        byte[] salt = RandomNumberGenerator.GetBytes(SaltBytes);\n        byte[] hash = PBKDF2(password, salt, _iterations);\n        return $\"pbkdf2:sha256${_iterations}${Convert.ToBase64String(salt)}${Convert.ToBase64String(hash)}\";\n    }\n\n    public bool Verify(string password, string encoded)\n    {\n        // parsing format: algo$iter$salt$hash\n        var parts = encoded.Split('$', StringSplitOptions.RemoveEmptyEntries);\n        if (parts.Length != 4 || !parts[0].StartsWith(\"pbkdf2:sha256\")) return false;\n\n        if (!int.TryParse(parts[1], out int iters)) return false;\n        var salt = Convert.FromBase64String(parts[2]);\n        var expected = Convert.FromBase64String(parts[3]);\n\n        var actual = PBKDF2(password, salt, iters);\n        return FixedTimeEquals(actual, expected);\n    }\n\n    private static byte[] PBKDF2(string pwd, byte[] salt, int iter)\n    {\n        using var pbkdf2 = new Rfc2898DeriveBytes(pwd, salt, iter, HashAlgorithmName.SHA256);\n        return pbkdf2.GetBytes(HashBytes);\n    }\n\n    private static bool FixedTimeEquals(ReadOnlySpan&lt;byte&gt; a, ReadOnlySpan&lt;byte&gt; b)\n    {\n        if (a.Length != b.Length) return false;\n        int diff = 0;\n        for (int i = 0; i &lt; a.Length; i++) diff |= a[i] ^ b[i];\n        return diff == 0;\n    }\n}\n\nclass Demo\n{\n    static void Main()\n    {\n        var hasher = new Pbkdf2PasswordHasher(120_000);\n        var encoded = hasher.Hash(\"N3wP@ssw0rd!\");\n        Console.WriteLine(encoded);            // pbkdf2:sha256$120000$...$...\n\n        Console.WriteLine(hasher.Verify(\"N3wP@ssw0rd!\", encoded)); // True\n        Console.WriteLine(hasher.Verify(\"wrong\", encoded));        // False\n    }\n}\n</code></pre> <p>\u0644\u0645\u0627\u0630\u0627 \u0647\u0630\u0627 \u201c\u062a\u0646\u0641\u064a\u0630\u201d \u062c\u064a\u0651\u062f\u061f - \u064a\u0644\u0628\u0651\u064a \u0627\u0644\u0645\u062a\u0637\u0644\u0628 \u0627\u0644\u0623\u0645\u0646\u064a \u0627\u0644\u0645\u0639\u0644\u0646. - \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0647\u064a\u0626\u0629 (Iterations). - \u0635\u064a\u063a\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0646\u0642\u0644/\u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a. - \u062d\u0645\u0627\u064a\u0629 \u0645\u0642\u0627\u0631\u0646\u0629 \u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0648\u0642\u062a.</p>"},{"location":"terms/implementation/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0646\u0641\u064a\u0630 \u0641\u0639\u0651\u0627\u0644","text":"<ol> <li>Definition of Done \u0648\u0627\u0636\u062d: \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062e\u0636\u0631\u0627\u0621\u060c \u062a\u063a\u0637\u064a\u0629 \u062f\u0646\u064a\u0627\u060c \u0648\u062b\u0627\u0626\u0642\u060c \u0645\u0642\u064a\u0627\u0633/\u0644\u0648\u062c\u060c Artifact \u0642\u0627\u0628\u0644 \u0644\u0644\u0646\u0634\u0631.  </li> <li>\u0627\u0628\u062f\u0623 \u0645\u0646 \u0627\u0644\u0639\u0642\u062f (Interfaces/Ports) \u062b\u0645 \u0637\u0628\u0651\u0642 Adapters.  </li> <li>\u0637\u0628\u0651\u0642 \u062d\u0631\u0633 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 (Args/Null/Boundary) \u0648Cancellation/Timeouts \u0644\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629.  </li> <li>\u0623\u062f\u0631 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0628\u0623\u0645\u0627\u0646 (Options/Secrets) \u0648\u0644\u0627 \u062a\u062b\u0628\u0651\u062a\u0647\u0627 \u0641\u064a \u0627\u0644\u0643\u0648\u062f.  </li> <li>\u0623\u0636\u0650\u0641 Telemetry \u0645\u0646\u0630 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 (Logs \u0628\u0646\u0645\u0637 \u0645\u0648\u062d\u0651\u062f\u060c \u0642\u064a\u0627\u0633\u0627\u062a \u0623\u0633\u0627\u0633\u064a\u0629\u060c Trace IDs).  </li> <li>\u0627\u062e\u062a\u0628\u0631: \u0648\u062d\u062f\u0627\u062a + \u062a\u0643\u0627\u0645\u0644 + \u0642\u0628\u0648\u0644. \u0627\u0641\u0635\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0628\u0637\u064a\u0626\u0629.  </li> <li>\u0627\u0646\u0634\u0631 \u0639\u0628\u0631 CI/CD\u061b \u0623\u0646\u062a\u062c \u0635\u0648\u0631\u0629/\u062d\u0632\u0645\u0629 OCI \u0645\u0648\u0642\u0651\u0639\u0629 \u0645\u0639 SBOM \u0648\u0641\u062d\u0635 \u062b\u063a\u0631\u0627\u062a.  </li> <li>\u0631\u0627\u062c\u0639 \u0627\u0644\u0623\u062f\u0627\u0621/\u0627\u0644\u0623\u0645\u0627\u0646 \u0645\u0642\u0627\u0628\u0644 NFRs (\u0645\u0644\u0641\u0627\u062a \u062a\u0639\u0631\u064a\u0641/\u062a\u062d\u0645\u0651\u0644).</li> </ol>"},{"location":"terms/implementation/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0642\u0641\u0632 \u0644\u0644\u0643\u0648\u062f \u0642\u0628\u0644 \u062a\u062b\u0628\u064a\u062a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a/\u0627\u0644\u0642\u0628\u0648\u0644.  </li> <li>\u0631\u0628\u0637 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0628\u0645\u0643\u062a\u0628\u0629/\u0645\u0632\u0648\u062f \u0645\u0628\u0627\u0634\u0631\u0629 \u0628\u062f\u0644 \u0648\u0627\u062c\u0647\u0629 \u2192 \u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644.  </li> <li>\u062a\u062c\u0627\u0647\u0644 NFRs (\u0645\u0647\u0644\u0627\u062a\u060c \u0630\u0627\u0643\u0631\u0629\u060c \u0623\u0645\u0646) \u062d\u062a\u0649 \u0622\u062e\u0631 \u0644\u062d\u0638\u0629.  </li> <li>\u063a\u064a\u0627\u0628 Telemetry \u2192 \u0644\u0627 \u0646\u0631\u0649 \u0627\u0644\u0641\u0634\u0644 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c.  </li> <li>\u0639\u062f\u0645 \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0642\u0627\u0628\u0644\u0629 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 (\u0634\u0628\u0643\u0629/HTTP 5xx/429).  </li> <li>\u0623\u0633\u0631\u0627\u0631 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639/\u0627\u0644\u0637\u0628\u0642\u0627\u062a.</li> </ul>"},{"location":"terms/implementation/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Requirements \u0645\u0627\u0630\u0627 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0641\u0639\u0644\u0647 \u0627\u0644\u0646\u0638\u0627\u0645 \u0645\u0635\u062f\u0631 \u0627\u0644\u062d\u0642\u064a\u0642\u0629 \u0644\u0644\u0642\u0628\u0648\u0644 Design/Architecture \u0643\u064a\u0641 \u0646\u064f\u0642\u0633\u0651\u0645 \u0648\u0646\u0631\u0628\u0637 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u062d\u062f\u0648\u062f \u0648\u0639\u0642\u0648\u062f \u0648\u0642\u0631\u0627\u0631\u0627\u062a \u0643\u0628\u0631\u0649 Implementation \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0625\u0644\u0649 \u0643\u0648\u062f \u0639\u0627\u0645\u0644 \u064a\u0644\u0628\u0651\u064a NFRs + \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a + Telemetry Deployment \u0648\u0636\u0639 \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0641\u064a \u0628\u064a\u0626\u0629 \u062a\u0634\u063a\u064a\u0644 \u0625\u0635\u062f\u0627\u0631\u0627\u062a/\u0625\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0627\u062a \u0637\u0631\u062d/\u062a\u0634\u063a\u064a\u0644 PoC/Spike \u0627\u062e\u062a\u0628\u0627\u0631 \u0641\u0643\u0631\u0629 \u0628\u0633\u0631\u0639\u0629 \u0642\u062f \u0644\u0627 \u064a\u0644\u0628\u0651\u064a NFRs\u061b \u0644\u064a\u0633 \u0645\u0646\u062a\u062c\u064b\u0627"},{"location":"terms/implementation/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Implementation \u0647\u0648 \u0645\u0631\u062d\u0644\u0629 \u0628\u0646\u0627\u0621 \u0627\u0644\u062d\u0642\u064a\u0642\u0629: \u0643\u0648\u062f \u0648\u0625\u0639\u062f\u0627\u062f \u0648\u062a\u0634\u063a\u064a\u0644 \u064a\u0644\u0628\u064a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0648\u0633\u0645\u0627\u062a \u0627\u0644\u062c\u0648\u062f\u0629. \u0627\u0628\u062f\u0623 \u0645\u0646 \u0627\u0644\u0639\u0642\u0648\u062f\u060c \u0637\u0628\u0651\u0642 \u0628\u0648\u0639\u064a NFRs\u060c \u0623\u0636\u0650\u0641 Telemetry \u0645\u0646\u0630 \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0623\u0648\u0644\u060c \u0648\u0627\u062c\u0639\u0644 \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0646\u0634\u0631 \u0648\u0627\u0644\u0642\u064a\u0627\u0633\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0646\u0641\u064a\u0630 \u0645\u0648\u062b\u0648\u0642 \u0648\u0642\u0627\u0628\u0644 \u0644\u0644\u0635\u064a\u0627\u0646\u0629. </p>"},{"location":"terms/inheritance/","title":"Inheritance","text":""},{"location":"terms/inheritance/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Inheritance \u2014 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 (\u0627\u0634\u062a\u0642\u0627\u0642 \u0635\u0646\u0641 \u062c\u062f\u064a\u062f \u0645\u0646 \u0635\u0646\u0641 \u0623\u0633\u0627\u0633\u064a \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u0644\u062a\u0648\u0633\u0639\u0629).</p>"},{"location":"terms/inheritance/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0622\u0644\u064a\u0629 OOP \u062a\u0633\u0645\u062d \u0644\u0644\u0635\u0646\u0641 \u0627\u0644\u0645\u0634\u062a\u0642 \u0623\u0646 \u064a\u0631\u062b \u062e\u0635\u0627\u0626\u0635 \u0648\u0633\u0644\u0648\u0643 \u0627\u0644\u0635\u0646\u0641 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u060c \u0648\u064a\u0636\u064a\u0641 \u0623\u0648 \u064a\u0628\u062f\u0651\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0639\u0628\u0631 <code>override</code>. \u062a\u062f\u0639\u0645 \u0627\u0644\u062a\u062e\u0635\u0635 \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.</p>"},{"location":"terms/inheritance/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0641\u0643\u0651\u0631 \u0628\u0639\u0644\u0627\u0642\u0629 \"is-a\": \u0627\u0644\u0645\u062f\u064a\u0631 \u0645\u0648\u0638\u0651\u0641\u060c \u0627\u0644\u0634\u0627\u062d\u0646\u0629 \u0645\u0631\u0643\u0628\u0629.  </li> <li>\u0627\u0644\u0635\u0646\u0641 \u0627\u0644\u0623\u0633\u0627\u0633\u064a \u064a\u0639\u0631\u0651\u0641 \u0639\u0642\u062f\u064b\u0627 \u0648\u0633\u0644\u0648\u0643\u064b\u0627 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627\u060c \u0648\u0627\u0644\u0645\u0634\u062a\u0642 \u064a\u062e\u0635\u0651\u0635.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>abstract</code> \u0644\u0641\u0631\u0636 \u062a\u0646\u0641\u064a\u0630 \u0641\u064a \u0627\u0644\u0623\u0635\u0646\u0627\u0641 \u0627\u0644\u0645\u0634\u062a\u0642\u0629\u060c \u0648<code>sealed</code> \u0644\u0645\u0646\u0639 \u0645\u0632\u064a\u062f \u0645\u0646 \u0627\u0644\u0648\u0631\u0627\u062b\u0629.</li> </ul>"},{"location":"terms/inheritance/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0631\u062e\u0635\u0629 \u0642\u064a\u0627\u062f\u0629 \u0639\u0627\u0645\u0629 (\u0627\u0644\u0623\u0633\u0627\u0633) + \u062a\u0635\u0627\u0631\u064a\u062d \u0625\u0636\u0627\u0641\u064a\u0629 \u0644\u0644\u0634\u0627\u062d\u0646\u0627\u062a \u0623\u0648 \u0627\u0644\u062d\u0627\u0641\u0644\u0627\u062a (\u0627\u0644\u0645\u0634\u062a\u0642\u0627\u062a).</p>"},{"location":"terms/inheritance/#c-abstractvirtualoverridesealed-base","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0648\u0631\u0627\u062b\u0629 \u0645\u0639 <code>abstract/virtual/override/sealed</code> + \u0627\u0633\u062a\u062f\u0639\u0627\u0621 <code>base</code>","text":"C#<pre><code>// .NET 8/9\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\n// \u0627\u0644\u0623\u0633\u0627\u0633: \u0639\u0642\u062f \u0645\u0634\u062a\u0631\u0643 \u0644\u062d\u0633\u0627\u0628 \u0627\u0644\u0623\u062c\u0631\npublic abstract class Employee\n{\n    public string Name { get; }\n    protected Employee(string name) =&gt; Name = name;\n\n    // \u064a\u062c\u0628 \u0639\u0644\u0649 \u0627\u0644\u0645\u0634\u062a\u0642\u0627\u062a \u062a\u0646\u0641\u064a\u0630\u0647\u0627\n    public abstract decimal PayFor(int hours);\n\n    // \u0633\u0644\u0648\u0643 \u0645\u0634\u062a\u0631\u0643 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u062c\u0627\u0648\u0632\n    public virtual string Describe() =&gt; $\"Employee: {Name}\";\n}\n\n// \u0645\u0648\u0638\u0641 \u0628\u0627\u0644\u0633\u0627\u0639\u0629\npublic class HourlyEmployee : Employee\n{\n    private readonly decimal _rate;\n    public HourlyEmployee(string name, decimal hourlyRate) : base(name) =&gt; _rate = hourlyRate;\n\n    public override decimal PayFor(int hours)\n    {\n        // \u0648\u0642\u062a \u0625\u0636\u0627\u0641\u064a \u0628\u0633\u064a\u0637 \u0628\u0639\u062f 8 \u0633\u0627\u0639\u0627\u062a/\u064a\u0648\u0645 (\u0645\u062b\u0627\u0644)\n        int overtime = Math.Max(0, hours - 8);\n        return _rate * (hours + overtime * 0.5m);\n    }\n\n    public override string Describe() =&gt; base.Describe() + \" (Hourly)\";\n}\n\n// \u0645\u0648\u0638\u0641 \u0628\u0631\u0627\u062a\u0628 \u0634\u0647\u0631\u064a\npublic class SalariedEmployee : Employee\n{\n    protected readonly decimal Monthly; // \u0645\u062a\u0627\u062d \u0644\u0644\u0645\u0634\u062a\u0642\u0627\u062a \u0641\u0642\u0637\n    public SalariedEmployee(string name, decimal monthly) : base(name) =&gt; Monthly = monthly;\n\n    public override decimal PayFor(int hours) =&gt; Monthly / 22m; // \u062a\u0642\u062f\u064a\u0631 \u064a\u0648\u0645\u064a (\u0645\u062b\u0627\u0644)\n    public override string Describe() =&gt; base.Describe() + \" (Salaried)\";\n}\n\n// \u0645\u062f\u064a\u0631 \u064a\u0636\u064a\u0641 \u0628\u062f\u0644\u0627\u062a\u060c \u0648\u064a\u0645\u0646\u0639 \u0645\u0632\u064a\u062f\u064b\u0627 \u0645\u0646 \u0627\u0644\u062a\u062e\u0635\u064a\u0635\npublic sealed class Manager : SalariedEmployee\n{\n    private readonly decimal _allowance;\n    public Manager(string name, decimal monthly, decimal allowance) : base(name, monthly) =&gt; _allowance = allowance;\n\n    public override decimal PayFor(int hours)\n    {\n        var basePay = base.PayFor(hours); // \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0646\u0637\u0642 \u0627\u0644\u0623\u0633\u0627\u0633\n        return basePay + _allowance;\n    }\n\n    public override string Describe() =&gt; base.Describe() + \" + Allowance\";\n}\n\nclass Program\n{\n    static void Main()\n    {\n        List&lt;Employee&gt; team = new()\n        {\n            new HourlyEmployee(\"Omar\", 10m),\n            new SalariedEmployee(\"Lina\", 2200m),\n            new Manager(\"Sara\", 3000m, 150m)\n        };\n\n        int hoursToday = 9;\n        var total = team.Sum(e =&gt; e.PayFor(hoursToday));\n\n        foreach (var e in team)\n            Console.WriteLine($\"{e.Describe()} \u2192 Pay={e.PayFor(hoursToday):0.00}\");\n\n        Console.WriteLine($\"Total payroll today = {total:0.00}\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0646\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0643\u0640 <code>Employee</code>\u060c \u0648\u064a\u064f\u062e\u062a\u0627\u0631 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0635\u062d\u064a\u062d \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644. \u0627\u0633\u062a\u062e\u062f\u0645\u0646\u0627 <code>base</code> \u0644\u0636\u0645 \u0645\u0646\u0637\u0642 \u0627\u0644\u0623\u0633\u0627\u0633\u060c \u0648<code>sealed</code> \u0644\u0645\u0646\u0639 \u0627\u0634\u062a\u0642\u0627\u0642 \u0625\u0636\u0627\u0641\u064a \u0645\u0646 <code>Manager</code>.</p>"},{"location":"terms/inheritance/#_5","title":"\u0645\u062a\u0649 \u0623\u0633\u062a\u062e\u062f\u0645\u0647\u061f \u0648\u0645\u062a\u0649 \u0623\u062a\u062c\u0646\u0651\u0628\u0647\u061f","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u0639\u0646\u062f\u0645\u0627 \u062a\u0648\u062c\u062f \u0639\u0644\u0627\u0642\u0629 is-a \u0648\u0627\u0636\u062d\u0629 \u0648\u0639\u0642\u062f \u0645\u0634\u062a\u0631\u0643 \u0642\u0648\u064a.  </li> <li>\u062a\u062c\u0646\u0651\u0628\u0647\u0627 \u0639\u0646\u062f\u0645\u0627 \u064a\u0643\u0648\u0646 \u0627\u0644\u0647\u062f\u0641 \u0645\u062c\u0631\u0651\u062f \u0645\u0634\u0627\u0631\u0643\u0629 \u0643\u0648\u062f \u0641\u0642\u0637\u2014\u0641\u0636\u0651\u0644 \u0627\u0644\u062a\u0631\u0643\u064a\u0628 (Composition) \u0623\u0648 Interfaces.</li> </ul>"},{"location":"terms/inheritance/#_6","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629","text":"<ol> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0639\u0642\u062f \u0641\u064a \u0627\u0644\u0623\u0633\u0627\u0633 (<code>abstract</code>/<code>virtual</code>) \u0628\u062f\u0642\u0629.  </li> <li>\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 LSP: \u0627\u0644\u0645\u0634\u062a\u0642 \u0644\u0627 \u064a\u0643\u0633\u0631 \u062a\u0648\u0642\u0651\u0639\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633.  </li> <li>\u0627\u0633\u062a\u062f\u0639\u0650 <code>base</code> \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u062a\u0641\u0627\u062f\u064a \u062a\u0643\u0631\u0627\u0631 \u0627\u0644\u0633\u0644\u0648\u0643.  </li> <li>\u0627\u0642\u0641\u0644 \u0627\u0644\u062a\u0633\u0644\u0633\u0644 \u0628\u0640 <code>sealed</code> \u0639\u0646\u062f \u0627\u0643\u062a\u0645\u0627\u0644 \u0627\u0644\u062a\u062e\u0635\u064a\u0635.  </li> <li>\u0627\u0628\u0642\u0650 \u0627\u0644\u062a\u0633\u0644\u0633\u0644 \u0636\u062d\u0644\u064b\u0627\u061b \u0639\u0645\u0642 \u0643\u0628\u064a\u0631 \u064a\u0632\u064a\u062f \u0627\u0644\u0647\u0634\u0627\u0634\u0629.</li> </ol>"},{"location":"terms/inheritance/#_7","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0648\u0631\u0627\u062b\u0629 \u0628\u0644\u0627 \u0639\u0644\u0627\u0642\u0629 is-a \u2192 \u062a\u0635\u0645\u064a\u0645 \u0647\u0634.  </li> <li>\u062a\u0648\u0631\u064a\u062b \u0639\u0645\u064a\u0642 \u0628\u062f\u0644 \u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u2192 \u0635\u0639\u0648\u0628\u0629 \u0635\u064a\u0627\u0646\u0629.  </li> <li>\u062a\u063a\u064a\u064a\u0631 \u062f\u0644\u0627\u0644\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633 (\u0643\u0633\u0631 LSP).  </li> <li>\u0646\u0633\u064a\u0627\u0646 <code>virtual/override</code> \u0623\u0648 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 <code>new</code> \u0644\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u0623\u0639\u0636\u0627\u0621 (\u064a\u0644\u0628\u0651\u0633 \u0627\u0644\u0633\u0644\u0648\u0643).  </li> <li>\u0643\u0634\u0641 \u062d\u0642\u0648\u0644 \u0627\u0644\u0623\u0633\u0627\u0633 \u0644\u0644\u0639\u0645\u0648\u0645 \u0628\u062f\u0644 \u062d\u0645\u0627\u064a\u062a\u0647\u0627 (<code>private/protected</code>).</li> </ul>"},{"location":"terms/inheritance/#_8","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Inheritance \u062a\u062e\u0635\u0635 \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0628\u0631 \u0627\u0634\u062a\u0642\u0627\u0642 <code>abstract/virtual/override/sealed</code> Composition \u0628\u0646\u0627\u0621 \u0643\u0627\u0626\u0646 \u0645\u0646 \u0623\u062c\u0632\u0627\u0621 \u063a\u0627\u0644\u0628\u064b\u0627 \u0623\u0643\u062b\u0631 \u0645\u0631\u0648\u0646\u0629 \u0645\u0646 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 Interface \u0639\u0642\u062f \u0633\u0644\u0648\u0643 \u0628\u062f\u0648\u0646 \u062d\u0627\u0644\u0629 \u064a\u0633\u0647\u0651\u0644 \u0627\u0644\u062a\u0628\u062f\u064a\u0644 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Polymorphism \u0646\u0641\u0633 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u0633\u0644\u0648\u0643 \u0645\u062e\u062a\u0644\u0641 \u064a\u062a\u062d\u0642\u0642 \u0639\u0628\u0631 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u0623\u0648 \u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a Encapsulation \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062d\u0627\u0644\u0629 \u062e\u0644\u0641 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u064a\u062c\u0628 \u0623\u0644\u0627 \u062a\u0643\u0633\u0631 \u0627\u0644\u062a\u063a\u0644\u064a\u0641"},{"location":"terms/inheritance/#_9","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u062a\u0645\u0643\u0651\u0646\u0643 \u0645\u0646 \u062a\u062e\u0635\u064a\u0635 \u0633\u0644\u0648\u0643 \u0645\u0634\u062a\u0631\u0643 \u0639\u0628\u0631 \u062a\u0633\u0644\u0633\u0644 \u0645\u0646\u0637\u0642\u064a. \u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0628\u062d\u0630\u0631 \u0644\u0639\u0644\u0627\u0642\u0627\u062a is-a\u060c \u0648\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 LSP\u060c \u0648\u0641\u0636\u0651\u0644 \u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u0639\u0646\u062f\u0645\u0627 \u064a\u0643\u0648\u0646 \u0623\u0646\u0633\u0628\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0635\u0645\u064a\u0645 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0639\u0629 \u062f\u0648\u0646 \u062a\u0639\u0642\u064a\u062f \u063a\u064a\u0631 \u0636\u0631\u0648\u0631\u064a.</p>"},{"location":"terms/integration/","title":"Integration","text":""},{"location":"terms/integration/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>System Integration \u2014 \u062a\u0643\u0627\u0645\u0644 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 (\u0631\u0628\u0637 \u062e\u062f\u0645\u0627\u062a \u0648\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u062a\u0628\u0627\u062f\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u0623\u0648\u0627\u0645\u0631).</p>"},{"location":"terms/integration/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0637\u0631\u064a\u0642\u0629 \u0645\u0646\u0638\u0651\u064e\u0645\u0629 \u0644\u0631\u0628\u0637 \u0646\u0638\u0627\u0645\u064a\u0646 \u0623\u0648 \u0623\u0643\u062b\u0631 \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a: REST/gRPC/\u0631\u0633\u0627\u0626\u0644/\u0645\u0644\u0641\u0627\u062a. \u062a\u0634\u0645\u0644 \u0627\u0644\u0645\u062e\u0637\u0637 (Schema)\u060c \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629\u060c \u0627\u0644\u062a\u062d\u0648\u064a\u0644 (Mapping)\u060c \u0627\u0644\u0648\u062b\u0648\u0642\u064a\u0629\u060c \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629.</p>"},{"location":"terms/integration/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0633\u0650\u0643\u0651\u0629 \u0628\u064a\u0646 \u0627\u0644\u0623\u0646\u0638\u0645\u0629: \u0625\u0645\u0651\u0627 \u0645\u062a\u0632\u0627\u0645\u0646 (Request/Response) \u0623\u0648 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 (Events/Queue).  </li> <li>\u0646\u062a\u0641\u0642 \u0639\u0644\u0649 \u0639\u0642\u062f (Endpoints/Topics/Schema) \u0648\u0623\u0645\u0627\u0646 (OAuth2, mTLS, HMAC).  </li> <li>\u0646\u0636\u064a\u0641 Idempotency\u060c Retries\u060c \u0648Versioning \u0644\u062a\u0641\u0627\u062f\u064a \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0648\u0627\u0644\u0643\u0633\u0631.  </li> <li>\u0646\u0631\u0627\u0642\u0628: Logs/Metrics/Tracing \u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u0623\u0639\u0637\u0627\u0644 \u0645\u0628\u0643\u0631\u064b\u0627.</li> </ul>"},{"location":"terms/integration/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0634\u0631\u0643\u0629 \u0634\u062d\u0646 \u0628\u064a\u0646 \u0645\u062a\u062c\u0631\u064a\u0646: \u0637\u0644\u0628 \u0641\u0648\u0631\u064a = \u0627\u062a\u0635\u0627\u0644 \u0645\u062a\u0632\u0627\u0645\u0646. \u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0627\u0644\u0634\u062d\u0646 = \u0623\u062d\u062f\u0627\u062b \u062a\u064f\u062f\u0641\u064e\u0639 \u0644\u0627\u062d\u0642\u064b\u0627 (Webhooks/Queue).</p>"},{"location":"terms/integration/#c-rest-webhook","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0645\u062e\u062a\u0635\u0631 \u2014 \u0627\u0633\u062a\u0647\u0644\u0627\u0643 REST + \u0627\u0633\u062a\u0642\u0628\u0627\u0644 Webhook (\u062a\u062d\u0642\u0651\u0642 \u062a\u0648\u0642\u064a\u0639)","text":"C#<pre><code>// Program.cs (.NET 8/9)\n// - \u0627\u0633\u062a\u062f\u0639\u0627\u0621 REST \u062e\u0627\u0631\u062c\u064a \u0645\u0639 \u0645\u0647\u0644\u0629 \u0648\u0645\u062d\u0627\u0648\u0644\u0627\u062a \u0648Idempotency-Key.\n// - \u0646\u0642\u0637\u0629 Webhook \u0645\u0639 \u062a\u062d\u0642\u0642 HMAC \u0644\u0644\u062a\u0648\u0642\u064a\u0639 \u0648\u062a\u0635\u0641\u064a\u0629 \u0627\u0644\u062a\u0643\u0631\u0627\u0631.\n\nusing System.Net.Http.Headers;\nusing System.Security.Cryptography;\nusing System.Text;\nusing Microsoft.Extensions.Caching.Memory;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddMemoryCache();\nvar app = builder.Build();\n\nvar http = new HttpClient { BaseAddress = new Uri(\"https://api.example.com\"), Timeout = TimeSpan.FromSeconds(5) };\n\n// 1) \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0648\u0627\u062c\u0647\u0629 \u062e\u0627\u0631\u062c\u064a\u0629 (Pull)\napp.MapPost(\"/pay\", async (IMemoryCache cache) =&gt;\n{\n    var body = \"\"\"{\"amount\":120,\"currency\":\"USD\"}\"\"\";\n    string idem = Guid.NewGuid().ToString(\"N\");            // \u0645\u0641\u062a\u0627\u062d Idempotency\n    var req = new HttpRequestMessage(HttpMethod.Post, \"/v1/payments\");\n    req.Content = new StringContent(body, Encoding.UTF8, \"application/json\");\n    req.Headers.Add(\"Idempotency-Key\", idem);\n    req.Headers.Authorization = new AuthenticationHeaderValue(\"Bearer\", Environment.GetEnvironmentVariable(\"API_TOKEN\"));\n\n    for (int attempt = 1; attempt &lt;= 3; attempt++)\n    {\n        using var res = await http.SendAsync(req);\n        if (res.IsSuccessStatusCode) return Results.Text(await res.Content.ReadAsStringAsync(), \"application/json\");\n        if ((int)res.StatusCode is 429 or &gt;= 500) await Task.Delay(TimeSpan.FromMilliseconds(200 * Math.Pow(2, attempt)));\n        else return Results.StatusCode((int)res.StatusCode);\n    }\n    return Results.StatusCode(504); // Gateway Timeout\n});\n\n// 2) \u0627\u0633\u062a\u0642\u0628\u0627\u0644 Webhook (Push) \u0645\u0639 HMAC-SHA256\napp.MapPost(\"/webhooks/provider\", async (HttpRequest request, IMemoryCache cache) =&gt;\n{\n    // \u0627\u0642\u0631\u0623 \u0627\u0644\u062c\u0633\u0645 \u0643\u0627\u0645\u0644\u064b\u0627\n    using var reader = new StreamReader(request.Body, Encoding.UTF8);\n    var payload = await reader.ReadToEndAsync();\n\n    // \u062a\u062d\u0642\u0642 \u0627\u0644\u062a\u0648\u0642\u064a\u0639\n    var sig = request.Headers[\"X-Signature\"].ToString();    // \u0645\u062b\u0627\u0644: sha256=HEX\n    var secret = Environment.GetEnvironmentVariable(\"WEBHOOK_SECRET\") ?? \"dev-secret\";\n    using var hmac = new HMACSHA256(Encoding.UTF8.GetBytes(secret));\n    var hash = Convert.ToHexString(hmac.ComputeHash(Encoding.UTF8.GetBytes(payload))).ToLowerInvariant();\n    var expected = \"sha256=\" + hash;\n\n    if (!CryptographicOperations.FixedTimeEquals(Encoding.UTF8.GetBytes(sig), Encoding.UTF8.GetBytes(expected)))\n        return Results.Unauthorized();\n\n    // \u0645\u0627\u0646\u0639 \u062a\u0643\u0631\u0627\u0631 \u0628\u0633\u064a\u0637 (Idempotency)\n    var eventId = request.Headers[\"X-Event-Id\"].ToString();\n    if (string.IsNullOrEmpty(eventId) || !cache.Set(eventId, true, TimeSpan.FromMinutes(10)))\n        return Results.Ok(); // \u0645\u0643\u0631\u0651\u0631 \u2014 \u062a\u062c\u0627\u0647\u0644 \u0628\u0647\u062f\u0648\u0621\n\n    // TODO: \u0639\u0627\u0644\u062c \u0627\u0644\u062d\u062f\u062b (\u0645\u062b\u0644\u0627\u064b \u062a\u062d\u062f\u064a\u062b \u062d\u0627\u0644\u0629 \u0627\u0644\u062f\u0641\u0639)\n    Console.WriteLine($\"Webhook OK: {eventId}\");\n    return Results.Ok();\n});\n\napp.Run();\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - Outbound: \u0645\u0647\u0644\u0629 + \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u062a\u062f\u0631\u064a\u062c\u064a\u0629 + Idempotency-Key. - Inbound: \u062a\u062d\u0642\u0651\u0642 \u062a\u0648\u0642\u064a\u0639 HMAC + \u0645\u0646\u0639 \u062a\u0643\u0631\u0627\u0631 + \u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0633\u0631\u064a\u0639\u0629 2xx.</p>"},{"location":"terms/integration/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0643\u0627\u0645\u0644 \u0646\u0627\u062c\u062d","text":"<ul> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0646\u0637\u0627\u0642/\u0627\u0644\u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0648\u0645\u0635\u062f\u0631 \u0627\u0644\u062d\u0642\u064a\u0642\u0629 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0646\u0645\u0637:  </li> <li>\u0645\u062a\u0632\u0627\u0645\u0646 (REST/gRPC) \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0641\u0648\u0631\u064a\u0629.  </li> <li>\u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 (Events/Webhooks/Queue) \u0644\u0644\u062a\u062f\u0641\u0642 \u0648\u0627\u0644\u0645\u0631\u0648\u0646\u0629.  </li> <li>\u0635\u0645\u0651\u0645 Schema \u062b\u0627\u0628\u062a\u064b\u0627 \u0648\u0642\u0627\u0628\u0644\u064b\u0627 \u0644\u0644\u062a\u0637\u0648\u064a\u0631: \u062d\u0642\u0648\u0644 \u0627\u062e\u062a\u064a\u0627\u0631\u064a\u0629\u060c Version\u060c \u0648Compatibility.  </li> <li>\u0623\u0645\u0627\u0646: OAuth2/OIDC \u0623\u0648 mTLS\u061b \u0644\u0640 Webhooks \u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0648\u0642\u064a\u0639/HMAC \u0648\u0633\u062c\u0651\u0644 IP/\u0627\u0644\u0648\u0642\u062a.  </li> <li>\u0627\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629: Retries + Backoff\u060c Idempotency\u060c DLQ \u0644\u0644\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0641\u0627\u0634\u0644\u0629.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: Tracing \u0639\u0628\u0631 Correlation-Id\u060c \u0644\u0648\u062d\u0627\u062a SLIs/SLOs\u060c \u062a\u0646\u0628\u064a\u0647\u0627\u062a.  </li> <li>\u0627\u062e\u062a\u0628\u0631: Contract/Integration Tests \u0648\u0628\u064a\u0626\u0629 Sandbox \u0648Data Replay.</li> </ul>"},{"location":"terms/integration/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0639\u062f\u0645 \u0627\u0644\u062a\u0645\u064a\u064a\u0632 \u0628\u064a\u0646 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0645\u0624\u0642\u0651\u062a\u0629 (\u0642\u0627\u0628\u0644\u0629 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629) \u0648\u0627\u0644\u062f\u0627\u0626\u0645\u0629.  </li> <li>\u0625\u0647\u0645\u0627\u0644 Idempotency \u0641\u064a \u0627\u0644\u0645\u062f\u0641\u0648\u0639\u0627\u062a/\u0627\u0644\u0637\u0644\u0628\u0627\u062a \u2192 \u0639\u0645\u0644\u064a\u0627\u062a \u0645\u0643\u0631\u0651\u0631\u0629.  </li> <li>\u0642\u0628\u0648\u0644 Webhook \u0628\u062f\u0648\u0646 \u062a\u0648\u0642\u064a\u0639 \u0623\u0648 \u0648\u0642\u062a \u0635\u0644\u0627\u062d\u064a\u0629.  </li> <li>\u0643\u0633\u0631 \u0627\u0644\u062a\u0648\u0627\u0641\u0642 \u0628\u0625\u0632\u0627\u0644\u0629/\u062a\u063a\u064a\u064a\u0631 \u062d\u0642\u0644 \u0628\u062f\u0648\u0646 Versioning.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u062d\u062f\u0648\u062f \u0627\u0644\u0645\u0639\u062f\u0651\u0644 (Rate Limits) \u0648\u0627\u0644\u0645\u0647\u0644\u0627\u062a.  </li> <li>\u062f\u0645\u062c \u0645\u0646\u0637\u0642 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u0641\u064a \u0637\u0628\u0642\u0629 \u0627\u0644\u0646\u0642\u0644 \u0628\u062f\u0644 \u062e\u062f\u0645\u0627\u062a \u0645\u0646\u0641\u0635\u0644\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631.</li> </ul>"},{"location":"terms/integration/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 API \u0639\u0642\u062f \u0644\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0648\u0638\u0627\u0626\u0641/\u0628\u064a\u0627\u0646\u0627\u062a REST/gRPC/GraphQL\u061b \u064a\u064f\u0633\u062a\u0647\u0644\u0643 \u0645\u0628\u0627\u0634\u0631\u0629 Integration \u0631\u0628\u0637 \u0623\u0646\u0638\u0645\u0629 \u0644\u062a\u0628\u0627\u062f\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u0623\u0648\u0627\u0645\u0631 Sync/Async\u060c Mapping\u060c Idempotency\u060c \u0645\u0631\u0627\u0642\u0628\u0629 Webhook \u062f\u0641\u0639 \u0623\u062d\u062f\u0627\u062b \u0645\u0646 \u0645\u0632\u0648\u0651\u062f \u0625\u0644\u0649 \u0645\u0633\u062a\u0647\u0644\u0643 \u062a\u062d\u0642\u0651\u0642 \u062a\u0648\u0642\u064a\u0639 + \u0625\u0639\u0627\u062f\u0629 \u0645\u062d\u0627\u0648\u0644\u0629 ETL/ELT \u062a\u0643\u0627\u0645\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u062f\u0641\u0639\u064a/\u062a\u062d\u0648\u064a\u0644\u064a \u0623\u062d\u062c\u0627\u0645 \u0643\u0628\u064a\u0631\u0629\u061b \u0632\u0645\u0646 \u0623\u0639\u0644\u0649 iPaaS \u0645\u0646\u0635\u0651\u0629 \u062a\u0643\u0627\u0645\u0644 \u0645\u064f\u062f\u0627\u0631\u0629 \u0645\u0648\u0635\u0644\u0627\u062a \u062c\u0627\u0647\u0632\u0629\u060c \u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0631\u0633\u0648\u0645\u064a\u0629"},{"location":"terms/integration/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Integration = \u0631\u0628\u0637 \u0623\u0646\u0638\u0645\u0629 \u0628\u0639\u0642\u062f \u0648\u0627\u0636\u062d \u0648\u0623\u0645\u0627\u0646 \u0648\u0645\u0648\u062b\u0648\u0642\u064a\u0629. \u0627\u062c\u0639\u0644 \u0627\u0644\u0646\u0642\u0644 \u0622\u0645\u0646\u064b\u0627\u060c \u0627\u0644\u062a\u0646\u0641\u064a\u0630 Idempotent\u060c \u0627\u0644\u0641\u0634\u0644 \u0642\u0627\u0628\u0644\u064b\u0627 \u0644\u0644\u062a\u0639\u0627\u0641\u064a\u060c \u0648\u062a\u062a\u0628\u0651\u0639 \u0643\u0644 \u0637\u0644\u0628\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0643\u0627\u0645\u0644 \u0645\u0633\u062a\u062f\u0627\u0645 \u0648\u0633\u0647\u0644 \u0627\u0644\u0635\u064a\u0627\u0646\u0629.</p>"},{"location":"terms/interface/","title":"Interface","text":""},{"location":"terms/interface/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Interface \u2014 \u0648\u0627\u062c\u0647\u0629 (\u0639\u0642\u062f \u0633\u0644\u0648\u0643 \u0628\u062f\u0648\u0646 \u062a\u0646\u0641\u064a\u0630/\u062d\u0627\u0644\u0629).</p>"},{"location":"terms/interface/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0639\u0631\u064a\u0641 \u0645\u0627 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0641\u0639\u0644\u0647 \u0627\u0644\u0646\u0648\u0639 (\u062f\u0648\u0627\u0644/\u062e\u0635\u0627\u0626\u0635/\u0623\u062d\u062f\u0627\u062b/\u0641\u0647\u0627\u0631\u0633) \u062f\u0648\u0646 \u0643\u064a\u0641. \u062a\u0645\u0643\u0651\u0646 \u0627\u0644\u062a\u062c\u0631\u064a\u062f\u060c \u062a\u0639\u062f\u0651\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644\u060c \u0648\u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u0639\u0628\u0631 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0628\u062d\u0631\u064a\u0629.</p>"},{"location":"terms/interface/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0648\u0627\u062c\u0647\u0629 = \u0639\u0642\u062f: \u0623\u0633\u0645\u0627\u0621 \u062f\u0648\u0627\u0644\u060c \u062a\u0648\u0627\u0642\u064a\u0639\u060c \u0648\u062e\u0635\u0627\u0626\u0635 \u0645\u062a\u0648\u0642\u0651\u064e\u0639\u0629.  </li> <li>\u0627\u0644\u0623\u0635\u0646\u0627\u0641/\u0627\u0644\u0647\u064a\u0627\u0643\u0644 \u062a\u0646\u0641\u0651\u0630 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 (<code>: IInterface</code>) \u0648\u062a\u0648\u0641\u0651\u0631 \u0627\u0644\u0643\u0648\u062f.  </li> <li>\u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0648\u0627\u062c\u0647\u0629\u061b \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u064a\u0645\u0643\u0646 \u062a\u063a\u064a\u064a\u0631\u0647 (\u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0633\u0647\u0644\u060c \u0627\u0642\u062a\u0631\u0627\u0646 \u0623\u0642\u0644).  </li> <li>\u0641\u064a C# \u064a\u0645\u0643\u0646 \u0623\u0646 \u062a\u062d\u0648\u064a \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u062e\u0635\u0627\u0626\u0635\u060c \u0623\u062d\u062f\u0627\u062b\u060c \u0641\u0647\u0627\u0631\u0633\u060c \u0648\u0645\u0646\u0630 C# 8 \u0642\u062f \u062a\u062d\u062a\u0648\u064a \u062a\u0646\u0641\u064a\u0630\u064b\u0627 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 (\u0628\u062d\u0630\u0631).</li> </ul>"},{"location":"terms/interface/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0642\u0628\u0633 USB: \u0634\u0643\u0644/\u062f\u0628\u0627\u0628\u064a\u0633 \u0645\u0648\u062d\u0651\u062f\u0629 (\u0639\u0642\u062f). \u064a\u0645\u0643\u0646\u0643 \u0648\u0635\u0644 \u0645\u0627\u0648\u0633 \u0623\u0648 \u0643\u064a\u0628\u0648\u0631\u062f \u0623\u0648 \u0630\u0627\u0643\u0631\u0629 (\u062a\u0646\u0641\u064a\u0630 \u0645\u062e\u062a\u0644\u0641) \u062f\u0648\u0646 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0644\u0627\u0628\u062a\u0648\u0628.</p>"},{"location":"terms/interface/#c-1","title":"\u0645\u062b\u0627\u0644 C# (1) \u2014 \u0648\u0627\u062c\u0647\u0629 + \u062d\u0642\u0646 \u062a\u0628\u0639\u064a\u0627\u062a + \u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630","text":"C#<pre><code>// \u0627\u0644\u0639\u0642\u062f: \u0628\u0648\u0627\u0628\u0629 \u062f\u0641\u0639 \u0639\u0627\u0645\u0629\npublic interface IPaymentGateway\n{\n    bool Charge(decimal amount, string currency, string customerId);\n}\n\n// \u062a\u0646\u0641\u064a\u0630 1: \u0648\u0647\u0645\u064a \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631/\u0627\u0644\u062a\u0637\u0648\u064a\u0631\npublic class FakeGateway : IPaymentGateway\n{\n    public bool Charge(decimal amount, string currency, string customerId) =&gt; amount &gt; 0;\n}\n\n// \u062a\u0646\u0641\u064a\u0630 2: Stripe (\u0645\u0628\u0633\u0651\u0637 \u0644\u0634\u0631\u062d \u0627\u0644\u0641\u0643\u0631\u0629)\npublic class StripeGateway : IPaymentGateway\n{\n    public bool Charge(decimal amount, string currency, string customerId)\n    {\n        Console.WriteLine($\"[Stripe] amount={amount} {currency} customer={customerId}\");\n        return true; // \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u062d\u0642\u064a\u0642\u064a \u0641\u064a \u0627\u0644\u0648\u0627\u0642\u0639\n    }\n}\n\n// \u062e\u062f\u0645\u0629 \u0623\u0639\u0645\u0627\u0644 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \"\u0627\u0644\u0648\u0627\u062c\u0647\u0629\" \u0641\u0642\u0637\npublic class CheckoutService\n{\n    private readonly IPaymentGateway _gateway;\n    public CheckoutService(IPaymentGateway gateway) =&gt; _gateway = gateway;\n\n    public string Pay(string customerId, decimal total)\n        =&gt; _gateway.Charge(total, \"USD\", customerId) ? \"paid\" : \"failed\";\n}\n</code></pre> C#<pre><code>// Program.cs  (.NET 8/9) \u2014 \u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u062f\u0648\u0646 \u062a\u0639\u062f\u064a\u0644 CheckoutService\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddSingleton&lt;IPaymentGateway, FakeGateway&gt;();   // dev\n// builder.Services.AddSingleton&lt;IPaymentGateway, StripeGateway&gt;(); // prod\nbuilder.Services.AddSingleton&lt;CheckoutService&gt;();\n\nvar app = builder.Build();\napp.MapPost(\"/checkout\", (string customerId, decimal total, CheckoutService svc)\n    =&gt; Results.Ok(new { status = svc.Pay(customerId, total) }));\napp.Run();\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 <code>IPaymentGateway</code>. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0628\u0633\u0647\u0648\u0644\u0629 (\u0627\u062e\u062a\u0628\u0627\u0631/\u0628\u064a\u0626\u0627\u062a).</p>"},{"location":"terms/interface/#c-2-interface-segregation-explicit","title":"\u0645\u062b\u0627\u0644 C# (2) \u2014 Interface Segregation + \u062a\u0646\u0641\u064a\u0630 \u0635\u0631\u064a\u062d (Explicit)","text":"C#<pre><code>// \u0641\u0635\u0644 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 \u0639\u0646 \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u2014 \u0648\u0627\u062c\u0647\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0645\u062d\u062f\u062f\u0629 \u0627\u0644\u063a\u0631\u0636\npublic interface IReadRepo&lt;T&gt; { T? Find(int id); IEnumerable&lt;T&gt; All(); }\npublic interface IWriteRepo&lt;T&gt; { T Add(T item); void Delete(int id); }\n\npublic class InMemoryRepo&lt;T&gt; : IReadRepo&lt;T&gt;, IWriteRepo&lt;T&gt; where T : class\n{\n    private readonly Dictionary&lt;int, T&gt; _db = new();\n    private int _next = 1;\n\n    public T? Find(int id) =&gt; _db.TryGetValue(id, out var v) ? v : null;\n    public IEnumerable&lt;T&gt; All() =&gt; _db.Values;\n\n    // \u062a\u0646\u0641\u064a\u0630 \u0635\u0631\u064a\u062d: \u0644\u0627 \u064a\u0638\u0647\u0631 \u0639\u0644\u0649 \u0627\u0644\u0646\u0648\u0639 \u0645\u0627 \u0644\u0645 \u0646\u0639\u0627\u0645\u0644\u0647 \u0643\u0640 IWriteRepo&lt;T&gt;\n    T IWriteRepo&lt;T&gt;.Add(T item) { _db[_next] = item; return _db[_next++]; }\n    void IWriteRepo&lt;T&gt;.Delete(int id) { _db.Remove(id); }\n}\n\npublic class CatalogService\n{\n    private readonly IReadRepo&lt;string&gt; _readOnly;\n    public CatalogService(IReadRepo&lt;string&gt; readOnly) =&gt; _readOnly = readOnly;\n\n    public IEnumerable&lt;string&gt; List() =&gt; _readOnly.All(); // \u0644\u0627 \u064a\u062d\u062a\u0627\u062c \u0635\u0644\u0627\u062d\u064a\u0629 \u0643\u062a\u0627\u0628\u0629\n}\n\nclass Demo\n{\n    static void Main()\n    {\n        var repo = new InMemoryRepo&lt;string&gt;();\n        // \u0646\u062d\u062a\u0627\u062c \u0643\u0627\u0633\u062a \u0625\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621 Add (\u062a\u0646\u0641\u064a\u0630 \u0635\u0631\u064a\u062d)\n        var writer = (IWriteRepo&lt;string&gt;)repo;\n        writer.Add(\"Keyboard\"); writer.Add(\"Mouse\");\n\n        var svc = new CatalogService(repo); // \u064a\u0633\u062a\u0647\u0644\u0643 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0642\u0627\u0631\u0626\u0629 \u0641\u0642\u0637\n        foreach (var name in svc.List()) Console.WriteLine(name);\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0648\u0627\u062c\u0647\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0648\u0645\u0631\u0643\u0651\u0632\u0629 \u062a\u0642\u0644\u0651\u0644 \u0627\u0644\u0627\u0642\u062a\u0631\u0627\u0646. \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0635\u0631\u064a\u062d \u064a\u0645\u0646\u0639 \u0643\u0634\u0641 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0628\u0637\u0631\u064a\u0642 \u0627\u0644\u062e\u0637\u0623.</p>"},{"location":"terms/interface/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>\u0627\u0628\u062f\u0623 \u0645\u0646 \u0627\u0644\u0639\u0642\u062f: \u0633\u0645\u0651\u0650 \u0627\u0644\u062f\u0648\u0627\u0644/\u0627\u0644\u062e\u0635\u0627\u0626\u0635 \u0628\u0645\u0627 \u064a\u0635\u0641 \u0627\u0644\u0647\u062f\u0641 \u0644\u0627 \u0627\u0644\u062a\u0646\u0641\u064a\u0630.  </li> <li>\u0642\u0633\u0651\u0645 \u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a \u0627\u0644\u0643\u0628\u064a\u0631\u0629 (ISP)\u061b \u062a\u062c\u0646\u0651\u0628 \u201c\u0648\u0627\u062c\u0647\u0629 \u0643\u0644 \u0634\u064a\u0621\u201d.  </li> <li>\u0627\u0643\u062a\u0628 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0639\u0642\u062f (Contract Tests) \u062a\u064f\u0634\u063a\u0651\u064e\u0644 \u0639\u0644\u0649 \u0643\u0644 \u062a\u0646\u0641\u064a\u0630 \u0644\u0644\u0648\u0627\u062c\u0647\u0629.  </li> <li>\u0645\u0631\u0651\u0631 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0639\u0628\u0631 DI\u061b \u0644\u0627 \u062a\u0633\u062a\u062e\u062f\u0645 Service Locator.  </li> <li>\u0648\u062b\u0651\u0642 \u0627\u0644\u0636\u0645\u0627\u0646\u0627\u062a: \u0627\u0644\u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a\u060c \u0627\u0644\u062d\u062f\u0648\u062f\u060c \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 <code>null</code>\u060c \u0627\u0644\u0642\u064a\u0648\u062f \u0627\u0644\u0632\u0645\u0646\u064a\u0629.  </li> <li>\u0627\u0646\u062a\u0628\u0647 \u0644\u0640 \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a: \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u062a\u0643\u0633\u0631 \u0627\u0644\u0639\u0645\u0644\u0627\u0621\u061b \u0623\u0636\u0641 \u0623\u0639\u0636\u0627\u0621 \u062c\u062f\u062f \u0628\u062a\u0631\u0648\u0651\u064d \u0623\u0648 \u0642\u062f\u0651\u0645 v2.</li> </ol>"},{"location":"terms/interface/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0648\u0627\u062c\u0647\u0629 \u0645\u0646\u062a\u0641\u062e\u0629 (God Interface) \u2192 \u0623\u0635\u0646\u0627\u0641 \u0645\u0636\u0637\u0631\u0629 \u0644\u062a\u0646\u0641\u064a\u0630 \u0645\u0627 \u0644\u0627 \u062a\u062d\u062a\u0627\u062c\u0647.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u062c\u0647\u0629 \u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u0642\u0637 (DTO) \u2014 \u0627\u062c\u0639\u0644\u0647\u0627 record/class \u0628\u062f\u0644\u064b\u0627 \u0645\u0646 \u0630\u0644\u0643.  </li> <li>\u0643\u0634\u0641 \u062a\u0641\u0627\u0635\u064a\u0644 \u062a\u0646\u0641\u064a\u0630\u064a\u0629 \u0641\u064a \u0627\u0644\u0639\u0642\u062f (\u0645\u062b\u0644 \u0623\u0646\u0648\u0627\u0639 \u0628\u0646\u064a\u0629 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a).  </li> <li>\u062e\u0644\u0637 Abstraction \u0645\u0639 Encapsulation: \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u062a\u0635\u0641 \u0645\u0627\u061b \u0644\u0627 \u062a\u0643\u0634\u0641 \u0643\u064a\u0641.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0646\u0648\u0639 \u0645\u0644\u0645\u0648\u0633 \u0628\u062f\u0644 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0641\u064a \u0627\u0644\u062a\u0648\u0627\u0642\u064a\u0639 \u2192 \u0641\u0642\u062f\u0627\u0646 \u0627\u0644\u0645\u0631\u0648\u0646\u0629.  </li> <li>\u0627\u0644\u0625\u0641\u0631\u0627\u0637 \u0641\u064a Default Interface Methods\u061b \u0642\u062f \u064a\u0639\u0642\u0651\u062f \u0627\u0644\u062a\u0648\u0627\u0641\u0642.</li> </ul>"},{"location":"terms/interface/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Interface \u0639\u0642\u062f \u0633\u0644\u0648\u0643 \u062f\u0648\u0646 \u062d\u0627\u0644\u0629 \u062a\u0645\u0643\u0651\u0646 \u0627\u0644\u062a\u062c\u0631\u064a\u062f \u0648\u0627\u0644\u062a\u0628\u062f\u064a\u0644/\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Abstract Class \u0639\u0642\u062f + \u0633\u0644\u0648\u0643/\u062d\u0627\u0644\u0629 \u0645\u0634\u062a\u0631\u0643\u0629 \u0648\u0631\u0627\u062b\u0629 \u0645\u0641\u0631\u062f\u0629\u061b \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0642\u0648\u0627\u0644\u0628 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0629 Composition \u062a\u0631\u0643\u064a\u0628 \u0633\u0644\u0648\u0643 \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u064a\u0641\u0636\u0651\u064e\u0644 \u0639\u0644\u0649 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u0644\u0644\u062a\u0628\u062f\u064a\u0644 Polymorphism \u062a\u0646\u0641\u064a\u0630\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629 \u0644\u0646\u0641\u0633 \u0627\u0644\u0639\u0642\u062f \u064a\u062a\u062d\u0642\u0642 \u0639\u0628\u0631 \u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a/\u0627\u0644\u0648\u0631\u0627\u062b\u0629 Encapsulation \u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u062e\u0644\u0641 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u062a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642\u0647"},{"location":"terms/interface/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Interface = \u0639\u0642\u062f \u0648\u0627\u0636\u062d \u0644\u0645\u0627 \u064a\u0645\u0643\u0646 \u0641\u0639\u0644\u0647. \u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0639\u0642\u0648\u062f \u0635\u063a\u064a\u0631\u0629 \u0645\u0631\u0643\u0651\u0632\u0629\u060c \u0648\u0645\u0631\u0651\u0631\u0647\u0627 \u0639\u0628\u0631 DI\u060c \u0648\u0627\u0643\u062a\u0628 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0639\u0642\u062f\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0638\u0627\u0645 \u0645\u0631\u0646\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644\u060c \u0648\u0633\u0647\u0644 \u0627\u0644\u0635\u064a\u0627\u0646\u0629 \u062f\u0648\u0646 \u0627\u0642\u062a\u0631\u0627\u0646 \u0628\u0627\u0644\u062a\u0646\u0641\u064a\u0630. </p>"},{"location":"terms/ip-address/","title":"IP Address","text":""},{"location":"terms/ip-address/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Internet Protocol Address \u2014 \u0639\u0646\u0648\u0627\u0646 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a (\u0645\u064f\u0639\u0631\u0651\u0650\u0641 \u0631\u0642\u0645\u064a \u0644\u0648\u0627\u062c\u0647\u0629 \u0634\u0628\u0643\u0629).</p>"},{"location":"terms/ip-address/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0645\u0639\u0631\u0651\u0641 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0644\u062a\u0648\u062c\u064a\u0647 \u0627\u0644\u0631\u0651\u064f\u0632\u0645 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0627\u062a. \u064a\u0648\u062c\u062f IPv4 (32-\u0628\u062a) \u0648IPv6 (128-\u0628\u062a)\u060c \u0648\u0642\u062f \u064a\u0643\u0648\u0646 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0639\u0627\u0645\u064b\u0627 \u0623\u0648 \u062e\u0627\u0635\u064b\u0627\u060c \u062b\u0627\u0628\u062a\u064b\u0627 \u0623\u0648 \u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u064b\u0627 (DHCP).</p>"},{"location":"terms/ip-address/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0641\u064a\u062f \u0644\u062a\u062d\u062f\u064a\u062f \u0645\u0646 \u0623\u064a\u0646 \u0648\u0625\u0644\u0649 \u0623\u064a\u0646 \u062a\u064f\u0631\u0633\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>IPv4 \u0628\u0635\u064a\u063a\u0629 \u0646\u0642\u0627\u0637: <code>192.168.1.10</code>.  </li> <li>IPv6 \u0628\u0635\u064a\u063a\u0629 \u0633\u062a \u0639\u0634\u0631\u064a\u0651\u0629: <code>2001:db8::1</code>.  </li> <li>\u0639\u0646\u0627\u0648\u064a\u0646 \u062e\u0627\u0635\u0651\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0645\u062d\u0644\u064a\u0651\u0629 (NAT)\u060c \u0648\u0639\u0627\u0645\u0651\u0629 \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a.  </li> <li>\u0642\u0646\u0627\u0639 \u0627\u0644\u0634\u0628\u0643\u0629/CIDR \u064a\u062d\u062f\u0651\u062f \u062c\u0632\u0621 \u0627\u0644\u0634\u0628\u0643\u0629 \u0648\u062c\u0632\u0621 \u0627\u0644\u0645\u0636\u064a\u0641 (\u0645\u062b\u0644: <code>192.168.1.0/24</code>).</li> </ul>"},{"location":"terms/ip-address/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0639\u0646\u0648\u0627\u0646 \u0628\u064a\u062a\u0643 \u0639\u0644\u0649 \u0627\u0644\u062e\u0631\u064a\u0637\u0629: \u064a\u062a\u064a\u062d \u0644\u0633\u064a\u0651\u0627\u0631\u0629 \u0627\u0644\u062a\u0648\u0635\u064a\u0644 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u064a\u0643. \u0628\u0639\u0636 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u062f\u0627\u062e\u0644 \u0645\u062c\u0645\u0639 \u0633\u0643\u0646\u064a \u062e\u0627\u0635 (\u062e\u0627\u0635\u0629)\u060c \u0648\u0623\u062e\u0631\u0649 \u0639\u0644\u0649 \u0627\u0644\u0634\u0627\u0631\u0639 \u0627\u0644\u0639\u0627\u0645 (\u0639\u0627\u0645\u0651\u0629).</p>"},{"location":"terms/ip-address/#c-ipv4ipv6","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u0642\u0631\u0627\u0621\u0629 IPv4/IPv6 + \u062a\u0645\u064a\u064a\u0632 \u0627\u0644\u062e\u0627\u0635/\u0627\u0644\u0639\u0627\u0645)","text":"<p>C#<pre><code>using System;\nusing System.Linq;\nusing System.Net;\nusing System.Net.Sockets;\n\nclass Program\n{\n    static void Main()\n    {\n        // 1) \u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u062c\u0647\u0627\u0632 \u0627\u0644\u062d\u0627\u0644\u064a\n        var host = Dns.GetHostName();\n        var entry = Dns.GetHostEntry(host);\n\n        foreach (var ip in entry.AddressList)\n        {\n            string ver = ip.AddressFamily == AddressFamily.InterNetwork ? \"IPv4\"\n                      : ip.AddressFamily == AddressFamily.InterNetworkV6 ? \"IPv6\"\n                      : \"Other\";\n\n            Console.WriteLine($\"{ip} [{ver}] {(IsPrivateIPv4(ip) ? \"(Private)\" : \"\")}\");\n        }\n\n        // 2) \u062a\u062d\u0644\u064a\u0644 \u0646\u0635\u0651 \u0625\u0644\u0649 IP \u0648\u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u0646\u0633\u062e\u0629\n        if (IPAddress.TryParse(\"192.168.1.10\", out var parsed))\n        {\n            Console.WriteLine($\"Parsed: {parsed} -&gt; {(parsed.AddressFamily == AddressFamily.InterNetwork ? \"IPv4\" : \"IPv6\")}\");\n        }\n    }\n\n    // \u062a\u062d\u0642\u0651\u0642 \u0628\u0633\u064a\u0637 \u0644\u0645\u062f\u0649 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u062e\u0627\u0635\u0651\u0629 \u0641\u064a IPv4 (RFC1918) + loopback/link-local\n    static bool IsPrivateIPv4(IPAddress ip)\n    {\n        if (ip.AddressFamily != AddressFamily.InterNetwork) return false;\n        var b = ip.GetAddressBytes();\n\n        // 10.0.0.0/8\n        if (b[0] == 10) return true;\n\n        // 172.16.0.0/12  =&gt; 172.16.0.0 - 172.31.255.255\n        if (b[0] == 172 &amp;&amp; b[1] &gt;= 16 &amp;&amp; b[1] &lt;= 31) return true;\n\n        // 192.168.0.0/16\n        if (b[0] == 192 &amp;&amp; b[1] == 168) return true;\n\n        // 127.0.0.0/8 loopback\n        if (b[0] == 127) return true;\n\n        // 169.254.0.0/16 link-local (APIPA)\n        if (b[0] == 169 &amp;&amp; b[1] == 254) return true;\n\n        return false;\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u064a\u0633\u0631\u062f \u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u062c\u0647\u0627\u0632 (IPv4/IPv6)\u060c \u0648\u064a\u0639\u0644\u0651\u0645 \u0627\u0644\u062e\u0627\u0635\u0651\u0629 \u0628\u0640 <code>(Private)</code>. - \u064a\u0637\u0628\u0639 \u0646\u062a\u064a\u062c\u0629 \u062a\u062d\u0644\u064a\u0644 \u0646\u0635\u0651 \u0639\u0646\u0648\u0627\u0646.</p>"},{"location":"terms/ip-address/#ip","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0639\u0646\u0627\u0648\u064a\u0646 IP","text":"<ul> <li>\u0627\u0639\u0631\u0641 \u0628\u064a\u0626\u062a\u0643: \u0647\u0644 \u062a\u062d\u062a\u0627\u062c \u0639\u0627\u0645\u064b\u0627 (\u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a) \u0623\u0645 \u062e\u0627\u0635\u064b\u0627 (\u062f\u0627\u062e\u0644 LAN/NAT)\u061f  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 DHCP \u0644\u0644\u062a\u0648\u0632\u064a\u0639 \u0627\u0644\u0622\u0644\u064a\u060c \u0648\u062d\u062c\u0648\u0632\u0627\u062a DHCP \u0644\u0644\u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u062b\u0627\u0628\u062a\u0629.  </li> <li>\u0639\u0646\u062f \u0625\u0639\u062f\u0627\u062f \u062e\u0627\u062f\u0645: \u062d\u062f\u0651\u062f \u0627\u0644\u0645\u0646\u0641\u0630 \u0648\u0627\u0641\u062a\u062d\u0647 \u0641\u064a \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0648\u0648\u062c\u0651\u0647 NAT/Port Forwarding \u0625\u0646 \u0644\u0632\u0645.  </li> <li>\u0627\u0641\u0647\u0645 CIDR (<code>/24</code>, <code>/32</code>, \u2026) \u0644\u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0634\u0628\u0643\u0627\u062a.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0646\u0638\u0627\u0645:  </li> <li>Windows: <code>ipconfig</code>, <code>Get-NetIPAddress</code> </li> <li>Linux/macOS: <code>ip addr</code>, <code>ifconfig</code> </li> <li>\u0644\u0644\u0645\u062c\u0627\u0644\u0627\u062a: \u0627\u0631\u0628\u0637 \u0627\u0644\u0627\u0633\u0645 \u0628\u0640 IP \u0639\u0628\u0631 DNS (A/AAAA) \u0648\u0627\u062e\u062a\u0631 TTL \u0645\u0646\u0627\u0633\u0628\u064b\u0627.</li> </ul>"},{"location":"terms/ip-address/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 DNS (\u0627\u0633\u0645) \u0648IP (\u0639\u0646\u0648\u0627\u0646) \u2014 \u062a\u0639\u064a\u064a\u0646 \u0627\u0644\u0627\u0633\u0645 \u064a\u062a\u0645 \u0639\u0628\u0631 \u0633\u062c\u0644\u0627\u062a DNS.  </li> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 \u0639\u0646\u0648\u0627\u0646\u064b\u0627 \u062e\u0627\u0635\u064b\u0627 \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u064a\u0647 \u0645\u0646 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u062f\u0648\u0646 NAT.  </li> <li>\u062a\u0639\u064a\u064a\u0646 Static IP \u062f\u0627\u062e\u0644 \u0645\u062f\u0649 DHCP \u062f\u0648\u0646 \u062d\u062c\u0632 \u2192 \u062a\u0639\u0627\u0631\u0636 \u0639\u0646\u0627\u0648\u064a\u0646.  </li> <li>\u0646\u0633\u064a\u0627\u0646 IPv6: \u0628\u0639\u0636 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u062a\u064f\u0641\u0639\u0651\u0644\u0647 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627\u061b \u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0623\u0645\u0627\u0646/\u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0644\u0647 \u0623\u064a\u0636\u064b\u0627.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0642\u0646\u0627\u0639/\u200fCIDR \u062e\u0627\u0637\u0626 \u2192 \u0639\u0632\u0644 \u063a\u064a\u0631 \u0645\u0642\u0635\u0648\u062f \u0623\u0648 \u0627\u0635\u0637\u062f\u0627\u0645 \u0634\u0628\u0643\u0627\u062a.</li> </ul>"},{"location":"terms/ip-address/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IPv4 \u0639\u0646\u0627\u0648\u064a\u0646 32-\u0628\u062a (\u0646\u0642\u0627\u0637) \u0645\u0633\u0627\u062d\u0629 \u0645\u062d\u062f\u0648\u062f\u0629\u060c \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u0633\u0639 \u0644\u0640 NAT IP Address \u0645\u064f\u0639\u0631\u0651\u0641 \u0634\u0628\u0643\u0629 \u0644\u0645\u0636\u064a\u0641/\u0648\u0627\u062c\u0647\u0629 IPv4/IPv6\u061b \u0639\u0627\u0645/\u062e\u0627\u0635\u061b \u062b\u0627\u0628\u062a/\u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a IPv6 \u0639\u0646\u0627\u0648\u064a\u0646 128-\u0628\u062a (\u0633\u062a \u0639\u0634\u0631\u064a) \u0645\u0633\u0627\u062d\u0629 \u0636\u062e\u0645\u0629\u060c \u062f\u0639\u0645 \u0645\u064a\u0632\u0627\u062a \u0645\u062b\u0644 SLAAC"},{"location":"terms/ip-address/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0639\u0646\u0648\u0627\u0646 IP \u0647\u0648 \u0627\u0644\u0647\u0648\u064a\u0629 \u0627\u0644\u0634\u0628\u0643\u064a\u0629 \u0627\u0644\u062a\u064a \u062a\u0633\u0645\u062d \u0628\u062a\u0648\u062c\u064a\u0647 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0625\u0644\u0649 \u0627\u0644\u0645\u0636\u064a\u0641 \u0627\u0644\u0635\u062d\u064a\u062d. \u0627\u062e\u062a\u0631 \u0628\u064a\u0646 IPv4/IPv6\u060c \u0627\u0641\u0647\u0645 \u0639\u0627\u0645/\u062e\u0627\u0635 \u0648CIDR\u060c \u0648\u0627\u0636\u0628\u0637 DHCP/NAT \u0648DNS \u0648\u0641\u0642 \u062d\u0627\u062c\u062a\u0643.</p>"},{"location":"terms/ipaas/","title":"iPaaS","text":""},{"location":"terms/ipaas/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Integration Platform as a Service (iPaaS) \u2014 \u0645\u0646\u0635\u0651\u0629 \u062a\u0643\u0627\u0645\u0644 \u0643\u062e\u062f\u0645\u0629.</p>"},{"location":"terms/ipaas/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062e\u062f\u0645\u0629 \u0633\u062d\u0627\u0628\u064a\u0629 \u0644\u062a\u0648\u0635\u064a\u0644 \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0648\u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0639\u0628\u0631 \u0645\u0648\u0635\u0644\u0627\u062a \u062c\u0627\u0647\u0632\u0629 (Connectors)\u060c \u0648\u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0631\u0633\u0648\u0645\u064a\u0629/\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0628\u0631\u0645\u062c\u0629: Triggers\u060c Mapping\u060c \u062a\u062d\u0648\u064a\u0644\u060c \u062a\u0646\u0628\u064a\u0647\u0627\u062a\u060c \u0645\u0631\u0627\u0642\u0628\u0629.</p>"},{"location":"terms/ipaas/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0628\u0646\u064a \u062a\u0643\u0627\u0645\u0644\u0627\u062a \u0628\u062f\u0648\u0646/\u0628\u0642\u0644\u064a\u0644 \u0643\u0648\u062f: \u0633\u062d\u0628 \u0628\u064a\u0627\u0646\u0627\u062a\u060c \u062a\u062d\u0648\u064a\u0644\u0647\u0627\u060c \u0648\u0625\u0631\u0633\u0627\u0644\u0647\u0627 \u0644\u0646\u0638\u0627\u0645 \u0622\u062e\u0631.  </li> <li>\u062a\u062f\u0639\u0645 \u0623\u0646\u0645\u0627\u0637 Sync (REST/gRPC) \u0648Async (\u0631\u0633\u0627\u0626\u0644/\u0623\u062d\u062f\u0627\u062b/Webhooks).  </li> <li>\u062a\u0648\u0641\u0631 Connectors \u0644\u0639\u0634\u0631\u0627\u062a SaaS/\u0642\u0648\u0627\u0639\u062f \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a.  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u0645\u0631\u0643\u0632\u064a\u0629: \u0623\u0633\u0631\u0627\u0631\u060c \u062c\u062f\u0627\u0648\u0644 \u0641\u0634\u0644 (DLQ)\u060c \u0625\u0639\u0627\u062f\u0629 \u0645\u062d\u0627\u0648\u0644\u0629\u060c \u0633\u062c\u0644\u0627\u062a \u0648\u062a\u062a\u0628\u0639.</li> </ul>"},{"location":"terms/ipaas/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0645\u0637\u0627\u0631 \u062a\u062d\u0648\u064a\u0644 \u0644\u0644\u0634\u062d\u0646: \u064a\u0633\u062a\u0642\u0628\u0644 \u0634\u062d\u0646\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629\u060c \u064a\u0639\u064a\u062f \u062a\u063a\u0644\u064a\u0641\u0647\u0627\u060c \u062b\u0645 \u064a\u0631\u0633\u0644\u0647\u0627 \u0644\u0648\u062c\u0647\u0627\u062a \u0645\u062a\u0639\u062f\u0651\u062f\u0629 \u0648\u0641\u0642 \u0642\u0648\u0627\u0639\u062f \u0648\u062a\u0648\u0642\u064a\u062a.</p>"},{"location":"terms/ipaas/#c-ipaas-trigger-callback","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0645\u062e\u062a\u0635\u0631 \u2014 \u062a\u0634\u063a\u064a\u0644 \u062a\u062f\u0641\u0651\u0642 iPaaS (Trigger) + \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0631\u062f\u0651 (Callback)","text":"<p>\u0627\u0644\u0641\u0643\u0631\u0629: 1) Outbound: \u0646\u0633\u062a\u062f\u0639\u064a Webhook Trigger \u0644\u0644\u0640 iPaaS \u0645\u0639 Bearer \u0648Idempotency-Key. 2) Inbound: \u0646\u0633\u062a\u0642\u0628\u0644 Callback \u0645\u0648\u0642\u0651\u0639 \u0628\u0640 HMAC \u0648\u0646\u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639.</p> C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n IpaasDemo &amp;&amp; cd IpaasDemo &amp;&amp; dotnet run\nusing System.Net;\nusing System.Net.Http.Headers;\nusing System.Security.Cryptography;\nusing System.Text;\n\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\n// ===== 1) \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u062a\u062f\u0641\u0651\u0642 iPaaS (Trigger) =====\napp.MapPost(\"/trigger-order\", async () =&gt;\n{\n    using var http = new HttpClient { Timeout = TimeSpan.FromSeconds(8) };\n\n    var url   = Environment.GetEnvironmentVariable(\"IPAAS_TRIGGER_URL\") ?? \"https://ipaas.example/flows/order/trigger\";\n    var token = Environment.GetEnvironmentVariable(\"IPAAS_TOKEN\") ?? \"demo-token\";\n    var idem  = Guid.NewGuid().ToString(\"N\");\n\n    var payload = \"\"\"{\"orderId\":\"A-1001\",\"amount\":120.50,\"currency\":\"USD\"}\"\"\";\n    using var req = new HttpRequestMessage(HttpMethod.Post, url);\n    req.Headers.Authorization = new AuthenticationHeaderValue(\"Bearer\", token);\n    req.Headers.Add(\"Idempotency-Key\", idem);\n    req.Content = new StringContent(payload, Encoding.UTF8, \"application/json\");\n\n    for (int attempt = 1; attempt &lt;= 3; attempt++)\n    {\n        using var res = await http.SendAsync(req);\n        if (res.IsSuccessStatusCode)\n            return Results.Text(await res.Content.ReadAsStringAsync(), \"application/json\");\n\n        if (res.StatusCode is HttpStatusCode.TooManyRequests or &gt;= HttpStatusCode.InternalServerError)\n            await Task.Delay(TimeSpan.FromMilliseconds(200 * Math.Pow(2, attempt)));\n        else\n            return Results.StatusCode((int)res.StatusCode);\n    }\n    return Results.StatusCode(504);\n});\n\n// ===== 2) \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0631\u062f\u0651 iPaaS (Callback/Webhook) \u0645\u0639 \u062a\u0648\u0642\u064a\u0639 HMAC =====\napp.MapPost(\"/callbacks/ipaas\", async (HttpRequest req) =&gt;\n{\n    string sig = req.Headers[\"X-Signature\"];         // \u0645\u062b\u0627\u0644: sha256=HEX\n    string ts  = req.Headers[\"X-Timestamp\"];         // Unix seconds\n\n    using var reader = new StreamReader(req.Body, Encoding.UTF8);\n    var body = await reader.ReadToEndAsync();\n\n    if (!long.TryParse(ts, out var t) ||\n        DateTimeOffset.UtcNow - DateTimeOffset.FromUnixTimeSeconds(t) &gt; TimeSpan.FromMinutes(5))\n        return Results.Unauthorized();\n\n    var secret = Environment.GetEnvironmentVariable(\"IPAAS_WEBHOOK_SECRET\") ?? \"dev-secret\";\n    using var h = new HMACSHA256(Encoding.UTF8.GetBytes(secret));\n    var expect = \"sha256=\" + Convert.ToHexString(h.ComputeHash(Encoding.UTF8.GetBytes($\"{ts}.{body}\"))).ToLowerInvariant();\n\n    if (!CryptographicOperations.FixedTimeEquals(Encoding.UTF8.GetBytes(sig), Encoding.UTF8.GetBytes(expect)))\n        return Results.Unauthorized();\n\n    Console.WriteLine($\"Callback OK: {body}\");\n    // TODO: \u0636\u0639 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0641\u064a \u0637\u0627\u0628\u0648\u0631 \u062b\u0645 \u0623\u0639\u062f 200 \u0633\u0631\u064a\u0639\u064b\u0627\n    return Results.Ok();\n});\n\napp.Run();\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - <code>POST /trigger-order</code> \u2192 \u064a\u0631\u062c\u0639 \u0646\u062a\u064a\u062c\u0629 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u062a\u062f\u0641\u0651\u0642 (RunId/Status). - <code>POST /callbacks/ipaas</code> \u2192 <code>200 OK</code> \u0628\u0639\u062f \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639.</p>"},{"location":"terms/ipaas/#ipaas_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f iPaaS","text":"<ol> <li>\u0646\u0637\u0627\u0642 \u0627\u0644\u062a\u0643\u0627\u0650\u0645\u0644: \u0645\u0635\u0627\u062f\u0631/\u0648\u062c\u0647\u0627\u062a\u060c \u062d\u062c\u0652\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u062a\u0623\u062e\u064a\u0631 \u0645\u0642\u0628\u0648\u0644 (SLA).  </li> <li>\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0645\u0648\u0635\u0644\u0627\u062a: SaaS/DB/\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0645\u0637\u0644\u0648\u0628\u0629. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0644\u0642\u064a\u0648\u062f (\u062d\u0635\u0629/\u062d\u062f\u0648\u062f \u0645\u0639\u062f\u0651\u0644).  </li> <li>\u0627\u0644\u062a\u0635\u0645\u064a\u0645: Triggers\u060c \u0642\u0648\u0627\u0639\u062f Routing\u060c Mapping/Transforms\u060c \u0648\u0625\u062b\u0631\u0627\u0621 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (Enrichment).  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646: \u0623\u0633\u0631\u0627\u0631 \u0641\u064a Vault\u060c OAuth2/mTLS/HMAC \u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a\u060c \u0648\u0625\u062e\u0641\u0627\u0621 \u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0627\u0633\u0629.  </li> <li>\u0627\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629: Retries + Backoff\u060c Idempotency, DLQ\u060c \u0648\u0645\u0639\u0627\u0644\u062c\u0629 \u0623\u062e\u0637\u0627\u0621 \u0645\u0631\u0643\u0632\u064a\u0629.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u0633\u062c\u0644\u0627\u062a\u060c \u0642\u064a\u0627\u0633\u0627\u062a\u060c Tracing/Correlation-Id\u060c \u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0648\u0625\u0639\u0627\u062f\u0629 \u062a\u0634\u063a\u064a\u0644 \u0622\u0644\u064a.  </li> <li>\u0627\u0644\u0625\u0635\u062f\u0627\u0631: \u0628\u064a\u0626\u0627\u062a <code>dev/staging/prod</code>\u060c Versioning \u0644\u0644\u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0648\u0627\u0644\u0640 Schemas\u060c \u0648\u0639\u0645\u0644\u064a\u0627\u062a \u0646\u0634\u0631 \u0622\u0645\u0646\u0629.  </li> <li>\u0627\u0644\u062a\u0643\u0644\u0641\u0629/\u0627\u0644\u0625\u0642\u0627\u0645\u0629: \u0631\u0627\u0642\u0628 \u0627\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643/\u0639\u062f\u062f \u0627\u0644\u062a\u0634\u063a\u064a\u0644\u0627\u062a\u060c \u0648\u0645\u0648\u0642\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (Residency).</li> </ol>"},{"location":"terms/ipaas/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 iPaaS \u0644\u0643\u0644 \u0634\u064a\u0621 \u0628\u062f\u0644 \u062d\u0627\u0644\u0627\u062a\u0647 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u2192 \u062a\u0643\u0644\u0641\u0629/\u062a\u0639\u0642\u064a\u062f \u0632\u0627\u0626\u062f.  </li> <li>\u062a\u062c\u0627\u0647\u0644 Idempotency \u0639\u0646\u062f \u0627\u0644\u0645\u062f\u0641\u0648\u0639\u0627\u062a/\u0627\u0644\u0637\u0644\u0628\u0627\u062a.  </li> <li>\u062a\u0631\u0643 \u0623\u0633\u0631\u0627\u0631 \u0641\u064a \u062e\u0637\u0648\u0627\u062a \u0627\u0644\u062a\u062f\u0641\u0651\u0642 \u0628\u062f\u0644 Secret Store.  </li> <li>\u0639\u062f\u0645 \u062a\u0648\u062b\u064a\u0642 Schema \u0648\u0646\u0633\u062e\u0647 \u2192 \u062a\u0643\u0627\u0645\u0644\u0627\u062a \u0647\u0634\u0629 \u0639\u0646\u062f \u0627\u0644\u062a\u063a\u064a\u064a\u0631.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Polling \u0639\u0646\u062f\u0645\u0627 \u064a\u062a\u0648\u0641\u0631 Webhook \u0623\u0648 Events.  </li> <li>\u0625\u0647\u0645\u0627\u0644 DLQ/Alerts \u2192 \u0636\u064a\u0627\u0639 \u0623\u062d\u062f\u0627\u062b \u0628\u0635\u0645\u062a.</li> </ul>"},{"location":"terms/ipaas/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Integration \u0631\u0628\u0637 \u0623\u0646\u0638\u0645\u0629 \u0628\u0639\u0642\u0648\u062f \u0648\u0623\u0645\u0646 \u0642\u062f \u062a\u0628\u0646\u064a\u0647 \u064a\u062f\u0648\u064a\u064b\u0627 \u0623\u0648 \u0639\u0628\u0631 iPaaS iPaaS \u062a\u0643\u0627\u0645\u0644 \u0645\u064f\u062f\u0627\u0631 \u0628\u0645\u0648\u0635\u0644\u0627\u062a \u0648\u062a\u062f\u0641\u0651\u0642\u0627\u062a \u062c\u0627\u0647\u0632\u0629 \u0642\u0644\u064a\u0644/\u0628\u062f\u0648\u0646 \u0643\u0648\u062f\u060c \u0645\u0631\u0627\u0642\u0628\u0629/\u0623\u062a\u0645\u062a\u0629 \u0645\u062f\u0645\u062c\u0629 ETL/ELT \u062a\u062d\u0631\u064a\u0643/\u062a\u062d\u0648\u064a\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u062f\u0641\u0639\u064a\u0629 \u062a\u0631\u0643\u064a\u0632 \u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0643\u062b\u0631 \u0645\u0646 \u0627\u0644\u062a\u0643\u0627\u0645\u0644 \u0627\u0644\u062a\u0634\u063a\u064a\u0644\u064a API Gateway \u062a\u0648\u062d\u064a\u062f \u0648\u0646\u0634\u0631 \u0648\u0627\u062c\u0647\u0627\u062a API \u062a\u062d\u0643\u0651\u0645 \u0628\u0627\u0644\u0648\u0635\u0648\u0644/\u0627\u0644\u0645\u0639\u062f\u0644\u061b \u0644\u064a\u0633 \u0628\u062f\u064a\u0644\u0627\u064b \u0639\u0646 \u0627\u0644\u062a\u062f\u0641\u0642\u0627\u062a ESB \u0646\u0627\u0642\u0644 \u0645\u0624\u0633\u0633\u064a \u062f\u0627\u062e\u0644 \u0627\u0644\u062f\u0627\u062a\u0627 \u0633\u0646\u062a\u0631 \u062a\u0627\u0631\u064a\u062e\u064a\u064b\u0627 on-prem\u061b iPaaS = \u0645\u0639\u0627\u062f\u0644 \u0633\u062d\u0627\u0628\u064a \u0645\u0631\u0646"},{"location":"terms/ipaas/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>iPaaS \u064a\u0633\u0631\u0651\u0639 \u0628\u0646\u0627\u0621 \u0627\u0644\u062a\u0643\u0627\u0645\u0644\u0627\u062a \u0639\u0628\u0631 \u0645\u0648\u0635\u0644\u0627\u062a \u062c\u0627\u0647\u0632\u0629 \u0648\u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0636\u0628\u0637\u060c \u0645\u0639 \u0623\u0645\u0627\u0646 \u0648\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0625\u0639\u0627\u062f\u0629 \u0645\u062d\u0627\u0648\u0644\u0629 \u062e\u0627\u0631\u062c \u0627\u0644\u0635\u0646\u062f\u0648\u0642. \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0639\u0646\u062f\u0645\u0627 \u062a\u0631\u064a\u062f \u0633\u0631\u0639\u0629 \u0648\u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u0628\u062f\u0648\u0646 \u0628\u0646\u0627\u0621 \u0645\u0646\u0635\u0651\u0629 \u062a\u0643\u0627\u0645\u0644 \u0645\u0646 \u0627\u0644\u0635\u0641\u0631\u2014\u0648\u0627\u062d\u0641\u0638 \u0639\u0642\u0648\u062f\u0643 \u0648\u0646\u0633\u062e\u0643 \u0648\u062c\u0648\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a\u0643 \u062a\u062d\u062a \u0627\u0644\u0633\u064a\u0637\u0631\u0629.</p>"},{"location":"terms/ipv4/","title":"IPv4","text":""},{"location":"terms/ipv4/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Internet Protocol version 4 (IPv4) \u2014 \u0625\u0635\u062f\u0627\u0631 4 \u0645\u0646 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a (\u0639\u0646\u0627\u0648\u064a\u0646 32-\u0628\u062a \u0628\u0635\u064a\u063a\u0629 \u0646\u0642\u0627\u0637).</p>"},{"location":"terms/ipv4/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0638\u0627\u0645 \u0639\u0646\u0648\u0646\u0629 \u0634\u0628\u0643\u064a \u0628\u0637\u0648\u0644 32 \u0628\u062a. \u064a\u0639\u0631\u0651\u0641 \u0639\u0646\u0627\u0648\u064a\u0646 \u0645\u0636\u064a\u0641\u064a\u0646\u060c \u0648\u0634\u0628\u0643\u0627\u062a \u0641\u0631\u0639\u064a\u0629 (CIDR)\u060c \u0648\u064a\u062f\u0639\u0645 \u0627\u0644\u062a\u0648\u062c\u064a\u0647 \u0648\u0627\u0644\u0625\u0630\u0627\u0639\u0629 (Broadcast). \u0635\u064a\u063a\u0629 \u0627\u0644\u0643\u062a\u0627\u0628\u0629: <code>a.b.c.d</code> \u0645\u062b\u0644 <code>192.168.1.10</code>. \u0646\u0637\u0627\u0642 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0645\u062d\u062f\u0648\u062f\u060c \u0644\u0630\u0627 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 NAT \u0628\u0643\u062b\u0631\u0629.</p>"},{"location":"terms/ipv4/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u064a\u0642\u0633\u0645 \u0625\u0644\u0649 \u0634\u0628\u0643\u0629 + \u0645\u0636\u064a\u0641 \u062d\u0633\u0628 \u0627\u0644\u0642\u0646\u0627\u0639/\u0627\u0644\u0633\u0627\u0628\u0642\u0629 (<code>/24</code> \u0645\u062b\u0644\u064b\u0627).  </li> <li>\u062e\u0627\u0635 (Private) \u0644\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062f\u0627\u062e\u0644\u064a: <code>10.0.0.0/8</code>, <code>172.16.0.0/12</code>, <code>192.168.0.0/16</code>.  </li> <li>\u0639\u0627\u0645 (Public) \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a.  </li> <li>Broadcast = \u0622\u062e\u0631 \u0639\u0646\u0648\u0627\u0646 \u0628\u0627\u0644\u0634\u0628\u0643\u0629\u060c \u0648Network = \u0623\u0648\u0644 \u0639\u0646\u0648\u0627\u0646.  </li> <li>NAT \u064a\u062a\u0631\u062c\u0645 \u0627\u0644\u062e\u0627\u0635 \u2194 \u0627\u0644\u0639\u0627\u0645 \u0644\u062a\u0648\u0641\u064a\u0631 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646.</li> </ul>"},{"location":"terms/ipv4/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062c\u0645\u0651\u0639 \u0633\u0643\u0646\u064a: \u0623\u0631\u0642\u0627\u0645 \u0627\u0644\u0639\u0645\u0627\u0631\u0629 (\u062c\u0632\u0621 \u0627\u0644\u0634\u0628\u0643\u0629) \u062b\u0645 \u0627\u0644\u0634\u0642\u0629 (\u062c\u0632\u0621 \u0627\u0644\u0645\u0636\u064a\u0641). \u0622\u062e\u0631 \u0634\u0642\u0629 \u0645\u062e\u0635\u0651\u0635\u0629 \u0644\u0644\u0625\u0630\u0627\u0639\u0629 \u0627\u0644\u0639\u0627\u0645\u0629 \u0641\u064a \u0627\u0644\u0639\u0645\u0627\u0631\u0629 (Broadcast).</p>"},{"location":"terms/ipv4/#c-ipv4-broadcast","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062a\u062d\u0644\u064a\u0644 IPv4 + \u062d\u0633\u0627\u0628 \u0634\u0628\u0643\u0629/Broadcast)","text":"<p>C#<pre><code>using System;\nusing System.Linq;\nusing System.Net;\nusing System.Net.Sockets;\n\nstatic class IPv4Util\n{\n    public static bool TryParseIPv4(string s, out IPAddress ip)\n        =&gt; IPAddress.TryParse(s, out ip!) &amp;&amp; ip.AddressFamily == AddressFamily.InterNetwork;\n\n    public static bool IsPrivate(IPAddress ip)\n    {\n        var b = ip.GetAddressBytes();\n        return (b[0] == 10)\n            || (b[0] == 172 &amp;&amp; b[1] &gt;= 16 &amp;&amp; b[1] &lt;= 31)\n            || (b[0] == 192 &amp;&amp; b[1] == 168)\n            || (b[0] == 127)                            // Loopback\n            || (b[0] == 169 &amp;&amp; b[1] == 254);            // Link-local\n    }\n\n    public static (IPAddress network, IPAddress broadcast, IPAddress? firstHost, IPAddress? lastHost)\n        Calc(string ipStr, int prefix)\n    {\n        if (!TryParseIPv4(ipStr, out var ip) || prefix &lt; 0 || prefix &gt; 32)\n            throw new ArgumentException(\"Bad IPv4 or prefix\");\n\n        uint ipU = ToUInt32(ip);\n        uint mask = prefix == 0 ? 0u : 0xFFFFFFFFu &lt;&lt; (32 - prefix);\n        uint net  = ipU &amp; mask;\n        uint bcast = net | ~mask;\n\n        IPAddress? first = null, last = null;\n        if (prefix &lt;= 30) { first = FromUInt32(net + 1); last = FromUInt32(bcast - 1); }\n\n        return (FromUInt32(net), FromUInt32(bcast), first, last);\n    }\n\n    static uint ToUInt32(IPAddress ip)\n    {\n        var bytes = ip.GetAddressBytes();               // network order\n        if (BitConverter.IsLittleEndian) Array.Reverse(bytes);\n        return BitConverter.ToUInt32(bytes, 0);\n    }\n    static IPAddress FromUInt32(uint v)\n    {\n        var bytes = BitConverter.GetBytes(v);\n        if (BitConverter.IsLittleEndian) Array.Reverse(bytes);\n        return new IPAddress(bytes);\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var ip = \"192.168.1.42\";\n        var (net, bcast, first, last) = IPv4Util.Calc(ip, 24);\n\n        Console.WriteLine($\"{ip}/24\");\n        Console.WriteLine($\"Network   = {net}\");        // 192.168.1.0\n        Console.WriteLine($\"Broadcast = {bcast}\");      // 192.168.1.255\n        Console.WriteLine($\"FirstHost = {first}\");      // 192.168.1.1\n        Console.WriteLine($\"LastHost  = {last}\");       // 192.168.1.254\n\n        IPv4Util.TryParseIPv4(ip, out var ipObj);\n        Console.WriteLine(IPv4Util.IsPrivate(ipObj));   // True\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): \u064a\u0639\u0631\u0636 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0634\u0628\u0643\u0629\u060c \u0627\u0644\u0628\u062b\u060c \u0623\u0648\u0651\u0644/\u0622\u062e\u0631 \u0645\u0636\u064a\u0641\u060c \u0648\u064a\u064f\u0638\u0647\u0631 \u0623\u0646\u0651 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u062e\u0627\u0635.</p>"},{"location":"terms/ipv4/#ipv4_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 IPv4","text":"<ul> <li>\u062e\u0637\u0651\u0637 CIDR \u0648\u0627\u0636\u062d\u064b\u0627 (\u0645\u062b\u0644 <code>/24</code> \u0644\u0643\u0644 \u0634\u0628\u0643\u0629 \u0642\u0633\u0645) \u0648\u062a\u062c\u0646\u0651\u0628 \u062a\u062f\u0627\u062e\u0644 \u0627\u0644\u0634\u0628\u0643\u0627\u062a.  </li> <li>\u0627\u062d\u062c\u0632 \u0645\u062f\u0649 DHCP \u0645\u0646\u0641\u0635\u0644\u064b\u0627 \u0639\u0646 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u062b\u0627\u0628\u062a\u0629.  </li> <li>\u0644\u0644\u0625\u0646\u062a\u0631\u0646\u062a: \u0627\u0636\u0628\u0637 NAT/Port Forwarding \u0648\u0627\u0641\u062a\u0640\u062d \u0627\u0644\u0645\u0646\u0627\u0641\u0630 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0641\u064a \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643\u061b \u0639\u0646\u062f \u0636\u063a\u0637 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0641\u0643\u0651\u0631 \u0641\u064a IPv6 \u0623\u0648 \u062a\u0642\u0633\u064a\u0645 \u0634\u0628\u0643\u064a \u0623\u062f\u0642.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u062a\u062d\u0642\u0642:  </li> <li>Windows: <code>ipconfig</code>, <code>route print</code> </li> <li>Linux/macOS: <code>ip addr</code>, <code>ip route</code> </li> </ul>"},{"location":"terms/ipv4/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062e\u0644\u0637 \u0623\u0642\u0646\u0639\u0629 (<code>/24</code> \u0645\u0642\u0627\u0628\u0644 \u0642\u0646\u0627\u0639 255.255.0.0).  </li> <li>\u062a\u0648\u0632\u064a\u0639 \u0639\u0646\u0627\u0648\u064a\u0646 \u062b\u0627\u0628\u062a\u0629 \u062f\u0627\u062e\u0644 \u0645\u062f\u0649 DHCP \u2192 \u062a\u0639\u0627\u0631\u0636.  </li> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0648\u0635\u0648\u0644 \u0639\u0646\u0627\u0648\u064a\u0646 \u062e\u0627\u0635\u0629 \u0645\u0646 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0628\u062f\u0648\u0646 NAT.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0623\u0648 \u0625\u0639\u062f\u0627\u062f PTR \u0644\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0635\u0627\u062f\u0631.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 <code>/31</code> \u0623\u0648 <code>/32</code> \u062f\u0648\u0646 \u0641\u0647\u0645 \u062e\u0635\u0627\u0626\u0635\u0647\u0627 (\u0644\u0627 \u0645\u0636\u064a\u0641\u064a\u0646 \u062a\u0642\u0644\u064a\u062f\u064a\u064a\u0646).</li> </ul>"},{"location":"terms/ipv4/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IP Address \u0645\u064f\u0639\u0631\u0651\u0641 \u0634\u0628\u0643\u0629 \u0644\u0645\u0636\u064a\u0641/\u0648\u0627\u062c\u0647\u0629 \u0625\u0637\u0627\u0631 \u0639\u0627\u0645 \u0644\u0646\u0633\u062e\u062a\u064e\u064a \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 IPv4 \u0639\u0646\u0627\u0648\u064a\u0646 32-\u0628\u062a \u0628\u0635\u064a\u063a\u0629 \u0646\u0642\u0627\u0637 \u0645\u0633\u0627\u062d\u0629 \u0645\u062d\u062f\u0648\u062f\u0629\u061b \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 NAT\u061b \u0634\u0627\u0626\u0639 \u062c\u062f\u064b\u0627 IPv6 \u0639\u0646\u0627\u0648\u064a\u0646 128-\u0628\u062a \u0628\u0635\u064a\u063a\u0629 \u0633\u062a\u0651 \u0639\u0634\u0631\u064a\u0629 \u0645\u0633\u0627\u062d\u0629 \u0636\u062e\u0645\u0629\u061b \u0645\u064a\u0632\u0627\u062a \u062d\u062f\u064a\u062b\u0629 (SLAAC, \u0628\u062f\u0648\u0646 NAT \u063a\u0627\u0644\u0628\u064b\u0627)"},{"location":"terms/ipv4/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>IPv4 \u064a\u0632\u0648\u0651\u062f\u0643 \u0628\u0639\u0646\u0627\u0648\u064a\u0646 32-\u0628\u062a \u0644\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0641\u0631\u0639\u064a\u0629 \u0648\u062a\u0648\u062c\u064a\u0647 \u0627\u0644\u0631\u0632\u0645. \u062e\u0637\u0651\u0637 CIDR \u0628\u0648\u0636\u0648\u062d\u060c \u0627\u0641\u0635\u0644 DHCP \u0639\u0646 \u0627\u0644\u062b\u0648\u0627\u0628\u062a\u060c \u0648\u0627\u0636\u0628\u0637 NAT/Firewall \u062c\u064a\u062f\u064b\u0627\u2014\u0648\u0627\u0646\u062a\u0642\u0644 \u062a\u062f\u0631\u064a\u062c\u064a\u064b\u0627 \u0644\u0640 IPv6 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.</p>"},{"location":"terms/ipv6/","title":"IPv6","text":""},{"location":"terms/ipv6/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Internet Protocol version 6 (IPv6) \u2014 \u0625\u0635\u062f\u0627\u0631 6 \u0645\u0646 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a (\u0639\u0646\u0627\u0648\u064a\u0646 128-\u0628\u062a \u0633\u062a\u0651 \u0639\u0634\u0631\u064a\u0629 \u0645\u0641\u0635\u0648\u0644\u0629 \u0628\u0646\u0642\u0637\u062a\u064a\u0646).</p>"},{"location":"terms/ipv6/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0638\u0627\u0645 \u0639\u0646\u0648\u0646\u0629 \u062d\u062f\u064a\u062b \u0628\u0645\u0633\u0627\u062d\u0629 \u0647\u0627\u0626\u0644\u0629. \u0644\u0627 \u064a\u0648\u062c\u062f Broadcast\u061b \u064a\u0633\u062a\u062e\u062f\u0645 Multicast \u0648Anycast. \u064a\u062f\u0639\u0645 SLAAC \u0648NDP \u0644\u062a\u0643\u0648\u064a\u0646 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627. \u0623\u0645\u062b\u0644\u0629: <code>2001:db8::1</code>, <code>fe80::1234</code> (\u0631\u0627\u0628\u0637-\u0645\u062d\u0644\u064a).</p>"},{"location":"terms/ipv6/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0643\u062a\u0627\u0628\u0629: \u062b\u0645\u0627\u0646\u064a\u0629 \u0645\u0642\u0627\u0637\u0639 \u0633\u062a\u0651 \u0639\u0634\u0631\u064a\u0629 \u0645\u0641\u0635\u0648\u0644\u0629 <code>:</code> \u0645\u0639 \u0636\u063a\u0637 \u0627\u0644\u0623\u0635\u0641\u0627\u0631 (<code>::</code>).  </li> <li>\u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0639\u0627\u062f\u0629\u064b /64 \u0644\u0644\u0645\u0636\u064a\u0641\u064a\u0646.  </li> <li>\u0623\u0646\u0648\u0627\u0639 \u0645\u0647\u0645\u0629:</li> <li>Global Unicast: <code>2000::/3</code> (\u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a).  </li> <li>Link-Local: <code>fe80::/10</code> (\u062f\u0627\u062e\u0644 \u0627\u0644\u0648\u0635\u0644\u0629 \u0641\u0642\u0637).  </li> <li>Unique Local (ULA): <code>fc00::/7</code>.  </li> <li>Loopback: <code>::1</code>.  </li> <li>\u063a\u0627\u0644\u0628\u064b\u0627 \u0628\u062f\u0648\u0646 NAT: \u062a\u0648\u0635\u064a\u0644 \u0637\u0631\u0641-\u0644\u0637\u0631\u0641 \u0623\u0633\u0647\u0644\u060c \u0644\u0643\u0646 \u0636\u0628\u0637 \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0636\u0631\u0648\u0631\u064a.</li> </ul>"},{"location":"terms/ipv6/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0646\u062a\u0642\u0644\u062a \u0645\u0646 \u0634\u0627\u0631\u0639 \u0642\u062f\u064a\u0645 \u0645\u0632\u062f\u062d\u0645 \u0625\u0644\u0649 \u0645\u062f\u064a\u0646\u0629 \u062c\u062f\u064a\u062f\u0629 \u0648\u0627\u0633\u0639\u0629. \u0639\u0646\u0627\u0648\u064a\u0646 \u0643\u062b\u064a\u0631\u0629\u060c \u0637\u0631\u0642 \u0648\u0627\u0633\u0639\u0629\u060c \u0625\u0634\u0627\u0631\u0627\u062a \u0623\u0648\u0636\u062d (Multicast/Anycast \u0628\u062f\u0644 Broadcast).</p>"},{"location":"terms/ipv6/#c-ipv6","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062a\u062d\u0642\u0651\u0642/\u062a\u0635\u0646\u064a\u0641 IPv6 + \u0645\u0633\u062a\u0645\u0639 \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0646\u0645\u0637)","text":"<p>C#<pre><code>using System;\nusing System.Net;\nusing System.Net.Sockets;\n\nclass Program\n{\n    static void Main()\n    {\n        // 1) \u062a\u062d\u0644\u064a\u0644 \u0639\u0646\u0648\u0627\u0646 IPv6 \u0648\u062a\u0645\u064a\u064a\u0632\u0647\n        string s = \"2001:db8::42\";\n        if (IPAddress.TryParse(s, out var ip) &amp;&amp; ip.AddressFamily == AddressFamily.InterNetworkV6)\n        {\n            Console.WriteLine($\"{ip} = IPv6\");\n            Console.WriteLine($\"LinkLocal?   {ip.IsIPv6LinkLocal}\");\n            Console.WriteLine($\"UniqueLocal? {ip.IsIPv6UniqueLocal}\");\n            Console.WriteLine($\"Multicast?   {ip.IsIPv6Multicast}\");\n            Console.WriteLine($\"Teredo?      {ip.IsIPv6Teredo}\");\n        }\n\n        // 2) \u0645\u0633\u062a\u0645\u0639 TCP IPv6 \u064a\u0633\u062a\u0642\u0628\u0644 IPv6 \u0648IPv4 (Dual-Stack) \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0641\u0630 5000\n        var listener = new TcpListener(IPAddress.IPv6Any, 5000);\n        listener.Server.DualMode = true;    // \u064a\u0633\u0645\u062d \u0628\u0639\u0646\u0627\u0648\u064a\u0646 IPv4-mapped \u0623\u064a\u0636\u064b\u0627 (\u0625\u0646 \u062f\u0639\u0645\u0647\u0627 \u0627\u0644\u0646\u0638\u0627\u0645)\n        listener.Start();\n        Console.WriteLine(\"Listening on [::]:5000 (dual-stack). Press Enter to quit\u2026\");\n        Console.ReadLine();\n        listener.Stop();\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u064a\u0637\u0628\u0639 \u062e\u0635\u0627\u0626\u0635 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 (<code>LinkLocal/UniqueLocal/\u2026</code>). - \u064a\u0628\u062f\u0623 \u0645\u0633\u062a\u0645\u0639\u064b\u0627 \u0639\u0644\u0649 <code>[::]:5000</code> \u064a\u0642\u0628\u0644 IPv6 \u0648IPv4-mapped.</p>"},{"location":"terms/ipv6/#ipv6_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 IPv6","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 /64 \u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0645\u0636\u064a\u0641\u064a\u0646\u061b \u0644\u0627 \u062a\u064f\u062c\u0632\u0651\u0626 \u0623\u0635\u063a\u0631 \u0625\u0644\u0627 \u0644\u0631\u0648\u0627\u0628\u0637 \u0646\u0642\u0637\u064a\u0629/\u062d\u0627\u0644\u0627\u062a \u062e\u0627\u0635\u0629.  </li> <li>\u0641\u0639\u0651\u0644 DNS AAAA \u0644\u0644\u0623\u0633\u0645\u0627\u0621 \u0627\u0644\u0639\u0627\u0645\u0629\u060c \u0648\u0648\u0641\u0651\u0631 PTR \u0641\u064a <code>ip6.arpa</code> \u0625\u0630\u0627 \u0644\u0632\u0645.  </li> <li>\u0627\u0636\u0628\u0637 \u062c\u062f\u0627\u0631 \u0646\u0627\u0631\u064a IPv6 \u0635\u0631\u0627\u062d\u0629\u064b (\u0644\u0627 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 NAT \u0644\u0644\u062d\u0645\u0627\u064a\u0629).  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0628\u0627\u0644\u0623\u062f\u0648\u0627\u062a:</li> <li>Windows: <code>ping -6</code>, <code>tracert -6</code>, <code>Get-NetIPAddress</code>.  </li> <li>Linux/macOS: <code>ping6</code> \u0623\u0648 <code>ping -6</code>, <code>ip -6 addr</code>, <code>ip -6 route</code>.  </li> <li>\u0639\u0646\u062f \u0627\u0644\u062e\u0648\u0627\u062f\u0645: \u0641\u0639\u0651\u0644 Dual-Stack \u0641\u062a\u0631\u0629 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 (IPv4 + IPv6).  </li> <li>\u0631\u0627\u0642\u0628 SLAAC/Privacy Extensions \u0639\u0644\u0649 \u0627\u0644\u0639\u0645\u0644\u0627\u0621 (\u0639\u0646\u0627\u0648\u064a\u0646 \u0645\u0624\u0642\u062a\u0629).</li> </ul>"},{"location":"terms/ipv6/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 NAT \u0643\u0645\u0627 \u0641\u064a IPv4 \u0628\u062f\u0644 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u062a\u0648\u062c\u064a\u0647 + \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0641\u062a\u062d \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0644\u0640 IPv6.  </li> <li>\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0634\u0628\u0643\u0629 \u0643\u0623\u0646\u0647\u0627 /24\u061b \u0641\u064a IPv6 \u0627\u0644\u0645\u0636\u064a\u0641\u0648\u0646 \u0639\u0627\u062f\u0629 /64.  </li> <li>\u0639\u062f\u0645 \u0625\u0646\u0634\u0627\u0621 \u0633\u062c\u0644\u0627\u062a AAAA \u0623\u0648 \u0646\u0633\u064a\u0627\u0646 PTR.  </li> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0648\u062c\u0648\u062f Broadcast (\u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f\u061b \u0627\u0633\u062a\u062e\u062f\u0645 Multicast).  </li> <li>\u062a\u062c\u0627\u0647\u0644 IPv6 \u0641\u064a \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u0640 logging.</li> </ul>"},{"location":"terms/ipv6/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IP Address \u0645\u064f\u0639\u0631\u0651\u0641 \u0634\u0628\u0643\u0629 \u0644\u0645\u0636\u064a\u0641/\u0648\u0627\u062c\u0647\u0629 \u0625\u0637\u0627\u0631 \u0639\u0627\u0645 \u0644\u0646\u0633\u062e\u062a\u064e\u064a \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 IPv4 \u0639\u0646\u0627\u0648\u064a\u0646 32-\u0628\u062a (\u0646\u0642\u0627\u0637) \u0645\u0633\u0627\u062d\u0629 \u0645\u062d\u062f\u0648\u062f\u0629\u061b \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 NAT \u0628\u0643\u062b\u0631\u0629 IPv6 \u0639\u0646\u0627\u0648\u064a\u0646 128-\u0628\u062a (\u0633\u062a\u0651 \u0639\u0634\u0631\u064a\u0629 \u0645\u0641\u0635\u0648\u0644\u0629 \u0628\u0646\u0642\u0637\u062a\u064a\u0646) \u0645\u0633\u0627\u062d\u0629 \u0636\u062e\u0645\u0629\u061b \u0644\u0627 Broadcast\u061b \u064a\u0641\u0636\u0651\u0644 /64 \u0648SLAAC"},{"location":"terms/ipv6/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>IPv6 \u064a\u0642\u062f\u0651\u0645 \u0645\u0633\u0627\u062d\u0629 \u0639\u0646\u0627\u0648\u064a\u0646 \u0647\u0627\u0626\u0644\u0629 \u0648\u062a\u0648\u062c\u0651\u0647\u064b\u0627 \u062d\u062f\u0627\u062b\u064a\u064b\u0627 (Multicast\u060c SLAAC\u060c Anycast). \u0627\u0639\u0645\u0644 \u0628\u0640 /64\u060c \u0623\u0636\u0641 AAAA/PTR\u060c \u0648\u0627\u0636\u0628\u0637 \u062c\u062f\u0627\u0631 IPv6 \u0628\u0648\u0636\u0648\u062d\u2014\u0648\u063a\u0627\u0644\u0628\u064b\u0627 \u062f\u0648\u0646 \u062d\u0627\u062c\u0629 \u0625\u0644\u0649 NAT.</p>"},{"location":"terms/isolated/","title":"Isolated","text":""},{"location":"terms/isolated/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Isolated \u2014 \u0645\u064f\u0639\u0632\u0648\u0644 (\u0645\u0646\u0641\u0635\u0644 \u0628\u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629 \u0639\u0646 \u0628\u0642\u064a\u0629 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a/\u0627\u0644\u0628\u064a\u0626\u0627\u062a).</p>"},{"location":"terms/isolated/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0635\u0645\u064a\u0645 \u0623\u0648 \u062a\u0634\u063a\u064a\u0644 \u0645\u0643\u0648\u0651\u0646 \u062f\u0627\u062e\u0644 \u062d\u062f\u0648\u062f \u0645\u0633\u062a\u0642\u0644\u0629 \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0627\u0644\u0645\u062a\u0628\u0627\u062f\u0644 \u0648\u0631\u0641\u0639 \u0627\u0644\u0623\u0645\u0627\u0646 \u0648\u0627\u0644\u0627\u0633\u062a\u0642\u0631\u0627\u0631 \u0648\u0633\u0647\u0648\u0644\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631. \u0642\u062f \u062a\u0643\u0648\u0646 \u0627\u0644\u0639\u0632\u0644\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 (Process) \u0623\u0648 \u0627\u0644\u062d\u0627\u0648\u064a\u0629 (Container) \u0623\u0648 \u0627\u0644\u0634\u0628\u0643\u0629 \u0623\u0648 \u062d\u062a\u0649 \u0648\u062d\u062f\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.</p>"},{"location":"terms/isolated/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0641\u0635\u0644 \u0643\u0644 \u062c\u0632\u0621 \u0641\u064a \u201c\u063a\u0631\u0641\u0629\u201d \u062e\u0627\u0635\u0629 \u0628\u0647: \u0625\u0630\u0627 \u062a\u0639\u0637\u0644 \u0644\u0627 \u064a\u062c\u0631\u0651 \u0645\u0639\u0647 \u0627\u0644\u0628\u0627\u0642\u064a.  </li> <li>\u0646\u062d\u062f\u0651 \u0645\u0646 \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0648\u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0627\u0644\u062a\u064a \u064a\u0631\u0627\u0647\u0627 \u0643\u0644 \u062c\u0632\u0621.  </li> <li>\u0646\u0645\u0646\u0639 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u0641\u064a \u0627\u0644\u062d\u0627\u0644\u0629 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0629 (Shared State) \u0644\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0639\u0646\u064a\u062f\u0629.  </li> <li>\u0646\u064f\u0633\u0647\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0644\u0623\u0646 \u0643\u0644 \u062c\u0632\u0621 \u064a\u064f\u062e\u062a\u0628\u0631 \u0645\u0646\u0641\u0631\u062f\u064b\u0627.</li> </ul>"},{"location":"terms/isolated/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0641\u0643\u0651\u0631 \u0641\u064a \u0645\u062e\u062a\u0628\u0631\u0627\u062a \u062f\u0627\u062e\u0644 \u0645\u0628\u0646\u0649: \u0643\u0644 \u0645\u062e\u062a\u0628\u0631 \u0644\u0647 \u0623\u062f\u0648\u0627\u062a\u0647 \u0648\u0645\u0648\u0627\u062f\u0651\u0647 \u0648\u0623\u0628\u0648\u0627\u0628\u0647. \u0644\u0648 \u062d\u062f\u062b \u062a\u0633\u0631\u064a\u0628 \u0641\u064a \u0645\u062e\u062a\u0628\u0631\u060c \u0644\u0627 \u064a\u0646\u062a\u0634\u0631 \u0644\u0628\u0627\u0642\u064a \u0627\u0644\u0645\u0628\u0646\u0649 \u0644\u0623\u0646 \u0627\u0644\u0639\u0632\u0644 \u064a\u0645\u0646\u0639 \u0630\u0644\u0643.</p>"},{"location":"terms/isolated/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u0639\u0632\u0644 \u0648\u062d\u062f\u0629 \u0627\u0644\u062e\u062f\u0645\u0629 \u0639\u0646 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0628\u0631 \u062a\u0632\u0648\u064a\u0631 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f)","text":"<p>C#<pre><code>using System;\nusing System.Collections.Generic;\n\n// \u0648\u0627\u062c\u0647\u0629 \u0644\u0645\u0635\u062f\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (\u0646\u064f\u0639\u0632\u0644 \u0627\u0644\u062e\u062f\u0645\u0629 \u0639\u0646 DB \u0627\u0644\u062d\u0642\u064a\u0642\u064a)\npublic interface IOrdersRepo\n{\n    IEnumerable&lt;string&gt; GetPendingOrders();\n}\n\n// \u062a\u0646\u0641\u064a\u0630 \u0645\u0632\u064a\u0641 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 (Isolated/Fake) \u0644\u0627 \u064a\u062a\u0635\u0644 \u0628\u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a\npublic sealed class FakeOrdersRepo : IOrdersRepo\n{\n    public IEnumerable&lt;string&gt; GetPendingOrders() =&gt; new[] { \"ORD-1\", \"ORD-2\" };\n}\n\n// \u062e\u062f\u0645\u0629 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0641\u0642\u0637 (Dependency Inversion = \u0639\u0632\u0644)\npublic sealed class OrdersService\n{\n    private readonly IOrdersRepo _repo;\n    public OrdersService(IOrdersRepo repo) =&gt; _repo = repo;\n\n    public int CountPending() =&gt; System.Linq.Enumerable.Count(_repo.GetPendingOrders());\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        // \u0627\u062e\u062a\u0628\u0627\u0631 \u0645\u0639\u0632\u0648\u0644: \u0646\u0645\u0631\u0651\u0631 Fake \u0628\u062f\u0644 Repo \u062d\u0642\u064a\u0642\u064a\n        IOrdersRepo fake = new FakeOrdersRepo();\n        var svc = new OrdersService(fake);\n\n        Console.WriteLine(svc.CountPending()); // 2 \u2190 \u064a\u0639\u0645\u0644 \u0628\u062f\u0648\u0646 \u0623\u064a DB\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: - \u0637\u0628\u0627\u0639\u0629 \u0627\u0644\u0639\u062f\u062f <code>2</code> \u062f\u0648\u0646 \u0623\u064a \u0627\u062a\u0635\u0627\u0644 \u062e\u0627\u0631\u062c\u064a. - \u064a\u0645\u0643\u0646 \u0644\u0627\u062d\u0642\u064b\u0627 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 <code>FakeOrdersRepo</code> \u0628\u0640 <code>SqlOrdersRepo</code> \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u062f\u0648\u0646 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u062e\u062f\u0645\u0629.</p>"},{"location":"terms/isolated/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0639\u0632\u0644","text":"<ul> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u062d\u062f\u0648\u062f: \u0639\u0645\u0644\u064a\u0629/\u062d\u0627\u0648\u064a\u0629/\u0634\u0628\u0643\u0629/\u0648\u062d\u062f\u0629 \u0627\u062e\u062a\u0628\u0627\u0631/\u0645\u0633\u0627\u062d\u0629 \u062a\u062e\u0632\u064a\u0646.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u062c\u0647\u0627\u062a + \u062d\u0642\u0646 \u0627\u0639\u062a\u0645\u0627\u062f (DI) \u0644\u0639\u0632\u0644 \u0627\u0644\u0645\u0646\u0637\u0642 \u0639\u0646 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644.  </li> <li>\u0644\u0644\u0641\u0635\u0644 \u0627\u0644\u0642\u0648\u064a: \u062d\u0627\u0648\u064a\u0627\u062a/VMs\u060c \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0623\u0642\u0644 (Least Privilege)\u060c \u0648\u062d\u062f\u0627\u062a \u0645\u0644\u0641\u0627\u062a/\u0634\u0628\u0643\u0627\u062a \u0645\u0646\u0641\u0635\u0644\u0629.  </li> <li>\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u062d\u0627\u0644\u0629 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0629\u061b \u0627\u0633\u062a\u062e\u062f\u0645 \u0631\u0633\u0627\u0626\u0644/\u0623\u062d\u062f\u0627\u062b \u0623\u0648 \u0642\u0648\u0627\u0639\u062f \u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u0627\u0641\u0635\u0644 \u0627\u0644\u062a\u0647\u064a\u0626\u0629 \u0648\u0627\u0644\u0623\u0633\u0631\u0627\u0631 \u0639\u0646 \u0627\u0644\u0643\u0648\u062f (\u0645\u0644\u0641\u0627\u062a \u0625\u0639\u062f\u0627\u062f/\u0645\u062e\u0627\u0632\u0646 \u0623\u0633\u0631\u0627\u0631).  </li> <li>\u0623\u0636\u0641 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0645\u0639\u0632\u0648\u0644\u0629 (\u0648\u062d\u062f\u0627\u062a/\u062a\u0643\u0627\u0645\u0644) \u0648CI \u064a\u0639\u0645\u0644 \u0641\u064a \u0628\u064a\u0626\u0627\u062a \u0646\u0638\u064a\u0641\u0629.</li> </ul>"},{"location":"terms/isolated/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Sandboxed \u062a\u0634\u063a\u064a\u0644 \u0636\u0645\u0646 \u0642\u064a\u0648\u062f \u0623\u0645\u0646\u064a\u0629 \u0635\u0627\u0631\u0645\u0629 \u062d\u062f\u0648\u062f \u0645\u064f\u0646\u0641\u0651\u064e\u0630\u0629 \u0628\u0633\u064a\u0627\u0633\u0627\u062a \u0648\u0646\u0638\u0627\u0645\u061b \u0623\u0642\u0644 \u062d\u0631\u064a\u0629 \u0648\u0623\u0643\u062b\u0631 \u0623\u0645\u0627\u0646\u064b\u0627 Isolated \u0641\u0635\u0644 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629 (Process/Container/Network/Test) Shared Environment \u0645\u0634\u0627\u0631\u0643\u0629 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0628\u064a\u0646 \u0645\u0643\u0648\u0646\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0645\u062e\u0627\u0637\u0631 \u062a\u0623\u062b\u064a\u0631 \u0645\u062a\u0628\u0627\u062f\u0644 \u0648\u062a\u0633\u0631\u0628 \u062d\u0627\u0644\u0629 \u0648\u062c\u0648\u0627\u0646\u0628 \u0623\u0645\u0646\u064a\u0629 \u0623\u0636\u0639\u0641"},{"location":"terms/isolated/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Isolated \u064a\u0639\u0646\u064a \u062a\u0634\u063a\u064a\u0644 \u0623\u0648 \u062a\u0635\u0645\u064a\u0645 \u0645\u0643\u0648\u0651\u0646 \u062f\u0627\u062e\u0644 \u062d\u062f\u0648\u062f \u0645\u0641\u0635\u0648\u0644\u0629 \u062a\u0642\u0644\u0651\u0644 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0648\u062a\u064f\u0633\u0647\u0651\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u0635\u064a\u0627\u0646\u0629. \u0627\u0644\u0639\u0632\u0644 \u0627\u0644\u0642\u0648\u064a \u064a\u0628\u062f\u0623 \u0628\u0648\u0627\u062c\u0647\u0627\u062a \u0648DI\u060c \u0648\u064a\u062a\u0639\u0632\u0651\u0632 \u0628\u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a/\u0627\u0644\u0634\u0628\u0643\u0627\u062a/\u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a\u060c \u0648\u064a\u0646\u062a\u0647\u064a \u0628\u0646\u064f\u0647\u062c \u0627\u062e\u062a\u0628\u0627\u0631 \u0646\u0638\u064a\u0641\u0629.</p>"},{"location":"terms/kafka/","title":"Kafka","text":""},{"location":"terms/kafka/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Apache Kafka \u2014 \u0646\u0638\u0627\u0645 \u0633\u062c\u0651\u0644 (Log) \u0645\u0648\u0632\u0651\u0639 \u0644\u0628\u062b\u0651 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0628\u0632\u0645\u0646 \u0634\u0628\u0647 \u0644\u062d\u0638\u064a.</p>"},{"location":"terms/kafka/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>Kafka \u064a\u062e\u0632\u0651\u0646 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0641\u064a Topics \u0645\u0642\u0633\u0651\u0645\u0629 \u0625\u0644\u0649 Partitions \u0645\u0631\u062a\u0651\u0628\u0629. \u0645\u0646\u062a\u062c\u0648\u0646 \u064a\u0643\u062a\u0628\u0648\u0646\u060c \u0645\u0633\u062a\u0647\u0644\u0643\u0648\u0646 \u064a\u0642\u0631\u0624\u0648\u0646 \u0636\u0645\u0646 \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0645\u0639 \u062a\u062d\u0645\u0651\u0644 \u0623\u0639\u0637\u0627\u0644 \u0648\u062a\u0648\u0633\u0651\u0639 \u0623\u0641\u0642\u064a. \u064a\u062f\u0639\u0645 \u0627\u0644\u0627\u062d\u062a\u0641\u0627\u0638 (Retention)\u060c \u0636\u063a\u0637 \u0627\u0644\u0633\u062c\u0644 (Compaction)\u060c \u0648Semantics: At-least-once\u060c Idempotent\u060c \u0648Exactly-once \u0628\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a.</p>"},{"location":"terms/kafka/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Topic = \u0645\u0644\u0641\u0651 \u0645\u0646\u0637\u0642\u064a \u0644\u0644\u0623\u062d\u062f\u0627\u062b.  </li> <li>Partition = \u062a\u0633\u0644\u0633\u0644 \u0645\u0631\u062a\u0651\u0628 \u0641\u0642\u0637 \u062f\u0627\u062e\u0644\u0647\u061b \u064a\u062d\u062f\u0651\u062f \u0627\u0644\u062a\u0648\u0627\u0632\u064a.  </li> <li>Key \u064a\u0648\u062c\u0651\u0647 \u0627\u0644\u062d\u062f\u062b \u0644\u0642\u0633\u0645 \u0645\u062d\u062f\u0651\u062f \u2192 \u064a\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u062a\u0631\u062a\u064a\u0628 \u0647\u0630\u0627 \u0627\u0644\u0645\u0641\u062a\u0627\u062d.  </li> <li>Replication \u0644\u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (\u0639\u0627\u0645\u0644 \u062a\u0643\u0631\u0627\u0631 <code>RF</code> + \u0645\u062c\u0645\u0648\u0639\u0629 ISR).  </li> <li>Brokers (\u0639\u064f\u0642\u062f) + Controller/KRaft \u0644\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u064a\u062a\u0627\u062f\u0627\u062a\u0627 \u0648\u0627\u0644\u0642\u064a\u0627\u062f\u0629.  </li> <li>Consumer Groups: \u0643\u0644 \u0631\u0633\u0627\u0644\u0629 \u062a\u064f\u0639\u0627\u0644\u062c \u0645\u0631\u0651\u0629 \u0648\u0627\u062d\u062f\u0629 \u0644\u0643\u0644 \u0645\u062c\u0645\u0648\u0639\u0629.  </li> <li>Retention \u0628\u0627\u0644\u0648\u0642\u062a/\u0627\u0644\u062d\u062c\u0645\u060c \u0648Compaction \u064a\u0628\u0642\u064a \u0622\u062e\u0631 \u0642\u064a\u0645\u0629 \u0644\u0643\u0644 \u0645\u0641\u062a\u0627\u062d.</li> </ul>"},{"location":"terms/kafka/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u201c\u0634\u0631\u064a\u0637 \u062a\u0633\u062c\u064a\u0644\u201d \u0636\u062e\u0645 \u0645\u0648\u0632\u0651\u0639: \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u062a\u0644\u0635\u0642 \u0641\u064a \u0627\u0644\u0646\u0647\u0627\u064a\u0629\u060c \u0627\u0644\u0642\u0631\u0627\u0621\u0629 \u062a\u062a\u062d\u0631\u0651\u0643 \u0628\u0645\u0624\u0634\u0651\u0631 (Offset). \u0643\u0644 \u0645\u0641\u062a\u0627\u062d (\u0639\u0645\u064a\u0644 42) \u064a\u0633\u064a\u0631 \u0639\u0644\u0649 \u0645\u0633\u0627\u0631\u0647 \u0627\u0644\u062e\u0627\u0635\u0651 (\u0642\u0633\u0645) \u0628\u062a\u0631\u062a\u064a\u0628 \u0645\u062d\u0641\u0648\u0638.</p>"},{"location":"terms/kafka/#c-confluentkafka","title":"\u0645\u062b\u0627\u0644 C# \u0639\u0645\u0644\u064a \u2014 \u0645\u0646\u062a\u0650\u062c + \u0645\u0633\u062a\u0647\u0644\u0643 (Confluent.Kafka) \u0628\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u064a\u0629","text":"C#<pre><code>// .NET 8/9 \u2014 dotnet add package Confluent.Kafka\nusing System;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing Confluent.Kafka;\n\nclass KafkaQuick\n{\n    static async Task Main()\n    {\n        var topic = \"orders\";\n\n        // ===== Producer: acks=all + Idempotence =====\n        var pConfig = new ProducerConfig\n        {\n            BootstrapServers = \"localhost:9092\",\n            Acks = Acks.All,\n            EnableIdempotence = true,\n            LingerMs = 5,                  // \u062f\u0645\u062c \u0631\u0633\u0627\u0626\u0644 \u0642\u0635\u064a\u0631\u0629\n            CompressionType = CompressionType.Lz4\n        };\n\n        using var producer = new ProducerBuilder&lt;string, string&gt;(pConfig).Build();\n\n        // \u0625\u0631\u0633\u0627\u0644 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 \u0645\u0639 \u0645\u0641\u062a\u0627\u062d \u0644\u0644\u062d\u0641\u0627\u0638 \u0639\u0644\u0649 \u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u0639\u0645\u064a\u0644\n        for (int i = 1; i &lt;= 3; i++)\n        {\n            var key = \"customer-42\";\n            var val = $\"{{\\\"orderId\\\":{1000+i},\\\"amount\\\":{i*50}}}\";\n            var dr = await producer.ProduceAsync(topic, new Message&lt;string,string&gt; { Key = key, Value = val });\n            Console.WriteLine($\"Produced \u2192 {dr.TopicPartitionOffset}\");\n        }\n\n        // ===== Consumer: Manual commit + read_committed =====\n        var cConfig = new ConsumerConfig\n        {\n            BootstrapServers = \"localhost:9092\",\n            GroupId = \"orders-workers\",\n            EnableAutoCommit = false,                  // \u0646\u0643\u0645\u0651\u062a \u064a\u062f\u0648\u064a\u064b\u0627 \u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629\n            AutoOffsetReset = AutoOffsetReset.Earliest,\n            IsolationLevel = IsolationLevel.ReadCommitted\n        };\n\n        using var consumer = new ConsumerBuilder&lt;string, string&gt;(cConfig).Build();\n        consumer.Subscribe(topic);\n\n        Console.WriteLine(\"Consuming\u2026 (Ctrl+C to stop)\");\n        using var cts = new CancellationTokenSource();\n        Console.CancelKeyPress += (_, e) =&gt; { e.Cancel = true; cts.Cancel(); };\n\n        try\n        {\n            while (!cts.IsCancellationRequested)\n            {\n                var cr = consumer.Consume(cts.Token);\n                Console.WriteLine($\"Consumed [{cr.TopicPartitionOffset}] key={cr.Message.Key} val={cr.Message.Value}\");\n\n                // TODO: \u0645\u0646\u0637\u0642 \u0645\u0639\u0627\u0644\u062c\u0629 Idempotent (\u0645\u062b\u0644\u0627\u064b Upsert \u062d\u0633\u0628 orderId)\n                consumer.Commit(cr); // \u0625\u0639\u0644\u0627\u0646 \u0627\u0644\u0646\u062c\u0627\u062d\n            }\n        }\n        catch (OperationCanceledException) { }\n        finally { consumer.Close(); }\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - \u0627\u0644\u0645\u0646\u062a\u062c: <code>acks=all</code> + Idempotence \u0644\u0644\u0648\u0642\u0627\u064a\u0629 \u0645\u0646 \u0641\u0642\u062f/\u062a\u0643\u0631\u0627\u0631. - \u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643: Manual Commit \u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0644\u062a\u062d\u0642\u064a\u0642 At-least-once \u0628\u0623\u0645\u0627\u0646.</p>"},{"location":"terms/kafka/#kafka_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 Kafka \u0633\u0644\u064a\u0645","text":"<ol> <li>\u0646\u064e\u0645\u0630\u0650\u062c \u0627\u0644\u0640 Topics/Keys: \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u064a\u062d\u062f\u0651\u062f \u0627\u0644\u0642\u0633\u0645 \u2192 \u062a\u0631\u062a\u064a\u0628 \u0644\u0643\u0644 \u0645\u0641\u062a\u0627\u062d.  </li> <li>\u0627\u062e\u062a\u0631 \u0639\u062f\u062f \u0627\u0644\u0623\u0642\u0633\u0627\u0645 \u0648\u0641\u0642 \u0627\u0644\u062a\u0648\u0627\u0632\u064a \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u060c \u0648RF \u2265 3 \u0644\u0644\u062d\u0631\u062c.  </li> <li>\u0627\u0644\u0645\u0646\u062a\u062c: <code>acks=all</code>\u060c Idempotence\u060c \u0648Transactions \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u062a\u0646\u0627\u0633\u0642 \u0639\u0628\u0631 \u0645\u0648\u0627\u0636\u064a\u0639/\u0623\u0642\u0633\u0627\u0645.  </li> <li>\u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643: Manual Commit\u060c \u0648\u0627\u0636\u0628\u0637 <code>max.poll.interval.ms</code> \u062d\u0633\u0628 \u0632\u0645\u0646 \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u0641\u0639\u0644\u064a.  </li> <li>Retention: \u0628\u0627\u0644\u0648\u0642\u062a/\u0627\u0644\u062d\u062c\u0645\u061b \u0641\u0639\u0651\u0644 Compaction \u0644\u0645\u0648\u0636\u0648\u0639 \u201c\u062d\u0627\u0644\u0629\u201d (\u0622\u062e\u0631 \u0646\u0633\u062e\u0629 \u0644\u0643\u0644 \u0645\u0641\u062a\u0627\u062d).  </li> <li>Schema Registry (Avro/Protobuf/JSON Schema) \u0644\u062a\u0637\u0648\u0651\u0631 \u0645\u062e\u0637\u0637\u0627\u062a \u0622\u0645\u0646.  </li> <li>\u0645\u0631\u0627\u0642\u0628\u0629: Lag\u060c Throughput\u060c \u0623\u062e\u0637\u0627\u0621 \u0625\u0646\u062a\u0627\u062c/\u0627\u0633\u062a\u0647\u0644\u0627\u0643\u060c ISR\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0642\u0631\u0635.  </li> <li>\u0623\u0645\u0646: TLS/mTLS\u060c SASL (OAuth/OIDC \u0623\u0648 SCRAM)\u060c \u0648ACLs \u0639\u0644\u0649 \u0627\u0644\u0645\u0648\u0627\u0636\u064a\u0639.</li> </ol>"},{"location":"terms/kafka/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0648\u0642\u0651\u0639 \u062a\u0631\u062a\u064a\u0628 \u0639\u0627\u0644\u0645\u064a \u0639\u0628\u0631 \u0627\u0644\u0623\u0642\u0633\u0627\u0645 (\u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645 \u0641\u0642\u0637).  </li> <li><code>acks=0</code> \u0623\u0648 <code>1</code> \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u062d\u0631\u062c\u0629 \u2192 \u062e\u0637\u0631 \u0641\u0642\u062f.  </li> <li>\u0646\u0633\u064a\u0627\u0646 Idempotence/Retries \u0641\u064a \u0627\u0644\u0645\u0646\u062a\u062c \u2192 \u062a\u0643\u0631\u0627\u0631\u0627\u062a \u0639\u0646\u062f \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629.  </li> <li>Auto-Commit \u0641\u064a \u0645\u0633\u0627\u0631\u0627\u062a \u062d\u0633\u0651\u0627\u0633\u0629 \u2192 \u0627\u062d\u062a\u0645\u0627\u0644 \u0641\u0642\u062f/\u062a\u0643\u0631\u0627\u0631.  </li> <li>\u0631\u0633\u0627\u0626\u0644 \u0636\u062e\u0645\u0629 \u062a\u062a\u062c\u0627\u0648\u0632 <code>message.max.bytes</code> \u2192 \u0641\u0634\u0644 \u062a\u0633\u0644\u064a\u0645.  </li> <li>\u0623\u0642\u0633\u0627\u0645 \u0642\u0644\u064a\u0644\u0629 \u0645\u0639 \u062d\u0645\u0648\u0644\u0629 \u0639\u0627\u0644\u064a\u0629 \u2192 \u0627\u062e\u062a\u0646\u0627\u0642\u060c \u0623\u0648 \u0643\u062b\u064a\u0631\u0629 \u0628\u0644\u0627 \u062d\u0627\u062c\u0629 \u2192 \u0625\u062f\u0627\u0631\u0629 \u0623\u0635\u0639\u0628.</li> </ul>"},{"location":"terms/kafka/#_6","title":"\u0623\u0648\u0627\u0645\u0631 \u0633\u0631\u064a\u0639\u0629 (\u0645\u0631\u062c\u0639)","text":"Bash<pre><code># \u0625\u0646\u0634\u0627\u0621 \u0645\u0648\u0636\u0648\u0639 \u0628\u0640 6 \u0623\u0642\u0633\u0627\u0645 \u0648RF=3\nkafka-topics.sh --create --topic orders --partitions 6 --replication-factor 3 --bootstrap-server localhost:9092\n\n# \u0648\u0635\u0641 \u0645\u0648\u0636\u0648\u0639 \u0648\u0645\u0631\u0627\u0642\u0628\u0629\nkafka-topics.sh --describe --topic orders --bootstrap-server localhost:9092\n\n# \u0645\u0646\u062a\u0650\u062c/\u0645\u0633\u062a\u0647\u0644\u0643 \u0633\u0637\u0631 \u0623\u0648\u0627\u0645\u0631 \u0644\u0644\u062a\u062c\u0627\u0631\u0628\nkafka-console-producer.sh --topic orders --bootstrap-server localhost:9092\nkafka-console-consumer.sh --topic orders --from-beginning --bootstrap-server localhost:9092\n</code></pre>"},{"location":"terms/kafka/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Kafka Log \u0645\u0648\u0632\u0651\u0639 \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0645\u0639 \u0627\u062d\u062a\u0641\u0627\u0638 \u0648\u062a\u0648\u0633\u0651\u0639 \u0623\u0641\u0642\u064a \u0623\u0642\u0633\u0627\u0645/\u062a\u0643\u0631\u0627\u0631/Groups\u060c \u062a\u0631\u062a\u064a\u0628 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645 RabbitMQ (AMQP) \u0648\u0633\u064a\u0637 \u0631\u0633\u0627\u0626\u0644 \u0645\u0648\u062c\u0651\u0647 \u0645\u0633\u0627\u0631\u0627\u062a/\u0637\u0648\u0627\u0628\u064a\u0631 \u062a\u0623\u0643\u064a\u062f\u0627\u062a \u062f\u0642\u064a\u0642\u0629 \u0648\u0645\u0633\u0627\u0631\u0627\u062a\u061b \u0623\u0642\u0644 \u0645\u0644\u0627\u0621\u0645\u0629 \u0644\u0628\u062b\u0651 \u0643\u062b\u064a\u0641 \u0637\u0648\u064a\u0644 \u0627\u0644\u0623\u0645\u062f Apache Pulsar \u0645\u0648\u0627\u0636\u064a\u0639/\u0645\u0634\u062a\u0631\u0643\u064a\u0646 + \u062a\u062e\u0632\u064a\u0646 \u0645\u0646\u0641\u0635\u0644 \u062a\u062e\u0632\u064a\u0646 BookKeeper\u060c Functions \u0645\u062f\u0645\u062c\u0629 AWS Kinesis \u062e\u062f\u0645\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0634\u0628\u064a\u0647\u0629 \u0628\u0627\u0644\u062a\u062f\u0641\u0651\u0642 \u0642\u064a\u0648\u062f \u0634\u064e\u0631\u062f/\u062a\u0643\u0644\u0641\u0629\u061b \u062a\u0643\u0627\u0645\u0644 AWS Redis Streams \u062a\u064a\u0627\u0631\u0627\u062a \u062f\u0627\u062e\u0644 Redis \u0645\u0644\u0627\u0626\u0645 \u0644\u0648\u064e\u0631\u0652\u0643\u0641\u0652\u0644\u0648 \u062e\u0641\u064a\u0641\u061b \u0644\u064a\u0633 \u0628\u062f\u064a\u0644\u0627\u064b \u0643\u0627\u0645\u0644\u064b\u0627 \u0644\u0640 Kafka"},{"location":"terms/kafka/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Kafka = \u201c\u0633\u062c\u0644 \u0623\u062d\u062f\u0627\u062b \u0645\u0648\u0632\u0651\u0639\u201d \u0639\u0627\u0644\u064a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u064a\u0629 \u0648\u0627\u0644\u062a\u0648\u0633\u0651\u0639. \u0627\u062e\u062a\u0631 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d/\u0627\u0644\u0623\u0642\u0633\u0627\u0645 \u0628\u0639\u0646\u0627\u064a\u0629\u060c \u0641\u0639\u0651\u0644 acks=all + idempotence\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 Manual Commit (\u0648\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u0644\u0632\u0648\u0645)\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062e\u0637\u0648\u0637 \u0628\u064a\u0627\u0646\u0627\u062a \u0633\u0631\u064a\u0639\u0629\u060c \u0645\u062a\u064a\u0646\u0629\u060c \u0648\u0645\u0647\u064a\u0651\u0623\u0629 \u0644\u0644\u0646\u0645\u0648 \u0648\u0627\u0644\u062a\u0643\u0627\u0645\u0644. </p>"},{"location":"terms/kernel/","title":"Kernel","text":""},{"location":"terms/kernel/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Operating System Kernel \u2014 \u0646\u0648\u0627\u0629 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644</p>"},{"location":"terms/kernel/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0627\u0644\u0645\u0643\u0648\u0651\u0646 \u0627\u0644\u0623\u062f\u0646\u0649 \u0627\u0645\u062a\u064a\u0627\u0632\u064b\u0627 \u062f\u0627\u062e\u0644 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644. \u064a\u062f\u064a\u0631 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0648\u0627\u0644\u062e\u064a\u0648\u0637\u060c \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629\u060c \u0627\u0644\u0633\u0648\u0627\u0642\u0629/\u0627\u0644\u0623\u062c\u0647\u0632\u0629\u060c \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0648\u0627\u0644\u0634\u0628\u0643\u0629\u060c \u0648\u064a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0645\u0642\u0627\u0637\u0639\u0627\u062a \u0648\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0627\u0644\u0646\u0638\u0627\u0645 (Syscalls).</p>"},{"location":"terms/kernel/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0645\u0637 \u0646\u0648\u0627\u0629 (Kernel Mode): \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0643\u0627\u0645\u0644\u0629 \u0644\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0639\u062a\u0627\u062f.  </li> <li>\u0646\u0645\u0637 \u0645\u0633\u062a\u062e\u062f\u0645 (User Mode): \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u062a\u0639\u0645\u0644 \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u062d\u062f\u0648\u062f\u0629\u061b \u062a\u0637\u0644\u0628 \u062e\u062f\u0645\u0627\u062a \u0639\u0628\u0631 Syscalls.  </li> <li>\u0627\u0644\u0645\u064f\u062c\u062f\u0648\u0644 (Scheduler) \u064a\u0642\u0631\u0651\u0631 \u0645\u0646 \u064a\u0639\u0645\u0644 \u0627\u0644\u0622\u0646.  </li> <li>\u0645\u062f\u064a\u0631 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u064a\u062e\u0635\u0635 \u0635\u0641\u062d\u0627\u062a\u060c \u064a\u062d\u0645\u064a \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646\u060c \u0648\u064a\u0646\u0642\u0644\u0647\u0627 (Paging).  </li> <li>\u0633\u0648\u0627\u0642\u0627\u062a \u062a\u062c\u0639\u0644 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 (\u0642\u0631\u0635/\u0634\u0628\u0643\u0629/USB) \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u0645\u0648\u062d\u0651\u062f\u0629.</li> </ul>"},{"location":"terms/kernel/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u0631\u0648\u0645\u0627\u0646\u0627 \u0627\u0644\u0645\u0628\u0646\u0649: \u064a\u0646\u0633\u0651\u0642 \u0627\u0644\u0645\u0635\u0627\u0639\u062f\u060c \u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621\u060c \u0627\u0644\u0623\u0645\u0646. \u0627\u0644\u0645\u0643\u0627\u062a\u0628 (\u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a) \u0644\u0627 \u062a\u0644\u0645\u0633 \u0627\u0644\u0623\u0633\u0644\u0627\u0643 \u0645\u0628\u0627\u0634\u0631\u0629\u061b \u064a\u0637\u0644\u0628\u0648\u0646 \u0627\u0644\u062e\u062f\u0645\u0629 \u0639\u0628\u0631 \u0645\u0643\u062a\u0628 \u0627\u0644\u0627\u0633\u062a\u0642\u0628\u0627\u0644 (Syscall).</p>"},{"location":"terms/kernel/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 \u2014 \u0631\u0624\u064a\u0629 \u201c\u0623\u062b\u0631\u201d \u0627\u0644\u0646\u0648\u0627\u0629 \u0645\u0646 \u0648\u0636\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645","text":"<p>\u0646\u0633\u062a\u062f\u0639\u064a \u0648\u0638\u0627\u0626\u0641 \u0646\u0638\u0627\u0645\u064a\u0629 \u0645\u062e\u062a\u0644\u0641\u0629: - \u0639\u0644\u0649 \u0648\u064a\u0646\u062f\u0648\u0632: <code>GetTickCount64</code> (\u0632\u0645\u0646 \u0645\u0646\u0630 \u0627\u0644\u0625\u0642\u0644\u0627\u0639). - \u0639\u0644\u0649 \u0644\u064a\u0646\u0643\u0633/\u0645\u0627\u0643: <code>uname</code> \u0645\u0646 libc (\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u0646\u0648\u0627\u0629). \u0646\u0639\u0631\u0636 \u0623\u064a\u0636\u064b\u0627 \u0627\u0644\u0623\u0648\u0644\u0648\u064a\u0629/\u0627\u0644\u0645\u0639\u0627\u0644\u062c (\u0642\u0631\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u064f\u062c\u062f\u0648\u0644) \u0648\u0642\u0631\u0627\u0621\u0629 \u0645\u0644\u0641 (Syscalls \u0641\u062a\u062d/\u0642\u0631\u0627\u0621\u0629).</p> C#<pre><code>// .NET 8/9\nusing System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing System.Threading;\n\nclass KernelPeek\n{\n    // Windows API: \u0632\u0645\u0646 \u0645\u0646\u0630 \u0627\u0644\u0625\u0642\u0644\u0627\u0639 (ms) \u2014 \u064a\u0645\u0631 \u0639\u0628\u0631 \u0637\u0628\u0642\u0629 \u0627\u0644\u0646\u0638\u0627\u0645 \u0625\u0644\u0649 \u0627\u0644\u0646\u0648\u0627\u0629\n    [DllImport(\"kernel32.dll\")] static extern ulong GetTickCount64();\n\n    // Unix libc: uname \u2014 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0639\u0646 \u0627\u0644\u0646\u0648\u0627\u0629\n    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]\n    struct Utsname\n    {\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 65)] public string sysname;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 65)] public string nodename;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 65)] public string release;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 65)] public string version;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 65)] public string machine;\n    }\n    [DllImport(\"libc\")] static extern int uname(ref Utsname uts);\n\n    static void Main()\n    {\n        Console.WriteLine($\"OS: {RuntimeInformation.OSDescription}\");\n        Console.WriteLine($\"Arch: {RuntimeInformation.ProcessArchitecture}\");\n        Console.WriteLine($\"PID: {Environment.ProcessId}\");\n\n        if (OperatingSystem.IsWindows())\n        {\n            var up = TimeSpan.FromMilliseconds(GetTickCount64());\n            Console.WriteLine($\"Uptime (kernel): {up}\");\n        }\n        else\n        {\n            var u = new Utsname();\n            if (uname(ref u) == 0)\n                Console.WriteLine($\"Kernel: {u.sysname} {u.release} ({u.machine})\");\n        }\n\n        // \u062c\u062f\u0648\u0644\u0629: \u0623\u0648\u0644\u0648\u064a\u0629 \u0627\u0644\u062e\u064a\u0637 \u0648\u062a\u0642\u0627\u0631\u0628 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0627\u062a\n        Thread.CurrentThread.Priority = ThreadPriority.AboveNormal;\n        var proc = Process.GetCurrentProcess();\n        Console.WriteLine($\"Thread Priority: {Thread.CurrentThread.Priority}\");\n        Console.WriteLine($\"Processor Affinity (mask): 0x{proc.ProcessorAffinity.ToInt64():X}\");\n\n        // I/O \u0645\u0644\u0641 \u2014 \u062a\u062d\u062a\u0647\u0627 Syscalls: open/read/close\n        var tmp = Path.GetTempFileName();\n        File.WriteAllText(tmp, \"hello kernel\");\n        var txt = File.ReadAllText(tmp);\n        Console.WriteLine($\"Read: {txt}\");\n        File.Delete(tmp);\n\n        Console.WriteLine(\"Tip: \u0631\u0627\u0642\u0628 \u0627\u0644\u0640 Syscalls \u0639\u0628\u0631 strace/ltrace (Linux) \u0623\u0648 Process Monitor (Windows).\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0648\u0635\u0641 \u0627\u0644\u0646\u0638\u0627\u0645 \u0648\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0629 \u0648PID. - \u0639\u0644\u0649 \u0648\u064a\u0646\u062f\u0648\u0632: \u0632\u0645\u0646 \u0627\u0644\u0625\u0642\u0644\u0627\u0639. \u0639\u0644\u0649 \u0644\u064a\u0646\u0643\u0633/\u0645\u0627\u0643: \u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u0646\u0648\u0627\u0629. - \u0623\u0648\u0644\u0648\u064a\u0629 \u0627\u0644\u062e\u064a\u0637\u060c \u0642\u0646\u0627\u0639 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0627\u062a\u060c \u0648\u0642\u0631\u0627\u0621\u0629 \u0645\u0644\u0641\u064d \u062a\u0645\u062a \u0628\u0646\u062c\u0627\u062d.</p>"},{"location":"terms/kernel/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0641\u0647\u0645/\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0646\u0648\u0627\u0629 \u0628\u0623\u0645\u0627\u0646","text":"<ul> <li>\u0635\u0645\u0651\u0645 \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0648\u0636\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u061b \u0644\u0627 \u062d\u0627\u062c\u0629 \u0644\u0627\u0645\u062a\u064a\u0627\u0632\u0627\u062a \u0639\u0627\u0644\u064a\u0629 \u0625\u0644\u0627 \u0644\u0636\u0631\u0648\u0631\u0629 \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u062c\u0647\u0627\u062a \u0639\u0627\u0644\u064a\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0623\u0648\u0644\u064b\u0627 (<code>File</code>, <code>Sockets</code>, <code>Process</code>)\u060c \u0641\u0647\u064a \u062a\u063a\u0644\u0641 Syscalls \u0628\u0634\u0643\u0644 \u0622\u0645\u0646.  </li> <li>\u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0645\u064a\u0632\u0629 \u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0646\u0638\u0627\u0645:  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 P/Invoke \u0628\u062d\u0630\u0631\u060c \u0648\u062d\u062f\u0651\u062f \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u0628\u0640 <code>OperatingSystem.IsWindows()/IsLinux()</code>.  </li> <li>\u0648\u062b\u0651\u0642 \u0627\u0644\u0628\u064f\u0646\u0649 (Structs) \u0628\u062f\u0642\u0629 \u0644\u062a\u0641\u0627\u062f\u064a \u0623\u062e\u0637\u0627\u0621 Marshalling.  </li> <li>\u0631\u0627\u0642\u0628 \u062a\u0641\u0627\u0639\u0644\u0627\u062a\u0643 \u0645\u0639 \u0627\u0644\u0646\u0648\u0627\u0629:  </li> <li>Linux: <code>strace -f -p &lt;pid&gt;</code>, <code>perf</code>, <code>dmesg</code>.  </li> <li>Windows: Process Monitor/Explorer, ETW, Event Viewer.  </li> <li>\u0644\u0644\u0623\u062f\u0627\u0621: \u0642\u0644\u0651\u0644 Syscalls \u0627\u0644\u0635\u063a\u064a\u0631\u0629 \u0627\u0644\u0645\u062a\u0643\u0631\u0631\u0629 (Batching/Buffering)\u060c \u0648\u0648\u0627\u0632\u0646 \u0628\u064a\u0646 I/O Sync/Async.  </li> <li>\u0644\u0644\u0623\u0645\u0627\u0646: \u0623\u0642\u0644\u0651 \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u0645\u0643\u0646\u0629 (Least Privilege)\u060c \u0648\u0625\u063a\u0644\u0627\u0642 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0633\u0631\u064a\u0639\u064b\u0627\u060c \u0648\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u062f\u0648\u0646 \u0643\u0634\u0641 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0646\u0638\u0627\u0645.</li> </ul>"},{"location":"terms/kernel/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 TCP \u064a\u0631\u0633\u0644 \u201c\u0631\u0633\u0627\u0626\u0644\u201d \u062b\u0627\u0628\u062a\u0629 (\u0647\u0648 Stream\u061b \u0627\u0644\u0646\u0648\u0627\u0629 \u0642\u062f \u062a\u0642\u0633\u0651\u0645/\u062a\u062c\u0645\u0651\u0639).  </li> <li>\u062e\u0644\u0637 \u0648\u0636\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645/\u0627\u0644\u0646\u0648\u0627\u0629 \u0648\u0645\u062d\u0627\u0648\u0644\u0629 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u0645\u0628\u0627\u0634\u0631 \u0644\u0644\u0623\u062c\u0647\u0632\u0629 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.  </li> <li>P/Invoke \u0628\u0628\u064f\u0646\u0649 \u062e\u0627\u0637\u0626\u0629 \u0623\u0648 \u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0628\u0644\u0627 \u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0645\u0631\u062c\u0639\u0629/<code>errno</code> \u2192 \u0623\u0639\u0637\u0627\u0644.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u062e\u062a\u0644\u0627\u0641\u0627\u062a \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a (\u0645\u0633\u0627\u0631\u0627\u062a\u060c \u0635\u0644\u0627\u062d\u064a\u0627\u062a\u060c \u062d\u062f\u0648\u062f \u0627\u0644\u0645\u0644\u0641\u0627\u062a) \u0641\u064a \u0627\u0644\u0634\u064a\u0641\u0631\u0629 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0629.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 NAT \u0643\u0623\u0645\u0646 \u0628\u062f\u0644 \u0625\u0639\u062f\u0627\u062f ACL/Firewall \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0646\u0648\u0627\u0629.</li> </ul>"},{"location":"terms/kernel/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Operating System \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0646\u0648\u0627\u0629 + \u0623\u062f\u0648\u0627\u062a/\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u062c\u0647\u0627\u062a\u060c \u0645\u062f\u064a\u0631 \u062d\u0632\u0645\u060c \u0623\u062f\u0648\u0627\u062a\u060c Shell Kernel \u0642\u0644\u0628 \u0627\u0644\u0646\u0638\u0627\u0645: \u062c\u062f\u0648\u0644\u0629/\u0630\u0627\u0643\u0631\u0629/\u0623\u062c\u0647\u0632\u0629/Syscalls \u0623\u0639\u0644\u0649 \u0627\u0645\u062a\u064a\u0627\u0632\u064b\u0627\u061b \u064a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0645\u0642\u0627\u0637\u0639\u0627\u062a \u0648\u0627\u0644\u0633\u0648\u0627\u0642\u0627\u062a Hypervisor \u062a\u0634\u063a\u064a\u0644 \u0639\u062f\u0651\u0629 \u0623\u0646\u0638\u0645\u0629 \u0641\u0648\u0642 \u0639\u062a\u0627\u062f \u0648\u0627\u062d\u062f (\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629) \u0637\u0628\u0642\u0629 \u062a\u062d\u062a/\u0628\u062c\u0627\u0646\u0628 \u0627\u0644\u0646\u0648\u0627\u0629\u060c \u062a\u0639\u0632\u0644 \u0623\u0646\u0638\u0645\u0629 \u0643\u0627\u0645\u0644\u0629 Firmware \u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0645\u0646\u062e\u0641\u0636\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0639\u0644\u0649 \u0627\u0644\u0644\u0648\u062d\u0629/\u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u062a\u0642\u0648\u062f \u0627\u0644\u0625\u0642\u0644\u0627\u0639 (BIOS/UEFI) \u0648\u062a\u062c\u0647\u0651\u0632 \u0627\u0644\u0639\u062a\u0627\u062f"},{"location":"terms/kernel/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0646\u0648\u0627\u0629 \u0647\u064a \u0627\u0644\u0642\u0644\u0628 \u0627\u0644\u0630\u064a \u064a\u062f\u064a\u0631 \u0627\u0644\u0639\u062a\u0627\u062f \u0648\u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0648\u064a\u0648\u0641\u0651\u0631 Syscalls \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u0627\u0643\u062a\u0628 \u0643\u0648\u062f\u0643 \u0641\u064a \u0648\u0636\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u062c\u0647\u0627\u062a \u0639\u0627\u0644\u064a\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u0649\u060c \u0648\u0627\u0633\u062a\u0639\u0645\u0644 \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0627\u0644\u0645\u0646\u062e\u0641\u0636\u0629 \u0628\u062d\u0630\u0631\u060c \u0631\u0627\u0642\u0628 \u0627\u0644\u0623\u062f\u0627\u0621/\u0627\u0644\u0623\u0645\u0627\u0646\u060c \u0648\u062a\u0630\u0643\u0651\u0631 \u0627\u062e\u062a\u0644\u0627\u0641\u0627\u062a \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u0627\u0642\u062a\u0631\u0627\u0628 \u0645\u0646 \u0627\u0644\u062d\u062f\u0648\u062f \u0645\u0639 \u0627\u0644\u0646\u0648\u0627\u0629.</p>"},{"location":"terms/lambda-expression/","title":"Lambda Expression","text":""},{"location":"terms/lambda-expression/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Lambda Expression \u2014 \u062a\u0639\u0628\u064a\u0631 \u0644\u0627\u0645\u0628\u062f\u0627 (\u062f\u0627\u0644\u0629 \u0642\u0635\u064a\u0631\u0629 \u0628\u0644\u0627 \u0627\u0633\u0645 \u062a\u064f\u0645\u0631\u0651\u064e\u0631 \u0643\u0642\u064a\u0645\u0629).</p>"},{"location":"terms/lambda-expression/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0635\u064a\u063a\u0629 \u0645\u062e\u062a\u0635\u0631\u0629 \u0644\u062a\u0639\u0631\u064a\u0641 \u062f\u0648\u0627\u0644 \u0645\u062c\u0647\u0648\u0644\u0629 \u062a\u064f\u0633\u062a\u062e\u062f\u0645 \u0645\u0639 LINQ\u060c \u0627\u0644\u0623\u062d\u062f\u0627\u062b\u060c \u0648EF Core. \u062a\u064f\u0645\u062b\u0651\u064e\u0644 \u0628\u0623\u0646\u0648\u0627\u0639 Func\\&lt;\u2026&gt; / Action\\&lt;\u2026&gt; \u0623\u0648 \u0643\u0634\u062c\u0631\u0629 \u062a\u0639\u0628\u064a\u0631 Expression\\&lt;Func\\&lt;\u2026&gt;&gt;.</p>"},{"location":"terms/lambda-expression/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0634\u0643\u0644: <code>(\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a) =&gt; \u062c\u0633\u0645</code>. \u0645\u062b\u0627\u0644: <code>x =&gt; x * 2</code>.  </li> <li>\u0625\u0646 \u0643\u0627\u0646 \u062c\u0633\u0645\u064b\u0627 \u0648\u0627\u062d\u062f\u064b\u0627 \u0641\u0628\u062f\u0648\u0646 <code>{}</code> \u0648<code>return</code>.  </li> <li>\u0645\u0639 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629: \u062a\u064f\u0646\u0641\u0651\u064e\u0630 \u0645\u0628\u0627\u0634\u0631\u0629 (Delegates).  </li> <li>\u0645\u0639 \u0645\u0632\u0648\u0651\u062f \u0627\u0633\u062a\u0639\u0644\u0627\u0645 (EF/Core): \u062a\u064f\u062d\u0648\u0651\u064e\u0644 \u0625\u0644\u0649 \u0634\u062c\u0631\u0629 \u062a\u0639\u0628\u064a\u0631 \u062a\u064f\u062a\u0631\u062c\u064e\u0645 \u0625\u0644\u0649 SQL.</li> </ul>"},{"location":"terms/lambda-expression/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0644\u0627\u062d\u0638\u0629 \u0644\u0634\u0631\u0637 \u062a\u0633\u0644\u0651\u0645\u0647\u0627 \u0644\u062f\u0627\u0644\u0629 \u0623\u062e\u0631\u0649: \u201c\u0623\u0631\u062c\u0639 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u062a\u064a \u064a\u0646\u0637\u0628\u0642 \u0639\u0644\u064a\u0647\u0627 \u0647\u0630\u0627 \u0627\u0644\u0634\u0631\u0637\u201d.</p>"},{"location":"terms/lambda-expression/#c-ef-core-dto","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0627\u0633\u062a\u0639\u0644\u0627\u0645 EF Core \u0628\u0644\u0627\u0645\u0628\u062f\u0627 + \u0625\u0633\u0642\u0627\u0637 \u0625\u0644\u0649 DTO","text":"C#<pre><code>// \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0645\u0648\u0638\u0641 \u0646\u0634\u0650\u0637\u060c \u0648\u0625\u0631\u062c\u0627\u0639 \u062d\u0642\u0648\u0644 \u0645\u062d\u062f\u062f\u0629 (\u064a\u064f\u062a\u0631\u062c\u0645 \u0625\u0644\u0649 SQL)\nvar dto = await _context.Employees\n    .AsNoTracking()\n    .Where(e =&gt; e.EmpId == id &amp;&amp; e.IsActive)      // Expression&lt;Func&lt;Employee,bool&gt;&gt;\n    .Select(e =&gt; new EmployeeDto { Id = e.EmpId, Name = e.FullName })\n    .FirstOrDefaultAsync(ct);                     // \u064a\u0639\u064a\u062f null \u0625\u0646 \u0644\u0645 \u064a\u0648\u062c\u062f\n\nif (dto is null) return Results.NotFound();\nreturn Results.Ok(dto);\n</code></pre> <p>\u0646\u0642\u0627\u0637 \u0633\u0631\u064a\u0639\u0629: - \u0644\u0627 \u062a\u0636\u0639 <code>.ToList()</code> \u0642\u0628\u0644 <code>Where/Select</code> \u0645\u0639 EF. - \u062a\u062c\u0646\u0651\u0628 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u062f\u0648\u0627\u0644 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0631\u062c\u0645\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0634\u0631\u0637 (\u0627\u0633\u062a\u062e\u062f\u0645 <code>EF.Functions</code> \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629).</p>"},{"location":"terms/lambda-expression/#c","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0628\u0646\u0627\u0621 \u0634\u062c\u0631\u0629 \u062a\u0639\u0628\u064a\u0631 \u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u064b\u0627 (\u0641\u0644\u062a\u0631\u0629 \u0645\u0631\u0646\u0629)","text":"C#<pre><code>using System.Linq.Expressions;\n\nExpression&lt;Func&lt;Employee, bool&gt;&gt; BuildPredicate(int? id, string? name)\n{\n    var p = Expression.Parameter(typeof(Employee), \"e\");\n    Expression body = Expression.Constant(true); // \u064a\u0628\u062f\u0623 \u062f\u0627\u0626\u0645\u064b\u0627 \u0628\u0635\u062d\u064a\u062d\n\n    if (id is not null)\n    {\n        var idEq = Expression.Equal(\n            Expression.Property(p, nameof(Employee.EmpId)),\n            Expression.Constant(id.Value));\n        body = Expression.AndAlso(body, idEq);\n    }\n\n    if (!string.IsNullOrWhiteSpace(name))\n    {\n        var nameProp = Expression.Property(p, nameof(Employee.FullName));\n        var method = typeof(string).GetMethod(nameof(string.Contains), new[] { typeof(string) })!;\n        var call = Expression.Call(nameProp, method, Expression.Constant(name));\n        body = Expression.AndAlso(body, call);\n    }\n\n    return Expression.Lambda&lt;Func&lt;Employee, bool&gt;&gt;(body, p);\n}\n\n// \u0627\u0633\u062a\u062e\u062f\u0627\u0645:\nvar pred = BuildPredicate(id: 1001, name: \"Kareem\");\nvar list = await _context.Employees.Where(pred).ToListAsync(ct);\n</code></pre>"},{"location":"terms/lambda-expression/#c-linq","title":"\u0645\u062b\u0627\u0644 C# \u2014 LINQ \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629 + \u0623\u062d\u062f\u0627\u062b","text":"C#<pre><code>// 1) \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629: delegates (Func/Action)\nvar nums = new[] { 1, 2, 3, 4, 5 };\nvar evens = nums.Where(n =&gt; n % 2 == 0).ToList();  // n =&gt; \u0634\u0631\u0637\n\n// 2) \u062d\u062f\u062b \u0628\u0644\u0627\u0645\u0628\u062f\u0627\nbutton.Click += (s, e) =&gt; Console.WriteLine(\"Clicked!\");\n\n// 3) \u0644\u0627\u0645\u0628\u062f\u0627 \u0645\u062a\u0639\u062f\u062f\u0629 \u0627\u0644\u0623\u0633\u0637\u0631\nFunc&lt;int, int, int&gt; sum = (a, b) =&gt; { var s = a + b; return s; };\n</code></pre>"},{"location":"terms/lambda-expression/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0635\u062d\u064a\u062d","text":"<ol> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0645\u0646\u0627\u0633\u0628:  </li> <li>\u062a\u0646\u0641\u064a\u0630 \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u2192 <code>Func&lt;&gt;/Action&lt;&gt;</code>.  </li> <li>\u062a\u0631\u062c\u0645\u0629 (EF/Core) \u2192 <code>Expression&lt;Func&lt;\u2026&gt;&gt;</code>.  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u0634\u0631\u0648\u0637 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0631\u062c\u0645\u0629 (\u0644\u0627 \u0645\u0646\u0627\u062f\u0627\u0629 <code>DateTime.Now.ToString()</code> \u062f\u0627\u062e\u0644 <code>Where</code>).  </li> <li>\u0623\u0633\u0642\u0637 \u0625\u0644\u0649 DTO \u0628\u0640 <code>Select</code> \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0625\u063a\u0644\u0627\u0642 \u0627\u0644\u062e\u0637\u0650\u0631 (Closure): \u0644\u0627 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a \u0633\u062a\u062a\u063a\u064a\u0651\u0631 \u0644\u0627\u062d\u0642\u064b\u0627.  </li> <li>\u0642\u0635\u0651\u0631 \u0627\u0644\u0644\u0627\u0645\u0628\u062f\u0627: \u0625\u0646 \u0637\u0627\u0644\u062a\u060c \u0627\u0646\u0642\u0644 \u0627\u0644\u0645\u0646\u0637\u0642 \u0625\u0644\u0649 \u062f\u0627\u0644\u0629 \u0645\u0633\u0645\u0627\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0623\u0636\u0650\u0641 \u0627\u0644\u0625\u0644\u063a\u0627\u0621 \u0645\u0639 \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u063a\u064a\u0631 \u0627\u0644\u0645\u062a\u0632\u0627\u0645\u0646\u0629 (<code>\u2026Async(ct)</code>).</li> </ol>"},{"location":"terms/lambda-expression/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u0639\u0645\u0627\u0644 <code>.ToList()</code> \u0642\u0628\u0644 \u0627\u0644\u0641\u0644\u0627\u062a\u0631 \u0645\u0639 EF \u2192 \u062a\u062d\u0645\u064a\u0644 \u0632\u0627\u0626\u062f \u0645\u0646 DB.  </li> <li>\u062f\u0648\u0627\u0644 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0631\u062c\u0645\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0644\u0627\u0645\u0628\u062f\u0627 \u2192 \u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u0623\u0648 \u062a\u0642\u064a\u064a\u0645 \u0643\u0644\u0651\u064a \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629.  </li> <li>\u062e\u0644\u0637 <code>Func&lt;&gt;</code> \u0645\u0639 <code>Expression&lt;Func&lt;&gt;&gt;</code> \u0641\u064a \u0648\u0627\u062c\u0647\u0627\u062a \u062a\u062a\u0648\u0642\u0639 \u062a\u0631\u062c\u0645\u0629.  </li> <li>\u0644\u0627\u0645\u0628\u062f\u0627 \u062a\u0637\u0648\u0644 \u0648\u062a\u062a\u0639\u0642\u0651\u062f \u2192 \u0635\u0639\u0648\u0628\u0629 \u0642\u0631\u0627\u0621\u0629 \u0648\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0625\u063a\u0644\u0627\u0642 (Closure) \u064a\u0645\u0633\u0643 \u0645\u0631\u0627\u062c\u0639 \u062a\u062a\u063a\u064a\u0631 \u2192 \u0646\u062a\u0627\u0626\u062c \u063a\u064a\u0631 \u0645\u062a\u0648\u0642\u0651\u0639\u0629.</li> </ul>"},{"location":"terms/lambda-expression/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Lambda Expression \u062a\u0639\u0631\u064a\u0641 \u062f\u0627\u0644\u0629 \u0642\u0635\u064a\u0631\u0629 \u0628\u0644\u0627 \u0627\u0633\u0645 \u0635\u064a\u063a\u0629 <code>=&gt;</code>\u060c \u062a\u064f\u0633\u062a\u062e\u062f\u0645 \u0641\u064a LINQ/\u0627\u0644\u0623\u062d\u062f\u0627\u062b Func / Action \u0645\u0646\u062f\u0648\u0628 \u0644\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0641\u0648\u0631\u064a \u0644\u0644\u0630\u0627\u0643\u0631\u0629\u061b \u0644\u0627 \u062a\u0631\u062c\u0645\u0629 \u0625\u0644\u0649 SQL Expression\\&lt;Func\\&lt;\u2026&gt;&gt; \u0634\u062c\u0631\u0629 \u062a\u0639\u0628\u064a\u0631 \u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u0645\u0632\u0648\u0651\u062f\u0627\u062a LINQ (EF) Anonymous Method <code>delegate(...) { ... }</code> \u0628\u062f\u064a\u0644 \u0623\u0642\u062f\u0645 \u0644\u0644\u0627\u0645\u0628\u062f\u0627 Method Group \u062a\u0645\u064a\u0631\u064a\u0631 \u0627\u0633\u0645 \u062f\u0627\u0644\u0629 \u0645\u0628\u0627\u0634\u0631\u0629 \u064a\u062a\u062d\u0648\u0651\u0644 \u0625\u0644\u0649 \u0645\u0646\u062f\u0648\u0628 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627"},{"location":"terms/lambda-expression/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Lambda Expression = \u0637\u0631\u064a\u0642\u0629 \u0633\u0631\u064a\u0639\u0629 \u0644\u062a\u0639\u0631\u064a\u0641 \u062f\u0627\u0644\u0629 \u0648\u062a\u0645\u0631\u064a\u0631\u0647\u0627 \u0643\u0642\u064a\u0645\u0629. \u0645\u0639 LINQ/EF \u062a\u0645\u0646\u062d\u0643 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0646\u0638\u064a\u0641\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0631\u062c\u0645\u0629\u060c \u0648\u0645\u0639 \u0627\u0644\u0623\u062d\u062f\u0627\u062b/\u0627\u0644\u0642\u0648\u0627\u0626\u0645 \u062a\u064f\u0633\u0647\u0651\u0644 \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0645\u062e\u062a\u0635\u0631\u0629\u2014\u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0628\u062d\u0630\u0631\u060c \u0648\u0628\u0646\u0645\u0637 \u0648\u0627\u0636\u062d \u0642\u0627\u0628\u0650\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631.</p>"},{"location":"terms/layer/","title":"Layer","text":""},{"location":"terms/layer/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Layer \u2014 \u0637\u0628\u0642\u0629 (\u0648\u062d\u062f\u0629 \u0645\u0646\u0637\u0642\u064a\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u062a\u062c\u0631\u064a\u062f \u0645\u062d\u062f\u0651\u062f \u062f\u0627\u062e\u0644 \u0628\u0646\u064a\u0629 \u0627\u0644\u0646\u0638\u0627\u0645).</p>"},{"location":"terms/layer/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0642\u0633\u064a\u0645 \u0644\u0644\u0643\u0648\u062f \u0625\u0644\u0649 \u0645\u0633\u062a\u0648\u064a\u0627\u062a \u0623\u0641\u0642\u064a\u0629 (Presentation / Application / Domain / Infrastructure). \u0627\u0644\u0647\u062f\u0641: \u0641\u0635\u0644 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a\u060c \u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u0631\u0627\u0628\u0637\u060c \u0648\u062a\u062d\u062f\u064a\u062f \u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0628\u0648\u0636\u0648\u062d.</p>"},{"location":"terms/layer/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0644 \u0637\u0628\u0642\u0629 \u062a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0646\u0648\u0639 \u0648\u0627\u062d\u062f \u0645\u0646 \u0627\u0644\u0639\u0645\u0644:  </li> <li>Presentation: HTTP/UI \u0648\u0646\u0645\u0627\u0630\u062c \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0631\u062f.  </li> <li>Application: \u062d\u0627\u0644\u0627\u062a \u0627\u0633\u062a\u0639\u0645\u0627\u0644 (Use Cases) \u0648\u062a\u0646\u0633\u064a\u0642 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a.  </li> <li>Domain: \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u062e\u0627\u0644\u0635\u0629 (\u0643\u064a\u0627\u0646\u0627\u062a/\u0642\u064a\u0645/\u062e\u062f\u0645\u0627\u062a \u0645\u062c\u0627\u0644).  </li> <li>Infrastructure: \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062a\u0642\u0646\u064a\u0629 (DB/Files/Email/HTTP).  </li> <li>\u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a: \u0625\u0644\u0649 \u0627\u0644\u0623\u0633\u0641\u0644 \u0623\u0648 \u0625\u0644\u0649 \u0627\u0644\u062f\u0627\u062e\u0644 \u0646\u062d\u0648 \u0627\u0644\u0645\u062c\u0627\u0644 \u0641\u0642\u0637. \u0644\u0627 \u0639\u0643\u0633.  </li> <li>\u0639\u0642\u0648\u062f \u0628\u064a\u0646 \u0627\u0644\u0637\u0628\u0642\u0627\u062a (Interfaces/DTOs) \u062a\u0645\u0646\u0639 \u0627\u0644\u062a\u0633\u0631\u064a\u0628.</li> </ul>"},{"location":"terms/layer/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0628\u0646\u0649 \u0645\u0646 \u0623\u0631\u0628\u0639 \u0637\u0648\u0627\u0628\u0642: \u0627\u0633\u062a\u0642\u0628\u0627\u0644 (\u0639\u0631\u0636)\u060c \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a (\u062a\u0637\u0628\u064a\u0642)\u060c \u0627\u0644\u0642\u0633\u0645 \u0627\u0644\u0642\u0627\u0646\u0648\u0646\u064a (\u0627\u0644\u0645\u062c\u0627\u0644)\u060c \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0644\u0648\u062c\u0633\u062a\u064a\u0629 (\u0627\u0644\u0628\u0646\u064a\u0629). \u0627\u0644\u0632\u0627\u0626\u0631 \u0644\u0627 \u064a\u0630\u0647\u0628 \u0644\u0644\u0645\u062e\u0632\u0646 \u0645\u0628\u0627\u0634\u0631\u0629. \u064a\u0645\u0631 \u0639\u0628\u0631 \u0627\u0633\u062a\u0642\u0628\u0627\u0644\u2192\u0625\u062f\u0627\u0631\u0629\u2192\u0642\u0627\u0646\u0648\u0646\u064a \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.</p>"},{"location":"terms/layer/#c-api-application-domain-infrastructure","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u062a\u0637\u0628\u064a\u0642 \u0637\u0628\u0642\u064a \u0628\u0633\u064a\u0637 (API \u2194 Application \u2194 Domain \u2194 Infrastructure)","text":"C#<pre><code>// .NET 8/9 \u2014 \u0645\u0634\u0631\u0648\u0639 \u0648\u0627\u062d\u062f \u0644\u0644\u062a\u0648\u0636\u064a\u062d\u060c \u0644\u0643\u0646 \u0627\u0644\u0641\u0643\u0631\u0629 \u0639\u0627\u062f\u0629\u064b 4 \u0645\u0634\u0627\u0631\u064a\u0639 (\u0637\u0628\u0642\u0629 \u0644\u0643\u0644 \u0645\u0634\u0631\u0648\u0639)\n// API: Presentation   | Application: Use Cases   | Domain: Business   | Infrastructure: DB/IO\n\n// ========== Domain ==========\nnamespace Shop.Domain;\n\n// \u0643\u064a\u0627\u0646 \u0645\u062c\u0627\u0644 + \u0642\u0648\u0627\u0639\u062f \u0628\u0633\u064a\u0637\u0629\npublic record OrderId(int Value);\npublic record Money(decimal Amount)\n{\n    public static Money operator +(Money a, Money b) =&gt; new(a.Amount + b.Amount);\n    public static Money Zero =&gt; new(0);\n}\npublic class Order\n{\n    public OrderId Id { get; }\n    private readonly List&lt;OrderLine&gt; _lines = new();\n    public IReadOnlyList&lt;OrderLine&gt; Lines =&gt; _lines;\n\n    public Order(OrderId id) =&gt; Id = id;\n\n    public void AddLine(string sku, int qty, Money price)\n    {\n        if (qty &lt;= 0) throw new ArgumentOutOfRangeException(nameof(qty));\n        if (price.Amount &lt;= 0) throw new ArgumentOutOfRangeException(nameof(price));\n        _lines.Add(new OrderLine(sku, qty, price));\n    }\n\n    public Money Total() =&gt; _lines.Aggregate(Money.Zero, (t, l) =&gt; t + new Money(l.Price.Amount * l.Qty));\n}\npublic record OrderLine(string Sku, int Qty, Money Price);\n\n// \u0639\u0642\u062f \u062a\u062e\u0632\u064a\u0646 \u064a\u064f\u0639\u0631\u0651\u064e\u0641 \u0642\u0631\u0628 \u0627\u0644\u0645\u062c\u0627\u0644\npublic interface IOrderRepository\n{\n    Task&lt;Order?&gt; GetAsync(OrderId id, CancellationToken ct = default);\n    Task SaveAsync(Order order, CancellationToken ct = default);\n}\n\n// ========== Application ==========\nnamespace Shop.Application;\nusing Shop.Domain;\n\n// \u062d\u0627\u0644\u0629 \u0627\u0633\u062a\u0639\u0645\u0627\u0644 (Use Case) \u2014 \u062a\u0646\u0633\u064a\u0642 \u062e\u0637\u0648\u0627\u062a \u0628\u062f\u0648\u0646 \u062a\u0641\u0627\u0635\u064a\u0644 \u062a\u062e\u0632\u064a\u0646\npublic class CreateOrderHandler\n{\n    private readonly IOrderRepository _repo;\n    public CreateOrderHandler(IOrderRepository repo) =&gt; _repo = repo;\n\n    public async Task&lt;Order&gt; HandleAsync(CreateOrder cmd, CancellationToken ct = default)\n    {\n        var order = new Order(new OrderId(cmd.OrderId));\n        foreach (var l in cmd.Lines)\n            order.AddLine(l.Sku, l.Qty, new Money(l.Price));\n\n        await _repo.SaveAsync(order, ct);\n        return order;\n    }\n}\n\n// DTO \u062e\u0627\u0635 \u0628\u0627\u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u064a\u0629\npublic record CreateOrder(int OrderId, List&lt;CreateOrderLine&gt; Lines);\npublic record CreateOrderLine(string Sku, int Qty, decimal Price);\n\n// ========== Infrastructure ==========\nnamespace Shop.Infrastructure;\nusing Shop.Domain;\n\n// \u0645\u0633\u062a\u0648\u062f\u0639 \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629 (\u0628\u062f\u064a\u0644 DB) \u2014 \u062a\u0641\u0627\u0635\u064a\u0644 \u062a\u0642\u0646\u064a\u0629 \u0645\u0639\u0632\u0648\u0644\u0629 \u0647\u0646\u0627\npublic class InMemoryOrderRepository : IOrderRepository\n{\n    private readonly Dictionary&lt;int, Order&gt; _db = new();\n    public Task&lt;Order?&gt; GetAsync(OrderId id, CancellationToken ct = default)\n        =&gt; Task.FromResult(_db.TryGetValue(id.Value, out var o) ? o : null);\n\n    public Task SaveAsync(Order order, CancellationToken ct = default)\n    {\n        _db[order.Id.Value] = order;\n        return Task.CompletedTask;\n    }\n}\n\n// ========== Presentation (Minimal API) ==========\nnamespace Shop.Api;\nusing Microsoft.AspNetCore.Mvc;\nusing Shop.Application;\nusing Shop.Domain;\nusing Shop.Infrastructure;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u062a\u0643\u0648\u064a\u0646 DI \u0648\u0641\u0642 \u0627\u0644\u0637\u0628\u0642\u0627\u062a (Presentation \u064a\u0639\u0631\u0641 Application/Domain \u0641\u0642\u0637 \u0639\u0628\u0631 \u0627\u0644\u0639\u0642\u0648\u062f)\nbuilder.Services.AddSingleton&lt;IOrderRepository, InMemoryOrderRepository&gt;(); // Infrastructure\nbuilder.Services.AddScoped&lt;CreateOrderHandler&gt;();                             // Application\n\nvar app = builder.Build();\napp.UseHttpsRedirection();\n\n// Endpoint \u0637\u0628\u0642\u0629 \u0627\u0644\u0639\u0631\u0636 \u2014 \u0644\u0627 \u064a\u0639\u0631\u0641 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646\napp.MapPost(\"/orders\", async ([FromBody] CreateOrder dto, CreateOrderHandler handler, CancellationToken ct) =&gt;\n{\n    var order = await handler.HandleAsync(dto, ct);\n    return Results.Created($\"/orders/{order.Id.Value}\", new {\n        id = order.Id.Value,\n        total = order.Total().Amount,\n        lines = order.Lines.Select(l =&gt; new { l.Sku, l.Qty, price = l.Price.Amount })\n    });\n});\n\napp.Run();\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - Domain \u064a\u062d\u0648\u064a \u0627\u0644\u0642\u0648\u0627\u0639\u062f \u0641\u0642\u0637. - Application \u064a\u0646\u0633\u0651\u0642 \u0648\u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0639\u0642\u062f <code>IOrderRepository</code>. - Infrastructure \u064a\u0642\u062f\u0651\u0645 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u0644\u0644\u0639\u0642\u062f. - Presentation \u064a\u0633\u062a\u062f\u0639\u064a Use Case \u0648\u064a\u062d\u0648\u0651\u0644 \u0628\u064a\u0646 DTO \u0648HTTP.</p>"},{"location":"terms/layer/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 \u0637\u0628\u0642\u064a \u0646\u0627\u062c\u062d","text":"<ol> <li>\u0627\u0631\u0633\u0645 \u0627\u0644\u062d\u062f\u0648\u062f: \u0645\u0627 \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0643\u0644 \u0637\u0628\u0642\u0629\u061f \u0645\u0627 \u0627\u0644\u0630\u064a \u0644\u0627 \u064a\u062e\u0635\u0647\u0627\u061f  </li> <li>\u0639\u0631\u0651\u0641 \u0627\u0644\u0639\u0642\u0648\u062f \u0641\u064a \u0627\u0644\u062f\u0627\u062e\u0644 (Domain/Application) \u0648\u0646\u0641\u0651\u0630\u0647\u0627 \u0641\u064a \u0627\u0644\u062e\u0627\u0631\u062c (Infrastructure).  </li> <li>\u0627\u062d\u0641\u0638 \u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a: Presentation/Application \u2192 Domain\u060c \u0648Infrastructure \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u0639\u0642\u0648\u062f \u0641\u0642\u0637.  </li> <li>\u0627\u0633\u062a\u0639\u0645\u0644 DI \u0644\u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 (\u0639\u0643\u0633 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a).  </li> <li>\u0627\u0641\u0635\u0644 \u0627\u0644\u0646\u0645\u0627\u0630\u062c: DTO \u0644\u0644\u0639\u0631\u0636\u060c Models/Entities \u0644\u0644\u0645\u062c\u0627\u0644. \u0644\u0627 \u062a\u0633\u0631\u0651\u0628 <code>DbContext</code> \u0644\u0644\u0623\u0639\u0644\u0649.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0628\u0645\u0639\u0632\u0644:  </li> <li>Domain \u0628\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062d\u062f\u0629.  </li> <li>Application \u0628\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a Use Cases \u0645\u0639 Repos \u0648\u0647\u0645\u064a\u0629.  </li> <li>Infrastructure \u0628\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062a\u0643\u0627\u0645\u0644 \u0645\u0639 DB \u062d\u0642\u064a\u0642\u064a\u0629.</li> </ol>"},{"location":"terms/layer/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062f\u0639\u0627\u0621 ORM/DbContext \u0645\u0646 Controller \u0645\u0628\u0627\u0634\u0631\u0629 (\u062a\u0633\u0631\u064a\u0628 \u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u0646\u064a\u0629).  </li> <li>\u062f\u0648\u0631\u0627\u0646 \u062a\u0628\u0639\u064a\u0627\u062a (Presentation \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 Infrastructure \u0648\u0627\u0644\u0639\u0643\u0633).  </li> <li>\u0637\u0628\u0642\u0627\u062a \u0641\u0627\u0631\u063a\u0629 \u0628\u0644\u0627 \u0642\u064a\u0645\u0629 (Layering \u0644\u0623\u062c\u0644 \u0627\u0644\u062a\u0642\u0633\u064a\u0645 \u0641\u0642\u0637).  </li> <li>\u0648\u0636\u0639 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u0641\u064a Infrastructure (\u0643\u0633\u0631 \u062d\u062f\u0648\u062f \u0627\u0644\u0645\u062c\u0627\u0644).  </li> <li>Anemic Domain: \u0643\u064a\u0627\u0646\u0627\u062a \u0628\u0644\u0627 \u0633\u0644\u0648\u0643\u060c \u0643\u0644 \u0627\u0644\u0645\u0646\u0637\u0642 \u0641\u064a \u0627\u0644\u062e\u062f\u0645\u0627\u062a.  </li> <li>\u0645\u0634\u0627\u0631\u0643\u0629 \u0646\u0645\u0648\u0630\u062c \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0643\u0640 DTO \u062e\u0627\u0631\u062c\u064a.</li> </ul>"},{"location":"terms/layer/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Layer \u0641\u0635\u0644 \u0645\u0646\u0637\u0642\u064a \u062d\u0633\u0628 \u0627\u0644\u062a\u062c\u0631\u064a\u062f \u062a\u0628\u0639\u064a\u0627\u062a \u0644\u0644\u0623\u0633\u0641\u0644/\u0644\u0644\u062f\u0627\u062e\u0644 \u0641\u0642\u0637 Tier \u0641\u0635\u0644 \u0641\u064a\u0632\u064a\u0627\u0626\u064a (Web/App/DB) \u0642\u062f \u064a\u0637\u0627\u0628\u0642 \u0637\u0628\u0642\u0627\u062a \u0623\u0648 \u064a\u062e\u062a\u0644\u0641 Module \u062a\u062c\u0645\u064a\u0639 \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0628\u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629 \u0642\u062f \u064a\u062d\u062a\u0648\u064a \u0639\u062f\u0651\u0629 \u0637\u0628\u0642\u0627\u062a \u062f\u0627\u062e\u0644\u0647 Clean Architecture \u0637\u0628\u0642\u0627\u062a \u0645\u062a\u062d\u062f\u0629 \u0627\u0644\u0645\u0631\u0643\u0632 \u062a\u0642\u0648\u062f\u0647\u0627 \u0627\u0644\u0645\u062c\u0627\u0644 \u062a\u0628\u0639\u064a\u0627\u062a \u0646\u062d\u0648 Domain \u0641\u0642\u0637 Hexagonal/Onion \u0645\u0646\u0627\u0641\u0630/\u0645\u062d\u0648\u0644\u0627\u062a \u062a\u0639\u0632\u0644 \u0627\u0644\u0628\u0646\u064a\u0629 Ports/Adapters\u060c \u064a\u0639\u0643\u0633 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a Interface \u0639\u0642\u0648\u062f \u0628\u064a\u0646 \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u062a\u0645\u0646\u0639 \u0627\u0644\u062a\u0633\u0631\u064a\u0628 \u0648\u062a\u0633\u0647\u0651\u0644 \u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644"},{"location":"terms/layer/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Layer \u062a\u0646\u0638\u0651\u0645 \u0646\u0638\u0627\u0645\u0643 \u0625\u0644\u0649 \u0645\u0633\u062a\u0648\u064a\u0627\u062a \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u062a\u0641\u0631\u0636 \u062d\u062f\u0648\u062f\u064b\u0627 \u0648\u0627\u062a\u062c\u0627\u0647 \u062a\u0628\u0639\u064a\u0627\u062a \u0645\u0646\u0636\u0628\u0637. \u0636\u0639 \u0627\u0644\u0639\u0642\u062f \u0641\u064a \u0627\u0644\u062f\u0627\u062e\u0644\u060c \u0648\u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0641\u064a \u0627\u0644\u062e\u0627\u0631\u062c\u060c \u0648\u0645\u0631\u0651\u0631 \u0643\u0644 \u0634\u064a\u0621 \u0639\u0628\u0631 DI\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0635\u0645\u064a\u0645 \u0642\u0627\u0628\u0644 \u0644\u0644\u0635\u064a\u0627\u0646\u0629\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0648\u064a\u0633\u0647\u0651\u0644 \u0627\u0644\u0646\u0645\u0648 \u062f\u0648\u0646 \u062a\u0634\u0627\u0628\u0643.</p>"},{"location":"terms/library/","title":"Library","text":""},{"location":"terms/library/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Software Library \u2014 \u0645\u0643\u062a\u0628\u0629 \u0628\u0631\u0645\u062c\u064a\u0629</p>"},{"location":"terms/library/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062d\u0632\u0645\u0629 \u062f\u0648\u0627\u0644/\u0623\u0646\u0648\u0627\u0639 \u062c\u0627\u0647\u0632\u0629 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645. \u0623\u0646\u062a \u062a\u0633\u062a\u062f\u0639\u064a\u0647\u0627 \u0648\u0642\u062a \u0645\u0627 \u062a\u0634\u0627\u0621. \u0644\u0627 \u062a\u0641\u0631\u0636 \u0639\u0644\u064a\u0643 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642. \u0644\u0627 \u064a\u0648\u062c\u062f Inversion of Control \u0645\u0646 \u0637\u0631\u0641\u0647\u0627.</p>"},{"location":"terms/library/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0645\u0643\u062a\u0628\u0629 = \u0648\u0638\u0627\u0626\u0641 \u0645\u0631\u0643\u0651\u0632\u0629 (JSON\u060c \u0635\u0648\u0631\u060c HTTP\u060c \u0631\u064a\u0627\u0636\u064a\u0627\u062a\u2026).  </li> <li>\u062a\u0631\u0643\u0651\u0628\u0647\u0627 \u0639\u0628\u0631 Package Manager (\u0645\u062b\u0644 NuGet) \u062b\u0645 \u062a\u0633\u062a\u062f\u0639\u064a \u0648\u0627\u062c\u0647\u0627\u062a\u0647\u0627 (APIs).  </li> <li>\u0644\u0627 \u062a\u062f\u064a\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u060c \u0648\u0644\u0627 \u062a\u064f\u0645\u0644\u0650\u064a \u0647\u064a\u0643\u0644 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 (\u0628\u0639\u0643\u0633 \u0627\u0644\u0625\u0637\u0627\u0631 Framework).  </li> <li>\u062c\u0648\u062f\u0629 \u0627\u0644\u0645\u0643\u062a\u0628\u0629 \u062a\u064f\u0642\u0627\u0633: \u0648\u0627\u062c\u0647\u0629 \u0648\u0627\u0636\u062d\u0629\u060c \u062a\u0648\u062b\u064a\u0642\u060c \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u0635\u064a\u0627\u0646\u0629\u060c \u062a\u0631\u062e\u064a\u0635 \u0642\u0627\u0646\u0648\u0646\u064a.</li> </ul>"},{"location":"terms/library/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0639\u062f\u0651\u0629 \u0623\u062f\u0648\u0627\u062a \u0641\u064a \u062d\u0642\u064a\u0628\u0629 \u0627\u0644\u0639\u0627\u0645\u0644. \u062a\u062e\u062a\u0627\u0631 \u0627\u0644\u0645\u0637\u0631\u0642\u0629 \u0623\u0648 \u0627\u0644\u0645\u0641\u0643 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629. \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0644\u0627 \u062a\u064f\u062f\u064a\u0631 \u0627\u0644\u0648\u0631\u0634\u0629\u061b \u0623\u0646\u062a \u062a\u062f\u064a\u0631\u0647\u0627.</p>"},{"location":"terms/library/#c-newtonsoftjson","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 \u062e\u0627\u0631\u062c\u064a\u0629: Newtonsoft.Json)","text":"<p>\u0627\u0644\u062a\u062b\u0628\u064a\u062a (\u0645\u0631\u0651\u0629 \u0648\u0627\u062d\u062f\u0629): Bash<pre><code>dotnet add package Newtonsoft.Json\n</code></pre></p> C#<pre><code>using System;\nusing Newtonsoft.Json; // \u0645\u0643\u062a\u0628\u0629 \u0637\u0631\u0641 \u062b\u0627\u0644\u062b \u2014 \u0623\u0646\u062a \u062a\u0633\u062a\u062f\u0639\u064a\u0647\u0627\n\nclass Program\n{\n    record User(string Name, int Age);\n\n    static void Main()\n    {\n        var u = new User(\"Sara\", 28);\n\n        // 1) \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0648\u0638\u064a\u0641\u0629 \u0645\u0646 \u0627\u0644\u0645\u0643\u062a\u0628\u0629: Serialize\n        string json = JsonConvert.SerializeObject(u);\n        Console.WriteLine(json); // {\"Name\":\"Sara\",\"Age\":28}\n\n        // 2) Deserialize\n        var u2 = JsonConvert.DeserializeObject&lt;User&gt;(json);\n        Console.WriteLine($\"{u2!.Name} - {u2.Age}\");\n\n        // 3) \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u062e\u062a\u064a\u0627\u0631\u064a\u0629 \u2014 \u0645\u0627 \u0632\u0644\u062a \u0623\u0646\u062a \u0645\u0646 \u064a\u0642\u0631\u0631\n        var settings = new JsonSerializerSettings { Formatting = Formatting.Indented };\n        Console.WriteLine(JsonConvert.SerializeObject(u, settings));\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0645\u0643\u062a\u0628\u0629 \u062a\u0642\u062f\u0651\u0645 \u0648\u0638\u0627\u0626\u0641. \u0623\u0646\u062a \u0645\u0646 \u064a\u0642\u0631\u0651\u0631 \u0645\u062a\u0649 \u0648\u0643\u064a\u0641 \u062a\u0633\u062a\u0639\u0645\u0644\u0647\u0627\u060c \u0648\u0636\u0645\u0646 \u0623\u064a\u0651 \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629.</p>"},{"location":"terms/library/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629","text":"<ol> <li>\u0627\u062d\u0633\u0628 \u0627\u0644\u062d\u0627\u062c\u0629: \u0645\u0627 \u0627\u0644\u0645\u0634\u0643\u0644\u0629 \u0627\u0644\u062a\u064a \u0633\u062a\u062d\u0644\u0651\u0647\u0627 \u0627\u0644\u0645\u0643\u062a\u0628\u0629\u061f \u0647\u0644 .NET \u064a\u0648\u0641\u0651\u0631 \u0628\u062f\u064a\u0644\u064b\u0627 \u0645\u062f\u0645\u062c\u064b\u0627\u061f  </li> <li>\u0642\u064a\u0651\u0645 \u0627\u0644\u062c\u0648\u062f\u0629: \u0627\u0644\u0627\u0633\u062a\u0645\u0631\u0627\u0631\u064a\u0629\u060c \u0639\u062f\u062f \u0627\u0644\u062a\u0646\u0632\u064a\u0644\u0627\u062a\u060c \u062a\u062d\u062f\u064a\u062b\u0627\u062a \u062d\u062f\u064a\u062b\u0629\u060c \u0642\u0636\u0627\u064a\u0627 \u0645\u0641\u062a\u0648\u062d\u0629\u060c \u062a\u0631\u062e\u064a\u0635 (MIT/Apache2\u2026).  </li> <li>\u062b\u0628\u0651\u062a \u0639\u0628\u0631 NuGet \u0648\u062d\u062f\u0651\u062f \u0646\u0633\u062e\u0629 (Pin) \u0623\u0648 \u0646\u0637\u0627\u0642 SemVer \u0648\u0627\u0636\u062d.  </li> <li>\u0644\u0641\u0651 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062e\u0644\u0641 \u0648\u0627\u062c\u0647\u0629 \u062f\u0627\u062e\u0644\u064a\u0629 (Adapter) \u0644\u062a\u0633\u0647\u064a\u0644 \u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0644\u0627\u062d\u0642\u064b\u0627.  </li> <li>\u0633\u062c\u0651\u0644 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a \u0641\u064a \u0648\u062b\u0627\u0626\u0642 \u0627\u0644\u0645\u0634\u0631\u0648\u0639\u060c \u0648\u0631\u0627\u0642\u0628 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0627\u0644\u0623\u0645\u0646\u064a\u0629 (Dependabot/Snyk).  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0648\u062d\u062f\u0648\u062f \u0627\u0644\u0623\u062f\u0627\u0621\u060c \u0648\u0623\u0639\u062f \u0627\u0644\u062a\u0647\u064a\u0626\u0629 \u0623\u0648 \u0627\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.</li> </ol>"},{"location":"terms/library/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 Library \u0648Framework: \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0645\u0643\u062a\u0628\u0629 \u0643\u0623\u0646\u0647\u0627 \u062a\u062f\u064a\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0631\u062e\u064a\u0635 \u0623\u0648 \u0627\u0644\u0642\u064a\u0648\u062f \u0627\u0644\u0642\u0627\u0646\u0648\u0646\u064a\u0629.  </li> <li>\u0631\u0628\u0637 \u0627\u0644\u0643\u0648\u062f \u0628\u0648\u0627\u062c\u0647\u0627\u062a \u0627\u0644\u0645\u0643\u062a\u0628\u0629 \u0645\u0628\u0627\u0634\u0631\u0629\u064b \u0641\u064a \u0643\u0644 \u0645\u0643\u0627\u0646 \u0628\u062f\u0644 \u0637\u0628\u0642\u0629 Abstraction.  </li> <li>\u0639\u062f\u0645 \u062a\u062b\u0628\u064a\u062a \u0646\u0633\u062e\u0629 \u0645\u062d\u062f\u062f\u0629 \u2192 \u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0645\u0641\u0627\u062c\u0626\u0629 \u062a\u0643\u0633\u0631 \u0627\u0644\u0643\u0648\u062f.  </li> <li>\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0645\u0643\u062a\u0628\u0627\u062a \u062b\u0642\u064a\u0644\u0629 \u0644\u062d\u0644\u0651 \u0645\u0647\u0645\u0629 \u0628\u0633\u064a\u0637\u0629 \u064a\u0645\u0643\u0646 \u062a\u0646\u0641\u064a\u0630\u0647\u0627 \u0628\u0643\u0648\u062f \u0635\u063a\u064a\u0631.</li> </ul>"},{"location":"terms/library/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Library \u062f\u0648\u0627\u0644/\u0623\u0646\u0648\u0627\u0639 \u062a\u0633\u062a\u062f\u0639\u064a\u0647\u0627 \u0623\u0646\u062a \u0644\u0627 \u062a\u062f\u064a\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u061b \u062a\u064f\u0633\u062a\u062e\u062f\u0645 \u0639\u0628\u0631 APIs Framework \u0647\u064a\u0643\u0644 \u062a\u0634\u063a\u064a\u0644 \u064a\u0633\u062a\u062f\u0639\u064a \u0643\u0648\u062f\u0643 (IoC) \u064a\u0641\u0631\u0636 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629/\u0642\u0648\u0627\u0639\u062f \u0648\u0645\u0643\u0648\u0651\u0646\u0627\u062a (Routing/DI\u2026) SDK \u0623\u062f\u0648\u0627\u062a + \u0645\u0643\u062a\u0628\u0627\u062a + \u0642\u0648\u0627\u0644\u0628 \u064a\u0634\u0645\u0644 CLI/\u0646\u0645\u0627\u0630\u062c/\u062a\u0648\u062b\u064a\u0642 \u0644\u0644\u062a\u0637\u0648\u064a\u0631 \u0639\u0644\u0649 \u0645\u0646\u0635\u0651\u0629 API \u0639\u0642\u062f \u062a\u0648\u0627\u0635\u0644/\u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0642\u062f \u062a\u0643\u0648\u0646 \u0645\u062d\u0644\u064a\u0651\u0629 (Library API) \u0623\u0648 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0629 (Web API)"},{"location":"terms/library/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0645\u0643\u062a\u0628\u0629 = \u0648\u0638\u064a\u0641\u0629 \u062c\u0627\u0647\u0632\u0629 \u062a\u0636\u064a\u0641\u0647\u0627 \u0644\u062a\u0633\u0631\u064a\u0639 \u0639\u0645\u0644\u0643. \u0627\u0633\u062a\u062f\u0639\u0647\u0627 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u060c \u0623\u062b\u0628\u062a \u0646\u0633\u062e\u062a\u0647\u0627\u060c \u0644\u0641\u0651\u0647\u0627 \u0628\u0648\u0627\u062c\u0647\u0629 \u062f\u0627\u062e\u0644\u064a\u0629\u060c \u0648\u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0644\u062c\u0648\u062f\u0629 \u0648\u0627\u0644\u062a\u0631\u062e\u064a\u0635\u2014\u0648\u0628\u0630\u0644\u0643 \u062a\u0628\u0642\u0649 \u0634\u064a\u0641\u0631\u062a\u0643 \u0646\u0638\u064a\u0641\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0635\u064a\u0627\u0646\u0629.</p>"},{"location":"terms/methodology/","title":"Methodology","text":""},{"location":"terms/methodology/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Methodology \u2014 \u0645\u0646\u0647\u062c\u064a\u0651\u0629 (\u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0628\u0627\u062f\u0626 + \u0645\u0645\u0627\u0631\u0633\u0627\u062a + \u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0645\u0646\u0638\u0651\u0645\u0629 \u0644\u0625\u0646\u062c\u0627\u0632 \u0627\u0644\u0639\u0645\u0644).</p>"},{"location":"terms/methodology/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0637\u0631\u064a\u0642\u0629 \u0639\u0645\u0644 \u0645\u0642\u0646\u0651\u064e\u0646\u0629 \u062a\u062d\u062f\u0651\u062f \u0627\u0644\u0623\u062f\u0648\u0627\u0631\u060c \u0627\u0644\u0637\u0642\u0648\u0633 (\u0627\u062c\u062a\u0645\u0627\u0639\u0627\u062a)\u060c \u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a (Artifacts)\u060c \u0648\u0627\u0644\u0642\u064a\u0627\u0633\u0627\u062a \u0644\u062a\u062d\u0642\u064a\u0642 \u0647\u062f\u0641 \u0627\u0644\u062a\u0637\u0648\u064a\u0631/\u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0628\u062b\u0628\u0627\u062a. \u0623\u0645\u062b\u0644\u0629: Agile\u060c Waterfall\u060c Lean\u060c XP.</p>"},{"location":"terms/methodology/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0651\u0629 = \u0641\u0644\u0633\u0641\u0629 + \u0642\u0648\u0627\u0639\u062f \u0644\u0643\u064a\u0641 \u0646\u062e\u0637\u0651\u0637\u060c \u0646\u0646\u0641\u0651\u0630\u060c \u0646\u062e\u062a\u0628\u0631\u060c \u0648\u0646\u0646\u0634\u0631.  </li> <li>\u062a\u062d\u062f\u0651\u062f \u0645\u062a\u0649 \u0648\u0643\u064a\u0641 \u0646\u062a\u062e\u0630 \u0642\u0631\u0627\u0631\u064b\u0627\u060c \u0648\u0645\u0627 \u0647\u064a \u062d\u0648\u0627\u062c\u0632 \u0627\u0644\u062c\u0648\u062f\u0629.  </li> <li>\u062a\u062e\u062a\u0644\u0641 \u0639\u0646 Framework (\u0623\u062f\u0627\u0629/\u0647\u064a\u0643\u0644 \u062a\u0637\u0628\u064a\u0642\u064a)\u060c \u0648\u0639\u0646 Process (\u062e\u0637\u0648\u0627\u062a \u062a\u0641\u0635\u064a\u0644\u064a\u0629)\u060c   \u0648\u0639\u0646 Approach (\u0645\u0642\u0627\u0631\u0628\u0629 \u0645\u062e\u062a\u0635\u0631\u0629 \u0644\u062d\u0644 \u0645\u0634\u0643\u0644\u0629)\u060c \u0648SDLC (\u0645\u0631\u0627\u062d\u0644 \u0639\u0627\u0645\u0651\u0629 \u0644\u0644\u062f\u0648\u0631\u0629).</li> </ul>"},{"location":"terms/methodology/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0637\u0628\u062e \u0625\u064a\u0637\u0627\u0644\u064a = \u0645\u0646\u0647\u062c\u064a\u0651\u0629 (\u0641\u0644\u0633\u0641\u0629 \u0648\u0645\u0628\u0627\u062f\u0626). \u0648\u0635\u0641\u0629 \u0627\u0644\u0628\u064a\u062a\u0632\u0627 = \u0625\u0637\u0627\u0631/\u0642\u0627\u0644\u0628. \u062e\u0637\u0648\u0627\u062a \u0627\u0644\u062a\u062d\u0636\u064a\u0631 = \u0639\u0645\u0644\u064a\u0629. \u0627\u062e\u062a\u064a\u0627\u0631 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u062e\u0627\u0644\u064a\u0629 \u0645\u0646 \u0627\u0644\u062c\u0644\u0648\u062a\u064a\u0646 = \u0645\u0642\u0627\u0631\u0628\u0629 \u0644\u062d\u0627\u0644\u0629 \u062e\u0627\u0635\u0629.</p>"},{"location":"terms/methodology/#c-agile-vs-waterfall","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0645\u062d\u0631\u0643 \u0628\u0633\u064a\u0637 \u064a\u0641\u0631\u0636 \u0642\u0648\u0627\u0639\u062f \u0645\u0646\u0647\u062c\u064a\u0651\u0629 (Agile vs Waterfall)","text":"<p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0646\u0645\u0630\u062c\u0629 \u0627\u0646\u062a\u0642\u0627\u0644 \u0628\u0637\u0627\u0642\u0629 \u0639\u0645\u0644 \u0628\u064a\u0646 \u062d\u0627\u0644\u0627\u062a. - Agile: <code>Todo \u2192 InProgress \u2192 Review \u2192 Done</code> (\u062d\u062f\u0651 WIP). - Waterfall: \u0645\u0631\u0627\u062d\u0644 \u062e\u0637\u064a\u0651\u0629 \u0644\u0627 \u062a\u062a\u062c\u0627\u0648\u0632 \u0628\u0648\u0627\u0628\u0629 (Gate).</p> C#<pre><code>// .NET 8/9 \u2014 \u0646\u0645\u0648\u0630\u062c \u0645\u0628\u0633\u0651\u0637\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic enum State { Todo, InProgress, Review, Done, Requirements, Design, Build, Test, Deploy }\n\npublic interface IMethodology\n{\n    bool CanTransition(State from, State to, BoardContext ctx);\n    string Name { get; }\n}\n\npublic class BoardContext\n{\n    public int InProgressCount { get; set; }\n    public int WipLimit { get; set; } = 2; // \u062d\u062f\u0651 \u0639\u0645\u0644 \u062c\u0627\u0631\u064d \u0641\u064a Agile\n}\n\n// Agile: \u064a\u0633\u0645\u062d \u0628\u062a\u0641\u0631\u0651\u063a \u0627\u0644\u062d\u0627\u0644\u0629 \u0648\u0628\u062d\u062f WIP\npublic class AgileMethodology : IMethodology\n{\n    private static readonly (State From, State To)[] Allowed =\n    {\n        (State.Todo, State.InProgress),\n        (State.InProgress, State.Review),\n        (State.Review, State.Done)\n    };\n\n    public string Name =&gt; \"Agile\";\n    public bool CanTransition(State from, State to, BoardContext ctx)\n    {\n        if (from == State.Todo &amp;&amp; to == State.InProgress &amp;&amp; ctx.InProgressCount &gt;= ctx.WipLimit) return false;\n        return Allowed.Any(r =&gt; r.From == from &amp;&amp; r.To == to);\n    }\n}\n\n// Waterfall: \u062a\u0633\u0644\u0633\u0644 \u0635\u0627\u0631\u0645 \u0628\u0628\u0648\u0627\u0628\u0627\u062a\npublic class WaterfallMethodology : IMethodology\n{\n    private static readonly State[] Order = { State.Requirements, State.Design, State.Build, State.Test, State.Deploy };\n    public string Name =&gt; \"Waterfall\";\n    public bool CanTransition(State from, State to, BoardContext ctx)\n    {\n        int i = Array.IndexOf(Order, from), j = Array.IndexOf(Order, to);\n        return i &gt;= 0 &amp;&amp; j == i + 1; // \u062e\u0637\u0648\u0629 \u0648\u0627\u062d\u062f\u0629 \u0644\u0644\u0623\u0645\u0627\u0645 \u0641\u0642\u0637\n    }\n}\n\npublic class Demo\n{\n    static void Main()\n    {\n        var ctx = new BoardContext();\n        IMethodology agile = new AgileMethodology();\n        IMethodology wf = new WaterfallMethodology();\n\n        // Agile\n        Console.WriteLine(agile.Name);\n        Console.WriteLine(agile.CanTransition(State.Todo, State.InProgress, ctx)); // True\n        ctx.InProgressCount = 2;\n        Console.WriteLine(agile.CanTransition(State.Todo, State.InProgress, ctx)); // False (WIP)\n\n        // Waterfall\n        Console.WriteLine(wf.Name);\n        Console.WriteLine(wf.CanTransition(State.Requirements, State.Design, ctx)); // True\n        Console.WriteLine(wf.CanTransition(State.Requirements, State.Build, ctx));  // False\n    }\n}\n</code></pre> <p>\u0627\u0644\u0645\u063a\u0632\u0649: \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u062a\u0641\u0631\u0636 \u0642\u0648\u0627\u0639\u062f \u062d\u0631\u0643\u0629 \u0648\u062d\u0648\u0627\u062c\u0632. \u064a\u0645\u0643\u0646\u0643 \u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 \u062f\u0648\u0646 \u0625\u0639\u0627\u062f\u0629 \u0643\u062a\u0627\u0628\u0629 \u0645\u0646\u0637\u0642 \u0627\u0644\u0623\u0639\u0645\u0627\u0644.</p>"},{"location":"terms/methodology/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u062d\u062f\u064a\u062f \u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u0645\u0646\u0627\u0633\u0628\u0629","text":"<ol> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0633\u064a\u0627\u0642: \u062b\u0628\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a\u061f \u0642\u064a\u0648\u062f \u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644\u061f \u062d\u062c\u0645 \u0627\u0644\u0641\u0631\u064a\u0642\u061f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0644\u0633\u0631\u0639\u0629\u061f  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0651\u0629/\u0627\u0644\u0645\u0632\u064a\u062c: Agile/Scrum \u0623\u0648 Kanban \u0623\u0648 Waterfall \u0623\u0648 \u0647\u062c\u064a\u0646 (Agile + \u062d\u0648\u0627\u062c\u0632 \u0627\u0645\u062a\u062b\u0627\u0644).  </li> <li>\u0639\u0631\u0651\u0641 \u0627\u0644\u0623\u062f\u0648\u0627\u0631 \u0648\u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a: \u0645\u0627\u0644\u0643 \u0645\u0646\u062a\u062c\u060c \u0642\u0627\u0626\u062f \u062a\u0642\u0646\u064a\u060c QA\u061b \u0648\u062b\u0627\u0626\u0642 \u0644\u0627\u0632\u0645\u0629 (SRS\u060c ADR\u060c \u062e\u0637\u0629 \u0627\u062e\u062a\u0628\u0627\u0631).  </li> <li>\u0637\u0642\u0648\u0633 \u0648\u0625\u064a\u0642\u0627\u0639: Sprint/Retro/Review \u0623\u0648 \u062a\u062f\u0641\u0651\u0642 Kanban \u0648\u062d\u062f\u0648\u062f WIP\u060c \u0623\u0648 Gates \u0641\u064a Waterfall.  </li> <li>\u062a\u0639\u0631\u064a\u0641 \u062c\u0627\u0647\u0632\u064a\u0629/\u0625\u0646\u062c\u0627\u0632 (DoR/DoD): \u0645\u0639\u0627\u064a\u064a\u0631 \u062f\u062e\u0648\u0644 \u0648\u062e\u0631\u0648\u062c \u0644\u0643\u0644 \u062e\u0637\u0648\u0629.  </li> <li>\u0642\u064a\u0627\u0633 \u0648\u062a\u062d\u0633\u064a\u0646: Lead Time\u060c Throughput\u060c \u0639\u064a\u0648\u0628/\u0625\u0635\u062f\u0627\u0631\u060c \u0627\u0644\u062a\u0632\u0627\u0645 \u0628\u0627\u0644\u0645\u0648\u0627\u0639\u064a\u062f\u061b \u062d\u0633\u0651\u0646 \u062f\u0648\u0631\u064a\u064b\u0627.</li> </ol>"},{"location":"terms/methodology/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0642\u0644\u064a\u062f \u0623\u0639\u0645\u0649 (Cargo-Cult): \u062a\u0637\u0628\u064a\u0642 \u0637\u0642\u0648\u0633 \u0628\u0644\u0627 \u0641\u0647\u0645 \u0627\u0644\u0645\u0634\u0643\u0644\u0629.  </li> <li>\u0639\u062f\u0645 \u062a\u0641\u0635\u064a\u0644 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0651\u0629 \u0644\u0644\u0633\u064a\u0627\u0642 (\u0641\u0631\u064a\u0642 \u0635\u063a\u064a\u0631 \u2260 \u0645\u0624\u0633\u0651\u0633\u0629 \u0643\u0628\u064a\u0631\u0629).  </li> <li>\u0637\u0642\u0648\u0633 \u0643\u062b\u064a\u0631\u0629 \u0628\u0644\u0627 \u0645\u062e\u0631\u062c\u0627\u062a \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u063a\u064a\u0627\u0628 \u062a\u0639\u0631\u064a\u0641 DoD/DoR \u0623\u0648 \u062d\u0648\u0627\u062c\u0632 \u0627\u0644\u062c\u0648\u062f\u0629.  </li> <li>\u062e\u0644\u0637 \u0623\u062f\u0648\u0627\u0631 \u0648\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a\u060c \u0623\u0648 \u062a\u062c\u0627\u0647\u0644 \u0642\u064a\u0627\u0633 \u0627\u0644\u0623\u062f\u0627\u0621 \u0648\u0627\u0644\u062a\u062d\u0633\u064a\u0646.</li> </ul>"},{"location":"terms/methodology/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Methodology \u0641\u0644\u0633\u0641\u0629 \u0648\u0642\u0648\u0627\u0639\u062f \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u0639\u0645\u0644 \u062a\u062d\u062f\u0651\u062f \u0623\u062f\u0648\u0627\u0631/\u0637\u0642\u0648\u0633/\u0645\u062e\u0631\u062c\u0627\u062a \u0648\u0642\u064a\u0627\u0633\u0627\u062a Agile \u062a\u0643\u0631\u0627\u0631 \u0633\u0631\u064a\u0639 \u0645\u0648\u062c\u0651\u0647 \u0628\u0627\u0644\u0642\u064a\u0645\u0629 Scrum/Kanban \u0636\u0645\u0646 \u0627\u0644\u0645\u0638\u0644\u0651\u0629 Waterfall \u062a\u0633\u0644\u0633\u0644 \u0645\u0631\u062d\u0644\u064a \u0628\u062d\u0648\u0627\u062c\u0632 \u0627\u0639\u062a\u0645\u0627\u062f \u0645\u0646\u0627\u0633\u0628 \u0644\u062b\u0628\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0648\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644 SDLC \u0645\u0631\u0627\u062d\u0644 \u0639\u0627\u0645\u0629 \u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u064a\u0645\u0643\u0646 \u062a\u0646\u0641\u064a\u0630\u0647\u0627 \u0628\u0623\u064a \u0645\u0646\u0647\u062c\u064a\u0651\u0629 Approach \u0645\u0642\u0627\u0631\u0628\u0629 \u062d\u0644 \u0642\u0635\u064a\u0631\u0629 \u0627\u0644\u0645\u062f\u0649 \u062a\u0643\u062a\u064a\u0643 \u0644\u062a\u0646\u0641\u064a\u0630 \u062c\u0632\u0621 \u0636\u0645\u0646 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0651\u0629 Framework \u0647\u064a\u0643\u0644/\u0623\u062f\u0648\u0627\u062a \u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0645\u0646\u0647\u062c\u064a\u0651\u0629 Scrum/Kanban = \u0623\u064f\u0637\u0631 \u0636\u0645\u0646 Agile"},{"location":"terms/methodology/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Methodology \u062a\u0646\u0638\u0651\u0645 \u0643\u064a\u0641 \u064a\u0639\u0645\u0644 \u0627\u0644\u0641\u0631\u064a\u0642 \u0644\u062a\u062d\u0642\u064a\u0642 \u0627\u0644\u0647\u062f\u0641 \u0628\u062c\u0648\u062f\u0629 \u0648\u0627\u0633\u062a\u062f\u0627\u0645\u0629. \u0627\u062e\u062a\u0631 \u0645\u0627 \u064a\u0646\u0627\u0633\u0628 \u0633\u064a\u0627\u0642\u0643\u060c \u062d\u062f\u0651\u062f \u0627\u0644\u0623\u062f\u0648\u0627\u0631 \u0648\u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0648\u0627\u0644\u0625\u064a\u0642\u0627\u0639\u060c \u0623\u0636\u0650\u0641 \u062d\u0648\u0627\u062c\u0632 \u062c\u0648\u062f\u0629\u060c \u0648\u0642\u0650\u0633 \u0644\u062a\u062d\u0633\u0651\u0646 \u0628\u0627\u0633\u062a\u0645\u0631\u0627\u0631\u2014\u0647\u0643\u0630\u0627 \u062a\u062a\u062d\u0648\u0644 \u0627\u0644\u0637\u0642\u0648\u0633 \u0625\u0644\u0649 \u0646\u062a\u0627\u0626\u062c \u0645\u0644\u0645\u0648\u0633\u0629. </p>"},{"location":"terms/microservices/","title":"Microservices","text":""},{"location":"terms/microservices/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Microservices Architecture \u2014 \u0639\u0645\u0627\u0631\u0629 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0645\u0635\u063a\u0651\u0631\u0629.</p>"},{"location":"terms/microservices/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0638\u0627\u0645 \u0645\u0643\u0648\u0651\u064e\u0646 \u0645\u0646 \u062e\u062f\u0645\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0645\u0633\u062a\u0642\u0644\u0629. \u0643\u0644 \u062e\u062f\u0645\u0629 \u062a\u0645\u0644\u0643 \u062d\u062f\u0651 \u0645\u062c\u0627\u0644 \u0648\u0627\u0636\u062d \u0648\u0628\u064a\u0627\u0646\u0627\u062a\u0647\u0627 \u0627\u0644\u062e\u0627\u0635\u0629\u060c \u0648\u062a\u064f\u0646\u0634\u064e\u0631 \u0648\u062a\u062a\u062d\u062c\u0651\u0645 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0642\u0644. \u0627\u0644\u062a\u0648\u0627\u0635\u0644 \u0639\u0628\u0631 HTTP/gRPC/\u0631\u0633\u0627\u0626\u0644 \u0645\u0639 \u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0645\u0631\u0648\u0646\u0629 \u0636\u062f \u0627\u0644\u0623\u0639\u0637\u0627\u0644.</p>"},{"location":"terms/microservices/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0644 \u062e\u062f\u0645\u0629 = \u0648\u0638\u064a\u0641\u0629 \u0639\u0645\u0644 \u0645\u062d\u062f\u0651\u062f\u0629 (Orders, Inventory, Billing\u2026).  </li> <li>\u062a\u0645\u0644\u0643 \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646\u0641\u0635\u0644\u0629 (\u0644\u0627 \u0645\u0634\u0627\u0631\u0643\u0629 \u062c\u062f\u0627\u0648\u0644 \u0628\u064a\u0646 \u0627\u0644\u062e\u062f\u0645\u0627\u062a).  </li> <li>\u0627\u0644\u062a\u0648\u0627\u0635\u0644 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 \u0639\u0646\u062f\u0645\u0627 \u064a\u0645\u0643\u0646 (\u0631\u0633\u0627\u0626\u0644/\u0623\u062d\u062f\u0627\u062b)\u060c \u0648\u0645\u062a\u0632\u0627\u0645\u0646 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 (HTTP/gRPC).  </li> <li>\u062a\u062d\u062a\u0627\u062c \u0645\u0644\u0627\u062d\u064e\u0638\u064a\u0629 (Logs/Traces/Metrics)\u060c \u0635\u0645\u0648\u062f (Retries/Timeouts/Circuit Breaker)\u060c \u0648\u0625\u0635\u062f\u0627\u0631 \u0639\u0642\u0648\u062f.</li> </ul>"},{"location":"terms/microservices/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0634\u0631\u0643\u0629 \u0643\u0628\u064a\u0631\u0629: \u0623\u0642\u0633\u0627\u0645 \u0645\u0633\u062a\u0642\u0644\u0651\u0629 (\u0645\u0628\u064a\u0639\u0627\u062a/\u0645\u062e\u0632\u0648\u0646/\u0634\u062d\u0646). \u0643\u0644 \u0642\u0633\u0645 \u0644\u0647 \u0633\u062c\u0644\u0651\u0627\u062a\u0647 \u0648\u0642\u0648\u0627\u0646\u064a\u0646\u0647\u060c \u0648\u064a\u062a\u0639\u0627\u0648\u0646\u0648\u0646 \u0639\u0628\u0631 \u0646\u0645\u0627\u0630\u062c/\u0645\u0633\u062a\u0646\u062f\u0627\u062a \u0631\u0633\u0645\u064a\u0629 (\u0639\u0642\u0648\u062f API/Events).</p>"},{"location":"terms/microservices/#c-orders-inventory","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u062e\u062f\u0645\u062a\u0627\u0646 \u0645\u0633\u062a\u0642\u0644\u0651\u062a\u0627\u0646 (Orders \u2194 Inventory) \u0645\u0639 \u0645\u0631\u0648\u0646\u0629 \u0623\u0633\u0627\u0633\u064a\u0629","text":"C#<pre><code>// ===== Service A: Inventory =====\n// dotnet new web -n InventorySvc\n// \u064a\u0648\u0641\u0631 \u062a\u062d\u0642\u0642 \u0645\u062e\u0632\u0648\u0646 \u0628\u0633\u064a\u0637: GET /api/stock/{sku}?qty=5  \u2192 { ok: true/false }\nusing Microsoft.AspNetCore.Mvc;\n\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\n// \"\u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a\" \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629 (\u0644\u0643\u0644 \u062e\u062f\u0645\u0629 \u0645\u062e\u0632\u0646\u0647\u0627 \u0627\u0644\u062e\u0627\u0635)\nvar stock = new Dictionary&lt;string,int&gt;(StringComparer.OrdinalIgnoreCase) {\n    [\"KB-01\"] = 10, [\"MS-77\"] = 2\n};\n\napp.MapGet(\"/api/stock/{sku}\", ([FromRoute] string sku, [FromQuery] int qty) =&gt;\n{\n    if (qty &lt;= 0) return Results.BadRequest(new { error = \"qty_must_be_positive\" });\n    var ok = stock.TryGetValue(sku, out var have) &amp;&amp; have &gt;= qty;\n    return Results.Ok(new { ok });\n});\n\napp.MapGet(\"/healthz\", () =&gt; Results.Ok(new { status = \"healthy\" }));\napp.Run();\n</code></pre> C#<pre><code>// ===== Service B: Orders =====\n// dotnet new web -n OrdersSvc\n// \u064a\u0646\u0627\u062f\u064a Inventory \u0639\u0628\u0631 HttpClient \u0645\u0639 \u0633\u064a\u0627\u0633\u0627\u062a \u0632\u0645\u0646\u064a\u0629 (Timeout/Retry).\nusing System.Net.Http.Json;\nusing Microsoft.AspNetCore.Mvc;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u0639\u0646\u0648\u0627\u0646 Inventory \u0645\u0646 \u0627\u0644\u0628\u064a\u0626\u0629/\u0627\u0644\u062a\u0647\u064a\u0626\u0629 (\u062e\u062f\u0645\u062a\u0627\u0646 \u0645\u0646\u0641\u0635\u0644\u062a\u0627\u0646)\nvar inventoryBase = Environment.GetEnvironmentVariable(\"INVENTORY_URL\") ?? \"http://localhost:5080\";\n\n// .NET 8: \u0645\u0639\u0627\u0644\u062c \u0645\u0631\u0648\u0646\u0629 \u062c\u0627\u0647\u0632 (Timeout/Retry/Jitter) \u0639\u0628\u0631 Polly\nbuilder.Services.AddHttpClient(\"inventory\", c =&gt; c.BaseAddress = new Uri(inventoryBase))\n                .AddStandardResilienceHandler();\n\nvar app = builder.Build();\n\nrecord OrderItem(string Sku, int Qty, decimal Price);\nrecord PlaceOrder(int OrderId, string CustomerId, List&lt;OrderItem&gt; Items);\n\napp.MapPost(\"/api/orders\", async ([FromBody] PlaceOrder dto, IHttpClientFactory f, CancellationToken ct) =&gt;\n{\n    if (dto.Items is null || dto.Items.Count == 0) \n        return Results.ValidationProblem(new() { [\"items\"] = [\"at_least_one_item\"] });\n\n    // \u062a\u062d\u0642\u0642 \u0645\u062e\u0632\u0648\u0646 \u0645\u062a\u0632\u0627\u0645\u0646 (\u0645\u062b\u0627\u0644 \u0645\u0628\u0633\u0651\u0637). \u064a\u0641\u0636\u0651\u064e\u0644 \u0623\u062d\u062f\u0627\u062b/\u062d\u062c\u0632 \u0644\u0627 \u0645\u062a\u0632\u0627\u0645\u0646 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c.\n    var http = f.CreateClient(\"inventory\");\n    foreach (var it in dto.Items)\n    {\n        var resp = await http.GetAsync($\"/api/stock/{it.Sku}?qty={it.Qty}\", ct);\n        if (!resp.IsSuccessStatusCode) return Results.Problem(\"inventory_unavailable\", statusCode: 503);\n\n        var payload = await resp.Content.ReadFromJsonAsync&lt;dynamic&gt;(cancellationToken: ct);\n        if (payload?.ok != true) return Results.BadRequest(new { error = \"out_of_stock\", it.Sku });\n    }\n\n    var total = dto.Items.Sum(i =&gt; i.Price * i.Qty);\n    // \u062d\u0641\u0638 \u0627\u0644\u0637\u0644\u0628 \u0641\u064a \u0642\u0627\u0639\u062f\u0629 Orders (\u0645\u062a\u0631\u0648\u0643 \u0644\u0643\u061b \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646\u0641\u0635\u0644\u0629 \u0639\u0646 Inventory)\n    return Results.Created($\"/api/orders/{dto.OrderId}\", new { dto.OrderId, total, status = \"confirmed\" });\n});\n\napp.MapGet(\"/healthz\", () =&gt; Results.Ok(new { status = \"healthy\" }));\napp.Run();\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u062e\u062f\u0645\u062a\u0627\u0646 \u0645\u0646\u0641\u0635\u0644\u062a\u0627\u0646\u060c \u0646\u0634\u0631\u064c \u0645\u0633\u062a\u0642\u0644\u060c \u062a\u0648\u0627\u0635\u0644 \u0639\u0628\u0631 HTTP \u0645\u0639 \u0645\u0631\u0648\u0646\u0629 \u0623\u0633\u0627\u0633\u064a\u0629. \u0641\u064a \u0627\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u0643\u0628\u064a\u0631\u0629: \u0641\u0636\u0651\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b (Event-Driven) \u0644\u062d\u062c\u0632/\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0645\u062e\u0632\u0648\u0646 \u0648\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0627\u0642\u062a\u0631\u0627\u0646.</p>"},{"location":"terms/microservices/#microservices_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 Microservices \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>\u062d\u062f\u0648\u062f \u0627\u0644\u0645\u062c\u0627\u0644 \u0623\u0648\u0644\u064b\u0627 (Domain-Driven): \u062e\u062f\u0645\u0629 \u0644\u0643\u0644 \u0642\u062f\u0631\u0629 \u0623\u0639\u0645\u0627\u0644 \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0643\u0644 \u062e\u062f\u0645\u0629: \u0642\u0627\u0639\u062f\u0629 \u062e\u0627\u0635\u0629 \u0628\u0643\u0644 \u062e\u062f\u0645\u0629. \u0644\u0627 \u0645\u0634\u0627\u0631\u0643\u0629 \u062c\u062f\u0627\u0648\u0644. \u0627\u0644\u062a\u0628\u0627\u062f\u0644 \u0639\u0628\u0631 \u0639\u0642\u0648\u062f \u0641\u0642\u0637.  </li> <li>\u0627\u0644\u062a\u0648\u0627\u0635\u0644:  </li> <li>\u0645\u062a\u0632\u0627\u0645\u0646 \u0642\u0644\u064a\u0644 \u0648\u0642\u0635\u064a\u0631 (HTTP/gRPC) \u0645\u0639 Timeout/Retry/Circuit Breaker.  </li> <li>\u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 \u0644\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u0648\u0632\u0651\u0639\u0629 (Kafka/RabbitMQ + Sagas/Outbox).  </li> <li>\u0627\u0644\u0639\u0642\u0648\u062f \u0648\u0627\u0644\u0625\u0635\u062f\u0627\u0631: OpenAPI/Protobuf/Events + Backward Compatibility.  </li> <li>\u0627\u0644\u0645\u0644\u0627\u062d\u064e\u0638\u064a\u0629: Logs \u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0640 Correlation-Id\u060c Tracing (OpenTelemetry)\u060c Metrics.  </li> <li>\u0627\u0644\u0623\u0645\u0646: mTLS \u0623\u0648 Token (JWT/OAuth2)\u060c Least Privilege\u060c \u0623\u0633\u0631\u0627\u0631 \u0641\u064a Vault.  </li> <li>\u0627\u0644\u0646\u0634\u0631: \u062d\u0627\u0648\u064a\u0627\u062a + CI/CD \u0644\u0643\u0644 \u062e\u062f\u0645\u0629\u060c Blue/Green/Canary\u060c Autoscaling \u0645\u0633\u062a\u0642\u0644.  </li> <li>\u0627\u0644\u0645\u0631\u0648\u0646\u0629: Idempotency\u060c Retries \u0645\u0639 Backoff\u060c Circuit Breaker\u060c Bulkhead\u060c Timeouts.  </li> <li>\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0648\u0632\u0651\u0639\u0629: \u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0639\u0628\u0631 \u0627\u0644\u062e\u062f\u0645\u0627\u062a\u061b \u0627\u0633\u062a\u062e\u062f\u0645 Saga/Compensation \u0648\u0627\u062a\u0633\u0627\u0642\u064b\u0627 \u0644\u0627\u062d\u0642\u064b\u0627.</li> </ol>"},{"location":"terms/microservices/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0642\u0633\u064a\u0645 \u0645\u0628\u0643\u0651\u0631 \u0628\u062f\u0648\u0646 \u062d\u062f\u0648\u062f \u0645\u062c\u0627\u0644 \u0648\u0627\u0636\u062d\u0629 \u2192 \u0634\u0628\u0643\u0627\u062a \u0645\u0639\u0642\u0651\u062f\u0629 \u0628\u0644\u0627 \u0642\u064a\u0645\u0629.  </li> <li>\u0645\u0634\u0627\u0631\u0643\u0629 \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0628\u064a\u0646 \u062e\u062f\u0645\u0627\u062a \u2192 \u062a\u0632\u0627\u0648\u062c \u0642\u0648\u064a \u0648\u0643\u0633\u0631 \u0627\u0644\u0627\u0633\u062a\u0642\u0644\u0627\u0644\u064a\u0629.  </li> <li>\u0627\u062a\u0635\u0627\u0644 \u0645\u062a\u0632\u0627\u0645\u0646 \u0643\u0633\u0644\u0633\u0644\u0629 \u0637\u0648\u064a\u0644\u0629 (N+1 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0629) \u0628\u062f\u0648\u0646 Timeout/Retry/Circuit.  </li> <li>\u063a\u064a\u0627\u0628 Observability \u2192 \u0635\u0639\u0648\u0628\u0629 \u062a\u0634\u062e\u064a\u0635 \u0627\u0644\u0623\u0639\u0637\u0627\u0644.  </li> <li>\u062a\u062c\u0627\u0647\u0644 Backward Compatibility \u0644\u0644\u0639\u0642\u0648\u062f \u2192 \u0643\u0633\u0648\u0631 \u0639\u0646\u062f \u0627\u0644\u0646\u0634\u0631.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u064a\u0643\u0631\u0648\u0633\u064a\u0631\u0641\u0633 \u0643\u0640 \u201c\u0637\u0628\u0642\u0627\u062a HTTP\u201d \u0628\u062f\u0644 \u0642\u062f\u0631\u0627\u062a \u0623\u0639\u0645\u0627\u0644.</li> </ul>"},{"location":"terms/microservices/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Microservices \u0642\u062f\u0631\u0627\u062a \u0623\u0639\u0645\u0627\u0644 \u0645\u0633\u062a\u0642\u0644\u0651\u0629 + \u0646\u0634\u0631 \u0645\u0633\u062a\u0642\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0643\u0644 \u062e\u062f\u0645\u0629\u060c \u062a\u0648\u0627\u0635\u0644 \u0628\u0639\u0642\u0648\u062f\u060c \u0635\u0645\u0648\u062f \u0648\u0645\u0631\u0627\u0642\u0628\u0629 Monolith \u062a\u0637\u0628\u064a\u0642 \u0648\u0627\u062d\u062f \u0628\u0643\u0644 \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0623\u0628\u0633\u0637 \u0646\u0634\u0631/\u062a\u0635\u062d\u064a\u062d\u061b \u062a\u062d\u062c\u064a\u0645 \u0623\u0642\u0644 \u0645\u0631\u0648\u0646\u0629 Modular Monolith \u0648\u062d\u062f\u0629 \u0648\u0627\u062d\u062f\u0629 \u0644\u0643\u0646 \u0628\u062d\u062f\u0648\u062f \u0646\u0645\u0637\u064a\u0629 \u0635\u0627\u0631\u0645\u0629 \u062e\u0637\u0648\u0629 \u0648\u0633\u064a\u0637\u0629 \u0645\u0645\u062a\u0627\u0632\u0629 \u0642\u0628\u0644 \u0627\u0644\u062a\u0642\u0633\u064a\u0645 SOA \u062e\u062f\u0645\u0627\u062a \u0623\u0643\u0628\u0631 + ESB \u062a\u0627\u0631\u064a\u062e\u064a\u0651\u064b\u0627 \u0623\u062b\u0642\u0644 (\u062d\u0627\u0641\u0644\u0629 \u0645\u0624\u0633\u0633\u064a\u0629) Serverless Functions \u062f\u0648\u0627\u0644 \u0635\u063a\u064a\u0631\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0631\u0627\u0626\u0639\u0629 \u0644\u0644\u0648\u0638\u0627\u0626\u0641 \u0627\u0644\u062d\u062f\u062b\u064a\u0629\u061b \u0625\u062f\u0627\u0631\u0629 \u062d\u0627\u0644\u0629 \u0623\u0635\u0639\u0628"},{"location":"terms/microservices/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Microservices = \u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0646\u0638\u0627\u0645 \u0644\u0642\u062f\u0631\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0645\u0633\u062a\u0642\u0644\u0629 \u0628\u0628\u064a\u0627\u0646\u0627\u062a\u0647\u0627 \u0648\u0639\u0642\u0648\u062f\u0647\u0627. \u0623\u062d\u0633\u0646 \u062d\u062f\u0648\u062f \u0627\u0644\u0645\u062c\u0627\u0644\u060c \u0627\u0641\u0635\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u0623\u0636\u0650\u0641 \u0645\u0631\u0648\u0646\u0629 \u0648\u0645\u0644\u0627\u062d\u064e\u0638\u064a\u0629 \u0642\u0648\u064a\u0629\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0638\u0627\u0645 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0651\u0639\u060c \u0645\u062a\u062d\u0645\u0651\u0644 \u0644\u0644\u0623\u0639\u0637\u0627\u0644\u060c \u0648\u0633\u0647\u0644 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0645\u0633\u062a\u0642\u0644 \u0644\u0644\u0641\u0650\u0631\u064e\u0642. </p>"},{"location":"terms/middleware-pipeline/","title":"Middleware Pipeline","text":"<p>\u062e\u0637\u0651 \u0623\u0646\u0627\u0628\u064a\u0628 \u0627\u0644\u0648\u0633\u0627\u0626\u0637 \u0627\u0644\u0648\u0633\u0637\u064a\u0629 (ASP.NET Core)</p>"},{"location":"terms/middleware-pipeline/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Middleware Pipeline \u2014 \u062a\u0633\u0644\u0633\u0644 \u0648\u0633\u0627\u0626\u0637 \u0648\u0633\u0637\u064a\u0629 \u062a\u064f\u0639\u0627\u0644\u0650\u062c \u0637\u0644\u0628 HTTP \u0648\u0631\u062f\u0651\u0647.</p>"},{"location":"terms/middleware-pipeline/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0633\u0644\u0633\u0644\u0629 \u0645\u0631\u062a\u0651\u064e\u0628\u0629 \u0645\u0646 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u062a\u0645\u0631\u0651 \u0639\u0644\u064a\u0647\u0627 \u0643\u0644\u0651 \u0627\u0644\u0637\u0644\u0628\u0627\u062a. \u0643\u0644 Middleware \u064a\u0645\u0643\u0646\u0647: \u062a\u0646\u0641\u064a\u0630 \u0645\u0646\u0637\u0642 \u0642\u0628\u0644 \u0627\u0644\u0637\u0644\u0628\u060c \u062b\u0645 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0627\u0644\u062a\u0627\u0644\u064a <code>next()</code>\u060c \u062b\u0645 \u0645\u0646\u0637\u0642 \u0628\u0639\u062f \u0627\u0644\u0631\u062f. \u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0645\u0647\u0645\u060c \u0648\u064a\u0645\u0643\u0646 \u0627\u0644\u0627\u062e\u062a\u0635\u0627\u0631 (Short-circuit) \u0628\u0625\u0631\u062c\u0627\u0639 \u0631\u062f\u0651 \u062f\u0648\u0646 \u0645\u062a\u0627\u0628\u0639\u0629 \u0627\u0644\u0633\u0644\u0633\u0644\u0629.</p>"},{"location":"terms/middleware-pipeline/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0641\u0644\u0627\u062a\u0631 \u0639\u0644\u0649 \u0627\u0644\u0637\u0631\u064a\u0642: \u0645\u0635\u0627\u062f\u0642\u0629\u060c \u062a\u0633\u062c\u064a\u0644\u060c CORS\u060c \u0636\u063a\u0637\u060c \u0645\u0633\u0627\u0631\u0627\u062a\u2026 \u062d\u0633\u0628 \u0627\u0644\u062a\u0631\u062a\u064a\u0628.  </li> <li>Terminal Middleware: \u064a\u064f\u0646\u0647\u064a \u0627\u0644\u0633\u0644\u0633\u0644\u0629 (\u0644\u0627 \u064a\u0633\u062a\u062f\u0639\u064a <code>next</code>).  </li> <li>Branching: \u062a\u0641\u0631\u0651\u0639\u0627\u062a \u0628\u0634\u0631\u0637/\u0645\u0633\u0627\u0631 (<code>Map</code>, <code>MapWhen</code>, <code>UseWhen</code>).  </li> <li>\u0641\u064a Minimal APIs/Controllers\u060c \u0627\u0644\u062a\u0648\u062c\u064a\u0647 \u064a\u062d\u062f\u0651\u062f \u0627\u0644\u0645\u0639\u0627\u0644\u062c \u0627\u0644\u0646\u0647\u0627\u0626\u064a \u0636\u0645\u0646 \u0627\u0644\u0633\u0644\u0633\u0644\u0629.</li> </ul>"},{"location":"terms/middleware-pipeline/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0646\u0642\u0627\u0637 \u062a\u0641\u062a\u064a\u0634 \u0641\u064a \u0627\u0644\u0645\u0637\u0627\u0631: \u062a\u0641\u062a\u064a\u0634 \u0622\u0644\u064a\u060c \u062b\u0645 \u062c\u0648\u0627\u0632\u0627\u062a\u060c \u062b\u0645 \u0628\u0648\u0651\u0627\u0628\u0629 \u0627\u0644\u0635\u0639\u0648\u062f. \u0644\u0648 \u0641\u0634\u0644\u062a \u0641\u064a \u0627\u0644\u062a\u0641\u062a\u064a\u0634\u2014\u062a\u062a\u0648\u0642\u0651\u0641 \u0631\u062d\u0644\u062a\u0643 (Short-circuit).</p>"},{"location":"terms/middleware-pipeline/#c-pipeline-terminal","title":"\u0645\u062b\u0627\u0644 C# \u0639\u0645\u0644\u064a \u2014 Pipeline \u0645\u0639 \u062a\u0631\u062a\u064a\u0628\u060c \u0641\u0631\u0639\u060c \u0648Terminal","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n PipelineDemo &amp;&amp; cd PipelineDemo &amp;&amp; dotnet run\nusing System.Diagnostics;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u062a\u0633\u062c\u064a\u0644 Middlewares \u062a\u0639\u062a\u0645\u062f DI (\u0627\u062e\u062a\u064a\u0627\u0631\u064a)\nbuilder.Services.AddSingleton&lt;RequestTimingMiddleware&gt;();\nbuilder.Services.AddSingleton&lt;CorrelationIdMiddleware&gt;();\n\nvar app = builder.Build();\n\n// 1) \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0641\u064a \u0623\u0639\u0644\u0649 \u0627\u0644\u0633\u0644\u0633\u0644\u0629\napp.Use(async (ctx, next) =&gt;\n{\n    try { await next(); }\n    catch (Exception ex)\n    {\n        Console.Error.WriteLine($\"[ERR] {ex.Message}\");\n        ctx.Response.StatusCode = 500;\n        await ctx.Response.WriteAsJsonAsync(new { error = \"server_error\" });\n    }\n});\n\n// 2) \u0645\u0639\u0631\u0651\u0641 \u062a\u0631\u0627\u0628\u0637 \u0644\u0644\u0637\u0644\u0628 (\u0642\u0628\u0644 \u0623\u064a \u062a\u0633\u062c\u064a\u0644)\napp.UseMiddleware&lt;CorrelationIdMiddleware&gt;();\n\n// 3) \u0641\u0631\u0639 \u062f\u0627\u062e\u0644\u064a \u0644\u0645\u0633\u0627\u0631\u0627\u062a /internal \u0641\u0642\u0637 (UseWhen \u0644\u0627 \u064a\u063a\u064a\u0651\u0631 \u0627\u0644\u0645\u0633\u0627\u0631)\napp.UseWhen(ctx =&gt; ctx.Request.Path.StartsWithSegments(\"/internal\"), branch =&gt;\n{\n    branch.Use(async (ctx, next) =&gt;\n    {\n        // \u062d\u0645\u0627\u064a\u0629 \u0628\u0633\u064a\u0637\u0629: \u0645\u0641\u062a\u0627\u062d \u062f\u0627\u062e\u0644\u064a\n        if (ctx.Request.Headers[\"X-Internal-Key\"] != \"secret\")\n        {\n            ctx.Response.StatusCode = 401;      // Short-circuit\n            await ctx.Response.WriteAsync(\"unauthorized\");\n            return;\n        }\n        await next();\n    });\n});\n\n// 4) \u0642\u064a\u0627\u0633 \u0632\u0645\u0646 \u0627\u0644\u0637\u0644\u0628 (\u0642\u0628\u0644/\u0628\u0639\u062f next)\napp.UseMiddleware&lt;RequestTimingMiddleware&gt;();\n\n// 5) \u0646\u0642\u0637\u0629 \u0635\u062d\u0651\u0629 Terminal \u0633\u0631\u064a\u0639\u0629 (Map = Endpoint \u0646\u0647\u0627\u0626\u064a)\napp.MapGet(\"/healthz\", () =&gt; Results.Ok(new { status = \"ok\" }));\n\n// 6) API \u0639\u0627\u062f\u064a\nvar api = app.MapGroup(\"/api\");\napi.MapGet(\"/hello\", (HttpContext ctx) =&gt;\n{\n    // \u0631\u0645\u064a \u062e\u0637\u0623 \u062a\u062c\u0631\u064a\u0628\u064a \u0644\u062a\u0631\u0649 \u0627\u0644\u0645\u0639\u0627\u0644\u062c \u0628\u0627\u0644\u0623\u0639\u0644\u0649\n    if (ctx.Request.Query.ContainsKey(\"boom\")) throw new Exception(\"demo\");\n    return Results.Ok(new { msg = \"hello\", cid = ctx.Response.Headers[\"X-Correlation-Id\"].ToString() });\n});\n\n// 7) \u0641\u0631\u0639 \u0644\u0645\u0633\u0627\u0631 \u062b\u0627\u0628\u062a (MapWhen \u064a\u0648\u062c\u0651\u0647 \u0628\u0642\u064a\u0629 \u0627\u0644\u0633\u0644\u0633\u0644\u0629)\napp.MapWhen(ctx =&gt; ctx.Request.Path.StartsWithSegments(\"/internal\"), branch =&gt;\n{\n    branch.MapGet(\"/internal/info\", (HttpContext ctx) =&gt;\n        Results.Ok(new { env = app.Environment.EnvironmentName }));\n});\n\napp.Run();\n\n// ======= Middlewares \u0645\u062e\u0635\u0651\u0635\u0629 =======\npublic class CorrelationIdMiddleware\n{\n    private const string Header = \"X-Correlation-Id\";\n    private readonly RequestDelegate _next;\n    public CorrelationIdMiddleware(RequestDelegate next) =&gt; _next = next;\n\n    public async Task InvokeAsync(HttpContext ctx)\n    {\n        var cid = ctx.Request.Headers.TryGetValue(Header, out var v) &amp;&amp; !string.IsNullOrWhiteSpace(v)\n            ? v.ToString()\n            : Guid.NewGuid().ToString(\"N\");\n\n        ctx.Response.Headers[Header] = cid;         // \u0642\u0628\u0644 next: \u062a\u062c\u0647\u064a\u0632 \u0627\u0644\u0633\u064a\u0627\u0642\n        await _next(ctx);                            // \u0645\u0631\u0651\u0631 \u0644\u0644\u0630\u064a \u0628\u0639\u062f\u0647\n        // \u0628\u0639\u062f next: \u064a\u0645\u0643\u0646 \u0625\u0636\u0627\u0641\u0629 Headers/Logging \u0627\u0639\u062a\u0645\u0627\u062f\u064b\u0627 \u0639\u0644\u0649 \u0627\u0644\u0646\u062a\u064a\u062c\u0629\n    }\n}\n\npublic class RequestTimingMiddleware\n{\n    private readonly RequestDelegate _next;\n    public RequestTimingMiddleware(RequestDelegate next) =&gt; _next = next;\n\n    public async Task InvokeAsync(HttpContext ctx)\n    {\n        var sw = Stopwatch.StartNew();\n        await _next(ctx);\n        sw.Stop();\n        ctx.Response.Headers[\"X-Elapsed-ms\"] = sw.ElapsedMilliseconds.ToString();\n        Console.WriteLine($\"{ctx.Request.Method} {ctx.Request.Path} -&gt; {ctx.Response.StatusCode} in {sw.ElapsedMilliseconds}ms\");\n    }\n}\n</code></pre> <p>\u062c\u0631\u0651\u0628 \u0633\u0631\u064a\u0639\u064b\u0627: Bash<pre><code>curl -i http://localhost:5000/healthz\ncurl -i http://localhost:5000/api/hello\ncurl -i \"http://localhost:5000/api/hello?boom=1\"      # \u0633\u064a\u064f\u0644\u062a\u0642\u0637 \u0627\u0644\u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u0641\u064a \u0627\u0644\u0623\u0639\u0644\u0649\ncurl -i http://localhost:5000/internal/info           # 401\ncurl -i -H \"X-Internal-Key: secret\" http://localhost:5000/internal/info\n</code></pre></p> <p>\u0627\u0644\u0645\u0644\u0627\u062d\u0638\u0629: \u062a\u064e\u0638\u0647\u0631 Headers \u0645\u062b\u0644 <code>X-Correlation-Id</code> \u0648<code>X-Elapsed-ms</code>\u061b \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u062a\u062a\u0648\u0642\u0651\u0641 \u0645\u0628\u0643\u0651\u0631\u064b\u0627 \u0625\u0646 \u0644\u0645 \u062a\u062d\u0645\u0644 \u0627\u0644\u0645\u0641\u062a\u0627\u062d (Short-circuit).</p>"},{"location":"terms/middleware-pipeline/#pipeline","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 Pipeline \u0633\u0644\u064a\u0645","text":"<ul> <li>\u0636\u0639 Exception Handling \u0648HTTP Logging \u0645\u0628\u0643\u0631\u064b\u0627.  </li> <li>\u0637\u0628\u0651\u0642 HTTPS/HSTS/CORS \u0642\u0628\u0644 \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629.  </li> <li>\u0644\u0640 MVC: <code>UseRouting()</code> \u2192 Auth/Authorization \u2192 <code>MapControllers()</code>.  </li> <li>\u0644\u0640 Minimal APIs: \u0637\u0628\u0651\u0642 <code>Use\u2026</code> \u0642\u0628\u0644 <code>Map\u2026</code> \u062d\u064a\u062b \u064a\u0644\u0632\u0645 (\u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0645\u0624\u062b\u0651\u0631).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Map/MapWhen/UseWhen \u0644\u0644\u062a\u0641\u0631\u0651\u0639\u0627\u062a\u060c \u0648Terminal \u0644\u0646\u0647\u0627\u064a\u0627\u062a \u0633\u0631\u064a\u0639\u0629 (Health/Static).  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u0648\u0633\u0627\u0626\u0637 \u0635\u063a\u064a\u0631\u0629 \u0645\u0633\u0624\u0648\u0644\u064a\u0651\u0627\u062a \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.</li> </ul>"},{"location":"terms/middleware-pipeline/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0646\u0633\u064a\u0627\u0646 <code>await next()</code> \u2192 \u062a\u0639\u0644\u064a\u0642 \u0627\u0644\u0637\u0644\u0628\u0627\u062a.  </li> <li>\u062a\u0631\u062a\u064a\u0628 \u062e\u0627\u0637\u0626 (\u0645\u062b\u0644 Authorization \u0642\u0628\u0644 Routing) \u2192 \u0646\u062a\u0627\u0626\u062c \u063a\u064a\u0631 \u0645\u062a\u0648\u0642\u0651\u0639\u0629.  </li> <li>\u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0644\u0644\u062c\u0633\u0645 \u0642\u0628\u0644 \u0645\u0646\u0627\u062f\u0627\u0629 <code>next()</code> \u062b\u0645 \u0645\u062d\u0627\u0648\u0644\u0629 \u0627\u0644\u062a\u0639\u062f\u064a\u0644 \u0628\u0639\u062f\u0647 \u0628\u0634\u0643\u0644 \u064a\u062a\u0639\u0627\u0631\u0636 \u0645\u0639 \u0627\u0644\u0625\u0631\u0633\u0627\u0644.  </li> <li>\u062a\u0648\u0633\u0639\u0629 Middleware \u0648\u0627\u062d\u062f\u0629 \u0628\u0645\u0647\u0627\u0645 \u0643\u062b\u064a\u0631\u0629 (God Middleware).  </li> <li>\u0639\u062f\u0645 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0625\u0644\u063a\u0627\u0621/\u0627\u0644\u0645\u0647\u0644\u0627\u062a \u0644\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0628\u0639\u064a\u062f\u0629.</li> </ul>"},{"location":"terms/middleware-pipeline/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Middleware Pipeline \u0645\u0639\u0627\u0644\u062c\u0629 \u0643\u0644 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0628\u0633\u0644\u0633\u0644\u0629 \u0645\u0631\u062a\u0651\u0628\u0629 Before/Next/After\u060c \u062a\u0631\u062a\u064a\u0628 \u062d\u0633\u0651\u0627\u0633\u060c Short-circuit Endpoint/Handler \u0646\u0642\u0637\u0629 \u0627\u0644\u0646\u0647\u0627\u064a\u0629 \u0627\u0644\u0641\u0639\u0644\u064a\u0629 \u0644\u0644\u0637\u0644\u0628 \u064a\u064f\u062e\u062a\u0627\u0631 \u0639\u0628\u0631 Routing \u062f\u0627\u062e\u0644 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 Filters (ASP.NET) \u0627\u0647\u062a\u0645\u0627\u0645\u0627\u062a \u0645\u0642\u0637\u0639\u064a\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 Endpoint \u062a\u0639\u0645\u0644 \u062d\u0648\u0644 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u061b \u062a\u0643\u0645\u0651\u0644 \u0627\u0644\u0640 Middleware DelegatingHandler (HttpClient) Pipeline \u0644\u0644\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0635\u0627\u062f\u0631\u0629 \u0645\u0645\u0627\u062b\u0644 \u0644\u0644\u0641\u0643\u0631\u0629 \u0648\u0644\u0643\u0646 Outbound Reverse Proxy (NGINX/YARP) \u0637\u0628\u0642\u0629 \u062e\u0627\u0631\u062c\u064a\u0629 \u0623\u0645\u0627\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u064a\u0645\u0643\u0646 \u0625\u0636\u0627\u0641\u0629 \u0641\u0644\u0627\u062a\u0631 \u0642\u0628\u0644 \u062f\u062e\u0648\u0644 \u0627\u0644\u0640 Pipeline \u0627\u0644\u062f\u0627\u062e\u0644\u064a"},{"location":"terms/middleware-pipeline/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Middleware Pipeline \u0647\u0648 \u0637\u0631\u064a\u0642 \u0627\u0644\u0637\u0644\u0628 \u062f\u0627\u062e\u0644 \u062a\u0637\u0628\u064a\u0642\u0643: \u0631\u062a\u0651\u0628\u0647 \u0628\u0639\u0646\u0627\u064a\u0629\u060c \u0627\u062c\u0639\u0644 \u0645\u0628\u0643\u0651\u0631\u0627\u062a \u0645\u062b\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621/\u0627\u0644\u0623\u0645\u0646 \u0641\u064a \u0627\u0644\u0623\u0639\u0644\u0649\u060c \u0627\u0633\u062a\u0639\u0645\u0644 \u062a\u0641\u0631\u0651\u0639\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u060c \u0648\u0627\u062f\u0645\u062c Terminal \u0644\u0646\u0642\u0627\u0637 \u0633\u0631\u064a\u0639\u0629\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0633\u0644\u0648\u0643 \u0645\u062a\u0648\u0642\u0651\u0639\u060c \u0623\u062f\u0627\u0621 \u062c\u064a\u0651\u062f\u060c \u0648\u0635\u064a\u0627\u0646\u0629 \u0623\u0633\u0647\u0644.</p>"},{"location":"terms/minimal-apis/","title":"Minimal APIs (ASP.NET Core)","text":""},{"location":"terms/minimal-apis/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Minimal APIs \u2014 \u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0631\u0645\u062c\u064a\u0629 \u0628\u0623\u0642\u0644 \u0647\u064a\u0643\u0644\u064a\u0629</p>"},{"location":"terms/minimal-apis/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u0633\u0644\u0648\u0628 \u0641\u064a ASP.NET Core \u0644\u0643\u062a\u0627\u0628\u0629 REST \u0628\u0623\u0642\u0644 \u062a\u0639\u0642\u064a\u062f: \u0645\u0644\u0641/\u0645\u0644\u0641\u0651\u0627\u0646\u060c \u0646\u0642\u0627\u0637 \u0646\u0647\u0627\u064a\u0629 MapGet/MapPost\u2026 \u0645\u0628\u0627\u0634\u0631\u0629\u060c \u0645\u0639 DI \u0648Binding \u0648Filters \u0648Swagger.</p>"},{"location":"terms/minimal-apis/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u0627 Controllers \u0648\u0644\u0627 Attributes \u0643\u062b\u064a\u0631\u0629.  </li> <li>\u062a\u0643\u062a\u0628 Handlers \u0643\u062f\u0648\u0627\u0644\u060c \u0648\u062a\u0631\u0628\u0637\u0647\u0627 \u0628\u0645\u0633\u0627\u0631\u0627\u062a.  </li> <li>\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062d\u0642\u0646 \u062a\u0628\u0639\u064a\u0627\u062a\u060c Model Binding\u060c Auth\u060c \u0648OpenAPI \u062c\u0627\u0647\u0632\u0629.  </li> <li>\u0645\u0646\u0627\u0633\u0628 \u0644\u062e\u062f\u0645\u0627\u062a \u0635\u063a\u064a\u0631\u0629/\u062f\u0627\u062e\u0644\u064a\u0629 \u0648Prototypes\u060c \u0648\u064a\u0645\u0643\u0646 \u0627\u0644\u062a\u0648\u0633\u0651\u0639 \u0644\u0627\u062d\u0642\u064b\u0627.</li> </ul>"},{"location":"terms/minimal-apis/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0639\u0631\u0628\u0629 \u0642\u0647\u0648\u0629 \u0645\u062a\u0646\u0642\u0651\u0644\u0629 \u0628\u062f\u0644 \u0645\u0637\u0639\u0645 \u0643\u0628\u064a\u0631: \u0646\u0641\u0633 \u0627\u0644\u0642\u0647\u0648\u0629 \u0644\u0643\u0646 \u062a\u062c\u0647\u064a\u0632 \u0623\u0633\u0631\u0639 \u0648\u0623\u062e\u0641\u0651.</p>"},{"location":"terms/minimal-apis/#c-minimal-api-di-validation-filters-swagger","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0643\u0627\u0645\u0644 \u2014 Minimal API \u0645\u0639 DI + Validation + Filters + Swagger","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n MiniShop &amp;&amp; cd MiniShop &amp;&amp; dotnet run\n\nusing Microsoft.AspNetCore.Http.HttpResults;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.OpenApi.Models;\n\n// 1) \u0627\u0644\u0628\u0646\u064a\u0629 \u0648\u0627\u0644\u062e\u062f\u0645\u0627\u062a\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddSingleton&lt;IProductsRepo, InMemoryProductsRepo&gt;();\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen(o =&gt;\n{\n    o.SwaggerDoc(\"v1\", new OpenApiInfo { Title = \"MiniShop API\", Version = \"v1\" });\n});\n\nvar app = builder.Build();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\napp.UseHttpsRedirection();\n\n// 2) \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0633\u0627\u0631\u0627\u062a (Versioning \u0628\u0633\u064a\u0637 \u0639\u0628\u0631 prefix)\nvar api = app.MapGroup(\"/api/v1/products\").WithTags(\"Products\");\n\n// \u0641\u0644\u062a\u0631 \u0628\u0633\u064a\u0637 \u0644\u0631\u0641\u0636 \u0627\u0644\u0646\u0645\u0627\u0630\u062c \u063a\u064a\u0631 \u0627\u0644\u0635\u062d\u064a\u062d\u0629\napi.AddEndpointFilter(new ValidateProductFilter());\n\n// GET: \u062c\u0645\u064a\u0639 \u0627\u0644\u0645\u0646\u062a\u062c\u0627\u062a\napi.MapGet(\"/\", (IProductsRepo repo) =&gt;\n    Results.Ok(repo.All()))\n   .WithName(\"GetProducts\")\n   .WithOpenApi();\n\n// GET: \u0645\u0646\u062a\u062c \u0628\u0627\u0644\u0645\u0639\u0631\u0651\u0641\napi.MapGet(\"/{id:int}\", (int id, IProductsRepo repo) =&gt;\n{\n    var p = repo.Find(id);\n    return p is null ? Results.NotFound() : Results.Ok(p);\n}).WithOpenApi();\n\n// POST: \u0625\u0646\u0634\u0627\u0621 \u0645\u0646\u062a\u062c\napi.MapPost(\"/\", (ProductCreate dto, IProductsRepo repo) =&gt;\n{\n    var created = repo.Add(dto);\n    return Results.Created($\"/api/v1/products/{created.Id}\", created);\n}).WithOpenApi();\n\n// PUT: \u062a\u062d\u062f\u064a\u062b \u0643\u0627\u0645\u0644\napi.MapPut(\"/{id:int}\", (int id, ProductUpdate dto, IProductsRepo repo) =&gt;\n{\n    var ok = repo.Update(id, dto);\n    return ok ? Results.NoContent() : Results.NotFound();\n}).WithOpenApi();\n\n// DELETE: \u062d\u0630\u0641\napi.MapDelete(\"/{id:int}\", (int id, IProductsRepo repo) =&gt;\n    repo.Delete(id) ? Results.NoContent() : Results.NotFound()).WithOpenApi();\n\napp.Run();\n\n// ======= \u0627\u0644\u0646\u0645\u0627\u0630\u062c (DTOs) =======\npublic record Product(int Id, string Name, decimal Price);\npublic record ProductCreate([FromBody][property: BindRequired] string Name,\n                            [FromBody] decimal Price);\npublic record ProductUpdate([FromBody] string Name, [FromBody] decimal Price);\n\n// ======= \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 (Repo) =======\npublic interface IProductsRepo\n{\n    IEnumerable&lt;Product&gt; All();\n    Product? Find(int id);\n    Product Add(ProductCreate dto);\n    bool Update(int id, ProductUpdate dto);\n    bool Delete(int id);\n}\n\npublic class InMemoryProductsRepo : IProductsRepo\n{\n    private readonly List&lt;Product&gt; _db = new() { new(1, \"Keyboard\", 120), new(2, \"Mouse\", 60) };\n    private int _nextId = 3;\n\n    public IEnumerable&lt;Product&gt; All() =&gt; _db;\n    public Product? Find(int id) =&gt; _db.FirstOrDefault(p =&gt; p.Id == id);\n    public Product Add(ProductCreate dto)\n    {\n        var p = new Product(_nextId++, dto.Name, dto.Price);\n        _db.Add(p); return p;\n    }\n    public bool Update(int id, ProductUpdate dto)\n    {\n        var i = _db.FindIndex(p =&gt; p.Id == id);\n        if (i &lt; 0) return false;\n        _db[i] = _db[i] with { Name = dto.Name, Price = dto.Price };\n        return true;\n    }\n    public bool Delete(int id) =&gt; _db.RemoveAll(p =&gt; p.Id == id) &gt; 0;\n}\n\n// ======= \u0641\u0644\u062a\u0631 \u062a\u062d\u0642\u0642 \u0628\u0633\u064a\u0637 =======\npublic class ValidateProductFilter : IEndpointFilter\n{\n    public ValueTask&lt;object?&gt; InvokeAsync(EndpointFilterInvocationContext ctx, EndpointFilterDelegate next)\n    {\n        foreach (var arg in ctx.Arguments)\n        {\n            switch (arg)\n            {\n                case ProductCreate c when string.IsNullOrWhiteSpace(c.Name) || c.Price &lt;= 0:\n                case ProductUpdate u when string.IsNullOrWhiteSpace(u.Name) || u.Price &lt;= 0:\n                    return ValueTask.FromResult&lt;object?&gt;(Results.ValidationProblem(new()\n                    {\n                        [\"Name/Price\"] = [\"\u0627\u0644\u0627\u0633\u0645 \u0645\u0637\u0644\u0648\u0628 \u0648\u0627\u0644\u0633\u0639\u0631 &gt; 0\"]\n                    }));\n            }\n        }\n        return next(ctx);\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - <code>GET /api/v1/products</code> \u2192 \u0642\u0627\u0626\u0645\u0629 JSON. - <code>POST /api/v1/products</code> \u0628\u062c\u0633\u0645 <code>{ \"name\":\"SSD\",\"price\":250 }</code> \u2192 <code>201 Created</code> \u0645\u0639 \u0627\u0644\u0643\u064a\u0627\u0646. - Swagger UI \u0645\u062a\u0627\u062d \u0641\u064a \u0627\u0644\u062a\u0637\u0648\u064a\u0631.</p>"},{"location":"terms/minimal-apis/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0633\u0631\u064a\u0639\u0629","text":"<ol> <li>\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 Bash<pre><code>dotnet new web -n MiniShop\ndotnet run\n</code></pre></li> <li>\u0627\u0641\u062a\u062d Swagger \u0639\u0644\u0649 \u0631\u0627\u0628\u0637 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u062a\u062c\u0631\u0628\u0629.  </li> <li>\u0623\u0636\u0641 DI \u0648MapGroup \u0648Filters \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.  </li> <li>\u0641\u0639\u0651\u0644 AuthN/AuthZ \u0644\u0627\u062d\u0642\u064b\u0627: C#<pre><code>app.UseAuthentication();\napp.UseAuthorization();\napi.RequireAuthorization(); // \u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629\n</code></pre></li> </ol>"},{"location":"terms/minimal-apis/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0636\u062e\u064a\u0645 \u0645\u0644\u0641 <code>Program.cs</code> \u0628\u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u2192 \u0627\u0646\u0642\u0644\u0647 \u0625\u0644\u0649 \u062e\u062f\u0645\u0627\u062a/Repo/Handlers.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0648\u062a\u0631\u0643 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u062f\u062e\u0644 \u0639\u0634\u0648\u0627\u0626\u064a\u064b\u0627 (\u0623\u0636\u0641 Filters \u0623\u0648 FluentValidation).  </li> <li>\u062e\u0644\u0637 Binding \u062f\u0627\u062e\u0644 \u0627\u0644\u062f\u0627\u0644\u0629 \u0645\u0639 \u0648\u0635\u0648\u0644 \u0645\u0628\u0627\u0634\u0631 \u0625\u0644\u0649 \u0627\u0644\u0640 DB \u062f\u0648\u0646 \u0637\u0628\u0642\u0629.  </li> <li>\u0646\u0633\u064a\u0627\u0646 Swagger/Versioning \u2192 \u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643.  </li> <li>\u0627\u0633\u062a\u0639\u0645\u0627\u0644 Minimal APIs \u0644\u0645\u0634\u0631\u0648\u0639 \u0636\u062e\u0645 \u062c\u062f\u064b\u0627 \u062f\u0648\u0646 \u062a\u0646\u0638\u064a\u0645 \u2192 \u0641\u0643\u0651\u0631 \u0641\u064a MVC/Razor Pages \u0623\u0648 \u062a\u0642\u0633\u064a\u0645 \u0625\u0644\u0649 Modules.</li> </ul>"},{"location":"terms/minimal-apis/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Minimal APIs REST \u062e\u0641\u064a\u0641 \u0648\u0633\u0631\u064a\u0639 \u0627\u0644\u0628\u062f\u0621 Handlers \u0645\u0628\u0627\u0634\u0631\u0629\u060c DI/Binding/Filters/Swagger MVC \u0641\u0635\u0644 Controller/Views/Filters \u0647\u064a\u0643\u0644 \u0645\u0646\u0637\u0651\u0645\u060c \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0645\u0634\u0627\u0631\u064a\u0639 \u0627\u0644\u0643\u0628\u064a\u0631\u0629 Razor Pages CRUD \u0635\u0641\u062d\u0627\u062a \u0628\u0633\u0631\u0639\u0629 \u0635\u0641\u062d\u0629 = Model + Handlers\u061b \u0623\u0642\u0644 \u0636\u0648\u0636\u0627\u0621 sgRPC \u062a\u0648\u0627\u0635\u0644 \u0639\u0627\u0644\u064a \u0627\u0644\u0623\u062f\u0627\u0621 \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644/Schema (Protobuf) \u0628\u062f\u0644 REST"},{"location":"terms/minimal-apis/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Minimal APIs \u062a\u0645\u0646\u062d\u0643 REST \u0633\u0631\u064a\u0639 \u0627\u0644\u0625\u0646\u0634\u0627\u0621 \u0648\u0648\u0627\u0636\u062d\u064b\u0627 \u0628\u0646\u0642\u0627\u0637 \u0646\u0647\u0627\u064a\u0629 \u0645\u0628\u0627\u0634\u0631\u0629. \u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0637\u0642 \u062e\u0627\u0631\u062c Program.cs\u060c \u0623\u0636\u0650\u0641 \u062a\u062d\u0642\u0642/\u062a\u0648\u062b\u064a\u0642/\u0623\u0645\u0627\u0646\u060c \u0648\u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062e\u062f\u0645\u0629 \u0635\u063a\u064a\u0631\u0629 \u0646\u0638\u064a\u0641\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0648\u0633\u0651\u0639 \u0644\u0627\u062d\u0642\u064b\u0627.</p>"},{"location":"terms/modular/","title":"Modular","text":""},{"location":"terms/modular/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Modular / Modularity \u2014 \u0645\u0639\u064a\u0627\u0631\u064a / \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0642\u0633\u064a\u0645 \u0625\u0644\u0649 \u0648\u062d\u062f\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0651\u0629.</p>"},{"location":"terms/modular/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0635\u0645\u064a\u0645 \u064a\u062c\u0632\u0651\u0626 \u0627\u0644\u0646\u0638\u0627\u0645 \u0625\u0644\u0649 \u0648\u062d\u062f\u0627\u062a (Modules) \u0635\u063a\u064a\u0631\u0629 \u0639\u0627\u0644\u064a\u0629 \u0627\u0644\u062a\u0645\u0627\u0633\u0643 \u0648\u0636\u0639\u064a\u0641\u0629 \u0627\u0644\u062a\u0631\u0627\u0628\u0637\u060c \u0644\u0643\u0644 \u0648\u062d\u062f\u0629 \u0648\u0627\u062c\u0647\u0629 \u0648\u0627\u0636\u062d\u0629 \u0648\u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0645\u062d\u062f\u0651\u062f\u0629 \u064a\u0645\u0643\u0646 \u062a\u0637\u0648\u064a\u0631\u0647\u0627/\u0627\u062e\u062a\u0628\u0627\u0631\u0647\u0627/\u0646\u0634\u0631\u0647\u0627 \u0628\u0645\u0639\u0632\u0644.</p>"},{"location":"terms/modular/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0644 Module \u064a\u0645\u0644\u0643: \u0646\u0637\u0627\u0642\u064b\u0627\u060c \u0648\u0627\u062c\u0647\u0627\u062a\u060c \u0628\u064a\u0627\u0646\u0627\u062a\u0647/\u062e\u062f\u0627\u0645\u0627\u062a\u0647\u060c \u0648\u0646\u0642\u0627\u0637 \u062f\u062e\u0648\u0644.  </li> <li>\u0627\u0644\u062a\u0648\u0627\u0635\u0644 \u0639\u0628\u0631 \u0639\u0642\u0648\u062f (Interfaces, DTOs, Events)\u060c \u0644\u0627 \u0639\u0628\u0631 \u0627\u062e\u062a\u0631\u0627\u0642 \u0627\u0644\u0637\u0628\u0642\u0627\u062a.  </li> <li>\u064a\u0633\u0647\u0644 \u0627\u0644\u062a\u0628\u062f\u064a\u0644 \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0648\u064a\u0642\u0644\u0651\u0644 \u0623\u062b\u0631 \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a (Blast Radius).  </li> <li>\u064a\u0646\u0637\u0628\u0642 \u0639\u0644\u0649: \u0645\u0634\u0631\u0648\u0639 \u0648\u0627\u062d\u062f \u0645\u0639\u064a\u0627\u0631\u064a (Modular Monolith) \u0623\u0648 Microservices.</li> </ul>"},{"location":"terms/modular/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062f\u064a\u0646\u0629 \u0645\u0642\u0633\u0651\u0645\u0629 \u0625\u0644\u0649 \u0623\u062d\u064a\u0627\u0621: \u0644\u0643\u0644 \u062d\u064a \u062e\u062f\u0645\u0627\u062a\u0647 (\u0645\u062f\u0631\u0633\u0629/\u0645\u0631\u0643\u0632 \u0635\u062d\u064a) \u0648\u0637\u0631\u064a\u0642 \u0631\u0626\u064a\u0633\u064a \u064a\u0631\u0628\u0637\u0647 \u0628\u0628\u0627\u0642\u064a \u0627\u0644\u0623\u062d\u064a\u0627\u0621. \u0644\u0627 \u062a\u0628\u0646\u064a \u0623\u0646\u0628\u0648\u0628\u064b\u0627 \u0639\u0634\u0648\u0627\u0626\u064a\u064b\u0627 \u0628\u064a\u0646 \u0627\u0644\u0628\u064a\u0648\u062a\u2014\u0628\u0644 \u062a\u0633\u062a\u062e\u062f\u0645 \u0634\u0628\u0643\u0627\u062a \u0648\u0648\u0627\u062c\u0647\u0627\u062a \u0645\u062d\u062f\u0651\u062f\u0629.</p>"},{"location":"terms/modular/#c-monolith-module","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u201cMonolith \u0645\u0639\u064a\u0627\u0631\u064a\u201d: \u0643\u0644 Module \u064a\u0639\u0631\u0651\u0641 \u062e\u062f\u0645\u0627\u062a\u0647 \u0648\u0646\u0642\u0627\u0637\u0647","text":"<p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0648\u0627\u062c\u0647\u0629 <code>IModule</code> \u064a\u0637\u0628\u0651\u0642\u0647\u0627 \u0643\u0644 Module. <code>Program.cs</code> \u064a\u062c\u0645\u0639 \u0627\u0644\u0648\u062d\u062f\u0627\u062a \u0648\u064a\u064f\u0634\u063a\u0651\u0644\u0647\u0627 \u062f\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u062a\u0641\u0627\u0635\u064a\u0644\u0647\u0627.</p> C#<pre><code>// Contracts: \u0627\u0644\u0639\u0642\u062f \u0627\u0644\u0630\u064a \u064a\u0644\u062a\u0632\u0645 \u0628\u0647 \u0623\u064a Module\npublic interface IModule\n{\n    void RegisterServices(IServiceCollection services);          // \u062a\u0633\u062c\u064a\u0644 DI\n    void MapEndpoints(IEndpointRouteBuilder endpoints);          // \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a\n}\n</code></pre> C#<pre><code>// Orders Module (\u0645\u0633\u0624\u0648\u0644 \u0639\u0646 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0641\u0642\u0637)\npublic interface IOrderRepo { IEnumerable&lt;Order&gt; All(); Order Add(OrderCreate dto); }\npublic record Order(int Id, string Item, decimal Amount);\npublic record OrderCreate(string Item, decimal Amount);\n\ninternal class InMemoryOrderRepo : IOrderRepo\n{\n    private readonly List&lt;Order&gt; _db = new() { new(1,\"Keyboard\",120) };\n    private int _next = 2;\n    public IEnumerable&lt;Order&gt; All() =&gt; _db;\n    public Order Add(OrderCreate dto){ var o=new Order(_next++,dto.Item,dto.Amount); _db.Add(o); return o; }\n}\n\npublic sealed class OrdersModule : IModule\n{\n    public void RegisterServices(IServiceCollection s)\n        =&gt; s.AddSingleton&lt;IOrderRepo, InMemoryOrderRepo&gt;();\n\n    public void MapEndpoints(IEndpointRouteBuilder e)\n    {\n        var grp = e.MapGroup(\"/orders\").WithTags(\"Orders\");\n        grp.MapGet(\"/\", (IOrderRepo repo) =&gt; Results.Ok(repo.All()));\n        grp.MapPost(\"/\", (OrderCreate dto, IOrderRepo repo) =&gt;\n        {\n            if (string.IsNullOrWhiteSpace(dto.Item) || dto.Amount &lt;= 0)\n                return Results.ValidationProblem(new(){{\"Item/Amount\",[\"\u0642\u064a\u0645\u0629 \u063a\u064a\u0631 \u0635\u0627\u0644\u062d\u0629\"]}});\n            var created = repo.Add(dto);\n            return Results.Created($\"/orders/{created.Id}\", created);\n        });\n    }\n}\n</code></pre> C#<pre><code>// Payments Module (\u0645\u0646\u0641\u0635\u0644 \u0628\u0639\u0642\u062f \u062e\u0627\u0635 \u0628\u0647)\npublic interface IPaymentGateway { bool Charge(decimal amount); }\ninternal class FakeGateway : IPaymentGateway { public bool Charge(decimal a)=&gt; a&gt;0; }\n\npublic sealed class PaymentsModule : IModule\n{\n    public void RegisterServices(IServiceCollection s)\n        =&gt; s.AddSingleton&lt;IPaymentGateway, FakeGateway&gt;();\n\n    public void MapEndpoints(IEndpointRouteBuilder e)\n    {\n        var grp = e.MapGroup(\"/payments\").WithTags(\"Payments\");\n        grp.MapPost(\"/charge\", (decimal amount, IPaymentGateway gw)\n            =&gt; gw.Charge(amount) ? Results.Ok(new { ok=true }) : Results.BadRequest(new { ok=false }));\n    }\n}\n</code></pre> C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n ModularDemo &amp;&amp; cd ModularDemo &amp;&amp; \u0636\u064e\u0639 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u062b\u0645 dotnet run\nusing Microsoft.OpenApi.Models;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen(o =&gt; o.SwaggerDoc(\"v1\", new OpenApiInfo{Title=\"Modular API\",Version=\"v1\"}));\n\n// \u0627\u0644\u062a\u0631\u0643\u064a\u0628 (Composition Root): \u0636\u0641 Modules \u062f\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u062f\u0627\u062e\u0644\u0647\u0627\nvar modules = new IModule[] { new OrdersModule(), new PaymentsModule() };\nforeach (var m in modules) m.RegisterServices(builder.Services);\n\nvar app = builder.Build();\nif (app.Environment.IsDevelopment()) { app.UseSwagger(); app.UseSwaggerUI(); }\napp.UseHttpsRedirection();\n\nforeach (var m in modules) m.MapEndpoints(app);\n\napp.MapGet(\"/\", ()=&gt; new { service=\"modular-demo\", modules = modules.Select(x=&gt;x.GetType().Name) });\napp.Run();\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - <code>GET /orders</code> \u060c <code>POST /orders</code>\u060c <code>POST /payments/charge</code>. - \u0643\u0644 \u0648\u062d\u062f\u0629 \u062a\u0633\u062c\u0651\u0644 \u062e\u062f\u0645\u0627\u062a\u0647\u0627 \u0648\u0645\u0633\u0627\u0631\u0627\u062a\u0647\u0627 \u0628\u062f\u0648\u0646 \u062a\u0633\u0631\u0651\u0628 \u062a\u0641\u0627\u0635\u064a\u0644 \u0644\u0644\u0622\u062e\u0631\u064a\u0646.</p>"},{"location":"terms/modular/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 \u0646\u0638\u0627\u0645 \u0645\u0639\u064a\u0627\u0631\u064a","text":"<ol> <li>\u0627\u0631\u0633\u0645 \u0627\u0644\u062d\u062f\u0648\u062f: \u0645\u0627\u0630\u0627 \u064a\u0645\u0644\u0643 \u0643\u0644 Module\u061f \u0645\u0627 \u0648\u0627\u062c\u0647\u062a\u0647\u061f \u0645\u0627 \u0627\u0644\u0630\u064a \u0644\u064a\u0633 \u0645\u0646 \u0627\u062e\u062a\u0635\u0627\u0635\u0647\u061f  </li> <li>\u0639\u0627\u0644\u064a \u0627\u0644\u062a\u0645\u0627\u0633\u0643 / \u0636\u0639\u064a\u0641 \u0627\u0644\u062a\u0631\u0627\u0628\u0637: \u0627\u062c\u0639\u0644 \u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0627\u0645\u0646\u0639 \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0627\u0644\u062c\u0627\u0646\u0628\u064a\u0629 \u0627\u0644\u0639\u0634\u0648\u0627\u0626\u064a\u0629.  </li> <li>\u0639\u0642\u0648\u062f \u062b\u0627\u0628\u062a\u0629: Interfaces/DTOs/Events. \u0639\u062f\u0651\u0644\u0647\u0627 \u0639\u0628\u0631 \u0646\u0633\u062e \u0625\u0635\u062f\u0627\u0631 (v1\u2192v2).  </li> <li>\u0637\u0628\u0651\u0642 DI: \u0643\u0644 Module \u064a\u062d\u0642\u0646 \u0645\u0627 \u064a\u062d\u062a\u0627\u062c\u0647 \u0641\u0642\u0637.  </li> <li>\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644: \u0627\u062c\u0639\u0644 \u0627\u0644\u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 <code>internal</code>\u060c \u0648\u0635\u062f\u0651\u0631 \u0627\u0644\u0642\u0644\u064a\u0644 \u0641\u0642\u0637.  </li> <li>\u0627\u062e\u062a\u0628\u0627\u0631 \u0645\u0633\u062a\u0642\u0644: \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062d\u062f\u0629/\u062a\u0643\u0627\u0645\u0644 \u0644\u0643\u0644 Module + \u0639\u0642\u0648\u062f \u0628\u064a\u0646\u064a\u0629 (Contract Tests).  </li> <li>\u0645\u0631\u0627\u0642\u0628\u0629: \u0642\u064a\u0627\u0633\u0627\u062a/\u0633\u062c\u0644\u0627\u062a \u0644\u0643\u0644 Module \u0644\u0633\u0647\u0648\u0644\u0629 \u0627\u0644\u0645\u062a\u0627\u0628\u0639\u0629 \u0648\u0627\u0644\u0636\u0628\u0637.</li> </ol>"},{"location":"terms/modular/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062f\u0648\u0627\u0626\u0631 \u0627\u0639\u062a\u0645\u0627\u062f \u0628\u064a\u0646 \u0627\u0644\u0648\u062d\u062f\u0627\u062a (A \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 B \u0648B \u0639\u0644\u0649 A).  </li> <li>\u0645\u0634\u0627\u0631\u0643\u0629 \u0646\u0645\u0648\u0630\u062c \u0628\u064a\u0627\u0646\u0627\u062a \u062f\u0627\u062e\u0644\u064a \u0628\u064a\u0646 \u0627\u0644\u0648\u062d\u062f\u0627\u062a \u0628\u062f\u0644 DTOs.  </li> <li>\u201cGod Module\u201d \u064a\u062c\u0645\u0639 \u0643\u0644 \u0634\u064a\u0621.  </li> <li>\u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u062d\u062f\u0648\u062f: \u0648\u062d\u062f\u0629 \u062a\u0642\u0631\u0623 \u062c\u062f\u0648\u0644 \u0648\u062d\u062f\u0629 \u0623\u062e\u0631\u0649 \u0645\u0628\u0627\u0634\u0631\u0629.  </li> <li>\u0639\u062f\u0645 \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u0639\u0642\u0648\u062f/\u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u2192 \u0643\u0633\u0631 \u0645\u062a\u0628\u0627\u062f\u0644 \u0639\u0646\u062f \u0627\u0644\u062a\u063a\u064a\u064a\u0631.</li> </ul>"},{"location":"terms/modular/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Modular \u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0646\u0638\u0627\u0645 \u0625\u0644\u0649 \u0648\u062d\u062f\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0651\u0629 \u0628\u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629 High Cohesion / Low Coupling\u060c \u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u062a\u0628\u062f\u064a\u0644 \u0623\u0633\u0647\u0644 Monolith \u062a\u0637\u0628\u064a\u0642 \u0648\u0627\u062d\u062f \u0645\u062a\u0645\u0627\u0633\u0643 \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0645\u0639\u064a\u0627\u0631\u064a\u064b\u0627 \u062f\u0627\u062e\u0644\u064a\u064b\u0627 \u0623\u0648 \u0645\u062a\u0634\u0627\u0628\u0643\u064b\u0627 Modular Monolith \u062d\u0632\u0645\u0629 \u0648\u0627\u062d\u062f\u0629 \u0628\u062d\u062f\u0648\u062f \u062f\u0627\u062e\u0644\u064a\u0629 \u0635\u0644\u0628\u0629 \u0623\u062f\u0627\u0621 \u0623\u0628\u0633\u0637 \u0645\u0646 \u0627\u0644\u0645\u064a\u0643\u0631\u0648\u0633\u064a\u0631\u0641\u0633\u061b \u062d\u062f\u0648\u062f \u0639\u0628\u0631 \u0627\u0644\u0639\u0642\u0648\u062f Microservices \u062e\u062f\u0645\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0629 \u062a\u064f\u0646\u0634\u0631 \u0645\u0646\u0641\u0635\u0644\u0629 \u062d\u0631\u064a\u0629 \u062a\u0642\u0646\u064a\u0629/\u0646\u0634\u0631\u061b \u062a\u0639\u0642\u064a\u062f \u0634\u0628\u0643\u0629/\u0645\u0631\u0627\u0642\u0628\u0629 \u0623\u0639\u0644\u0649 Plug-in Architecture \u062a\u0648\u0633\u064a\u0639 \u0628\u0645\u0644\u062d\u0642\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062d\u0645\u064a\u0644 \u062d\u062f\u0648\u062f/\u0646\u0642\u0627\u0637 \u062a\u0645\u062f\u064a\u062f \u0648\u0627\u0636\u062d\u0629 (Extensibility)"},{"location":"terms/modular/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0627\u0644\u0645\u0639\u064a\u0627\u0631\u064a \u064a\u062c\u0639\u0644 \u0646\u0638\u0627\u0645\u0643 \u0623\u0633\u0647\u0644 \u062a\u063a\u064a\u064a\u0631\u064b\u0627 \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u064b\u0627 \u0639\u0628\u0631 \u062d\u062f\u0648\u062f \u0648\u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629. \u0627\u0641\u0635\u0644 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a\u060c \u0627\u0633\u062a\u062e\u062f\u0645 DI \u0648DTOs/Events\u060c \u0648\u0623\u062e\u0641\u0650 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0643\u0648\u062f \u0642\u0627\u0628\u0644 \u0644\u0644\u0635\u064a\u0627\u0646\u0629 \u0648\u0627\u0644\u0646\u0645\u0648 \u0628\u0623\u0642\u0644 \u0645\u0641\u0627\u062c\u0622\u062a. </p>"},{"location":"terms/mtls/","title":"mTLS \u2014 Mutual TLS","text":""},{"location":"terms/mtls/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Mutual Transport Layer Security (mTLS) \u2014 \u062a\u0648\u0643\u064a\u062f \u0645\u062a\u0628\u0627\u062f\u0644 \u0639\u0628\u0631 \u0637\u0628\u0642\u0629 \u0627\u0644\u0646\u0642\u0644 (\u062e\u0627\u062f\u0645 \u0648\u0639\u0645\u064a\u0644 \u064a\u062b\u0628\u062a\u0627\u0646 \u0647\u0648\u064a\u062a\u0647\u0645\u0627 \u0628\u0634\u0647\u0627\u062f\u0627\u062a).</p>"},{"location":"terms/mtls/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0627\u0645\u062a\u062f\u0627\u062f \u0644\u0640 HTTPS \u062d\u064a\u062b \u0644\u0627 \u064a\u0643\u062a\u0641\u064a \u0627\u0644\u062e\u0627\u062f\u0645 \u0628\u0634\u0647\u0627\u062f\u0629\u060c \u0628\u0644 \u064a\u0637\u0644\u0628 \u0623\u064a\u0636\u064b\u0627 \u0634\u0647\u0627\u062f\u0629 \u0639\u0645\u064a\u0644. \u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u0642\u0646\u0627\u0629 \u0645\u0634\u0641\u0651\u0631\u0629 \u0645\u0639 \u062a\u0648\u062b\u064a\u0642 \u062b\u0646\u0627\u0626\u064a (Server &amp; Client) \u0645\u0646\u0627\u0633\u0628\u0629 \u0644\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0648\u0627\u0644\u0640 Microservices \u0648\u0627\u0644\u0640 B2B.</p>"},{"location":"terms/mtls/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0628\u062f\u0623 \u0627\u062a\u0635\u0627\u0644 TLS \u0639\u0627\u062f\u064a.  </li> <li>\u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0639\u0631\u0636 \u0634\u0647\u0627\u062f\u062a\u0647\u060c \u0648\u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u062a\u062d\u0642\u0642 \u0645\u0646\u0647\u0627.  </li> <li>\u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0637\u0644\u0628 \u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u0631\u0633\u0644\u0647\u0627.  </li> <li>\u064a\u062a\u062d\u0642\u0642 \u0627\u0644\u062e\u0627\u062f\u0645 \u0645\u0646 \u0633\u0644\u0633\u0644\u0629 \u062b\u0642\u0629 \u0627\u0644\u0639\u0645\u064a\u0644 (CA/CRL/OCSP) \u062b\u0645 \u064a\u064f\u0643\u0645\u064e\u0644 \u0627\u0644\u0627\u062a\u0635\u0627\u0644.  </li> <li>\u0628\u0639\u062f\u0647\u0627 \u062a\u064f\u0645\u0631\u0651\u064e\u0631 \u0637\u0644\u0628\u0627\u062a HTTP \u0628\u0623\u0645\u0627\u0646 \u0648\u0647\u0648\u064a\u0629 \u0645\u0624\u0643\u062f\u0629 \u0644\u0644\u0637\u0631\u0641\u064a\u0646.</li> </ul>"},{"location":"terms/mtls/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u0648\u0627\u0628\u0629 \u0634\u0631\u0643\u0629 \u0622\u0645\u0646\u0629: \u062a\u064f\u0638\u0647\u0631 \u0628\u0637\u0627\u0642\u0629 \u0639\u0645\u0644 \u0639\u0646\u062f \u0627\u0644\u062f\u062e\u0648\u0644 (\u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u062e\u0627\u062f\u0645)\u060c \u0648\u064a\u064f\u0637\u0644\u0628 \u0645\u0646\u0643 \u0628\u0627\u062f\u062c \u0645\u0648\u0638\u0641 \u0623\u064a\u0636\u064b\u0627 (\u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u0639\u0645\u064a\u0644). \u0644\u0627 \u062f\u062e\u0648\u0644 \u0625\u0644\u0627 \u0625\u0630\u0627 \u0643\u0627\u0646\u062a \u0627\u0644\u0628\u0637\u0627\u0642\u062a\u0627\u0646 \u0645\u0648\u062b\u0648\u0642\u062a\u064a\u0646.</p>"},{"location":"terms/mtls/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0645\u062e\u062a\u0635\u0631","text":""},{"location":"terms/mtls/#aspnet-core","title":"\u062e\u0627\u062f\u0645 ASP.NET Core \u064a\u0637\u0644\u0628 \u0634\u0647\u0627\u062f\u0629 \u0639\u0645\u064a\u0644","text":"C#<pre><code>// Program.cs (.NET 8/9)\n// NuGet: Microsoft.AspNetCore.Authentication.Certificate\nusing Microsoft.AspNetCore.Authentication.Certificate;\nusing Microsoft.AspNetCore.Server.Kestrel.Https;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// 1) Kestrel \u064a\u0637\u0644\u0628 \u0634\u0647\u0627\u062f\u0629 \u0639\u0645\u064a\u0644 \u0623\u062b\u0646\u0627\u0621 TLS\nbuilder.WebHost.ConfigureKestrel(k =&gt;\n{\n    k.ConfigureHttpsDefaults(h =&gt;\n    {\n        h.ClientCertificateMode = ClientCertificateMode.RequireCertificate; // mTLS\n    });\n});\n\n// 2) \u062a\u062d\u0642\u0642 \u0648\u0627\u0639\u062a\u0645\u0627\u062f \u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u0639\u0645\u064a\u0644\nbuilder.Services.AddAuthentication(CertificateAuthenticationDefaults.AuthenticationScheme)\n    .AddCertificate(options =&gt;\n    {\n        options.AllowedCertificateTypes = CertificateTypes.All; // Dev: \u0627\u0636\u0628\u0637\u0647\u0627 \u0643\u0645\u0627 \u064a\u0644\u0632\u0645\u0643\n        options.Events = new CertificateAuthenticationEvents\n        {\n            OnCertificateValidated = ctx =&gt;\n            {\n                // TODO: \u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u0645\u064f\u0635\u062f\u0650\u0631/\u0627\u0644\u0645\u0648\u0636\u0648\u0639/\u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a/\u0627\u0644\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0633\u0648\u062f\u0627\u0621 \u2026\n                // \u0645\u062b\u0627\u0644: \u0631\u0628\u0637 \u0627\u0644\u0634\u0647\u0627\u062f\u0629 \u0628\u0647\u0648\u064a\u0629\n                ctx.Principal = new System.Security.Claims.ClaimsPrincipal(\n                    new System.Security.Claims.ClaimsIdentity(\n                        new[] { new System.Security.Claims.Claim(\"sub\", ctx.ClientCertificate.Subject) },\n                        CertificateAuthenticationDefaults.AuthenticationScheme));\n                ctx.Success();\n                return Task.CompletedTask;\n            }\n        };\n    });\n\nbuilder.Services.AddAuthorization();\n\nvar app = builder.Build();\napp.UseHttpsRedirection();\napp.UseAuthentication();\napp.UseAuthorization();\n\napp.MapGet(\"/secure\", () =&gt; Results.Ok(new { ok = true }))\n   .RequireAuthorization(); // \u0644\u0646 \u062a\u064f\u062e\u062f\u0645 \u062f\u0648\u0646 \u0634\u0647\u0627\u062f\u0629 \u0639\u0645\u064a\u0644 \u0635\u0627\u0644\u062d\u0629\n\napp.Run();\n</code></pre>"},{"location":"terms/mtls/#net-pfx","title":"\u0639\u0645\u064a\u0644 .NET \u064a\u0631\u0633\u0644 \u0634\u0647\u0627\u062f\u0629 (PFX)","text":"C#<pre><code>using System.Net.Http;\nusing System.Security.Cryptography.X509Certificates;\n\nvar handler = new HttpClientHandler();\n\n// \u0623\u0636\u0650\u0641 \u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u0639\u0645\u064a\u0644 (\u062a\u062a\u0636\u0645\u0646 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635) \u2013 \u0627\u0645\u062a\u062f\u0627\u062f PFX\nhandler.ClientCertificates.Add(\n    new X509Certificate2(\"client.pfx\", \"P@ssw0rd\", X509KeyStorageFlags.MachineKeySet));\n\n// \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u062a\u0645 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 (\u0644\u0627 \u062a\u0639\u0637\u0644\u0651\u0647 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c)\nusing var http = new HttpClient(handler) { BaseAddress = new Uri(\"https://api.example.com\") };\n\nvar res = await http.GetAsync(\"/secure\");\nConsole.WriteLine($\"{(int)res.StatusCode} {res.IsSuccessStatusCode}\");\n</code></pre> <p>\u062a\u0630\u0643\u064a\u0631 \u0645\u0647\u0645: - \u062e\u0627\u062f\u0645: EKU = Server Authentication\u060c \u0648\u0639\u0645\u064a\u0644: EKU = Client Authentication. - \u0627\u0633\u062a\u062e\u062f\u0645 SAN \u0628\u0627\u0644\u0623\u0633\u0645\u0627\u0621/\u0627\u0644\u0645\u0636\u064a\u0641\u064a\u0646 \u0627\u0644\u0635\u062d\u064a\u062d\u0629. - \u0648\u0641\u0651\u0631 \u0633\u0644\u0633\u0644\u0629 \u062b\u0642\u0629 \u0643\u0627\u0645\u0644\u0629 \u0648\u0631\u0627\u062c\u0639 CRL/OCSP.</p>"},{"location":"terms/mtls/#mtls-checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 mTLS (Checklist)","text":"<ol> <li>\u0623\u0646\u0634\u0626/\u0648\u0641\u0651\u0631 CA \u0645\u0648\u062b\u0648\u0642\u064b\u0627 (\u062e\u0627\u0635 \u062f\u0627\u062e\u0644\u064a \u0623\u0648 \u0645\u0648\u0641\u0651\u0631 \u0633\u062d\u0627\u0628\u064a).  </li> <li>\u0623\u0635\u062f\u0650\u0631 \u0634\u0647\u0627\u062f\u0629 \u062e\u0627\u062f\u0645 \u0644\u0643\u0644 \u062e\u062f\u0645\u0629 (SAN \u0635\u062d\u064a\u062d\u0629) \u0648\u0634\u0647\u0627\u062f\u0629 \u0639\u0645\u064a\u0644 \u0644\u0643\u0644 \u0645\u0633\u062a\u0647\u0644\u0643.  </li> <li>\u0646\u0632\u0651\u0644 \u0633\u0644\u0633\u0644\u0629 \u0627\u0644\u062b\u0642\u0629 (Root/Intermediates) \u0625\u0644\u0649 \u0627\u0644\u062e\u0648\u0627\u062f\u0645 \u0648\u0627\u0644\u0639\u0645\u0644\u0627\u0621 \u0628\u0623\u0645\u0627\u0646.  </li> <li>\u0641\u0639\u0651\u0650\u0644 \u0627\u0644\u0637\u0644\u0628 \u0627\u0644\u0625\u0644\u0632\u0627\u0645\u064a \u0644\u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u0639\u0645\u064a\u0644 \u0641\u064a Kestrel/NGINX/Ingress.  </li> <li>\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0634\u0647\u0627\u062f\u0629 (\u0627\u0644\u0645\u064f\u0635\u062f\u0650\u0631\u060c \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0629\u060c \u0627\u0644\u0625\u0628\u0637\u0627\u0644\u060c \u0627\u0644\u0633\u064a\u0627\u0633\u0629\u060c \u0627\u0644\u0642\u064a\u0648\u062f).  </li> <li>\u0627\u0631\u0628\u0637 \u0627\u0644\u0634\u0647\u0627\u062f\u0629 \u0628\u0647\u0648\u064a\u0629/\u062d\u0633\u0627\u0628 (Mapping) \u0623\u0648 \u0627\u062f\u0639\u0645 AuthZ \u0625\u0636\u0627\u0641\u064a (Scopes/Claims).  </li> <li>\u062e\u0637\u0651\u0637 \u0644\u0640 \u062f\u0648\u0631\u0627\u0646 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0648\u062a\u062c\u062f\u064a\u062f \u0627\u0644\u0634\u0647\u0627\u062f\u0627\u062a \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 (ACME/Cert-Manager).  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0621\u0627\u062a \u0648\u0627\u0644\u0631\u0641\u0636 \u0648\u0627\u0644\u0625\u0628\u0637\u0627\u0644 \u0648\u0633\u062c\u0651\u0644 \u0627\u0644\u0628\u0635\u0645\u0627\u062a (Thumbprints).</li> </ol>"},{"location":"terms/mtls/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0634\u0647\u0627\u062f\u0627\u062a \u0630\u0627\u062a\u064a\u0629 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0639\u0634\u0648\u0627\u0626\u064a\u064b\u0627 \u0623\u0648 \u062a\u0639\u0637\u064a\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0641\u064a \u0627\u0644\u0639\u0645\u064a\u0644.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0648\u0633\u064a\u0637\u0627\u062a (Intermediate CAs) \u2192 \u0641\u0634\u0644 \u0627\u0644\u0633\u0644\u0633\u0644\u0629.  </li> <li>\u063a\u064a\u0627\u0628 CRL/OCSP \u0623\u0648 \u0639\u062f\u0645 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0625\u0628\u0637\u0627\u0644.  </li> <li>\u0639\u062f\u0645 \u062a\u0642\u064a\u064a\u062f EKU/SAN \u0623\u0648 \u0627\u0644\u062b\u0642\u0629 \u0628\u0645\u0631\u062c\u0639 CA \u0648\u0627\u0633\u0639 \u062c\u062f\u064b\u0627.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 mTLS \u0648\u062d\u062f\u0647 \u062f\u0648\u0646 \u0633\u064a\u0627\u0633\u0627\u062a \u062a\u0641\u0648\u064a\u0636 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.</li> </ul>"},{"location":"terms/mtls/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 HTTP \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0637\u0644\u0628/\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0628\u062f\u0648\u0646 \u062a\u0634\u0641\u064a\u0631 \u0645\u0646\u0627\u0633\u0628 \u0641\u0642\u0637 \u062f\u0627\u062e\u0644 \u0642\u0646\u0648\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u0629 \u0623\u0648 \u0645\u062d\u0644\u064a\u0629 HTTPS \u062a\u0634\u0641\u064a\u0631 + \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u062e\u0627\u062f\u0645 \u0641\u0642\u0637 (TLS) \u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0642\u0646\u0627\u0629 \u0648\u0647\u0648\u064a\u0629 \u0627\u0644\u062e\u0627\u062f\u0645\u061b \u0627\u0644\u0639\u0645\u064a\u0644 \u0644\u0627 \u064a\u0642\u062f\u0651\u0645 \u0634\u0647\u0627\u062f\u0629 mTLS \u062a\u0634\u0641\u064a\u0631 + \u062a\u0648\u062b\u064a\u0642 \u0645\u062a\u0628\u0627\u062f\u0644 (\u062e\u0627\u062f\u0645 \u0648\u0639\u0645\u064a\u0644) \u0642\u0648\u064a \u0644\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629/B2B\u061b \u064a\u062a\u0637\u0644\u0628 \u0625\u062f\u0627\u0631\u0629 \u0634\u0647\u0627\u062f\u0627\u062a \u0644\u0644\u0639\u0645\u0644\u0627\u0621"},{"location":"terms/mtls/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>mTLS = HTTPS \u0645\u0639 \u0634\u0647\u0627\u062f\u0629 \u0639\u0645\u064a\u0644. \u064a\u0639\u0637\u064a\u0643 \u0642\u0646\u0627\u0629 \u0645\u0634\u0641\u0651\u0631\u0629 \u0648\u0647\u0648\u064a\u0629 \u0645\u0624\u0643\u062f\u0629 \u0644\u0644\u0637\u0631\u0641\u064a\u0646\u2014\u0645\u0645\u062a\u0627\u0632 \u0644\u0648\u0627\u062c\u0647\u0627\u062a \u062f\u0627\u062e\u0644\u064a\u0629 \u0648\u062a\u0643\u0627\u0645\u0644\u0627\u062a \u062d\u0633\u0651\u0627\u0633\u0629\u2014\u0628\u0634\u0631\u0637 \u0625\u062f\u0627\u0631\u0629 \u0634\u0647\u0627\u062f\u0627\u062a \u0645\u062d\u0643\u0645\u0629 \u0648\u062a\u062c\u062f\u064a\u062f\u0627\u062a \u062a\u0644\u0642\u0627\u0626\u064a\u0629.</p>"},{"location":"terms/mvc/","title":"MVC \u2014 Model\u2013View\u2013Controller","text":""},{"location":"terms/mvc/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Model\u2013View\u2013Controller (MVC) \u2014 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u2013\u0627\u0644\u0639\u0631\u0636\u2013\u0627\u0644\u0645\u062a\u062d\u0643\u0651\u0650\u0645</p>"},{"location":"terms/mvc/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0645\u0637 \u0645\u0639\u0645\u0627\u0631\u064a \u064a\u0641\u0635\u0644 \u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0648\u064a\u0628 \u0625\u0644\u0649 \u062b\u0644\u0627\u062b \u0637\u0628\u0642\u0627\u062a: Model (\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0642\u0648\u0627\u0639\u062f)\u060c View (\u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0639\u0631\u0636)\u060c Controller (\u062a\u0646\u0633\u064a\u0642 \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629).</p>"},{"location":"terms/mvc/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Controller \u064a\u0633\u062a\u0642\u0628\u0644 \u0637\u0644\u0628 HTTP\u060c \u064a\u0646\u0633\u0651\u0642 \u0627\u0644\u0645\u0646\u0637\u0642\u060c \u0648\u064a\u062e\u062a\u0627\u0631 View \u0645\u0646\u0627\u0633\u0628\u064b\u0627.  </li> <li>Model \u064a\u0645\u062b\u0651\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0645\u062c\u0627\u0644 (Validation/Business Rules).  </li> <li>View \u064a\u0642\u062f\u0651\u0645 HTML (Razor) \u0628\u0627\u0633\u062a\u0639\u0645\u0627\u0644 Model \u0623\u0648 ViewModel.  </li> <li>\u0627\u0644\u0641\u0627\u0626\u062f\u0629: \u0641\u0635\u0644 \u0627\u0644\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a \u2192 \u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0633\u0647\u0644\u060c \u062a\u0628\u062f\u064a\u0644 \u0648\u0627\u062c\u0647\u0627\u062a \u062f\u0648\u0646 \u0644\u0645\u0633 \u0627\u0644\u0642\u0648\u0627\u0639\u062f.</li> </ul>"},{"location":"terms/mvc/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0637\u0639\u0645: \u0627\u0644\u0646\u0627\u062f\u0644 (Controller) \u064a\u0623\u062e\u0630 \u0637\u0644\u0628\u0643\u060c \u0627\u0644\u0645\u0637\u0628\u062e (Model) \u064a\u0637\u0628\u0651\u0642 \u0627\u0644\u0648\u0635\u0641\u0629\u060c \u0627\u0644\u062a\u0642\u062f\u064a\u0645 (View) \u064a\u062e\u0631\u062c \u0627\u0644\u0637\u0628\u0642 \u0628\u0634\u0643\u0644 \u062c\u0645\u064a\u0644 \u0644\u0644\u0632\u0628\u0648\u0646.</p>"},{"location":"terms/mvc/#c-aspnet-core-mvc","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (ASP.NET Core MVC \u0645\u062e\u062a\u0635\u0631)","text":""},{"location":"terms/mvc/#1-model","title":"1) Model (\u0628\u064a\u0627\u0646\u0627\u062a + \u062a\u062d\u0642\u0651\u0642)","text":"C#<pre><code>// Models/Product.cs\nusing System.ComponentModel.DataAnnotations;\n\npublic record Product(\n    int Id,\n    [property: Required, StringLength(60)] string Name,\n    [property: Range(0.01, 99999)] decimal Price\n);\n</code></pre>"},{"location":"terms/mvc/#2-controller","title":"2) Controller (\u062a\u0646\u0633\u064a\u0642 \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629)","text":"C#<pre><code>// Controllers/ProductsController.cs\nusing Microsoft.AspNetCore.Mvc;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class ProductsController : Controller\n{\n    // \u0644\u0644\u062a\u0628\u0633\u064a\u0637: \u0642\u0627\u0626\u0645\u0629 \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629\n    private static readonly List&lt;Product&gt; _data =\n    [\n        new Product(1, \"Keyboard\", 120),\n        new Product(2, \"Mouse\", 60)\n    ];\n\n    // GET /Products\n    public IActionResult Index() =&gt; View(_data);\n\n    // GET /Products/Create\n    public IActionResult Create() =&gt; View();\n\n    // POST /Products/Create\n    [HttpPost]\n    public IActionResult Create(Product input)\n    {\n        if (!ModelState.IsValid) return View(input);      // Validation \u0645\u0646 Model\n        var nextId = _data.Any() ? _data.Max(p =&gt; p.Id) + 1 : 1;\n        _data.Add(input with { Id = nextId });\n        return RedirectToAction(nameof(Index));\n    }\n}\n</code></pre>"},{"location":"terms/mvc/#3-view-razor","title":"3) View (Razor) \u2014 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0645\u0646\u062a\u062c\u0627\u062a","text":"Text Only<pre><code>@* Views/Products/Index.cshtml *@\n@model IEnumerable&lt;Product&gt;\n&lt;h1&gt;Products&lt;/h1&gt;\n&lt;a asp-action=\"Create\"&gt;Add&lt;/a&gt;\n&lt;table&gt;\n  &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Id&lt;/th&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Price&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;\n  &lt;tbody&gt;\n  @foreach (var p in Model)\n  {\n    &lt;tr&gt;&lt;td&gt;@p.Id&lt;/td&gt;&lt;td&gt;@p.Name&lt;/td&gt;&lt;td&gt;@p.Price&lt;/td&gt;&lt;/tr&gt;\n  }\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>"},{"location":"terms/mvc/#4-view-razor","title":"4) View (Razor) \u2014 \u0625\u0636\u0627\u0641\u0629 \u0645\u0646\u062a\u062c","text":"Text Only<pre><code>@* Views/Products/Create.cshtml *@\n@model Product\n&lt;h1&gt;Add Product&lt;/h1&gt;\n&lt;form asp-action=\"Create\" method=\"post\"&gt;\n  &lt;label&gt;Name&lt;/label&gt;\n  &lt;input asp-for=\"Name\" /&gt;\n  &lt;span asp-validation-for=\"Name\"&gt;&lt;/span&gt;\n\n  &lt;label&gt;Price&lt;/label&gt;\n  &lt;input asp-for=\"Price\" /&gt;\n  &lt;span asp-validation-for=\"Price\"&gt;&lt;/span&gt;\n\n  &lt;button type=\"submit\"&gt;Save&lt;/button&gt;\n&lt;/form&gt;\n\n@section Scripts { &lt;partial name=\"_ValidationScriptsPartial\" /&gt; }\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0645\u062a\u062d\u0643\u0651\u0645 \u064a\u0646\u0633\u0651\u0642\u060c \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u064a\u0637\u0628\u0651\u0642 \u0627\u0644\u0642\u0648\u0627\u0639\u062f\u060c \u0627\u0644\u0639\u0631\u0636 \u064a\u0642\u062f\u0651\u0645 HTML. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 View \u0628\u062a\u0635\u0645\u064a\u0645 \u0622\u062e\u0631 \u062f\u0648\u0646 \u0627\u0644\u0645\u0633\u0627\u0633 \u0628\u0627\u0644\u0645\u0646\u0637\u0642.</p>"},{"location":"terms/mvc/#aspnet-core-mvc","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 (ASP.NET Core MVC \u0633\u0631\u064a\u0639\u064b\u0627)","text":"<ol> <li>\u0623\u0646\u0634\u0626 \u0645\u0634\u0631\u0648\u0639\u064b\u0627: Bash<pre><code>dotnet new mvc -n ShopMvc\ncd ShopMvc\n</code></pre></li> <li>\u0623\u0636\u0650\u0641 \u0627\u0644\u0645\u0644\u0641\u0651\u0627\u062a \u0623\u0639\u0644\u0627\u0647 (Model/Controller/Views).  </li> <li>\u0634\u063a\u0651\u0644: <code>dotnet run</code> \u062b\u0645 \u0627\u0641\u062a\u062d <code>https://localhost:****/Products</code>.  </li> <li>\u0625\u0646 \u0623\u0631\u062f\u062a \u0642\u0648\u0627\u0639\u062f \u0623\u0642\u0648\u0649: \u0623\u0646\u0634\u0626 ViewModel \u0645\u0646\u0641\u0635\u0644\u064b\u0627 \u0639\u0646 Domain Model.  </li> <li>\u0627\u0641\u0635\u0644 \u0645\u0646\u0637\u0642 \u0627\u0644\u0645\u062c\u0627\u0644 \u0641\u064a \u062e\u062f\u0645\u0627\u062a \u062a\u064f\u062d\u0642\u0646 \u0639\u0628\u0631 DI \u0628\u062f\u0644 \u0648\u0636\u0639\u0647 \u062f\u0627\u062e\u0644 Controller.</li> </ol>"},{"location":"terms/mvc/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>Fat Controller: \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u062d\u0643\u0651\u0645 \u0628\u062f\u0644 \u062e\u062f\u0645\u0627\u062a/\u0646\u0637\u0627\u0642.  </li> <li>\u062a\u0645\u0631\u064a\u0631 Entity \u0645\u0646 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0628\u0627\u0634\u0631\u0629\u064b \u0625\u0644\u0649 \u0627\u0644\u0639\u0631\u0636 \u062f\u0648\u0646 ViewModel \u0645\u0646\u0627\u0633\u0628.  </li> <li>\u0645\u0646\u0637\u0642 \u0641\u064a View (Razor) \u0623\u0643\u062b\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645.  </li> <li>\u062e\u0644\u0637 \u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a Model (\u0646\u0637\u0627\u0642) \u0648DAL/ORM (\u0648\u0635\u0648\u0644 \u0628\u064a\u0627\u0646\u0627\u062a).  </li> <li>\u0625\u0647\u0645\u0627\u0644 Validation \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0648\u0627\u0644\u0627\u0643\u062a\u0641\u0627\u0621 \u0628\u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645.</li> </ul>"},{"location":"terms/mvc/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 MVC \u0641\u0635\u0644: Controller \u064a\u0646\u0633\u0651\u0642\u060c Model \u0642\u0648\u0627\u0639\u062f\u060c View \u0639\u0631\u0636 \u0634\u0627\u0626\u0639 \u0641\u064a ASP.NET Core MVC/Rails\u061b Views \u0628\u0640 Razor MVVM \u0631\u0628\u0637 \u0628\u064a\u0627\u0646\u0627\u062a (Binding) \u0628\u064a\u0646 View \u0648ViewModel \u0634\u0627\u0626\u0639 \u0628\u0648\u0627\u062c\u0647\u0627\u062a \u0633\u0637\u062d \u0627\u0644\u0645\u0643\u062a\u0628/SPA\u061b \u064a\u0642\u0644\u0651\u0644 \u0643\u0648\u062f \u0627\u0644\u0640 Controller MVP Presenter \u064a\u0646\u0633\u0651\u0642 \u0628\u062f\u0644 Controller \u0645\u0646\u0627\u0633\u0628 \u062d\u064a\u0646 \u064a\u0643\u0648\u0646 \u0627\u0644\u0640 View \u201c\u063a\u0628\u064a\u064b\u0627\u201d \u0628\u0627\u0644\u0643\u0627\u0645\u0644 Minimal APIs \u0646\u0642\u0627\u0637 \u0646\u0647\u0627\u064a\u0629 \u062e\u0641\u064a\u0641\u0629 \u0645\u0628\u0627\u0634\u0631\u0629 \u0645\u0646\u0627\u0633\u0628 \u0644\u062e\u062f\u0645\u0627\u062a \u0635\u063a\u064a\u0631\u0629/\u0648\u0627\u062c\u0647\u0627\u062a \u062f\u0627\u062e\u0644\u064a\u0629"},{"location":"terms/mvc/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>MVC \u064a\u0636\u0645\u0646 \u0641\u0635\u0644\u064b\u0627 \u0648\u0627\u0636\u062d\u064b\u0627: \u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u062e\u0627\u0631\u062c \u0627\u0644\u0639\u0631\u0636\u060c \u0648\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u0645\u062c\u0627\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c/\u0627\u0644\u062e\u062f\u0645\u0627\u062a. \u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u062a\u0637\u0628\u064a\u0642 \u0623\u0633\u0647\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0644\u0644\u062a\u0637\u0648\u064a\u0631\u060c \u0648\u0644\u0644\u062a\u0628\u062f\u064a\u0644 \u0641\u064a \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u062f\u0648\u0646 \u0643\u0633\u0631 \u0627\u0644\u0645\u0646\u0637\u0642.</p>"},{"location":"terms/mvp/","title":"MVP \u2014 Model\u2013View\u2013Presenter","text":""},{"location":"terms/mvp/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Model\u2013View\u2013Presenter (MVP) \u2014 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u2013\u0627\u0644\u0639\u0631\u0636\u2013\u0627\u0644\u0645\u064f\u0642\u062f\u0651\u0650\u0645</p>"},{"location":"terms/mvp/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0645\u0637 \u0644\u0648\u0627\u062c\u0647\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u064a\u0641\u0635\u0644 \u0645\u0646\u0637\u0642 \u0627\u0644\u0639\u0631\u0636 \u062f\u0627\u062e\u0644 Presenter. View \u0648\u0627\u062c\u0647\u0629 \u0628\u0633\u064a\u0637\u0629 (Passive View). Model \u0628\u064a\u0627\u0646\u0627\u062a/\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0645\u062c\u0627\u0644.</p>"},{"location":"terms/mvp/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>View: \u0637\u0628\u0642\u0629 \u0648\u0627\u062c\u0647\u0629 \u0641\u0642\u0637. \u062a\u0639\u0631\u0636 \u0628\u064a\u0627\u0646\u0627\u062a. \u062a\u0631\u0641\u0639 \u0623\u062d\u062f\u0627\u062b \u0644\u0644\u0645\u064f\u0642\u062f\u0651\u0650\u0645.  </li> <li>Presenter: \u064a\u0645\u0633\u0643 \u0627\u0644\u0645\u0646\u0637\u0642. \u064a\u0633\u062a\u0645\u0639 \u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0648\u0627\u062c\u0647\u0629. \u064a\u0646\u0633\u0651\u0642 \u0645\u0639 Model/\u062e\u062f\u0645\u0627\u062a. \u062b\u0645 \u064a\u064f\u062d\u062f\u0651\u062b \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0639\u0628\u0631 Interface.  </li> <li>Model: \u0643\u0627\u0626\u0646\u0627\u062a \u0627\u0644\u0645\u062c\u0627\u0644 \u0648\u0627\u0644\u062a\u062e\u0632\u064a\u0646. \u0628\u0644\u0627 \u062a\u0641\u0627\u0635\u064a\u0644 UI.  </li> <li>\u0627\u0644\u0641\u0627\u0626\u062f\u0629: \u0627\u062e\u062a\u0628\u0627\u0631 \u0633\u0647\u0644 \u0644\u0644\u0645\u064f\u0642\u062f\u0651\u0650\u0645. \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u062a\u0628\u0642\u0649 \u0631\u0642\u064a\u0642\u0629.</li> </ul>"},{"location":"terms/mvp/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0644\u0645\u064f\u0642\u062f\u0651\u0650\u0645 \u0641\u064a \u0645\u0624\u062a\u0645\u0631. \u0627\u0644\u062c\u0645\u0647\u0648\u0631 (View) \u064a\u0634\u0627\u0647\u062f. \u0641\u0631\u064a\u0642 \u0627\u0644\u0628\u062d\u062b (Model) \u064a\u0632\u0648\u0651\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0627\u0644\u0645\u064f\u0642\u062f\u0651\u0650\u0645 \u0648\u062d\u062f\u0647 \u064a\u0642\u0631\u0651\u0631 \u0645\u0627\u0630\u0627 \u064a\u064f\u0639\u0631\u0636 \u0648\u0645\u062a\u0649.</p>"},{"location":"terms/mvp/#c-winformswpf-mvp","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (WinForms/WPF \u2014 MVP \u0628\u0623\u0633\u0644\u0648\u0628 \u0623\u062d\u062f\u0627\u062b \u0648\u0648\u0627\u062c\u0647\u0627\u062a)","text":"<p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0639\u0631\u0636 \u064a\u0639\u0631\u0651\u0641 \u0648\u0627\u062c\u0647\u0629 <code>ILoginView</code>. Presenter \u064a\u0631\u0628\u0637 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0628\u0627\u0644\u062e\u062f\u0645\u0627\u062a\u060c \u062b\u0645 \u064a\u062d\u062f\u0651\u062b \u0627\u0644\u0639\u0631\u0636 \u062f\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u062a\u0641\u0627\u0635\u064a\u0644\u0647.</p> C#<pre><code>// \u0627\u0644\u0639\u0642\u062f\u0629 \u0628\u064a\u0646 \u0627\u0644\u0639\u0631\u0636 \u0648\u0627\u0644\u0645\u064f\u0642\u062f\u0651\u0650\u0645 \u2014 \u0644\u0627 UI \u0647\u0646\u0627\npublic interface ILoginView\n{\n    string Username { get; }\n    string Password { get; }\n\n    event EventHandler LoginClicked;        // \u064a\u0631\u0641\u0639\u0647 \u0627\u0644\u0639\u0631\u0636 \u0639\u0646\u062f \u0636\u063a\u0637 \u0632\u0631 \u0627\u0644\u062f\u062e\u0648\u0644\n\n    void SetBusy(bool on);\n    void ShowMessage(string text, bool isError = false);\n}\n\n// \u062e\u062f\u0645\u0629 \u0645\u0635\u0627\u062f\u0642\u0629 \u2014 \u062a\u0645\u062b\u064a\u0644 \u0645\u0628\u0633\u0651\u0637 (Model/Service)\npublic interface IAuthService\n{\n    Task&lt;bool&gt; SignInAsync(string user, string pass, CancellationToken ct = default);\n}\n\npublic class FakeAuthService : IAuthService\n{\n    public Task&lt;bool&gt; SignInAsync(string user, string pass, CancellationToken ct = default)\n        =&gt; Task.FromResult(user == \"admin\" &amp;&amp; pass == \"1234\");\n}\n\n// Presenter \u2014 \u064a\u0645\u0633\u0643 \u0645\u0646\u0637\u0642 \u0627\u0644\u0639\u0631\u0636\u060c \u0644\u0627 \u064a\u0639\u0631\u0641 \u062a\u0641\u0627\u0635\u064a\u0644 WinForms/WPF\npublic class LoginPresenter\n{\n    private readonly ILoginView _view;\n    private readonly IAuthService _auth;\n\n    public LoginPresenter(ILoginView view, IAuthService auth)\n    {\n        _view = view;\n        _auth = auth;\n        _view.LoginClicked += OnLoginClicked;    // \u0631\u0628\u0637 \u0627\u0644\u062d\u062f\u062b\n    }\n\n    private async void OnLoginClicked(object? sender, EventArgs e)\n    {\n        _view.SetBusy(true);\n        try\n        {\n            var ok = await _auth.SignInAsync(_view.Username, _view.Password);\n            _view.ShowMessage(ok ? \"Welcome!\" : \"Invalid credentials\", isError: !ok);\n        }\n        catch (Exception ex)\n        {\n            _view.ShowMessage($\"Error: {ex.Message}\", isError: true);\n        }\n        finally\n        {\n            _view.SetBusy(false);\n        }\n    }\n}\n</code></pre>"},{"location":"terms/mvp/#presenter-view","title":"\u0631\u0628\u0637 Presenter \u0645\u0639 View (\u0645\u062b\u0627\u0644 \u0647\u064a\u0643\u0644\u064a)","text":"C#<pre><code>// \u0641\u064a \u0643\u0648\u062f \u0648\u0627\u062c\u0647\u062a\u0643 (WinForms: Form / WPF: Window/UserControl)\n// \u0646\u0641\u0651\u0630 ILoginView \u0628\u062e\u0635\u0627\u0626\u0635 \u0648\u0623\u062d\u062f\u0627\u062b \u062a\u0631\u0628\u0637 \u0639\u0646\u0627\u0635\u0631 UI (TextBox/Button).\npublic partial class LoginForm : Form, ILoginView\n{\n    public string Username =&gt; txtUser.Text;\n    public string Password =&gt; txtPass.Text;\n\n    public event EventHandler? LoginClicked;\n\n    public LoginForm()\n    {\n        InitializeComponent();\n        btnLogin.Click += (s, e) =&gt; LoginClicked?.Invoke(this, EventArgs.Empty);\n        // \u0625\u0646\u0634\u0627\u0621 Presenter \u0648\u062d\u0642\u0646 \u0627\u0644\u062e\u062f\u0645\u0629\n        var presenter = new LoginPresenter(this, new FakeAuthService());\n    }\n\n    public void SetBusy(bool on) =&gt; UseWaitCursor = on;\n\n    public void ShowMessage(string text, bool isError = false)\n        =&gt; MessageBox.Show(text, isError ? \"Error\" : \"Info\");\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0639\u0646\u062f \u0627\u0644\u0636\u063a\u0637 \u0639\u0644\u0649 Login\u060c \u064a\u0633\u062a\u062f\u0639\u064a Presenter \u062e\u062f\u0645\u0629 \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629. - \u064a\u0639\u0631\u0636 \u0631\u0633\u0627\u0644\u0629 \u0646\u062c\u0627\u062d/\u0641\u0634\u0644. \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0644\u0627 \u062a\u0639\u0631\u0641 \u0645\u0646\u0637\u0642 \u0627\u0644\u062a\u062d\u0642\u0642.</p>"},{"location":"terms/mvp/#mvp","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 MVP","text":"<ul> <li>\u0639\u0631\u0651\u0641 \u0648\u0627\u062c\u0647\u0627\u062a View (\u062e\u0635\u0627\u0626\u0635/\u0623\u062d\u062f\u0627\u062b/\u062f\u0648\u0627\u0644) \u0628\u062f\u0648\u0646 \u0623\u064a \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644.  </li> <li>\u0627\u0643\u062a\u0628 Presenter \u064a\u062d\u0642\u0646 \u062e\u062f\u0645\u0627\u062a/Model\u060c \u0648\u064a\u0633\u062a\u062c\u064a\u0628 \u0644\u0644\u0623\u062d\u062f\u0627\u062b\u060c \u0648\u064a\u062d\u062f\u062b \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0639\u0628\u0631 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 (Interface).  </li> <li>\u0627\u062e\u062a\u0628\u0631 Presenter \u0628\u0648\u062d\u062f\u0627\u062a \u0627\u062e\u062a\u0628\u0627\u0631 \u0639\u0628\u0631 View \u0645\u0632\u064a\u0641\u0629 (Mock/Fake).  </li> <li>\u0623\u0628\u0642\u0650 Code-Behind \u0631\u0642\u064a\u0642\u064b\u0627: \u062a\u0648\u062c\u064a\u0647 \u0623\u062d\u062f\u0627\u062b \u0641\u0642\u0637.  </li> <li>\u0644\u0644\u062a\u0632\u0627\u0645\u0646: \u0645\u0631\u0651\u0631 CancellationToken \u0648\u0631\u0627\u0639\u0650 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0639\u0646\u062f \u062a\u062d\u062f\u064a\u062b UI (Dispatcher/Invoke).</li> </ul>"},{"location":"terms/mvp/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>Fat View: \u0645\u0646\u0637\u0642 \u062f\u0627\u062e\u0644 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u062f\u0644 Presenter.  </li> <li>\u0631\u0628\u0637 Presenter \u0628\u062a\u0641\u0627\u0635\u064a\u0644 UI (\u0641\u0642\u062f\u0627\u0646 \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631).  </li> <li>\u0639\u062f\u0645 \u0641\u0635\u0644 Model/Service \u0639\u0646 Presenter \u2192 \u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u062a\u0628\u062f\u064a\u0644/\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u062a\u0633\u0631\u064a\u0628\u0627\u062a \u0623\u062d\u062f\u0627\u062b: \u0639\u062f\u0645 \u0625\u0644\u063a\u0627\u0621 \u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643 \u0639\u0646\u062f \u0627\u0644\u062a\u062e\u0644\u0635 (Dispose).  </li> <li>\u0645\u0646\u0637\u0642 Async \u062f\u0627\u062e\u0644 UI \u0628\u062f\u0648\u0646 \u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0633\u064a\u0627\u0642 \u2192 \u062a\u062c\u0645\u0651\u062f \u0627\u0644\u0648\u0627\u062c\u0647\u0629.</li> </ul>"},{"location":"terms/mvp/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 MVC \u0641\u0635\u0644 Controller/Model/View \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0648\u064a\u0628\u061b \u0627\u0644\u0645\u062a\u062d\u0643\u0651\u0645 \u064a\u0639\u0627\u0644\u062c \u0637\u0644\u0628\u0627\u062a HTTP MVP Presenter \u064a\u062f\u064a\u0631 \u0645\u0646\u0637\u0642 \u0627\u0644\u0639\u0631\u0636\u060c View \u0633\u0644\u0628\u064a\u0629 \u0648\u0627\u062c\u0647\u0627\u062a \u0648\u0623\u062d\u062f\u0627\u062b\u061b \u0627\u062e\u062a\u0628\u0627\u0631 Presenter \u0628\u0633\u0647\u0648\u0644\u0629 MVVM Binding \u0648Commands \u0639\u0628\u0631 ViewModel \u0645\u0645\u062a\u0627\u0632 \u0644\u0640 XAML/WPF/MAUI\u061b \u064a\u0642\u0644\u0651\u0644 \u0643\u0648\u062f \u0627\u0644\u0640 View"},{"location":"terms/mvp/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>MVP \u064a\u062c\u0639\u0644 \u0648\u0627\u062c\u0647\u062a\u0643 \u0631\u0642\u064a\u0642\u0629 \u0648\u0627\u0644\u0645\u064f\u0646\u0637\u0642 \u0641\u064a Presenter. \u0627\u062e\u062a\u0628\u0631 Presenter \u0628\u0633\u0647\u0648\u0644\u0629\u060c \u0648\u0627\u0628\u0642\u0650 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u201c\u063a\u0628\u064a\u0629\u201d \u062a\u0631\u0641\u0639 \u0623\u062d\u062f\u0627\u062b\u064b\u0627 \u0648\u062a\u0639\u0631\u0636 \u0646\u062a\u0627\u0626\u062c\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0646\u0638\u064a\u0641 \u0648\u0633\u0647\u0644 \u0627\u0644\u0635\u064a\u0627\u0646\u0629.</p>"},{"location":"terms/mvvm/","title":"MVVM \u2014 Model\u2013View\u2013ViewModel","text":""},{"location":"terms/mvvm/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Model\u2013View\u2013ViewModel (MVVM) \u2014 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u2013\u0627\u0644\u0639\u0631\u0636\u2013\u0639\u0627\u0631\u0636 \u0627\u0644\u0646\u0645\u0648\u0630\u062c</p>"},{"location":"terms/mvvm/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0645\u0637 \u0644\u0648\u0627\u062c\u0647\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 (XAML/\u0633\u0637\u062d \u0645\u0643\u062a\u0628/\u0645\u0648\u0628\u0627\u064a\u0644) \u064a\u0641\u0635\u0644: Model \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0642\u0648\u0627\u0639\u062f\u060c View \u0648\u0627\u062c\u0647\u0629 XAML \u0635\u0650\u0631\u0641\u0629\u060c ViewModel \u064a\u062d\u0648\u0651\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0644\u0623Bindings \u0648\u0623\u0648\u0627\u0645\u0631 Command.</p>"},{"location":"terms/mvvm/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>View: \u0644\u0627 \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644\u061b \u0641\u0642\u0637 XAML \u0648\u0631\u0628\u0637 \u0628\u064a\u0627\u0646\u0627\u062a Binding.  </li> <li>ViewModel: \u062e\u0635\u0627\u0626\u0635 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0625\u0634\u0639\u0627\u0631 INotifyPropertyChanged + \u0623\u0648\u0627\u0645\u0631 ICommand.  </li> <li>Model: \u0643\u0627\u0626\u0646\u0627\u062a \u0627\u0644\u0645\u062c\u0627\u0644 \u0648\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0648\u0627\u0644\u062a\u062d\u0642\u0642.  </li> <li>\u0627\u0644\u0641\u0627\u0626\u062f\u0629: UI \u0646\u0638\u064a\u0641\u060c \u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0633\u0647\u0644 (\u0627\u062e\u062a\u0628\u0627\u0631 ViewModel \u0628\u062f\u0648\u0646 \u0648\u0627\u062c\u0647\u0629)\u060c \u0642\u0627\u0628\u0644\u064a\u0629 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.</li> </ul>"},{"location":"terms/mvvm/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0644\u0645\u064f\u0639\u0644\u0651\u0645 (ViewModel) \u064a\u0634\u0631\u062d \u0627\u0644\u062f\u0631\u0633 \u0628\u0644\u063a\u0629 \u064a\u0641\u0647\u0645\u0647\u0627 \u0627\u0644\u062c\u0645\u0647\u0648\u0631 (Bindings \u0648\u0623\u0648\u0627\u0645\u0631). \u0627\u0644\u0643\u062a\u0627\u0628 \u0627\u0644\u0623\u0635\u0644\u064a (Model) \u0641\u064a\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u0627\u0644\u0639\u0644\u0645\u064a\u0629. \u0634\u0627\u0634\u0629 \u0627\u0644\u0639\u0631\u0636 (View) \u062a\u064f\u0638\u0647\u0631 \u0627\u0644\u0634\u0631\u062d \u0641\u0642\u0637.</p>"},{"location":"terms/mvvm/#wpfnet-binding-command","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0645\u062e\u062a\u0635\u0631 \u2014 WPF/.NET (Binding + Command)","text":""},{"location":"terms/mvvm/#1-viewmodel-inotifypropertychanged-icommand","title":"1) ViewModel: \u062e\u0627\u0635\u064a\u0629 + \u0623\u0645\u0631 (INotifyPropertyChanged / ICommand)","text":"C#<pre><code>// MainViewModel.cs\nusing System;\nusing System.ComponentModel;\nusing System.Runtime.CompilerServices;\nusing System.Windows.Input;\n\npublic class MainViewModel : INotifyPropertyChanged\n{\n    private int _count;\n    public int Count\n    {\n        get =&gt; _count;\n        set { if (_count == value) return; _count = value; OnPropertyChanged(); }\n    }\n\n    public ICommand IncrementCommand { get; }\n    public ICommand ResetCommand     { get; }\n\n    public MainViewModel()\n    {\n        IncrementCommand = new RelayCommand(_ =&gt; Count++);\n        ResetCommand     = new RelayCommand(_ =&gt; Count = 0, _ =&gt; Count &gt; 0); // CanExecute \u0645\u0631\u062a\u0628\u0637 \u0628\u0627\u0644\u062d\u0627\u0644\u0629\n    }\n\n    public event PropertyChangedEventHandler? PropertyChanged;\n    void OnPropertyChanged([CallerMemberName] string? name = null)\n        =&gt; PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));\n}\n\n// \u0623\u0645\u0631 \u0628\u0633\u064a\u0637 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0641\u064a \u0627\u0644\u0640 ViewModel\npublic class RelayCommand : ICommand\n{\n    private readonly Action&lt;object?&gt; _exec;\n    private readonly Predicate&lt;object?&gt;? _can;\n    public RelayCommand(Action&lt;object?&gt; exec, Predicate&lt;object?&gt;? can = null)\n        { _exec = exec; _can = can; }\n\n    public bool CanExecute(object? p) =&gt; _can?.Invoke(p) ?? true;\n    public void Execute(object? p) =&gt; _exec(p);\n    public event EventHandler? CanExecuteChanged;\n\n    // \u0646\u0627\u062f\u0649 \u0647\u0630\u0627 \u0639\u0646\u062f \u062a\u063a\u064a\u0651\u0631 \u0634\u0631\u0648\u0637 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 (\u0645\u062b\u0644\u0627\u064b \u0639\u0646\u062f \u062a\u063a\u064a\u064a\u0631 Count)\n    public void RaiseCanExecuteChanged() =&gt; CanExecuteChanged?.Invoke(this, EventArgs.Empty);\n}\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u0625\u0646 \u0623\u0631\u062f\u062a \u062a\u062d\u062f\u064a\u062b <code>CanExecute</code> \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0639\u0646\u062f \u062a\u063a\u064a\u0651\u0631 <code>Count</code>\u060c \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 <code>((RelayCommand)ResetCommand).RaiseCanExecuteChanged();</code> \u062f\u0627\u062e\u0644 Setter \u0627\u0644\u062e\u0627\u0635 \u0628\u0640 <code>Count</code>.</p>"},{"location":"terms/mvvm/#2-view-xaml","title":"2) View: XAML \u064a\u0631\u0628\u0637 \u0627\u0644\u062e\u0635\u0627\u0626\u0635 \u0648\u0627\u0644\u0623\u0648\u0627\u0645\u0631","text":"XML<pre><code>&lt;!-- MainWindow.xaml --&gt;\n&lt;Window x:Class=\"Demo.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"MVVM Demo\" Width=\"300\" Height=\"160\"&gt;\n    &lt;Grid Margin=\"16\" RowDefinitions=\"Auto,Auto,Auto\" RowSpacing=\"8\"&gt;\n        &lt;TextBlock Text=\"Counter:\" FontWeight=\"Bold\"/&gt;\n        &lt;TextBlock Grid.Row=\"1\" Text=\"{Binding Count}\" FontSize=\"28\"/&gt;\n\n        &lt;StackPanel Grid.Row=\"2\" Orientation=\"Horizontal\" HorizontalAlignment=\"Left\" Spacing=\"8\"&gt;\n            &lt;Button Content=\"+1\"   Command=\"{Binding IncrementCommand}\" Width=\"60\"/&gt;\n            &lt;Button Content=\"Reset\" Command=\"{Binding ResetCommand}\"   Width=\"60\"/&gt;\n        &lt;/StackPanel&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;\n</code></pre>"},{"location":"terms/mvvm/#3-viewmodel-view","title":"3) \u0631\u0628\u0637 \u0627\u0644\u0640 ViewModel \u0628\u0627\u0644\u0640 View (\u0645\u0631\u0629 \u0648\u0627\u062d\u062f\u0629)","text":"C#<pre><code>// MainWindow.xaml.cs\nusing System.Windows;\n\nnamespace Demo\n{\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n            DataContext = new MainViewModel(); // \u0631\u0628\u0637 \u0645\u0635\u062f\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0627\u0644\u0646\u0627\u0641\u0630\u0629\n        }\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): \u0646\u0627\u0641\u0630\u0629 \u0628\u0647\u0627 \u0639\u062f\u0651\u0627\u062f. \u0632\u0631 +1 \u064a\u0632\u064a\u062f \u0627\u0644\u0642\u064a\u0645\u0629. Reset \u064a\u0639\u0648\u062f \u0644\u0644\u0635\u0641\u0631 \u0648\u064a\u062a\u0639\u0637\u0651\u0644 \u0639\u0646\u062f\u0645\u0627 \u062a\u0643\u0648\u0646 \u0627\u0644\u0642\u064a\u0645\u0629 0.</p> <p>\u0628\u062f\u064a\u0644 \u062c\u0627\u0647\u0632: \u062d\u0632\u0645\u0629 CommunityToolkit.Mvvm \u062a\u062e\u062a\u0635\u0631 <code>INotifyPropertyChanged</code> \u0648<code>RelayCommand</code> \u0628\u0633\u0645\u0627\u062a \u062a\u0644\u0642\u0627\u0626\u064a\u0629.</p>"},{"location":"terms/mvvm/#mvvm","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 MVVM","text":"<ul> <li>\u0639\u0631\u0651\u0641 Model \u0646\u0638\u064a\u0641\u064b\u0627 \u0628\u0644\u0627 \u0631\u0628\u0637 \u0648\u0627\u062c\u0647\u0629.  </li> <li>\u0623\u0646\u0634\u0626 ViewModel: \u062e\u0635\u0627\u0626\u0635 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0625\u0634\u0639\u0627\u0631 + \u0623\u0648\u0627\u0645\u0631 ICommand + \u0645\u0646\u0637\u0642 \u0627\u0644\u0639\u0631\u0636 (\u0644\u0627 \u0645\u0646\u0637\u0642 \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u062b\u0642\u064a\u0644).  </li> <li>\u0627\u0631\u0628\u0637 DataContext \u0644\u0644\u0639\u0631\u0636. \u0627\u0633\u062a\u062e\u062f\u0645 Binding \u0648Converters \u0648DataTemplates.  </li> <li>\u0627\u0639\u0632\u0644 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u064a \u062e\u062f\u0645\u0627\u062a \u062a\u064f\u062d\u0642\u0646 \u062f\u0627\u062e\u0644 ViewModel (Dependency Injection).  </li> <li>\u0627\u062e\u062a\u0628\u0631 ViewModel \u0628\u0648\u062d\u062f\u0627\u062a \u0627\u062e\u062a\u0628\u0627\u0631 (\u0628\u062f\u0648\u0646 UI).  </li> <li>\u0644\u0644\u062a\u062d\u0645\u064a\u0644\u0627\u062a \u0627\u0644\u0637\u0648\u064a\u0644\u0629: \u0627\u0633\u062a\u062e\u062f\u0645 async/await \u0648CancellationToken \u0648\u0631\u0628\u0637 IsBusy \u0644\u062a\u0639\u0637\u064a\u0644 \u0627\u0644\u0623\u0632\u0631\u0627\u0631.  </li> <li>\u0646\u0638\u0651\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639: <code>Models/ ViewModels/ Views/ Services</code>.</li> </ul>"},{"location":"terms/mvvm/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0643\u062a\u0627\u0628\u0629 \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u0641\u064a Code-Behind \u0644\u0644\u0639\u0631\u0636 \u0628\u062f\u0644 ViewModel.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 PropertyChanged \u2192 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0644\u0627 \u062a\u062a\u062d\u062f\u062b.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 List \u0628\u062f\u0644 ObservableCollection \u0644\u0642\u0648\u0627\u0626\u0645 \u0645\u0631\u0628\u0648\u0637\u0629 (\u0644\u0627 \u062a\u0631\u0633\u0644 \u0625\u0634\u0639\u0627\u0631\u0627\u062a \u062a\u063a\u064a\u0651\u0631).   <li>\u0623\u0648\u0627\u0645\u0631 ICommand \u0628\u0644\u0627 CanExecute \u0623\u0648 \u0628\u0644\u0627 \u062a\u0639\u0637\u064a\u0644 \u0648\u0627\u062c\u0647\u0629 \u0639\u0646\u062f \u0627\u0644\u0627\u0646\u0634\u063a\u0627\u0644.  </li> <li>\u0631\u0628\u0637 \u0645\u0639\u0642\u0651\u062f \u062c\u062f\u064b\u0627 \u0641\u064a XAML \u0628\u062f\u0644 \u062a\u062d\u0636\u064a\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062f\u0627\u062e\u0644 ViewModel (\u062a\u0628\u0633\u064a\u0637 \u0627\u0644\u0640 View).</li>"},{"location":"terms/mvvm/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 MVC \u0641\u0635\u0644 Controller/Model/View \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0648\u064a\u0628 \u0627\u0644\u0645\u062a\u062d\u0643\u0651\u0645 \u064a\u0646\u0633\u0651\u0642 \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 MVVM Binding \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 + \u0623\u0648\u0627\u0645\u0631 \u0639\u0628\u0631 ViewModel INotifyPropertyChanged/ICommand\u061b \u0645\u062b\u0627\u0644\u064a \u0644\u0640 WPF/MAUI/WinUI MVP Presenter \u064a\u0646\u0633\u0651\u0642 View \u201c\u063a\u0628\u064a\u064b\u0627\u201d \u0631\u0628\u0637 \u0623\u0642\u0644 \u0622\u0644\u064a\u0651\u0629 \u0645\u0646 MVVM\u061b \u0645\u0646\u0627\u0633\u0628 \u0644\u0628\u0639\u0636 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a"},{"location":"terms/mvvm/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>MVVM \u064a\u0641\u0635\u0644 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0639\u0646 \u0627\u0644\u0645\u0646\u0637\u0642 \u0639\u0628\u0631 ViewModel \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0645\u0639 Binding \u0648Commands \u062a\u0642\u0644\u0651\u0644\u0627\u0646 \u0643\u0648\u062f \u0627\u0644\u0648\u0627\u062c\u0647\u0629. \u062d\u0627\u0641\u0638 \u0639\u0644\u0649 View \u201c\u0631\u0642\u064a\u0642\u0629\u201d\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 <code>INotifyPropertyChanged</code>/<code>ObservableCollection</code> \u0648\u0639\u0645\u0644\u064a\u0627\u062a async \u0644\u062a\u062c\u0631\u0628\u0629 \u0633\u0644\u0633\u0629.</p>"},{"location":"terms/n-tier/","title":"N-Tier","text":""},{"location":"terms/n-tier/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>N-Tier Architecture \u2014 \u0628\u0646\u064a\u0629 \u0646\u0634\u0631 \u0645\u062a\u0639\u062f\u062f\u0629 \u0627\u0644\u0637\u0628\u0642\u0627\u062a (\u0623\u0643\u062b\u0631 \u0645\u0646 3 \u0637\u0628\u0642\u0627\u062a \u0634\u0628\u0643\u064a\u0629 \u0645\u0646\u0641\u0635\u0644\u0629).</p>"},{"location":"terms/n-tier/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0646\u0638\u0627\u0645 \u0625\u0644\u0649 \u0639\u062f\u0629 \u0637\u0628\u0642\u0627\u062a \u0646\u0634\u0631 \u0645\u0633\u062a\u0642\u0644\u0629 (Web/BFF\u060c API Gateway\u060c \u062e\u062f\u0645\u0627\u062a \u0623\u0639\u0645\u0627\u0644\u060c \u062a\u0643\u0627\u0645\u0644\u0627\u062a\u060c \u0628\u064a\u0627\u0646\u0627\u062a\u060c Cache\u060c Queue\u2026). \u0627\u0644\u0647\u062f\u0641: \u0639\u0632\u0644 \u0623\u0645\u0646\u064a\u060c \u062a\u062d\u062c\u064a\u0645 \u0645\u0633\u062a\u0642\u0644\u060c \u0648\u0645\u0644\u0643\u064a\u0629 \u0648\u0627\u0636\u062d\u0629 \u0644\u0643\u0644 \u0637\u0628\u0642\u0629\u060c \u0645\u0639 \u062a\u0648\u0627\u0635\u0644 \u0639\u0628\u0631 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0634\u0628\u0643\u064a (HTTP/gRPC/\u0631\u0633\u0627\u0626\u0644).</p>"},{"location":"terms/n-tier/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0647\u064a \u062a\u0639\u0645\u064a\u0645 \u0644\u0640 3-Tier: \u0628\u062f\u0644 (Web\u2194App\u2194DB) \u0641\u0642\u0637\u060c \u0646\u0636\u064a\u0641 \u0637\u0628\u0642\u0627\u062a \u0645\u062b\u0644 API Gateway\u060c BFF\u060c Cache\u060c Message Broker\u060c Analytics.  </li> <li>\u0643\u0644 \u0637\u0628\u0642\u0629 \u062a\u0639\u0645\u0644 \u0641\u064a \u0639\u0645\u0644\u064a\u0629/\u062e\u0627\u062f\u0645/\u0634\u0628\u0643\u0629 \u0645\u062e\u062a\u0644\u0641\u0629\u060c \u0648\u062a\u062a\u0648\u0627\u0635\u0644 \u0639\u0628\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u0631\u0633\u0645\u064a\u0629 \u0645\u0648\u062b\u0651\u0642\u0629.  </li> <li>\u064a\u0633\u0645\u062d \u0628\u062a\u0637\u0628\u064a\u0642 \u0633\u064a\u0627\u0633\u0627\u062a \u0623\u0645\u0627\u0646\u060c \u0645\u0631\u0627\u0642\u0628\u0629\u060c \u0648\u062a\u062d\u062c\u064a\u0645 \u0644\u0643\u0644 \u0637\u0628\u0642\u0629 \u0639\u0644\u0649 \u062d\u062f\u0629.</li> </ul>"},{"location":"terms/n-tier/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0637\u0627\u0631 \u0643\u0628\u064a\u0631 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0645\u0631\u0627\u062d\u0644: \u0628\u0648\u0627\u0628\u0627\u062a \u062f\u062e\u0648\u0644 (Gateway)\u060c \u0646\u0642\u0627\u0637 \u062a\u0641\u062a\u064a\u0634 (Security)\u060c \u0635\u0627\u0644\u0627\u062a \u062a\u0631\u0627\u0646\u0632\u064a\u062a (BFF)\u060c \u062e\u062f\u0645\u0627\u062a \u0623\u0631\u0636\u064a\u0629 (\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0623\u0639\u0645\u0627\u0644)\u060c \u0645\u062e\u0627\u0632\u0646 (DB/Cache)\u060c \u0648\u062e\u0637\u0648\u0637 \u0634\u062d\u0646 (Queue). \u0643\u0644 \u0645\u0631\u062d\u0644\u0629 \u0645\u0646\u0641\u0635\u0644\u0629 \u0648\u0645\u0633\u0624\u0648\u0644\u0629 \u0639\u0646 \u062c\u0632\u0621 \u0645\u062d\u062f\u0651\u062f.</p>"},{"location":"terms/n-tier/#c-n-tier-gateway-yarp-orders-api-redis-cache-db","title":"\u0645\u062b\u0627\u0644 \u0645\u062e\u062a\u0635\u0631 (C#) \u2014 N-Tier \u0628\u0633\u064a\u0637: Gateway (YARP) \u2192 Orders API \u2192 Redis Cache \u2192 DB","text":"<p>\u0627\u0644\u0641\u0643\u0631\u0629: 1) API Gateway \u064a\u0648\u062c\u0651\u0647 \u0627\u0644\u0637\u0644\u0628\u0627\u062a \u0644\u0637\u0628\u0642\u0627\u062a \u062f\u0627\u062e\u0644\u064a\u0629. 2) Orders API \u064a\u062e\u062f\u0645 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0648\u064a\u0642\u0631\u0623 \u0645\u0646 Redis (\u0637\u0628\u0642\u0629 Cache) \u0642\u0628\u0644 DB (\u0637\u0628\u0642\u0629 \u0628\u064a\u0627\u0646\u0627\u062a).</p>"},{"location":"terms/n-tier/#1-api-gateway-yarp","title":"(1) API Gateway (YARP)","text":"C#<pre><code>// Gateway/Program.cs  (.NET 8/9)\n// dotnet add package Yarp.ReverseProxy\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddReverseProxy().LoadFromMemory(\n    new() { // Routes\n        new(\"orders-route\",      \"/orders/{**catch-all}\", \"orders-cluster\"),\n        new(\"catalog-route\",     \"/catalog/{**catch-all}\", \"catalog-cluster\")\n    },\n    new() { // Clusters (\u062e\u062f\u0645\u0627\u062a \u062f\u0627\u062e\u0644 \u0627\u0644\u0634\u0628\u0643\u0629 \u0627\u0644\u062e\u0627\u0635\u0629)\n        new(\"orders-cluster\",  new[] { \"http://orders-api\" }),\n        new(\"catalog-cluster\", new[] { \"http://catalog-api\" })\n    });\nvar app = builder.Build();\napp.MapReverseProxy();\napp.Run();\n</code></pre>"},{"location":"terms/n-tier/#2-orders-api-cache","title":"(2) Orders API (\u0637\u0628\u0642\u0629 \u062e\u062f\u0645\u0627\u062a \u0627\u0644\u0623\u0639\u0645\u0627\u0644 + Cache \u0637\u0628\u0642\u064a)","text":"C#<pre><code>// OrdersApi/Program.cs  (.NET 8/9)\n// dotnet add package StackExchange.Redis\n// dotnet add package Dapper  (\u0627\u062e\u062a\u064a\u0627\u0631\u064a)\nusing StackExchange.Redis;\nusing Microsoft.AspNetCore.Mvc;\nusing System.Text.Json;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddSingleton&lt;IConnectionMultiplexer&gt;(\n    _ =&gt; ConnectionMultiplexer.Connect(Environment.GetEnvironmentVariable(\"REDIS\") ?? \"redis:6379\"));\n\nbuilder.Services.AddScoped&lt;IDbConnection&gt;(_ =&gt;\n    new Microsoft.Data.SqlClient.SqlConnection(Environment.GetEnvironmentVariable(\"DB_CONN\")!));\n\nvar app = builder.Build();\n\napp.MapGet(\"/orders/{id:int}\", async (int id, IConnectionMultiplexer mux, IDbConnection db) =&gt;\n{\n    var cache = mux.GetDatabase();\n    var key = $\"order:{id}\";\n    var cached = await cache.StringGetAsync(key);\n    if (cached.HasValue) return Results.Ok(JsonSerializer.Deserialize&lt;object&gt;(cached!));\n\n    // \u062a\u0628\u0633\u064a\u0637: \u0646\u0645\u0648\u0630\u062c \u0642\u0631\u0627\u0621\u0629 (\u0627\u0633\u062a\u0628\u062f\u0644 \u0628\u0640 Dapper/EF \u062d\u0633\u0628 \u0627\u0644\u062d\u0627\u062c\u0629)\n    await db.OpenAsync();\n    using var cmd = db.CreateCommand();\n    cmd.CommandText = \"SELECT Id, Customer, Total FROM Orders WHERE Id=@id\";\n    var p = cmd.CreateParameter(); p.ParameterName=\"@id\"; p.Value=id; cmd.Parameters.Add(p);\n    using var r = await cmd.ExecuteReaderAsync();\n    if (!await r.ReadAsync()) return Results.NotFound();\n\n    var dto = new { Id = r.GetInt32(0), Customer = r.GetString(1), Total = r.GetDecimal(2) };\n\n    await cache.StringSetAsync(key, JsonSerializer.Serialize(dto), TimeSpan.FromMinutes(5));\n    return Results.Ok(dto);\n});\n\napp.Run();\n</code></pre> <p>\u0641\u064a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u062a\u064f\u0646\u0634\u0631 \u0647\u0630\u0647 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0641\u064a \u0634\u0628\u0643\u0627\u062a \u0641\u0631\u0639\u064a\u0629 \u0645\u062e\u062a\u0644\u0641\u0629 \u0645\u0639 \u0633\u064a\u0627\u0633\u0627\u062a \u062c\u062f\u0627\u0631 \u0646\u0627\u0631\u064a\u060c \u0648\u064a\u0648\u0641\u0651\u064e\u0631 DNS \u062f\u0627\u062e\u0644\u064a \u0644\u0644\u0623\u0633\u0645\u0627\u0621 (<code>orders-api</code>, <code>catalog-api</code>, <code>redis</code>, <code>db</code>).</p>"},{"location":"terms/n-tier/#n-tier_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 N-Tier \u0633\u0644\u064a\u0645","text":"<ol> <li>\u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629: \u0639\u0631\u0651\u0641 \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0643\u0644 \u0637\u0628\u0642\u0629 (Gateway\u060c BFF\u060c Services\u060c Data\u060c Cache\u060c Queue\u2026).  </li> <li>\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0648\u0639\u0642\u0648\u062f: \u0648\u062b\u0651\u0642 \u0648\u0627\u062c\u0647\u0627\u062a \u0627\u0644\u0637\u0628\u0642\u0627\u062a (OpenAPI/gRPC/Events) \u0645\u0639 \u0646\u0633\u062e \u0648\u0625\u062f\u0627\u0631\u0629 \u062a\u063a\u064a\u0651\u0631.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646 \u0627\u0644\u0634\u0628\u0643\u064a: \u062a\u0642\u0633\u064a\u0645 \u0634\u0628\u0643\u064a (VNet/Subnets)\u060c \u062c\u062f\u0631 \u0646\u0627\u0631\u064a\u0629\u060c mTLS/JWT \u0628\u064a\u0646 \u0627\u0644\u0637\u0628\u0642\u0627\u062a\u060c \u0625\u062f\u0627\u0631\u0629 \u0623\u0633\u0631\u0627\u0631 (Vault).  </li> <li>\u0627\u0644\u062a\u062d\u062c\u064a\u0645 \u0648\u0627\u0644\u0627\u0633\u062a\u064a\u0639\u0627\u0628: \u0627\u0636\u0628\u0637 Autoscale \u0644\u0643\u0644 \u0637\u0628\u0642\u0629 \u062d\u0633\u0628 \u062e\u0635\u0627\u0626\u0635\u0647\u0627 (Web I/O\u060c Services CPU\u060c DB IOPS).  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u062a\u062a\u0628\u0651\u0639: Logs/Metrics/Tracing \u0639\u0628\u0631 \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0645\u0639 Correlation-Id \u0645\u0646 \u0627\u0644\u0628\u0648\u0627\u0628\u0629.  </li> <li>\u0627\u0644\u0645\u0631\u0648\u0646\u0629: Circuit Breaker\u060c Retry/Backoff\u060c Timeout \u0644\u0643\u0644 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0628\u064a\u0646\u064a.  </li> <li>\u0627\u0644\u062a\u0648\u0632\u064a\u0639: CI/CD \u0644\u0643\u0644 \u0637\u0628\u0642\u0629\u060c \u0646\u0634\u0631 \u062a\u062f\u0631\u064a\u062c\u064a (Blue/Green/Canary)\u060c \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0639\u0642\u062f (Contract Tests).  </li> <li>\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a: \u0627\u062e\u062a\u064e\u0631 \u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u0648\u0635\u0648\u0644 (CQRS/Cache-Aside)\u060c \u0648\u0642\u064a\u0648\u062f \u0627\u0644\u062d\u0648\u0643\u0645\u0629 \u0648\u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0644\u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.</li> </ol>"},{"location":"terms/n-tier/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062a\u0641\u062a\u064a\u062a \u0627\u0644\u0645\u0641\u0631\u0637 (\u0637\u0628\u0642\u0627\u062a \u0643\u062b\u064a\u0631\u0629 \u0628\u0644\u0627 \u0642\u064a\u0645\u0629) \u2192 \u062a\u0634\u0627\u0628\u0643 \u0634\u0628\u0643\u064a \u0648\u0632\u0645\u0646 \u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0623\u0639\u0644\u0649.  </li> <li>\u0642\u0646\u0648\u0627\u062a \u063a\u064a\u0631 \u0622\u0645\u0646\u0629 \u0628\u064a\u0646 \u0627\u0644\u0637\u0628\u0642\u0627\u062a (\u0628\u062f\u0648\u0646 TLS \u0623\u0648 \u0647\u0648\u064a\u0629).  </li> <li>\u062a\u0634\u0627\u0628\u0643 \u0639\u0642\u0648\u062f: \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0637\u0628\u0642\u0629 \u062a\u0643\u0633\u0631 \u0623\u062e\u0631\u0649 \u0644\u063a\u064a\u0627\u0628 \u0627\u0644\u0646\u0633\u062e/\u0627\u0644\u062a\u0648\u0627\u0641\u0642.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0627\u0644\u0637\u0631\u0641\u064a\u0629-\u0625\u0644\u0649-\u0627\u0644\u0637\u0631\u0641\u064a\u0629 \u2192 \u0635\u0639\u0648\u0628\u0629 \u062a\u062a\u0628\u0651\u0639 \u0627\u0644\u0623\u0639\u0637\u0627\u0644 \u0639\u0628\u0631 \u0627\u0644\u0637\u0628\u0642\u0627\u062a.  </li> <li>\u0628\u0648\u0627\u0628\u0629 \u0628\u0644\u0627 \u062d\u062f\u0648\u062f \u0645\u0639\u062f\u0644/\u062d\u0645\u0627\u064a\u0629 (DoS/Abuse).  </li> <li>\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0645\u062a\u0633\u0644\u0633\u0644\u0629 \u0628\u0644\u0627 \u062a\u062c\u0645\u064a\u0639/\u062a\u0648\u0627\u0632\u064a \u2192 N+1 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0629.</li> </ul>"},{"location":"terms/n-tier/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 N-Tier \u0641\u0635\u0644 \u0646\u0634\u0631 \u0639\u0628\u0631 \u0623\u0643\u062b\u0631 \u0645\u0646 \u062b\u0644\u0627\u062b \u0637\u0628\u0642\u0627\u062a Gateway/BFF/Services/Data/Cache/Queue\u2026 \u0628\u062a\u062d\u062c\u064a\u0645 \u0648\u0623\u0645\u0646 \u0645\u0633\u062a\u0642\u0644 3-Tier Web \u2194 App \u2194 Data \u0623\u0628\u0633\u0637 \u062a\u0646\u0638\u064a\u0645\u064b\u0627\u061b \u0646\u0642\u0637\u0629 \u0627\u0646\u0637\u0644\u0627\u0642 \u0634\u0627\u0626\u0639\u0629 Tier \u0641\u0635\u0644 \u0641\u064a\u0632\u064a\u0627\u0626\u064a/\u0634\u0628\u0643\u064a \u0639\u0627\u0645 \u0642\u062f \u064a\u0643\u0648\u0646 2/3/N \u062d\u0633\u0628 \u0627\u0644\u062d\u0627\u062c\u0629 Layer \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u0643\u0648\u062f \u062f\u0627\u062e\u0644\u064a\u064b\u0627 \u0644\u0627 \u064a\u0641\u0631\u0636 \u0641\u0635\u0644 \u0646\u0634\u0631 Microservices \u062a\u0641\u062a\u064a\u062a App-Tier \u0644\u062e\u062f\u0645\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0651\u0629 \u0642\u062f \u062a\u064f\u0646\u0634\u0631 \u0636\u0645\u0646 N-Tier \u062a\u062d\u062a Gateway"},{"location":"terms/n-tier/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>N-Tier \u064a\u0648\u0632\u0651\u0639 \u0646\u0638\u0627\u0645\u0643 \u0639\u0644\u0649 \u0639\u062f\u0651\u0629 \u0637\u0628\u0642\u0627\u062a \u0646\u0634\u0631 \u0628\u062d\u062f\u0648\u062f \u0623\u0645\u0627\u0646 \u0648\u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629. \u0636\u0639 Gateway/BFF \u0623\u0645\u0627\u0645\u064a\u060c \u062e\u062f\u0645\u0627\u062a \u0623\u0639\u0645\u0627\u0644 \u0648\u0633\u0637\u064a\u0629\u060c \u0648\u0637\u0628\u0642\u0627\u062a \u0628\u064a\u0627\u0646\u0627\u062a/Cache/Queue \u062e\u0644\u0641\u064a\u0629\u060c \u0648\u0623\u0645\u0651\u0646 \u0627\u0644\u0642\u0646\u0648\u0627\u062a \u0648\u0631\u0627\u0642\u0628 \u0627\u0644\u062a\u062f\u0641\u0651\u0642\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0628\u0646\u064a\u0629 \u0645\u0631\u0646\u0629\u060c \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0648\u0633\u0651\u0639\u060c \u0648\u0633\u0647\u0644\u0629 \u0627\u0644\u062d\u0648\u0643\u0645\u0629. </p>"},{"location":"terms/null-coalescing-operator/","title":"Null-Coalescing Operator","text":""},{"location":"terms/null-coalescing-operator/#_1","title":"\u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u062f\u0645\u062c \u0639\u0646\u062f \u0627\u0646\u0639\u062f\u0627\u0645 \u0627\u0644\u0642\u064a\u0645\u0629 (<code>??</code>, <code>??=</code>)","text":""},{"location":"terms/null-coalescing-operator/#_2","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Null-Coalescing Operator (<code>??</code>, <code>??=</code>) \u2014 \u0645\u0639\u0627\u0645\u0644 \u0625\u0631\u062c\u0627\u0639 \u0642\u064a\u0645\u0629 \u0628\u062f\u064a\u0644\u0629 \u0639\u0646\u062f <code>null</code> (\u0648\u0645\u0639\u0627\u0645\u0644\u0629 \u0625\u0633\u0646\u0627\u062f \u0639\u0646\u062f <code>null</code>).</p>"},{"location":"terms/null-coalescing-operator/#_3","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p><code>??</code> \u064a\u064f\u0639\u064a\u062f \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u064a\u0633\u0631 \u0625\u0630\u0627 \u0644\u0645 \u064a\u0643\u0646 null\u060c \u0648\u0625\u0644\u0651\u0627 \u064a\u064f\u0639\u064a\u062f \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u064a\u0645\u0646 (\u0642\u064a\u0645\u0629 \u0628\u062f\u064a\u0644\u0629). <code>??=</code> \u064a\u064f\u0633\u0646\u062f \u0642\u064a\u0645\u0629\u064b \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0644\u0644\u0645\u062a\u063a\u064a\u0651\u0631 \u0641\u0642\u0637 \u0625\u0630\u0627 \u0643\u0627\u0646 null.</p>"},{"location":"terms/null-coalescing-operator/#_4","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u062f\u064a\u0643 \u062e\u064a\u0627\u0631\u0627\u0646: \u0642\u064a\u0645\u0629 \u0623\u0633\u0627\u0633\u064a\u0629 \u0648\u0642\u062f \u062a\u0643\u0648\u0646 <code>null</code>\u060c \u0648\u0642\u064a\u0645\u0629 \u0627\u062d\u062a\u064a\u0627\u0637\u064a\u0629.  </li> <li>\u0625\u0646 \u0643\u0627\u0646\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0645\u0648\u062c\u0648\u062f\u0629 \u2192 \u0646\u0623\u062e\u0630\u0647\u0627\u061b \u0625\u0646 \u0643\u0627\u0646\u062a \u0645\u0641\u0642\u0648\u062f\u0629 (<code>null</code>) \u2192 \u0646\u0623\u062e\u0630 \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637.  </li> <li>\u0644\u0627 \u064a\u064f\u0642\u064a\u0651\u064e\u0645 \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u064a\u0645\u0646 \u0625\u0630\u0627 \u0643\u0627\u0646 \u0627\u0644\u0623\u064a\u0633\u0631 \u063a\u064a\u0631 <code>null</code> (Short-circuit).  </li> <li>\u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0640 Defaults \u0648\u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0648\u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a \u0627\u0644\u0622\u0645\u0646\u0629.</li> </ul>"},{"location":"terms/null-coalescing-operator/#_5","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0632\u0631\u0651\u0627\u0646 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0645\u0635\u0628\u0627\u062d: \u0627\u0644\u0623\u0648\u0651\u0644 (\u0627\u0644\u0645\u0635\u062f\u0631 \u0627\u0644\u0623\u0633\u0627\u0633\u064a) \u0648\u0627\u0644\u062b\u0627\u0646\u064a \u0627\u062d\u062a\u064a\u0627\u0637. \u0625\u0630\u0627 \u0643\u0627\u0646 \u0627\u0644\u0623\u0648\u0651\u0644 \u064a\u0639\u0645\u0644\u060c \u0644\u0627 \u062d\u0627\u062c\u0629 \u0644\u0644\u062b\u0627\u0646\u064a. \u0625\u0630\u0627 \u062a\u0639\u0637\u0644 \u0627\u0644\u0623\u0648\u0651\u0644\u060c \u0646\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637 \u0641\u0648\u0631\u064b\u0627.</p>"},{"location":"terms/null-coalescing-operator/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637","text":"<p>C#<pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        string? name = null;\n\n        // 1) ?? \u0642\u064a\u0645\u0629 \u0628\u062f\u064a\u0644\u0629 \u0639\u0646\u062f\u0645\u0627 \u062a\u0643\u0648\u0646 \u0627\u0644\u0642\u064a\u0645\u0629 null\n        string displayName = name ?? \"Guest\";\n        Console.WriteLine(displayName); // Guest\n\n        // 2) ?? \u0645\u0639 \u0623\u0646\u0648\u0627\u0639 Nullable\n        int? maybeCount = null;\n        int count = maybeCount ?? 0; // \u064a\u0639\u064a\u062f 0 \u0625\u0646 \u0643\u0627\u0646\u062a maybeCount = null\n\n        // 3) \u0627\u0644\u062f\u0645\u062c \u0645\u0639 \u0627\u0644\u0645\u0634\u063a\u0651\u0644 \u0627\u0644\u0634\u0631\u0637\u064a-\u0627\u0644\u0622\u0645\u0646 ?. \u0644\u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0633\u0644\u0627\u0633\u0644\n        string?[]? items = null;\n        int length = items?.Length ?? 0; // \u0625\u0646 \u0643\u0627\u0646\u062a items null \u064a\u0639\u064a\u062f 0\n\n        // 4) ??= \u0625\u0633\u0646\u0627\u062f \u0639\u0646\u062f null (\u062a\u0647\u064a\u0626\u0629 \u0643\u0633\u0648\u0644\u0629)\n        TimeSpan? timeout = null;\n        timeout ??= TimeSpan.FromSeconds(30); // \u062a\u064f\u0633\u0646\u062f 30 \u062b\u0627\u0646\u064a\u0629 \u0641\u0642\u0637 \u0625\u0630\u0627 \u0643\u0627\u0646\u062a null\n        Console.WriteLine(timeout);           // 00:00:30\n\n        // 5) ?? \u0645\u0639 \u062a\u0639\u0628\u064a\u0631 throw (\u062d\u0631\u0627\u0633\u0629)\n        string? conn = null;\n        string normalized = (conn ?? throw new InvalidOperationException(\"Connection is required\"))\n                            .Trim();\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: - \u064a\u0637\u0628\u0639 <code>Guest</code>\u060c \u062b\u0645 <code>00:00:30</code>. - \u0625\u0630\u0627 \u0643\u0627\u0646\u062a <code>conn</code> \u0641\u0627\u0631\u063a\u0629\u060c \u064a\u064f\u0631\u0645\u0649 \u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u0628\u0648\u0636\u0648\u062d (\u062d\u0631\u0627\u0633\u0629 \u0645\u0628\u0643\u0631\u0629).</p>"},{"location":"terms/null-coalescing-operator/#_6","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>??</code> \u0644\u0625\u0639\u0637\u0627\u0621 \u0642\u064a\u0645\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0622\u0645\u0646\u0629 \u0639\u0646\u062f \u0642\u0631\u0627\u0621\u0629 \u0645\u062f\u062e\u0644\u0627\u062a/\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0642\u062f \u062a\u0643\u0648\u0646 <code>null</code>.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>??=</code> \u0644\u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u062d\u0642\u0648\u0644/\u0627\u0644\u062e\u0635\u0627\u0626\u0635 \u0645\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 (Lazy init).  </li> <li>\u0627\u062f\u0645\u062c\u0647 \u0645\u0639 <code>?.</code> \u0644\u062a\u0642\u0635\u064a\u0631 \u062d\u0631\u0627\u0633\u0629 \u0627\u0644\u0633\u0644\u0627\u0633\u0644: <code>user?.Address?.City ?? \"N/A\"</code>.  </li> <li>\u0623\u0636\u0650\u0641 \u0623\u0642\u0648\u0627\u0633\u064b\u0627 \u0639\u0646\u062f \u0645\u0632\u062c\u0647 \u0645\u0639 \u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0623\u062e\u0631\u0649 \u0644\u062a\u0648\u0636\u064a\u062d \u0627\u0644\u0642\u0631\u0627\u0621\u0629.  </li> <li>\u0641\u064a \u0646\u0645\u0627\u0630\u062c \u0627\u0644\u0640 API: \u0637\u0628\u0651\u0642 \u0642\u064a\u0645\u064b\u0627 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0642\u0628\u0644 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0623\u0648 \u0627\u0644\u062a\u062d\u0642\u0642.</li> </ul>"},{"location":"terms/null-coalescing-operator/#_7","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0646\u0633\u064a\u0627\u0646 \u0623\u0646 <code>??</code> \u064a\u0639\u064a\u062f \u0642\u064a\u0645\u0629 (\u062a\u0639\u0628\u064a\u0631)\u060c \u0648\u0644\u064a\u0633 \u0628\u062f\u064a\u0644\u064b\u0627 \u0639\u0646 \u0645\u0646\u0637\u0642 <code>if</code> \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u062e\u0637\u0648\u0627\u062a.  </li> <li>\u062a\u0631\u0643 \u0622\u062b\u0627\u0631 \u062c\u0627\u0646\u0628\u064a\u0629 \u0641\u064a \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u064a\u0645\u0646 \u0642\u062f \u0644\u0627 \u062a\u064f\u0646\u0641\u0651\u064e\u0630 \u062f\u0627\u0626\u0645\u064b\u0627 (\u0628\u0633\u0628\u0628 Short-circuit).  </li> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646\u0647 \u0648\u0628\u064a\u0646 \u0627\u0644\u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u062b\u0644\u0627\u062b\u064a: <code>x ?? y</code> \u0644\u064a\u0633 \u0645\u062b\u0644 \u0634\u0631\u0648\u0637 \u0645\u0631\u0643\u0651\u0628\u0629\u061b \u0647\u0648 \u0641\u0642\u0637 \u0644\u0641\u062d\u0635 <code>null</code>.</li> </ul>"},{"location":"terms/null-coalescing-operator/#_8","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Ternary Operator \u0627\u062e\u062a\u064a\u0627\u0631 \u0642\u064a\u0645\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0634\u0631\u0637 \u0645\u0646\u0637\u0642\u064a \u0639\u0627\u0645 \u0645\u0631\u0646 \u0644\u0639\u062f\u0629 \u0634\u0631\u0648\u0637\u061b \u0642\u062f \u064a\u0635\u0628\u062d \u0645\u0639\u0642\u062f\u064b\u0627 \u0628\u0627\u0644\u062a\u0639\u0634\u064a\u0634 Null-Coalescing Operator \u062a\u0639\u064a\u064a\u0646/\u0625\u0631\u062c\u0627\u0639 \u0628\u062f\u064a\u0644 \u0639\u0646\u062f <code>null</code> \u0641\u0642\u0637 \u0642\u0635\u064a\u0631 \u0648\u0622\u0645\u0646\u061b \u064a\u062f\u0639\u0645 <code>??=</code> \u0644\u0644\u062a\u0647\u064a\u0626\u0629 \u0639\u0646\u062f <code>null</code> Null-Conditional Operator \u0625\u064a\u0642\u0627\u0641 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0639\u0646\u062f <code>null</code> \u0628\u0623\u0645\u0627\u0646 (<code>?.</code>) \u064a\u064f\u0639\u064a\u062f <code>null</code> \u0628\u062f\u0644 \u0627\u0644\u0631\u0645\u064a\u061b \u064a\u064f\u062f\u0645\u064e\u062c \u0639\u0627\u062f\u0629 \u0645\u0639 <code>??</code> \u0644\u0642\u064a\u0645\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629"},{"location":"terms/null-coalescing-operator/#_9","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p><code>??</code> \u0648<code>??=</code> \u064a\u0642\u062f\u0651\u0645\u0627\u0646 \u0637\u0631\u064a\u0642\u0629 \u0646\u0638\u064a\u0641\u0629 \u0648\u0622\u0645\u0646\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 <code>null</code>: \u0623\u0639\u0637\u0650 \u0628\u062f\u064a\u0644\u064b\u0627 \u0633\u0631\u064a\u0639\u064b\u0627\u060c \u0648\u0627\u0628\u062f\u0623 \u0627\u0644\u062d\u0631\u0627\u0633\u0629 \u0645\u0628\u0643\u0631\u064b\u0627\u060c \u0648\u0642\u0644\u0651\u0644 \u0645\u0646 \u062c\u0645\u0644 <code>if</code> \u0627\u0644\u0645\u062a\u0646\u0627\u062b\u0631\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062a\u0639\u0627\u0628\u064a\u0631 \u0645\u0648\u062c\u0632\u0629 \u0648\u0627\u0636\u062d\u0629.</p>"},{"location":"terms/null-conditional-operator/","title":"Null-Conditional Operator","text":""},{"location":"terms/null-conditional-operator/#invoke","title":"\u0627\u0644\u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u0634\u0631\u0637\u064a \u0627\u0644\u0622\u0645\u0646 (<code>?.</code>, <code>?[]</code>, <code>?.Invoke</code>)","text":""},{"location":"terms/null-conditional-operator/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Null-Conditional Operator \u2014 \u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u062a\u0648\u0642\u0651\u0641 \u0627\u0644\u0622\u0645\u0646 \u0639\u0646\u062f <code>null</code>.</p>"},{"location":"terms/null-conditional-operator/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u064a\u0633\u0645\u062d \u0628\u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u062e\u0627\u0635\u064a\u0651\u0627\u062a/\u0627\u0644\u0623\u0633\u0627\u0644\u064a\u0628/\u0627\u0644\u0641\u0647\u0627\u0631\u0633 \u0628\u0634\u0643\u0644 \u0622\u0645\u0646: \u0625\u0630\u0627 \u0643\u0627\u0646 \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u064a\u0633\u0631 <code>null</code>\u060c \u064a\u064f\u0639\u064a\u062f <code>null</code> \u0641\u0648\u0631\u064b\u0627 \u062f\u0648\u0646 \u0631\u0645\u064a NullReferenceException \u0648\u062f\u0648\u0646 \u062a\u0642\u064a\u064a\u0645 \u0628\u0642\u064a\u0629 \u0627\u0644\u0633\u0644\u0633\u0644\u0629.</p>"},{"location":"terms/null-conditional-operator/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0643\u062a\u0628 <code>obj?.Prop</code> \u0628\u062f\u0644\u064b\u0627 \u0645\u0646 \u0641\u062d\u0635 <code>obj == null</code> \u064a\u062f\u0648\u064a\u064b\u0627.  </li> <li>\u0625\u0646 \u0643\u0627\u0646 <code>obj</code> \u063a\u064a\u0631 <code>null</code> \u2192 \u064a\u064f\u0643\u0645\u0650\u0644 \u0627\u0644\u0648\u0635\u0648\u0644\u061b \u0648\u0625\u0644\u0627 \u2192 \u0627\u0644\u0646\u062a\u064a\u062c\u0629 <code>null</code>.  </li> <li>\u064a\u0639\u0645\u0644 \u0645\u0639: \u0627\u0644\u062e\u0627\u0635\u064a\u0651\u0627\u062a (<code>?.</code>)\u060c \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621 (<code>?.Method()</code>)\u060c \u0627\u0644\u0645\u0624\u0634\u0651\u0650\u0631 (<code>arr?[i]</code>)\u060c \u0648\u0627\u0644\u0623\u062d\u062f\u0627\u062b (<code>Event?.Invoke(...)</code>).  </li> <li>\u063a\u0627\u0644\u0628\u064b\u0627 \u064a\u064f\u062f\u0645\u064e\u062c \u0645\u0639 <code>??</code> \u0644\u0625\u0639\u0637\u0627\u0621 \u0642\u064a\u0645\u0629 \u0628\u062f\u064a\u0644\u0629 \u0628\u062f\u0644 <code>null</code>.</li> </ul>"},{"location":"terms/null-conditional-operator/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0637\u0631\u064a\u0642 \u0641\u064a\u0647 \u0628\u0648\u0627\u0628\u0627\u062a. \u0643\u0644 \u0628\u0648\u0627\u0628\u0629 \u062a\u062a\u0623\u0643\u062f: \u0625\u0646 \u0644\u0645 \u062a\u064f\u0641\u062a\u064e\u062d\u060c \u0646\u0631\u062c\u0639 \u0628\u0644\u0637\u0641 \u0628\u062f\u0644 \u0623\u0646 \u0646\u0635\u0637\u062f\u0645 \u0628\u0627\u0644\u062d\u0627\u0626\u0637. \u0648\u0647\u0643\u0630\u0627 \u0644\u0627 \u064a\u0646\u0643\u0633\u0631 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0639\u0646\u062f \u063a\u064a\u0627\u0628 \u062c\u0632\u0621 \u0645\u0646 \u0627\u0644\u0633\u0644\u0633\u0644\u0629.</p>"},{"location":"terms/null-conditional-operator/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637","text":"<p>C#<pre><code>using System;\nusing System.Collections.Generic;\n\nclass Address { public string? City { get; set; } }\nclass User\n{\n    public string? Name { get; set; }\n    public Address? Address { get; set; }\n    public event EventHandler? LoggedIn;\n\n    public void RaiseLogin() =&gt; LoggedIn?.Invoke(this, EventArgs.Empty); // \u0622\u0645\u0646 \u0639\u0646\u062f \u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0645\u0634\u062a\u0631\u0650\u0643\n}\n\nclass Program\n{\n    static void Main()\n    {\n        User? user = null;\n\n        // 1) \u062e\u0627\u0635\u064a\u0629 \u0645\u062a\u062f\u0627\u062e\u0644\u0629: \u0628\u062f\u0648\u0646 \u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u062d\u062a\u0649 \u0644\u0648 user \u0623\u0648 Address = null\n        string city = user?.Address?.City ?? \"Unknown\";\n        Console.WriteLine(city); // \"Unknown\"\n\n        // 2) \u0637\u0648\u0644 \u0645\u0635\u0641\u0648\u0641\u0629 \u0645\u0639 \u0646\u0648\u0639 \u0642\u0627\u0628\u0644 \u0644\u0644\u0625\u0644\u063a\u0627\u0621:\n        string[]? items = null;\n        int length = items?.Length ?? 0; // Length \u062a\u0639\u0648\u062f int? \u062b\u0645 \u0646\u0639\u0637\u064a 0 \u0643\u0628\u062f\u064a\u0644\n\n        // 3) \u0641\u0647\u0631\u0633\u0629 \u0622\u0645\u0646\u0629 (arr?[i]) \u2014 \u064a\u062d\u0645\u064a \u0645\u0646 arr = null (\u0644\u064a\u0633 \u0645\u0646 \u062e\u0637\u0623 \u0627\u0644\u0641\u0647\u0631\u0633)\n        int[]? nums = null;\n        int? first = nums?[0]; // null \u0625\u0646 \u0643\u0627\u0646\u062a nums = null\n\n        // 4) \u0642\u0627\u0645\u0648\u0633: \u064a\u062d\u0645\u064a \u0645\u0646 dict = null\u060c \u0644\u0643\u0646 \u0644\u064a\u0633 \u0645\u0646 \u0645\u0641\u062a\u0627\u062d \u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f\n        var dict = new Dictionary&lt;string, int&gt; { [\"x\"] = 10 };\n        int? val = dict?[\"x\"]; // 10\n        // int? missing = dict?[\"y\"]; // \u0633\u064a\u064e\u0631\u0645\u064a KeyNotFound \u0625\u0646 \u0643\u0627\u0646 dict \u0644\u064a\u0633 null \u0648\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f\n\n        // 5) \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u062f\u0627\u0644\u0629 \u0623\u0648 \u062a\u0641\u0648\u064a\u0636 \u0628\u0634\u0643\u0644 \u0622\u0645\u0646\n        Func&lt;int, int&gt;? op = null;\n        int? result = op?.Invoke(5); // null \u0625\u0646 \u0643\u0627\u0646 op = null\n\n        // 6) \u0646\u0645\u0637 \u062a\u062d\u0642\u0642 \u0645\u0646 \u0645\u0646\u0637\u0642\u064a\u0629 Nullable&lt;bool&gt;\n        bool? isActive = null;\n        if (isActive == true &amp;&amp; user?.Name is { Length: &gt; 0 })\n            Console.WriteLine(\"Active user with name\");\n\n        // 7) \u0645\u062b\u0627\u0644 \u062d\u062f\u062b \u0645\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u0635\u0646\u0641\n        var u = new User();\n        u.RaiseLogin(); // \u0644\u0627 \u0645\u0633\u062a\u0645\u0639\u064a\u0646 \u2192 \u0622\u0645\u0646\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - <code>\"Unknown\"</code>\u060c \u062b\u0645 <code>length = 0</code>. - <code>first = null</code> \u0639\u0646\u062f \u063a\u064a\u0627\u0628 \u0627\u0644\u0645\u0635\u0641\u0648\u0641\u0629. - \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0627\u0644\u0622\u0645\u0646\u0629 \u0644\u0627 \u062a\u0631\u0645\u064a NullReferenceException.</p>"},{"location":"terms/null-conditional-operator/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0627\u062f\u0645\u062c\u0647 \u0645\u0639 <code>??</code>: <code>user?.Address?.City ?? \"N/A\"</code>.  </li> <li>\u062a\u0630\u0643\u0651\u0631 \u0623\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0642\u064a\u0645\u0629 (\u0645\u062b\u0644 <code>int</code>) \u0639\u0628\u0631 <code>?.</code> \u064a\u064f\u0646\u062a\u062c Nullable (<code>int?</code>). \u0627\u0633\u062a\u062e\u062f\u0645 <code>??</code> \u0623\u0648 \u062a\u062d\u0648\u064a\u0644\u064b\u0627 \u0645\u0646\u0627\u0633\u0628\u064b\u0627.  </li> <li>\u0639\u0646\u062f \u0627\u0644\u0623\u062d\u062f\u0627\u062b/\u0627\u0644\u062a\u0641\u0648\u064a\u0636\u0627\u062a: \u0627\u0633\u062a\u062e\u062f\u0645 <code>?.Invoke(...)</code> \u0644\u062a\u0641\u0627\u062f\u064a \u0627\u0644\u0633\u0628\u0627\u0642 \u0639\u0644\u0649 <code>null</code>.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0644\u0633\u0644\u0627\u0633\u0644 \u0648\u0635\u0648\u0644 \u0637\u0648\u064a\u0644\u0629 \u0628\u062f\u0644 \u0641\u062d\u0648\u0635 <code>if (x != null)</code> \u0627\u0644\u0645\u062a\u0643\u0631\u0631\u0629.  </li> <li>\u0623\u0636\u0650\u0641 \u0623\u0642\u0648\u0627\u0633\u064b\u0627 \u0639\u0646\u062f \u0627\u0644\u0645\u0632\u062c \u0645\u0639 \u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0623\u062e\u0631\u0649 \u0644\u0632\u064a\u0627\u062f\u0629 \u0627\u0644\u0648\u0636\u0648\u062d.</li> </ul>"},{"location":"terms/null-conditional-operator/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646\u0647 \u064a\u0645\u0646\u0639 \u0643\u0644 \u0627\u0644\u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a: \u0647\u0648 \u064a\u0645\u0646\u0639 \u0641\u0642\u0637 NullReference \u0644\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u064a\u0633\u0631\u061b   \u0645\u0627 \u064a\u0632\u0627\u0644 \u0628\u0625\u0645\u0643\u0627\u0646\u0643 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 IndexOutOfRange \u0623\u0648 KeyNotFound \u0625\u0644\u062e.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 <code>dict?[\"k\"]</code> \u0638\u0646\u064b\u0627 \u0623\u0646\u0647 \u064a\u062d\u0645\u064a \u0645\u0646 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u063a\u064a\u0631 \u0627\u0644\u0645\u0648\u062c\u0648\u062f \u2014 \u064a\u062d\u0645\u064a \u0641\u0642\u0637 \u0645\u0646 \u0627\u0644\u0642\u0627\u0645\u0648\u0633 = null.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0623\u0646\u0647 \u064a\u0639\u064a\u062f <code>null</code>\u061b \u064a\u062c\u0628 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0646\u062a\u064a\u062c\u0629 \u0644\u0627\u062d\u0642\u064b\u0627 (\u0645\u062b\u0644\u064b\u0627 \u0639\u0628\u0631 <code>??</code>).</li> </ul>"},{"location":"terms/null-conditional-operator/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Ternary Operator \u0627\u062e\u062a\u064a\u0627\u0631 \u0642\u064a\u0645\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0634\u0631\u0637 \u0645\u0646\u0637\u0642\u064a \u0639\u0627\u0645 \u0645\u0631\u0646 \u0644\u0639\u062f\u0629 \u0634\u0631\u0648\u0637\u061b \u0642\u062f \u064a\u0635\u0628\u062d \u0645\u0639\u0642\u062f\u064b\u0627 \u0628\u0627\u0644\u062a\u0639\u0634\u064a\u0634 Null-Conditional Operator \u0625\u064a\u0642\u0627\u0641 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0639\u0646\u062f <code>null</code> \u0628\u0623\u0645\u0627\u0646 (<code>?.</code>, <code>?[]</code>) \u064a\u064f\u0639\u064a\u062f <code>null</code> \u0628\u062f\u0644 \u0627\u0644\u0631\u0645\u064a\u061b \u0627\u062f\u0645\u062c\u0647 \u0645\u0639 <code>??</code> \u0644\u0642\u064a\u0645\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 Null-Coalescing Operator \u062a\u0639\u064a\u064a\u0646 \u0642\u064a\u0645\u0629 \u0628\u062f\u064a\u0644\u0629 \u0639\u0646\u062f <code>null</code> <code>??</code> \u064a\u0639\u064a\u062f \u0627\u0644\u0628\u062f\u064a\u0644\u060c \u0648<code>??=</code> \u064a\u064f\u0633\u0646\u0650\u062f \u0639\u0646\u062f <code>null</code> \u0641\u0642\u0637"},{"location":"terms/null-conditional-operator/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p><code>?.</code> \u0648<code>?[]</code> \u0648<code>?.Invoke</code> \u062a\u0645\u0646\u062d\u0643 \u062a\u0646\u0642\u0644\u064b\u0627 \u0622\u0645\u0646\u064b\u0627 \u0641\u064a \u0627\u0644\u0633\u0644\u0627\u0633\u0644 \u0627\u0644\u0645\u0639\u0631\u0636\u0629 \u0644\u0640 <code>null</code>. \u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0645\u0639 <code>??</code> \u0644\u062a\u0639\u064a\u064a\u0646 \u0628\u062f\u0627\u0626\u0644 \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u062a\u0630\u0643\u0631 \u0623\u0646\u0647\u0627 \u0644\u0627 \u062a\u0645\u0646\u0639 \u0633\u0648\u0649 NullReference \u0644\u0644\u0637\u0631\u0641 \u0627\u0644\u0623\u064a\u0633\u0631.</p>"},{"location":"terms/oop/","title":"OOP","text":""},{"location":"terms/oop/#en-ar","title":"\u0627\u0644\u062a\u0633\u0645\u064a\u0629 \u0627\u0644\u0645\u0639\u062a\u0645\u062f\u0629 (EN \u2194 AR)","text":"<p>Object-Oriented Programming (OOP) \u2014 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0643\u0627\u0626\u0646\u064a\u0651\u0629 \u0627\u0644\u062a\u0648\u062c\u0651\u0647</p>"},{"location":"terms/oop/#_1","title":"\u062a\u0639\u0631\u064a\u0641 \u0645\u0648\u062c\u0632","text":"<p>A paradigm that builds software from objects combining state (data) and behavior (methods). It emphasizes encapsulation, inheritance, polymorphism, and abstraction to improve modularity, reuse, and maintainability.</p> <p>\u0623\u0633\u0644\u0648\u0628 \u0628\u0631\u0645\u062c\u0629 \u064a\u0643\u0648\u0651\u0646 \u0628\u0631\u0646\u0627\u0645\u062c\u0643 \u0645\u0646 \u0643\u0627\u0626\u0646\u0627\u062a \u0644\u0647\u0627 \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u062f\u0648\u0627\u0644. \u0627\u0644\u0631\u0643\u0627\u0626\u0632 \u0627\u0644\u0623\u0631\u0628\u0639: \u0627\u0644\u062a\u063a\u0644\u064a\u0641\u060c \u0627\u0644\u0648\u0631\u0627\u062b\u0629\u060c \u062a\u0639\u062f\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644\u060c \u0627\u0644\u062a\u062c\u0631\u064a\u062f. \u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u0643\u0648\u062f \u0645\u0646\u0638\u0651\u0645\u060c \u0642\u0627\u0628\u0644 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u060c \u0648\u0633\u0647\u0644 \u0627\u0644\u0635\u064a\u0627\u0646\u0629.</p>"},{"location":"terms/oop/#oop_1","title":"\u0644\u0645\u0627\u0630\u0627 OOP\u061f (\u0628\u0633\u064a\u0637\u0629 \u0648\u0644\u0630\u064a\u0630\u0629)","text":"<ul> <li>\u062a\u0645\u062b\u0651\u0644 \u0627\u0644\u0639\u0627\u0644\u0645 \u0627\u0644\u062d\u0642\u064a\u0642\u064a: \u0639\u0645\u064a\u0644\u060c \u0637\u0644\u0628\u060c \u0641\u0627\u062a\u0648\u0631\u0629 \u064a\u0635\u0628\u062d \u0644\u0643\u0644\u0651\u064d \u0643\u0627\u0626\u0646.  </li> <li>\u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0645\u0634\u0643\u0644\u0629 \u0644\u0642\u0637\u0639 \u0635\u063a\u064a\u0631\u0629 \u0645\u0641\u0647\u0648\u0645\u0629 (Classes).  </li> <li>\u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u0642\u0637\u0639 \u0644\u0627\u062d\u0642\u064b\u0627 \u0628\u0644\u0627 \u0641\u0648\u0636\u0649 (Interfaces &amp; Polymorphism).  </li> <li>\u0627\u062e\u062a\u0628\u0627\u0631 \u0623\u0633\u0647\u0644 \u0644\u0623\u0646 \u0643\u0644 \u062c\u0632\u0621 \u0645\u0633\u0624\u0648\u0644 \u0639\u0646 \u0634\u064a\u0621 \u0645\u062d\u062f\u0651\u062f.</li> </ul>"},{"location":"terms/oop/#_2","title":"\u0627\u0644\u0631\u0643\u0627\u0626\u0632 \u0627\u0644\u0623\u0631\u0628\u0639\u2026 \u0628\u0633\u0631\u0639\u0629 \u0648\u0628\u062f\u0648\u0646 \u0641\u0630\u0644\u0643\u0629","text":"<ul> <li>Encapsulation | \u0627\u0644\u062a\u063a\u0644\u064a\u0641: \u0646\u062e\u0641\u064a \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062f\u0627\u062e\u0644\u064a\u0629 \u0648\u0646\u0643\u0634\u0641 \u0648\u0627\u062c\u0647\u0629 \u0622\u0645\u0646\u0629.  </li> <li>Inheritance | \u0627\u0644\u0648\u0631\u0627\u062b\u0629: \u0646\u0639\u064a\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0633\u0644\u0648\u0643 \u0627\u0644\u0635\u0646\u0641 \u0627\u0644\u0623\u0633\u0627\u0633\u064a \u0648\u0646\u0648\u0633\u0651\u0639\u0647.  </li> <li>Polymorphism | \u062a\u0639\u062f\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644: \u0646\u0641\u0633 \u0627\u0644\u062f\u0627\u0644\u0629 \u062a\u064f\u0646\u0641\u0651\u064e\u0630 \u0628\u0637\u0631\u0642 \u0645\u062e\u062a\u0644\u0641\u0629 \u062d\u0633\u0628 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0641\u0639\u0644\u064a.  </li> <li>Abstraction | \u0627\u0644\u062a\u062c\u0631\u064a\u062f: \u0646\u0635\u0641 \u0645\u0627 \u064a\u062c\u0628 \u0641\u0639\u0644\u0647 \u0642\u0628\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0641\u064a \u0643\u064a\u0641 \u064a\u064f\u0641\u0639\u0644.</li> </ul> <p>\u062a\u0634\u0628\u064a\u0647: \u0643\u0644 \u0627\u0644\u0633\u064a\u0627\u0631\u0627\u062a \u0639\u0646\u062f\u0647\u0627 \u201c\u062f\u0648\u0633\u0629 \u0628\u0648\u0631\u064a\u201d (\u0648\u0627\u062c\u0647\u0629 \u0645\u0648\u062d\u0651\u062f\u0629)\u060c \u0644\u0643\u0646 \u0635\u0648\u062a\u0647\u0627 \u064a\u062e\u062a\u0644\u0641 \u0645\u0646 \u0633\u064a\u0627\u0631\u0629 \u0644\u0623\u062e\u0631\u0649 (\u062a\u0639\u062f\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644). \u0639\u062f\u0651\u0627\u062f \u201c\u0643\u0645 \u0645\u0631\u0651\u0629 \u0632\u0645\u0651\u0631\u0646\u0627\u201d \u062f\u0627\u062e\u0644 \u0627\u0644\u0633\u064a\u0627\u0631\u0629\u060c \u0648\u0644\u064a\u0633 \u0644\u0644\u0634\u0627\u0631\u0639 \u0623\u0646 \u064a\u0639\u0628\u062b \u0628\u0647 (\u062a\u063a\u0644\u064a\u0641).</p>"},{"location":"terms/oop/#_3","title":"\u0645\u062b\u0627\u0644 \u0645\u0646 \u0627\u0644\u0643\u0648\u062f","text":"C#<pre><code>using System;\n\n// Abstraction: \u062a\u0639\u0631\u064a\u0641 \"\u0645\u0627 \u064a\u0646\u0628\u063a\u064a\" \u0639\u0644\u0649 \u0627\u0644\u062d\u064a\u0648\u0627\u0646 \u0641\u0639\u0644\u0647 \u062f\u0648\u0646 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630\nabstract class Animal\n{\n    public string Name { get; }                 // \u062e\u0627\u0635\u064a\u0629 \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637\n    protected Animal(string name) =&gt; Name = name;\n\n    // Polymorphism: \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0641\u064a \u0627\u0644\u0623\u0635\u0646\u0627\u0641 \u0627\u0644\u0645\u0634\u062a\u0642\u0629\n    public virtual void Speak() =&gt; Console.WriteLine($\"{Name}: ???\");\n}\n\n// Inheritance: Cat \u062a\u0631\u062b \u0645\u0646 Animal\nclass Cat : Animal\n{\n    // Encapsulation: \u062d\u0627\u0644\u0629 \u062f\u0627\u062e\u0644\u064a\u0629 \u062e\u0627\u0635\u0629 \u0644\u0627 \u062a\u064f\u0639\u062f\u0651\u0644 \u0645\u0628\u0627\u0634\u0631\u0629 \u0645\u0646 \u0627\u0644\u062e\u0627\u0631\u062c\n    private int _meowCount;\n\n    public Cat(string name) : base(name) { }\n\n    // Polymorphism: \u062a\u0646\u0641\u064a\u0630 \u0645\u062e\u062a\u0644\u0641 \u0644\u0646\u0641\u0633 \u0627\u0644\u0648\u0627\u062c\u0647\u0629\n    public override void Speak()\n    {\n        _meowCount++;\n        Console.WriteLine($\"{Name}: Meow!\");\n    }\n\n    // \u0643\u0634\u0641 \u0622\u0645\u0646 \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637\n    public int MeowCount =&gt; _meowCount;\n}\n\nclass Dog : Animal\n{\n    public Dog(string name) : base(name) { }\n    public override void Speak() =&gt; Console.WriteLine($\"{Name}: Woof!\");\n}\n\nclass Program\n{\n    static void Main()\n    {\n        Animal a1 = new Cat(\"Milo\");   // \u0645\u0631\u062c\u0639 \u0645\u0646 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0623\u0633\u0627\u0633\u064a \u0644\u0646\u0648\u0639 \u0641\u0639\u0644\u064a \u0645\u0634\u062a\u0642\n        Animal a2 = new Dog(\"Rex\");\n\n        a1.Speak(); // \u064a\u062d\u062f\u0651\u062f \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 (runtime dispatch)\n        a2.Speak();\n\n        Console.WriteLine(((Cat)a1).MeowCount); // 1 \u2190 \u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u062a\u063a\u0644\u064a\u0641 \u062d\u0627\u0644\u0629 \u062f\u0627\u062e\u0644\u064a\u0629\n    }\n}\n</code></pre>"},{"location":"terms/oop/#_4","title":"\u0645\u0635\u0637\u0644\u062d\u0627\u062a \u0645\u0631\u062a\u0628\u0637\u0629 \u0648\u062a\u0645\u064a\u064a\u0632\u0627\u062a \u0633\u0631\u064a\u0639\u0629","text":"<ul> <li>Class vs Object: \u0627\u0644\u0635\u0646\u0641 \u0642\u0627\u0644\u0628\u061b \u0627\u0644\u0643\u0627\u0626\u0646 \u0646\u0633\u062e\u0629 \u062d\u064a\u0651\u0629 \u0645\u0646\u0647 \u0641\u064a \u0627\u0644\u0630\u0627\u0643\u0631\u0629.  </li> <li>Interface vs Abstract Class: \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0639\u0642\u062f \u0644\u0644\u0633\u0644\u0648\u0643 \u0641\u0642\u0637\u061b \u0627\u0644\u0645\u062c\u0631\u0651\u062f\u0629 \u0642\u062f \u062a\u062d\u0648\u064a \u0633\u0644\u0648\u0643\u064b\u0627 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 \u0648\u062d\u0627\u0644\u0629 \u0645\u062d\u0645\u064a\u0629.  </li> <li>Composition vs Inheritance: \u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u064a\u0636\u0645 \u0643\u0627\u0626\u0646\u0627\u062a \u062f\u0627\u062e\u0644 \u0643\u0627\u0626\u0646 \u0622\u062e\u0631 (\u0623\u0643\u062b\u0631 \u0645\u0631\u0648\u0646\u0629)\u061b \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u062a\u0648\u0631\u0651\u062b \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0648\u0627\u0644\u0633\u0644\u0648\u0643 (\u0642\u062f \u062a\u064f\u0642\u064a\u0651\u062f).  </li> <li>OOP vs Procedural: \u0627\u0644\u0643\u0627\u0626\u0646\u064a\u0629 \u062a\u0628\u0646\u064a \u062d\u0648\u0644 \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a\u061b \u0627\u0644\u0625\u062c\u0631\u0627\u0626\u064a\u0629 \u062a\u0628\u0646\u064a \u062d\u0648\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 \u0648\u0627\u0644\u062e\u0637\u0648\u0627\u062a.</li> </ul>"},{"location":"terms/oop/#_5","title":"\u0645\u062a\u0649 \u0623\u0633\u062a\u062e\u062f\u0645\u0647\u061f \u0648\u0645\u062a\u0649 \u0623\u062a\u062c\u0646\u0651\u0628\u0647\u061f","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 OOP \u0639\u0646\u062f \u0646\u0645\u0630\u062c\u0629 \u0643\u064a\u0627\u0646\u0627\u062a \u0645\u062c\u0627\u0644 \u0648\u0627\u0636\u062d\u0629 \u0648\u062a\u062d\u062a\u0627\u062c \u0644\u0644\u062a\u0648\u0633\u0639 \u0628\u0645\u0631\u0648\u0631 \u0627\u0644\u0648\u0642\u062a.  </li> <li>\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0625\u0641\u0631\u0627\u0637 \u0628\u0647 \u0641\u064a \u0633\u0643\u0631\u0628\u062a\u0627\u062a \u0635\u063a\u064a\u0631\u0629/\u0645\u0647\u0627\u0645 \u062d\u0633\u0627\u0628\u064a\u0629 \u062e\u0637\u064a\u0651\u0629\u061b \u0642\u062f \u062a\u0643\u0641\u064a \u0627\u0644\u0625\u062c\u0631\u0627\u0626\u064a\u0629 \u0623\u0648 \u0627\u0644\u0648\u0638\u064a\u0641\u064a\u0629.</li> </ul>"},{"location":"terms/oop/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062c\u0639\u0644 \u0645\u0639\u0638\u0645 \u0627\u0644\u0623\u0639\u0636\u0627\u0621 public \u2192 \u0643\u0633\u0631 \u0627\u0644\u062a\u063a\u0644\u064a\u0641 \u0648\u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0645\u0641\u0631\u0637 \u0639\u0644\u0649 \u0627\u0644\u0648\u0631\u0627\u062b\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0628\u062f\u0644 \u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u2192 \u062a\u0639\u0642\u064a\u062f \u0648\u062a\u0634\u0627\u0628\u0643 \u0647\u0631\u0645\u064a.</li> </ul>"},{"location":"terms/oop/#_7","title":"\u062e\u0644\u0627\u0635\u0629","text":"<p>OOP \u062a\u0646\u0638\u0651\u0645 \u0628\u0631\u0646\u0627\u0645\u062c\u0643 \u062d\u0648\u0644 \u0643\u0627\u0626\u0646\u0627\u062a \u0648\u0627\u0636\u062d\u0629 \u0627\u0644\u062d\u062f\u0648\u062f\u060c \u0648\u062a\u0645\u0646\u062d\u0643 \u0645\u0631\u0648\u0646\u0629 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0627\u0644\u062a\u0628\u062f\u064a\u0644 \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645. \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d: Encapsulation\u060c Inheritance\u060c Polymorphism\u060c Abstraction.</p>"},{"location":"terms/oop/#_8","title":"\u0633\u0624\u0627\u0644 \u062a\u062b\u0628\u064a\u062a (\u0625\u062c\u0627\u0628\u0629 \u0645\u062e\u0641\u064a\u0629)","text":"<p>\u0639\u0646\u062f\u0643 <code>Animal</code> \u0648\u062a\u064e\u0631\u0650\u062b \u0645\u0646\u0647 <code>Cat</code> \u0648<code>Dog</code> \u0648\u064a\u0645\u0644\u0643\u0627\u0646 <code>Speak()</code> \u0628\u0633\u0644\u0648\u0643 \u0645\u062e\u062a\u0644\u0641. \u0645\u0627 \u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u0645\u0639\u0628\u0651\u0631\u061f</p> \u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0625\u062c\u0627\u0628\u0629   **Polymorphism \u2014 \u062a\u0639\u062f\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644.**     \u0646\u0641\u0633 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 `Speak()` \u0644\u0643\u0646 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u064a\u062e\u062a\u0644\u0641 \u062d\u0633\u0628 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0641\u0639\u0644\u064a (`Cat`/`Dog`)."},{"location":"terms/open-source/","title":"Open Source","text":""},{"location":"terms/open-source/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Open Source Software (OSS) \u2014 \u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0645\u0641\u062a\u0648\u062d\u0629 \u0627\u0644\u0645\u0635\u062f\u0631</p>"},{"location":"terms/open-source/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u064a\u064f\u062a\u0627\u062d \u0634\u064a\u0641\u0631\u062a\u0647\u0627 \u0627\u0644\u0645\u0635\u062f\u0631\u064a\u0629 \u0644\u0644\u062c\u0645\u064a\u0639 \u0645\u0639 \u0631\u062e\u0635\u0629 \u062a\u0633\u0645\u062d \u0628\u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u060c \u0627\u0644\u062f\u0631\u0627\u0633\u0629\u060c \u0627\u0644\u062a\u0639\u062f\u064a\u0644\u060c \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0648\u0632\u064a\u0639\u2014\u0648\u0641\u0642 \u0634\u0631\u0648\u0637 \u0645\u062d\u062f\u0651\u062f\u0629 (\u0645\u062b\u0644 MIT, Apache-2.0, GPLv3).</p>"},{"location":"terms/open-source/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0645\u0635\u062f\u0631: \u062a\u0631\u0649 \u0643\u064a\u0641 \u0635\u064f\u0646\u0650\u0639 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c\u060c \u0648\u062a\u0639\u062f\u0651\u0644\u0647.  </li> <li>\u0631\u062e\u0635\u0629 \u062a\u062d\u062f\u0651\u062f \u0627\u0644\u062d\u0642\u0648\u0642 \u0648\u0627\u0644\u0627\u0644\u062a\u0632\u0627\u0645\u0627\u062a (\u0646\u064e\u0633\u0652\u0628/\u062a\u0635\u0627\u0631\u064a\u062d/\u0625\u0634\u0639\u0627\u0631\u0627\u062a/\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0645\u0635\u062f\u0631).  </li> <li>\u062d\u064e\u0648\u0652\u0643\u0645\u0629: Maintainers\u060c \u0625\u0635\u062f\u0627\u0631\u0627\u062a\u060c Issues/PRs\u060c \u0642\u0648\u0627\u0639\u062f \u0645\u0633\u0627\u0647\u0645\u0629 (CONTRIBUTING).  </li> <li>\u0623\u0646\u0645\u0627\u0637 \u0631\u062e\u0635:</li> <li>Permissive (\u0633\u0645\u0627\u062d\u064a\u0629): \u0645\u062b\u0644 MIT/Apache-2.0\u2014\u062d\u0631\u064a\u0629 \u0648\u0627\u0633\u0639\u0629 \u0645\u0639 \u0634\u0631\u0637 \u0646\u064e\u0633\u0652\u0628/\u0625\u0634\u0639\u0627\u0631.  </li> <li>Copyleft (\u0645\u062a\u0628\u0627\u062f\u0644\u0629): \u0645\u062b\u0644 GPL\u2014\u0625\u0646 \u062f\u0645\u062c\u062a \u0627\u0644\u0643\u0648\u062f\u060c \u064a\u062c\u0628 \u0641\u062a\u062d \u0627\u0644\u0645\u0635\u062f\u0631 \u0627\u0644\u0645\u0634\u062a\u0642 \u0628\u0646\u0641\u0633 \u0627\u0644\u0631\u062e\u0635\u0629.  </li> <li>\u0646\u0645\u0627\u0630\u062c \u0639\u0645\u0644: \u062f\u0639\u0645 \u0645\u062f\u0641\u0648\u0639\u060c Open-Core\u060c Dual Licensing.</li> </ul>"},{"location":"terms/open-source/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0643\u062a\u0627\u0628 \u062a\u0639\u0644\u064a\u0645 \u0645\u0641\u062a\u0648\u062d: \u0627\u0644\u0646\u0635\u0651 \u0645\u062a\u0627\u062d\u060c \u064a\u0645\u0643\u0646\u0643 \u0646\u0633\u062e\u0647 \u0648\u062a\u0639\u062f\u064a\u0644\u0647 \u0648\u0646\u0634\u0631 \u0646\u0633\u062e\u0629 \u0645\u062d\u0633\u0651\u0646\u0629\u2014\u0644\u0643\u0646 \u0645\u0639 \u0630\u0643\u0631 \u0627\u0644\u0645\u0635\u062f\u0631 \u0648\u0627\u062d\u062a\u0631\u0627\u0645 \u0634\u0631\u0648\u0637 \u0627\u0644\u0631\u062e\u0635\u0629.</p>"},{"location":"terms/open-source/#c-oss","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u062e\u062f\u0645\u0629 \u0635\u063a\u064a\u0631\u0629 \u062a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u062a\u064a\u0646 OSS + \u0635\u0641\u062d\u0629 \u062a\u0631\u0627\u062e\u064a\u0635 (\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644)","text":"<p>\u0646\u0633\u062a\u062e\u062f\u0645 Serilog \u0644\u0644\u062a\u0633\u062c\u064a\u0644 \u0648Newtonsoft.Json \u0644\u0644\u062a\u062d\u0648\u064a\u0644\u060c \u0648\u0646\u0639\u0631\u0650\u0636 \u0646\u0642\u0637\u0629 <code>/licenses</code> \u0644\u0639\u0631\u0636 \u0627\u0644\u0625\u0634\u0639\u0627\u0631\u0627\u062a (THIRD-PARTY-NOTICES).</p> C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet add package Serilog.AspNetCore\n// dotnet add package Serilog.Sinks.Console\n// dotnet add package Newtonsoft.Json\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.DependencyInjection;\nusing Serilog;\nusing Newtonsoft.Json;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u062a\u0647\u064a\u0626\u0629 Serilog (OSS)\nLog.Logger = new LoggerConfiguration()\n    .WriteTo.Console()\n    .CreateLogger();\nbuilder.Host.UseSerilog();\n\nvar app = builder.Build();\n\n// \u0645\u062b\u0627\u0644 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Newtonsoft.Json (OSS)\napp.MapGet(\"/echo\", (object payload) =&gt;\n{\n    var json = JsonConvert.SerializeObject(payload); // \u062a\u062d\u0648\u064a\u0644 \u0633\u0631\u064a\u0639\n    Log.Information(\"Echo payload: {Json}\", json);\n    return Results.Text(json, \"application/json\");\n});\n\n// \u0635\u0641\u062d\u0629 \u062a\u0631\u0627\u062e\u064a\u0635/\u0625\u0634\u0639\u0627\u0631\u0627\u062a \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u062b\u0627\u0644\u062b (\u0627\u0645\u062a\u062b\u0627\u0644 OSS)\napp.MapGet(\"/licenses\", async () =&gt;\n{\n    var path = Path.Combine(AppContext.BaseDirectory, \"THIRD-PARTY-NOTICES.txt\");\n    if (File.Exists(path))\n        return Results.File(path, \"text/plain; charset=utf-8\");\n    return Results.Text(\"No third-party notices found.\", \"text/plain\");\n});\n\napp.Run();\n</code></pre> <p>\u0636\u0639 \u0645\u0644\u0641\u064b\u0627 \u0628\u0627\u0633\u0645 <code>THIRD-PARTY-NOTICES.txt</code> \u0628\u062c\u0627\u0646\u0628 \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u060c \u064a\u062d\u0648\u064a \u0646\u0635\u0648\u0635 \u0627\u0644\u0631\u062e\u0635/\u0627\u0644\u0625\u0634\u0639\u0627\u0631\u0627\u062a \u0644\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629. \u0645\u0644\u0627\u062d\u0638\u0629: \u0628\u0639\u0636 \u0627\u0644\u0631\u062e\u0635 (\u0645\u062b\u0644 Apache-2.0) \u062a\u0637\u0644\u0628 \u0625\u062f\u0631\u0627\u062c NOTICE.</p>"},{"location":"terms/open-source/#oss","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f OSS \u0628\u0623\u0645\u0627\u0646","text":"<ol> <li>\u062d\u062f\u0651\u062f \u0633\u064a\u0627\u0633\u0629 \u0631\u062e\u0635: \u0627\u0633\u0645\u062d \u0628\u0640 MIT/Apache-2.0/BSD\u060c \u0648\u0631\u0627\u062c\u0639 Copyleft (GPL/LGPL) \u062d\u0633\u0628 \u0645\u0644\u0627\u0621\u0645\u0629 \u0645\u0646\u062a\u062c\u0643.  </li> <li>\u062a\u062d\u0642\u0651\u0642 \u0642\u0628\u0644 \u0627\u0644\u062f\u0645\u062c: \u0631\u0627\u062c\u0639 \u0627\u0644\u0631\u062e\u0635\u0629\u060c \u0627\u0644\u0634\u0647\u0631\u0629\u060c \u0627\u0644\u0646\u0634\u0627\u0637\u060c \u0627\u0644\u0623\u0645\u0646\u060c \u0627\u0644\u062d\u064e\u0648\u0652\u0643\u0645\u0629.  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u062a\u0628\u0639\u064a\u0627\u062a: \u062b\u0628\u0651\u062a \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a (pin/lock)\u060c \u0648\u0641\u0639\u0651\u0644 \u0641\u062d\u0635 \u0627\u0644\u062b\u063a\u0631\u0627\u062a (Dependabot/OSS-Index).  </li> <li>\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644:  </li> <li>\u0623\u062f\u0631\u062c \u0646\u064e\u0633\u0652\u0628/NOTICE \u0648\u0645\u0644\u0641 THIRD-PARTY-NOTICES.  </li> <li>\u0627\u0644\u062a\u0632\u0645 \u0628\u0634\u0631\u0648\u0637 \u0627\u0644\u0639\u0644\u0627\u0645\u0627\u062a \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629/\u0628\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u0627\u062e\u062a\u0631\u0627\u0639 (Apache-2.0 \u064a\u0645\u0646\u062d \u062a\u0631\u062e\u064a\u0635 \u0628\u0631\u0627\u0621\u0627\u062a).  </li> <li>\u0623\u0645\u0646 \u0627\u0644\u0633\u0644\u0633\u0644\u0629: SBOM (CycloneDX/Syft)\u060c \u062a\u0648\u0642\u064a\u0639 \u0635\u0648\u0631 (cosign)\u060c \u0645\u0631\u0627\u062c\u0639\u0629 \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u062d\u0631\u062c\u0629.  </li> <li>\u0627\u0644\u0645\u0633\u0627\u0647\u0645\u0629 upstream: \u0623\u0635\u0644\u0650\u062d \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0641\u064a \u0627\u0644\u0645\u0635\u062f\u0631 \u0628\u062f\u0644 \u0631\u0642\u0639 \u0645\u062d\u0644\u064a\u0629 \u0637\u0648\u064a\u0644\u0629 \u0627\u0644\u0623\u0645\u062f.  </li> <li>\u062d\u0648\u0643\u0645\u0629 \u062f\u0627\u062e\u0644\u064a\u0629: \u062f\u0648\u0651\u0646 \u0642\u0631\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u0628\u0646\u0651\u064a (ADR)\u060c \u0648\u0639\u0631\u0651\u0641 \u0645\u0633\u0624\u0648\u0644 \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0648\u0627\u0644\u062a\u0635\u062d\u064a\u062d\u0627\u062a.</li> </ol>"},{"location":"terms/open-source/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 OSS = \u0645\u062c\u0627\u0646\u064a \u0628\u0644\u0627 \u0634\u0631\u0648\u0637 \u2192 \u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0631\u062e\u0635/\u0627\u0644\u0625\u0634\u0639\u0627\u0631\u0627\u062a.  </li> <li>\u062e\u0644\u0637 Source-Available \u0645\u0639 Open Source \u0627\u0644\u062d\u0642\u064a\u0642\u064a (\u0644\u064a\u0633\u062a \u0643\u0644 \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u0644\u0644\u0645\u0634\u0627\u0647\u062f\u0629 \u0645\u0641\u062a\u0648\u062d\u0629 \u0628\u062d\u0642).  </li> <li>\u0631\u0628\u0637 \u0643\u0648\u062f \u0645\u063a\u0644\u0642 \u0645\u0639 GPL \u062f\u0648\u0646 \u0641\u0647\u0645 \u0627\u0644\u062a\u0632\u0627\u0645\u0627\u062a Copyleft.  </li> <li>\u0625\u0647\u0645\u0627\u0644 \u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0623\u0645\u0646\u064a\u0629/\u062a\u0635\u062d\u064a\u062d\u0627\u062a CVE.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Maintainer \u0648\u0627\u062d\u062f (Bus Factor) \u062f\u0648\u0646 \u062e\u0637\u0629 \u0628\u062f\u064a\u0644\u0629.  </li> <li>\u0639\u062f\u0645 \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a/\u0627\u0644\u0631\u062e\u0635 \u0641\u064a \u0627\u0644\u0645\u0646\u062a\u062c (\u063a\u064a\u0627\u0628 SBOM/NOTICES).</li> </ul>"},{"location":"terms/open-source/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Open Source \u0643\u0648\u062f \u0645\u062a\u0627\u062d \u0645\u0639 \u0631\u062e\u0635 \u062a\u0633\u0645\u062d \u0628\u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645/\u0627\u0644\u062a\u0639\u062f\u064a\u0644/\u0627\u0644\u062a\u0648\u0632\u064a\u0639 Permissive vs Copyleft\u060c \u0645\u062c\u062a\u0645\u0639 \u0648\u062d\u064e\u0648\u0652\u0643\u0645\u0629 Source-Available \u0625\u062a\u0627\u062d\u0629 \u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0643\u0648\u062f \u062f\u0648\u0646 \u062d\u0631\u064a\u0627\u062a OSS \u0627\u0644\u0643\u0627\u0645\u0644\u0629 \u0642\u062f \u062a\u0645\u0646\u0639 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u062c\u0627\u0631\u064a/\u0627\u0644\u062a\u0639\u062f\u064a\u0644 Proprietary \u0645\u063a\u0644\u0642 \u0627\u0644\u0645\u0635\u062f\u0631\u060c \u062a\u0631\u062e\u064a\u0635 \u0645\u0642\u064a\u0651\u062f \u0644\u0627 \u0648\u0635\u0648\u0644 \u0644\u0644\u0645\u0635\u062f\u0631\u061b \u062f\u0639\u0645 \u0631\u0633\u0645\u064a \u0639\u0627\u062f\u0629\u064b Permissive Licenses \u062d\u0631\u064a\u0629 \u0648\u0627\u0633\u0639\u0629 \u0645\u0639 \u0627\u0644\u0646\u0651\u064e\u0633\u0652\u0628 MIT/Apache-2.0/BSD Copyleft Licenses \u0645\u0634\u0627\u0631\u0643\u0629 \u0645\u0645\u0627\u062b\u0644\u0629 \u0644\u0644\u0623\u0639\u0645\u0627\u0644 \u0627\u0644\u0645\u0634\u062a\u0642\u0629 GPL/LGPL/AGPL (\u0627\u0644\u062a\u0632\u0627\u0645\u0627\u062a \u0623\u0642\u0648\u0649)"},{"location":"terms/open-source/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Open Source \u064a\u0633\u0631\u0651\u0639 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u064a\u0639\u0632\u0651\u0632 \u0627\u0644\u062c\u0648\u062f\u0629 \u0639\u0628\u0631 \u0627\u0644\u0645\u0634\u0627\u0631\u0643\u0629\u060c \u0644\u0643\u0646 \u0646\u062c\u0627\u062d\u0647 \u064a\u062a\u0637\u0644\u0651\u0628 \u0641\u0647\u0645 \u0627\u0644\u0631\u062e\u0635 \u0648\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644\u060c \u0625\u062f\u0627\u0631\u0629 \u062a\u0628\u0639\u064a\u0627\u062a \u0648\u0623\u0645\u0646\u060c \u0648\u0645\u0633\u0627\u0647\u0645\u0629 \u0645\u0633\u0624\u0648\u0644\u0629 \u0641\u064a \u0627\u0644\u0645\u062c\u062a\u0645\u0639\u2014\u0639\u0646\u062f\u0647\u0627 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0633\u0631\u0639\u0629 \u0648\u0645\u0631\u0648\u0646\u0629 \u0645\u0639 \u0627\u0644\u062a\u0632\u0627\u0645 \u0642\u0627\u0646\u0648\u0646\u064a \u0648\u0623\u0645\u0646\u064a \u0633\u0644\u064a\u0645.</p>"},{"location":"terms/operating-system/","title":"Operating System","text":""},{"location":"terms/operating-system/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Operating System (OS) \u2014 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644</p>"},{"location":"terms/operating-system/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0633\u0627\u0633\u064a \u064a\u062f\u064a\u0631 \u0627\u0644\u0639\u062a\u0627\u062f \u0648\u064a\u0642\u062f\u0651\u0645 \u062e\u062f\u0645\u0627\u062a \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a: \u0639\u0645\u0644\u064a\u0627\u062a/\u062e\u064a\u0648\u0637\u060c \u0630\u0627\u0643\u0631\u0629\u060c \u0645\u0644\u0641\u0627\u062a\u060c \u0634\u0628\u0643\u0629\u060c \u0633\u0627\u0626\u0642\u0648 \u0623\u062c\u0647\u0632\u0629\u060c \u0648\u062a\u0635\u0627\u0631\u064a\u062d.</p>"},{"location":"terms/operating-system/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0637\u0628\u0642\u0629 \u0628\u064a\u0646 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0648\u0627\u0644\u0639\u062a\u0627\u062f.  </li> <li>\u064a\u062e\u062a\u0627\u0631 \u0623\u064a \u0645\u0647\u0645\u0629 \u062a\u0639\u0645\u0644 \u0627\u0644\u0622\u0646 (\u0645\u064f\u062c\u062f\u0648\u0644).  </li> <li>\u064a\u0639\u0632\u0644 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0648\u064a\u0645\u0646\u062d\u0647\u0627 \u0630\u0627\u0643\u0631\u0629 \u0648\u0645\u0644\u0641\u0627\u062a \u0622\u0645\u0646\u0629 (\u0646\u0645\u0637 \u0645\u0633\u062a\u062e\u062f\u0645/\u0646\u0648\u0627\u0629).  </li> <li>\u064a\u0648\u0641\u0651\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0646\u0638\u0627\u0645 (Syscalls) \u0644\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u0645\u0646\u0636\u0628\u0637 \u0644\u0644\u0645\u0648\u0627\u0631\u062f.</li> </ul>"},{"location":"terms/operating-system/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0647\u0648 \u0645\u062f\u064a\u0631 \u0627\u0644\u0645\u0628\u0646\u0649: \u064a\u0646\u0638\u0651\u0645 \u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621 \u0648\u0627\u0644\u0645\u0635\u0627\u0639\u062f \u0648\u0627\u0644\u0623\u0645\u0646. \u0627\u0644\u0645\u062a\u0627\u062c\u0631 (\u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0643) \u062a\u0637\u0644\u0628 \u062e\u062f\u0645\u0627\u062a\u0647 \u0628\u062f\u0644 \u0623\u0646 \u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0623\u0633\u0644\u0627\u0643 \u0645\u0628\u0627\u0634\u0631\u0629.</p>"},{"location":"terms/operating-system/#c-os","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0639\u0645\u0644\u064a (\u0627\u0633\u062a\u0643\u0634\u0627\u0641 OS + \u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u062e\u0627\u0635\u0651\u0629 \u0628\u0646\u0638\u0627\u0645)","text":"C#<pre><code>// .NET 8/9\n// \u0645\u062b\u0627\u0644 \u064a\u064f\u0638\u0647\u0631: \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u0645\u0646\u0635\u0651\u0629\u060c PID\u060c \u0632\u0645\u0646 \u0639\u0645\u0644 \u0627\u0644\u0646\u0638\u0627\u0645 (uptime)\u060c \u0623\u0645\u0631 \u0646\u0638\u0627\u0645\u064a \u062d\u0633\u0628 OS.\n// \u0645\u0639 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u062e\u0627\u0635 \u0628\u0648\u064a\u0646\u062f\u0648\u0632 (GetTickCount64) \u0648\u0628\u062f\u064a\u0644 \u0644\u064a\u0646\u0643\u0633/\u0645\u0627\u0643.\n\nusing System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing System.Threading;\n\nclass OSPlayground\n{\n    // Windows: \u0632\u0645\u0646 \u0645\u0646\u0630 \u0627\u0644\u0625\u0642\u0644\u0627\u0639 (ms)\n    [DllImport(\"kernel32.dll\")]\n    static extern ulong GetTickCount64();\n\n    static void Main()\n    {\n        // 1) \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0639\u0627\u0645\u0629\n        Console.WriteLine($\"OS: {RuntimeInformation.OSDescription}\");\n        Console.WriteLine($\"Arch: {RuntimeInformation.ProcessArchitecture}\");\n        Console.WriteLine($\"PID: {Environment.ProcessId}\");\n\n        // 2) \u0632\u0645\u0646 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0646\u0638\u0627\u0645 (Uptime)\n        if (OperatingSystem.IsWindows())\n        {\n            var ms = GetTickCount64();\n            Console.WriteLine($\"Uptime: {TimeSpan.FromMilliseconds(ms)} (Win API)\");\n        }\n        else\n        {\n            // \u0644\u064a\u0646\u0643\u0633: /proc/uptime (\u062b\u0648\u0627\u0646\u064d) \u2014 \u0645\u0627\u0643: fallback \u0628\u0640 Environment.TickCount64\n            try\n            {\n                var first = File.ReadAllText(\"/proc/uptime\").Split(' ', StringSplitOptions.RemoveEmptyEntries)[0];\n                var sec = double.Parse(first, System.Globalization.CultureInfo.InvariantCulture);\n                Console.WriteLine($\"Uptime: {TimeSpan.FromSeconds(sec)} (/proc/uptime)\");\n            }\n            catch\n            {\n                Console.WriteLine($\"Uptime ~ {TimeSpan.FromMilliseconds(Environment.TickCount64)} (approx)\");\n            }\n        }\n\n        // 3) \u062a\u0634\u063a\u064a\u0644 \u0623\u0645\u0631 \u0646\u0638\u0627\u0645\u064a \u0622\u0645\u0646 (Platform-aware)\n        var psi = OperatingSystem.IsWindows()\n            ? new ProcessStartInfo(\"cmd\", \"/c dir\") { RedirectStandardOutput = true }\n            : new ProcessStartInfo(\"/bin/ls\", \"-la\") { RedirectStandardOutput = true };\n\n        using var p = Process.Start(psi)!;\n        Console.WriteLine(\"--- Shell listing (first 3 lines) ---\");\n        for (int i = 0; i &lt; 3 &amp;&amp; !p.StandardOutput.EndOfStream; i++)\n            Console.WriteLine(p.StandardOutput.ReadLine());\n\n        // 4) \u0623\u0648\u0644\u0648\u064a\u0629 \u062e\u064a\u0637 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 (\u062c\u062f\u0648\u0644\u0629 \u0645\u0628\u0633\u0651\u0637\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0639\u0645\u0644\u064a\u0629)\n        Thread.CurrentThread.Priority = ThreadPriority.AboveNormal;\n        Console.WriteLine($\"Thread Priority: {Thread.CurrentThread.Priority}\");\n\n        // 5) \u0645\u0633\u0627\u0631\u0627\u062a \u0645\u062a\u0648\u0627\u0641\u0642\u0629 \u0639\u0628\u0631 Path.Combine\n        var home = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);\n        var appData = Path.Combine(home ?? \".\", \".myapp\");\n        Console.WriteLine($\"AppData: {appData}\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0645\u0639\u0644\u0648\u0645\u0627\u062a OS/\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0629 \u0648PID. - Uptime \u0645\u0646 API \u0645\u0646\u0627\u0633\u0628. - 3 \u0623\u0633\u0637\u0631 \u0645\u0646 \u0645\u062e\u0631\u062c\u0627\u062a <code>dir</code>/<code>ls</code>. - \u0623\u0648\u0644\u0648\u064a\u0629 \u0627\u0644\u062e\u064a\u0637 \u0648\u0645\u0633\u0627\u0631 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.</p>"},{"location":"terms/operating-system/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644","text":"<ul> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0647\u062f\u0641: Windows/Linux/macOS \u0648\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0629 (x64/ARM64).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u062c\u0647\u0627\u062a .NET \u0627\u0644\u0642\u064a\u0627\u0633\u064a\u0629 \u0623\u0648\u0644\u064b\u0627 (<code>File</code>, <code>Path</code>, <code>Sockets</code>).  </li> <li>\u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0644\u0645\u064a\u0632\u0629 \u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0646\u0638\u0627\u0645: \u0623\u0636\u0650\u0641 \u0641\u0631\u0648\u0639\u064b\u0627 \u0645\u062d\u0631\u0648\u0633\u0629 (OS checks) \u0623\u0648 P/Invoke \u0622\u0645\u0646\u064b\u0627.  </li> <li>\u0644\u062e\u062f\u0645\u0627\u062a \u0627\u0644\u062e\u0644\u0641\u064a\u0629:  </li> <li>Windows: Windows Service + Event Viewer.  </li> <li>Linux: systemd (<code>service</code>, <code>journalctl</code>).  </li> <li>\u0644\u0644\u062c\u062f\u0648\u0644\u0629: Task Scheduler \u0645\u0642\u0627\u0628\u0644 cron.  </li> <li>\u0644\u0644\u0623\u0645\u0627\u0646: \u0625\u062f\u0627\u0631\u0629 Users/Groups/ACLs\u060c \u062c\u062f\u0627\u0631 \u0646\u0627\u0631\u064a\u060c \u062a\u062d\u062f\u064a\u062b\u0627\u062a.  </li> <li>\u0644\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u0633\u062c\u0644\u0627\u062a\u060c \u0645\u0642\u0627\u064a\u064a\u0633\u060c \u062a\u062a\u0628\u0651\u0639\u061b \u0623\u062f\u0648\u0627\u062a (<code>top/htop</code>, <code>perfmon</code>, \u0645\u0631\u0627\u0642\u0628\u0629 \u062d\u0627\u0648\u064a\u0627\u062a).</li> </ul>"},{"location":"terms/operating-system/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u062d\u0633\u0627\u0633\u064a\u0629 \u062d\u0627\u0644\u0629 \u0627\u0644\u0623\u062d\u0631\u0641/\u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0646\u0641\u0633\u0647\u0627 \u0641\u064a \u0643\u0644 OS (Windows \u063a\u064a\u0631 \u062d\u0633\u0627\u0633 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627).  </li> <li>\u062a\u0631\u0645\u064a\u0632 \u0648\u0644\u063a\u0629 \u062f\u0648\u0646 \u062a\u062b\u0628\u064a\u062a Culture \u0645\u0646\u0627\u0633\u0628 \u2192 \u0623\u0631\u0642\u0627\u0645/\u062a\u0648\u0627\u0631\u064a\u062e \u0645\u0636\u0637\u0631\u0628\u0629.  </li> <li>\u0625\u0647\u0645\u0627\u0644 \u0625\u0634\u0627\u0631\u0627\u062a \u0627\u0644\u0625\u0646\u0647\u0627\u0621 (SIGTERM) \u0641\u064a \u0644\u064a\u0646\u0643\u0633 \u0623\u0648 \u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0625\u0646\u0647\u0627\u0621 \u0641\u064a \u0648\u064a\u0646\u062f\u0648\u0632.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0633\u0627\u0631\u0627\u062a \u062b\u0627\u0628\u062a\u0629 \u0623\u0648 \u0641\u0648\u0627\u0635\u0644 <code>\\</code> \u0628\u062f\u0644 <code>Path.Combine</code>.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 NAT \u0643\u0623\u0645\u0646 \u0643\u0627\u0641\u064d \u062f\u0648\u0646 \u062c\u062f\u0627\u0631 \u0646\u0627\u0631\u064a/\u062a\u0635\u0627\u0631\u064a\u062d.  </li> <li>\u062a\u0634\u063a\u064a\u0644 \u0623\u0648\u0627\u0645\u0631 Shell \u0645\u0628\u0627\u0634\u0631\u0629 \u0628\u0644\u0627 \u062a\u0639\u0642\u064a\u0645 \u0645\u062f\u062e\u0644\u0627\u062a.</li> </ul>"},{"location":"terms/operating-system/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Operating System (OS) \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0639\u062a\u0627\u062f \u0648\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0648\u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0648\u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0648\u0627\u0644\u0634\u0628\u0643\u0629 \u0646\u0648\u0627\u0629 + \u062e\u062f\u0645\u0627\u062a +\u30c9\u0631\u0627\u064a\u0641\u0631\u0627\u062a + \u0648\u0627\u062c\u0647\u0629 Syscalls Kernel \u0642\u0644\u0628 \u0627\u0644\u0646\u0638\u0627\u0645 \u064a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0639\u062a\u0627\u062f \u0648\u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0648\u0627\u0644\u062c\u062f\u0648\u0644\u0629 \u064a\u0639\u0645\u0644 \u0641\u064a \u0646\u0645\u0637 \u0627\u0644\u0646\u0648\u0627\u0629\u061b \u0627\u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u062f\u0646\u0649 Runtime (.NET/JVM) \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0634\u064a\u0641\u0631\u0629 \u0627\u0644\u0645\u064f\u062f\u0627\u0631\u0629\u060c GC\u060c JIT \u0641\u0648\u0642 OS\u061b \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 Syscalls Platform \u0628\u064a\u0626\u0629 \u062a\u0634\u063a\u064a\u0644 \u0623\u0634\u0645\u0644 (OS + SDK/APIs/\u062e\u062f\u0645\u0627\u062a) \u0642\u062f \u062a\u0634\u0645\u0644 \u0645\u062a\u062c\u0631 \u0648\u062a\u0648\u0632\u064a\u0639 Container \u0639\u0632\u0644 \u062e\u0641\u064a\u0641 \u064a\u0634\u0627\u0631\u0643 \u0646\u0648\u0627\u0629 OS \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0646\u0648\u0627\u0629 \u0627\u0644\u0645\u0636\u064a\u0641 (cgroups/namespaces)"},{"location":"terms/operating-system/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u064a\u0648\u0641\u0651\u0631 \u0627\u0644\u0628\u0646\u064a\u0629 \u0627\u0644\u062a\u062d\u062a\u064a\u0629: \u062c\u062f\u0648\u0644\u0629\u060c \u0630\u0627\u0643\u0631\u0629\u060c \u0645\u0644\u0641\u0627\u062a\u060c \u0634\u0628\u0643\u0629\u060c \u0623\u0645\u0627\u0646. \u0627\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u062c\u0647\u0627\u062a .NET \u0627\u0644\u0645\u0648\u062d\u062f\u0629\u060c \u0648\u0627\u0641\u0635\u0644 \u0627\u0644\u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0646\u0638\u0627\u0645 \u0628\u0648\u0636\u0648\u062d\u060c \u0648\u0627\u0636\u0628\u0637 \u0627\u0644\u062e\u062f\u0645\u0629/\u0627\u0644\u0633\u062c\u0644\u0627\u062a/\u0627\u0644\u062a\u0635\u0627\u0631\u064a\u062d \u0644\u0636\u0645\u0627\u0646 \u062a\u0637\u0628\u064a\u0642 \u0645\u0633\u062a\u0642\u0631 \u0648\u0622\u0645\u0646.</p>"},{"location":"terms/paas/","title":"PaaS \u2014 Platform as a Service","text":""},{"location":"terms/paas/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Platform as a Service (PaaS) \u2014 \u0645\u0646\u0635\u0651\u0629 \u0643\u062e\u062f\u0645\u0629</p>"},{"location":"terms/paas/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u064a\u0626\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0644\u0644\u0646\u0634\u0631 \u062a\u064f\u0639\u0637\u064a\u0643 \u0645\u0646\u0635\u0651\u0629 \u062c\u0627\u0647\u0632\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0643 (Runtime/OS/\u0634\u0628\u0643\u0627\u062a/\u062a\u0648\u0633\u0639\u0629/\u0645\u0631\u0627\u0642\u0628\u0629). \u0623\u0646\u062a \u062a\u0631\u0641\u0639 \u0627\u0644\u0643\u0648\u062f/\u0627\u0644\u062d\u0627\u0648\u064a\u0629 \u0648\u062a\u0636\u0628\u0637 \u0627\u0644\u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a\u061b \u0627\u0644\u0645\u0632\u0648\u0651\u062f \u064a\u062a\u0643\u0641\u0651\u0644 \u0628\u0627\u0644\u0628\u0646\u064a\u0629\u060c \u0627\u0644\u062a\u0648\u0633\u0651\u0639\u060c \u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a\u060c \u0648\u0627\u0644\u0634\u0647\u0627\u062f\u0627\u062a.</p>"},{"location":"terms/paas/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0628\u062f\u0644 \u0625\u062f\u0627\u0631\u0629 \u062e\u0648\u0627\u062f\u0645 \u0648\u0646\u064f\u0638\u0645\u060c \u062a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0645\u0646\u0637\u0642 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.  </li> <li>\u0645\u0632\u0627\u064a\u0627 \u0634\u0627\u0626\u0639\u0629: \u0646\u0634\u0631 \u0628\u0636\u063a\u0637\u0629\u060c Scaling \u062a\u0644\u0642\u0627\u0626\u064a\u060c Logs/Metrics\u060c SSL/TLS\u060c \u0628\u064a\u0626\u0627\u062a Staging.  </li> <li>\u0623\u0645\u062b\u0644\u0629: Azure App Service\u060c Google App Engine\u060c AWS Elastic Beanstalk\u060c Render\u060c Fly.io\u060c Heroku.</li> </ul>"},{"location":"terms/paas/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u0633\u062a\u0623\u062c\u0631 \u0645\u0637\u0628\u062e\u064b\u0627 \u0645\u062c\u0647\u0651\u0632\u064b\u0627 \u0628\u0627\u0644\u0643\u0627\u0645\u0644: \u0623\u0641\u0631\u0627\u0646\u060c \u0634\u0641\u0627\u0637\u060c \u0646\u0638\u0627\u0641\u0629\u060c \u062a\u0648\u0635\u064a\u0644. \u0623\u0646\u062a \u062a\u062c\u0644\u0628 \u0627\u0644\u0648\u0635\u0641\u0629 \u0648\u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a (\u0627\u0644\u0643\u0648\u062f) \u0648\u062a\u0637\u0628\u062e\u061b \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0637\u0628\u062e \u0639\u0644\u0649 \u0627\u0644\u0645\u0632\u0648\u0651\u062f.</p>"},{"location":"terms/paas/#c-aspnet-core-paas","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (ASP.NET Core \u0639\u0644\u0649 PaaS: \u0635\u062d\u0651\u0629 + \u0645\u0646\u0641\u0630 \u0645\u0646 \u0627\u0644\u0628\u064a\u0626\u0629)","text":"<p>\u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 \u0645\u0632\u0648\u0651\u062f\u064a PaaS \u064a\u0645\u0631\u0651\u0631\u0648\u0646 \u0631\u0642\u0645 \u0627\u0644\u0645\u0646\u0641\u0630 \u0639\u0628\u0631 \u0645\u062a\u063a\u064a\u0651\u0631 \u0628\u064a\u0626\u0629 <code>PORT</code>. \u0647\u0630\u0627 \u0627\u0644\u0645\u062b\u0627\u0644 \u064a\u0644\u062a\u0642\u0637\u0647 \u0648\u064a\u0639\u0631\u0651\u0641 \u0645\u0633\u0627\u0631 \u0635\u062d\u0651\u0629 \u0644\u0644\u0646\u0634\u0631/\u0627\u0644\u062a\u0648\u0633\u0651\u0639 \u0627\u0644\u0622\u0644\u064a.</p> C#<pre><code>// Program.cs (.NET 8/9)\nusing Microsoft.AspNetCore.Diagnostics.HealthChecks;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// \u0627\u0644\u062a\u0642\u0637 \u0627\u0644\u0645\u0646\u0641\u0630 \u0645\u0646 \u0627\u0644\u0628\u064a\u0626\u0629 (Heroku/Render/Fly \u0648\u063a\u064a\u0631\u0647\u0627)\nif (int.TryParse(Environment.GetEnvironmentVariable(\"PORT\"), out var port))\n{\n    builder.WebHost.ConfigureKestrel(o =&gt; o.ListenAnyIP(port));\n}\n\n// \u0635\u062d\u0651\u0629 \u0648\u062e\u062f\u0645\u0627\u062a \u0623\u0633\u0627\u0633\u064a\u0629\nbuilder.Services.AddHealthChecks();\nbuilder.Services.AddLogging();\n\nvar app = builder.Build();\n\napp.MapGet(\"/\", () =&gt;\n{\n    var msg = Environment.GetEnvironmentVariable(\"APP_MESSAGE\") ?? \"Hello PaaS\";\n    return Results.Ok(new { message = msg, time = DateTime.UtcNow });\n});\n\n// \u0645\u0633\u0627\u0631\u0627\u062a \u0635\u062d\u0651\u0629 \u0634\u0627\u0626\u0639\u0629\napp.MapHealthChecks(\"/healthz\");             // \u062c\u0627\u0647\u0632\u064a\u0629/\u062d\u064a\u0648\u064a\u0629 \u0644\u0644\u0628\u0631\u0648\u0643\u0633\u064a/\u0627\u0644\u0645\u0648\u0627\u0632\u0650\u0646\napp.MapGet(\"/ready\", () =&gt; Results.Ok());    // \u062c\u0627\u0647\u0632\u064a\u0629 \u0645\u0646\u0641\u0635\u0644\u0629 \u0625\u0646 \u0631\u063a\u0628\u062a\n\n// \u062a\u0623\u0645\u064a\u0646 \u0627\u0641\u062a\u0631\u0627\u0636\u064a (\u064a\u064f\u0646\u0635\u062d \u0628\u062a\u0645\u0643\u064a\u0646 HTTPS/HSTS \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629)\napp.Run();\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - <code>GET /</code> \u064a\u0639\u064a\u062f JSON \u0641\u064a\u0647 \u0631\u0633\u0627\u0644\u0629 \u0645\u0646 \u0627\u0644\u0628\u064a\u0626\u0629 + \u0648\u0642\u062a. - <code>GET /healthz</code> \u0648<code>GET /ready</code> \u064a\u0639\u064a\u062f\u0627\u0646 200 \u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u0635\u062d\u0651\u0629.</p>"},{"location":"terms/paas/#paas","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u0646\u0634\u0631 \u0639\u0644\u0649 PaaS (\u0645\u062b\u0627\u0644 \u0639\u0627\u0645)","text":"<ol> <li>\u062d\u0636\u0651\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642: \u0623\u0636\u0650\u0641 \u0645\u0633\u0627\u0631 \u0635\u062d\u0651\u0629 (<code>/healthz</code>) \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u062a\u063a\u064a\u0651\u0631 <code>PORT</code>.  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a: \u062e\u0632\u0651\u0646 \u0627\u0644\u0623\u0633\u0631\u0627\u0631 \u0641\u064a Key Vault/Config \u0627\u0644\u062e\u0627\u0635 \u0628\u0627\u0644\u0645\u0632\u0648\u0651\u062f\u061b \u0644\u0627 \u062a\u0636\u0639\u0647\u0627 \u0641\u064a \u0627\u0644\u0643\u0648\u062f.  </li> <li>\u0627\u062e\u062a\u0631 \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u0646\u0634\u0631:  </li> <li>\u0643\u0648\u062f \u0645\u0628\u0627\u0634\u0631 (Build \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629) \u0623\u0648  </li> <li>\u062d\u0627\u0648\u064a\u0629 \u0645\u0639 Dockerfile (Multi-stage) \u0623\u0648  </li> <li>CI/CD \u0645\u0646 GitHub/DevOps.  </li> <li>\u0627\u0636\u0628\u0637 \u0627\u0644\u0634\u0628\u0643\u0629/\u0627\u0644\u0646\u0637\u0627\u0642: \u0627\u0631\u0628\u0637 DNS\u060c \u0641\u0639\u0651\u0644 TLS/HTTPS\u060c \u0648\u2014\u0625\u0646 \u0623\u0645\u0643\u0646\u2014HSTS.  </li> <li>\u0627\u0644\u062a\u0648\u0633\u0651\u0639: \u0639\u064a\u0651\u0646 \u0642\u0648\u0627\u0639\u062f Autoscale (CPU/\u0627\u0644\u0637\u0644\u0628\u0627\u062a/\u0627\u0644\u0632\u0645\u0646) \u0648\u062d\u062f\u0648\u062f \u0627\u0644\u0645\u0648\u0627\u0631\u062f.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u0641\u0639\u0651\u0644 Logs/Metrics/Tracing\u060c \u0648\u0623\u0636\u0650\u0641 \u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0644\u0644\u0641\u0634\u0644/\u0627\u0644\u062a\u0623\u062e\u064a\u0631.  </li> <li>\u0628\u064a\u0626\u0627\u062a: \u0623\u0646\u0634\u0626 Staging/Production \u0645\u0639 \u0641\u062a\u062d\u0627\u062a \u0646\u0634\u0631 (Slots) \u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0622\u0645\u0646 \u0642\u0628\u0644 \u0627\u0644\u062a\u0628\u062f\u064a\u0644.</li> </ol>"},{"location":"terms/paas/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0639\u062f\u0645 \u0627\u0644\u0627\u0633\u062a\u0645\u0627\u0639 \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0641\u0630 \u0627\u0644\u0645\u0645\u0631\u0651\u064e\u0631 \u0645\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u2192 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0644\u0627 \u064a\u0633\u062a\u0642\u0628\u0644.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0645\u0644\u0641\u0651\u0627\u062a \u0645\u062d\u0644\u064a\u0651\u0629 \u062f\u0627\u0626\u0645\u0629 (\u0627\u0644\u0639\u062f\u064a\u062f \u0645\u0646 PaaS \u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0639\u0627\u0628\u0631) \u0628\u062f\u0644 \u062a\u062e\u0632\u064a\u0646 \u062e\u0627\u0631\u062c\u064a (Blob/DB).  </li> <li>\u0648\u0636\u0639 \u0627\u0644\u0623\u0633\u0631\u0627\u0631 \u0641\u064a \u0627\u0644\u0643\u0648\u062f/\u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 \u0628\u062f\u0644 \u0645\u062f\u064a\u0631 \u0623\u0633\u0631\u0627\u0631.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u0635\u062d\u0651\u0629 \u0648\u0645\u0647\u0644\u0627\u062a \u2192 \u0642\u0631\u0627\u0631\u0627\u062a \u062a\u0648\u0633\u0651\u0639/\u0625\u0639\u0627\u062f\u0629 \u062a\u0634\u063a\u064a\u0644 \u062e\u0627\u0637\u0626\u0629.  </li> <li>\u0625\u0647\u0645\u0627\u0644 \u0642\u064a\u0648\u062f \u0627\u0644\u062e\u0631\u062c/\u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0623\u0648 \u0639\u062f\u0645 \u062a\u0641\u0639\u064a\u0644 HTTPS \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627.  </li> <li>\u0646\u0642\u0644 \u062a\u0637\u0628\u064a\u0642 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 Session In-Proc \u062f\u0648\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062e\u0632\u0646 \u062c\u0644\u0633\u0627\u062a \u062e\u0627\u0631\u062c\u064a (Redis/DB).</li> </ul>"},{"location":"terms/paas/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IaaS \u062e\u0648\u0627\u062f\u0645 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u062a\u062f\u064a\u0631\u0647\u0627 \u0623\u0646\u062a (OS/\u0634\u0628\u0643\u0629) \u062d\u0631\u0651\u064a\u0629 \u0639\u0627\u0644\u064a\u0629\u061b \u0639\u0628\u0621 \u0625\u062f\u0627\u0631\u0629 \u0623\u0639\u0644\u0649 (\u062a\u0635\u062d\u064a\u062d\u0627\u062a/\u062a\u0648\u0633\u0651\u0639) PaaS \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0643\u0648\u062f \u0639\u0644\u0649 \u0645\u0646\u0635\u0651\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0646\u0634\u0631 \u0633\u0631\u064a\u0639\u060c Autoscale\u060c \u0634\u0647\u0627\u062f\u0627\u062a\u060c Logs\u061b \u062a\u062d\u0643\u0651\u0645 \u0623\u0642\u0644 \u0628\u0627\u0644\u0640 OS SaaS \u062a\u0637\u0628\u064a\u0642 \u062c\u0627\u0647\u0632 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0646\u0647\u0627\u0626\u064a \u0623\u0642\u0644 \u062a\u062e\u0635\u064a\u0635 \u0639\u0644\u0649 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u061b \u0644\u0627 \u062a\u0646\u0634\u0631 \u0643\u0648\u062f\u0643 \u0623\u0646\u062a"},{"location":"terms/paas/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>PaaS \u064a\u062c\u0639\u0644\u0643 \u062a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0643\u0648\u062f \u0648\u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0628\u064a\u0646\u0645\u0627 \u062a\u064f\u062f\u0627\u0631 \u0627\u0644\u0628\u0646\u064a\u0629 \u0648\u0627\u0644\u062a\u0648\u0633\u0651\u0639 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627. \u0627\u0636\u0628\u0637 PORT/health checks/\u0627\u0644\u0623\u0633\u0631\u0627\u0631\u060c \u0641\u0639\u0651\u0644 HTTPS/\u0645\u0631\u0627\u0642\u0628\u0629\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 Autoscale \u0644\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0634\u0631\u064d \u0633\u0631\u064a\u0639 \u0648\u0645\u0648\u062b\u0648\u0642.</p>"},{"location":"terms/platform-dependent/","title":"Platform-Dependent","text":""},{"location":"terms/platform-dependent/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Platform-Dependent \u2014 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 (\u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644/\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0629/\u0627\u0644\u0628\u064a\u0626\u0629).</p>"},{"location":"terms/platform-dependent/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0633\u0644\u0648\u0643 \u0623\u0648 \u0628\u0631\u0646\u0627\u0645\u062c \u0645\u0631\u062a\u0628\u0637 \u0628\u062e\u0635\u0627\u0626\u0635 \u0645\u0646\u0635\u0651\u0629 \u0645\u0639\u064a\u0651\u0646\u0629 (Windows\u060c Linux\u060c macOS\u060c ARM/x64\u2026). \u0642\u062f \u064a\u0639\u0645\u0644 \u0628\u0634\u0643\u0644 \u0645\u062e\u062a\u0644\u0641 \u0623\u0648 \u064a\u062a\u0639\u0637\u0651\u0644 \u0639\u0646\u062f \u0646\u0642\u0644\u0647 \u0625\u0644\u0649 \u0645\u0646\u0635\u0651\u0629 \u0623\u062e\u0631\u0649 \u0645\u0627 \u0644\u0645 \u064a\u064f\u062a\u0643\u064a\u0641 \u0645\u0639\u0647\u0627.</p>"},{"location":"terms/platform-dependent/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<p>\u0645\u062b\u0644 \u0623\u062f\u0648\u0627\u062a \u0643\u0647\u0631\u0628\u0627\u0626\u064a\u0629 \u062a\u0639\u0645\u0644 \u0639\u0644\u0649 \u0641\u0648\u0644\u062a \u0645\u062d\u062f\u0651\u062f: \u0644\u0648 \u063a\u064a\u0651\u0631\u062a \u0627\u0644\u0628\u0644\u062f (\u0627\u0644\u0645\u0646\u0635\u0651\u0629) \u0642\u062f \u062a\u062d\u062a\u0627\u062c \u0645\u062d\u0648\u0651\u0644. \u0641\u064a \u0627\u0644\u0628\u0631\u0645\u062c\u0629\u060c \u0627\u0644\u0627\u062e\u062a\u0644\u0627\u0641\u0627\u062a \u062a\u0638\u0647\u0631 \u0641\u064a: - \u0641\u0648\u0627\u0635\u0644 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a (<code>\\</code> \u0645\u0642\u0627\u0628\u0644 <code>/</code>). - \u0646\u0647\u0627\u064a\u0627\u062a \u0627\u0644\u0623\u0633\u0637\u0631 (<code>\\r\\n</code> \u0645\u0642\u0627\u0628\u0644 <code>\\n</code>). - \u0623\u0633\u0645\u0627\u0621 \u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u0623\u0635\u0644\u064a\u0651\u0629 (<code>.dll</code>/<code>.so</code>/<code>.dylib</code>). - \u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0637\u0631\u0641\u064a\u0651\u0629 (<code>dir</code> \u0645\u0642\u0627\u0628\u0644 <code>ls</code>).  </p>"},{"location":"terms/platform-dependent/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u062e\u064a\u0651\u0644 \u0648\u0635\u0641\u0629 \u0637\u0628\u062e \u062a\u062a\u0637\u0644\u0651\u0628 \u0641\u0631\u0646\u064b\u0627 \u063a\u0627\u0632\u064a\u064b\u0627 \u0648\u0645\u0643\u0648\u0651\u0646\u064b\u0627 \u0645\u062d\u0644\u064a\u064b\u0627 \u0646\u0627\u062f\u0631\u064b\u0627. \u0633\u062a\u0639\u0645\u0644 \u062a\u0645\u0627\u0645\u064b\u0627 \u0641\u064a \u0645\u0637\u0628\u062e\u0643\u060c \u0644\u0643\u0646 \u0641\u064a \u0645\u0637\u0628\u062e \u0645\u062e\u062a\u0644\u0641 \u0642\u062f \u062a\u062d\u062a\u0627\u062c \u0628\u062f\u0627\u0626\u0644 (\u0641\u0631\u0646 \u0643\u0647\u0631\u0628\u0627\u0626\u064a/\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0623\u062e\u0631\u0649) \u0623\u0648 \u062a\u0641\u0634\u0644 \u0627\u0644\u0646\u062a\u064a\u062c\u0629. \u0647\u0630\u0627 \u0647\u0648 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629.</p>"},{"location":"terms/platform-dependent/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0648\u0627\u0644 \u0645\u062d\u0627\u064a\u062f\u0629: <code>Path.Combine</code>, <code>Environment.NewLine</code>, <code>Directory.EnumerateFiles</code>.  </li> <li>\u0644\u0627 \u062a\u0641\u062a\u0631\u0636 \u0645\u0633\u0627\u0631\u0627\u062a \u062b\u0627\u0628\u062a\u0629\u061b \u0627\u0639\u062a\u0645\u062f <code>Environment.GetFolderPath(...)</code>.  </li> <li>\u0644\u0641\u0651\u0650 \u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0646\u0638\u0627\u0645 \u0628\u0637\u0628\u0642\u0629 \u062a\u062c\u0631\u064a\u062f (Interface) \u0645\u0639 \u062a\u0646\u0641\u064a\u0630 \u0644\u0643\u0644 \u0645\u0646\u0635\u0651\u0629 \u0639\u0646\u062f \u0627\u0644\u0636\u0631\u0648\u0631\u0629.  </li> <li>\u0627\u0639\u0632\u0644 \u0627\u0633\u062a\u062f\u0639\u0627\u0621\u0627\u062a \u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u0623\u0635\u0644\u064a\u0629 \u0641\u064a \u0637\u0628\u0642\u0629 \u0648\u0627\u062d\u062f\u0629 \u0648\u0642\u062f\u0651\u0645 \u0628\u062f\u0627\u0626\u0644 \u0645\u064f\u062f\u0627\u0631\u0629 \u0625\u0646 \u0623\u0645\u0643\u0646.  </li> <li>\u0623\u0636\u0641 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a CI \u0639\u0644\u0649 Windows/Linux/macOS.  </li> <li>\u0648\u062b\u0651\u0642 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0627\u0644\u0645\u062f\u0639\u0648\u0645\u0629 \u0648\u0642\u062f\u0651\u0645 Fallbacks \u0648\u0627\u0636\u062d\u0629.</li> </ul>"},{"location":"terms/platform-dependent/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Platform-Dependent \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u064a\u0632\u0627\u062a \u062e\u0627\u0635\u0651\u0629 \u0628\u0645\u0646\u0635\u0651\u0629 \u0623\u062f\u0627\u0621 \u0623\u0639\u0644\u0649 \u0623\u062d\u064a\u0627\u0646\u064b\u0627\u060c \u0644\u0643\u0646 \u0642\u0627\u0628\u0644\u064a\u0629 \u0646\u0642\u0644 \u0623\u0642\u0644 Platform-Independent \u064a\u0639\u0645\u0644 \u0643\u0645\u0627 \u0647\u0648 \u0639\u0644\u0649 \u0639\u062f\u0651\u0629 \u0645\u0646\u0635\u0651\u0627\u062a \u064a\u0641\u0636\u064e\u0651\u0644 \u0644\u0644\u0645\u0646\u062a\u062c\u0627\u062a \u0627\u0644\u0639\u0627\u0645\u0629 \u0648\u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a Cross-Platform \u0642\u0627\u0639\u062f\u0629 \u0643\u0648\u062f \u0648\u0627\u062d\u062f\u0629 \u0645\u0639 \u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0628\u0633\u064a\u0637\u0629 \u0642\u062f \u062a\u062a\u0637\u0644\u0651\u0628 \u0641\u0631\u0648\u0639 \u0634\u0631\u0637\u064a\u0629 \u0645\u062d\u062f\u0648\u062f\u0629 (OS checks)"},{"location":"terms/platform-dependent/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u064a\u0645\u0646\u062d\u0643 \u0648\u0635\u0648\u0644\u064b\u0627 \u0644\u0645\u064a\u0632\u0627\u062a \u0642\u0648\u064a\u0629 \u062e\u0627\u0635\u0629 \u0628\u0643\u0644 \u0646\u0638\u0627\u0645\u060c \u0644\u0643\u0646\u0647 \u064a\u0642\u064a\u0651\u062f \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0646\u0642\u0644. \u0627\u0644\u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0630\u0647\u0628\u064a\u0629: \u0627\u0639\u0632\u0644 \u0645\u0627 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629\u060c \u0648\u0627\u0633\u062a\u0639\u0645\u0644 \u0648\u0627\u062c\u0647\u0627\u062a \u0645\u062d\u0627\u064a\u062f\u0629 \u0642\u062f\u0631 \u0627\u0644\u0625\u0645\u0643\u0627\u0646.</p>"},{"location":"terms/platform-independent/","title":"Platform-Independent","text":""},{"location":"terms/platform-independent/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Platform-Independent \u2014 \u0645\u0633\u062a\u0642\u0644\u0651 \u0639\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 (\u064a\u0639\u0645\u0644 \u0643\u0645\u0627 \u0647\u0648 \u0639\u0644\u0649 \u0623\u0646\u0638\u0645\u0629 \u0645\u062a\u0639\u062f\u062f\u0629 \u062f\u0648\u0646 \u062a\u0639\u062f\u064a\u0644\u0627\u062a).</p>"},{"location":"terms/platform-independent/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0645\u064f\u0635\u0645\u0651\u064e\u0645\u0629 \u0644\u062a\u0639\u0645\u0644 \u0628\u062f\u0648\u0646 \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0639\u0644\u0649 \u0623\u0646\u0638\u0645\u0629 \u062a\u0634\u063a\u064a\u0644 \u0648\u0645\u0639\u0645\u0627\u0631\u064a\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629. \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629 \u0648\u062a\u062c\u0631\u064a\u062f\u0627\u062a \u0639\u0627\u0645\u0651\u0629 \u0628\u062f\u0644 \u062a\u0641\u0627\u0635\u064a\u0644 \u0643\u0644 \u0646\u0638\u0627\u0645.</p>"},{"location":"terms/platform-independent/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<p>\u0641\u0643\u0651\u0631 \u0628\u0643\u0648\u062f\u0643 \u0643\u0640\"\u0644\u063a\u0629 \u0639\u0627\u0644\u0645\u064a\u0629\": - \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0633\u0627\u0631\u0627\u062a \u0648\u0646\u0647\u0627\u064a\u0627\u062a \u0623\u0633\u0637\u0631 \u0648\u062a\u0631\u0645\u064a\u0632\u0627\u062a \u0645\u062d\u0627\u064a\u062f\u0629. - \u064a\u062a\u062c\u0646\u0651\u0628 \u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u062e\u0627\u0635\u0629 \u0645\u062b\u0644 <code>dir/ls</code>. - \u0644\u0627 \u064a\u0641\u062a\u0631\u0636 \u0648\u062c\u0648\u062f \u0645\u0644\u0641\u0627\u062a/\u0633\u062c\u0644\u0627\u062a (Registry) \u0628\u0639\u064a\u0646\u0647\u0627. - \u064a\u062e\u062a\u0628\u0631 \u0646\u0641\u0633\u0647 \u0639\u0644\u0649 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0646\u0638\u0627\u0645 (Windows, Linux, macOS).</p>"},{"location":"terms/platform-independent/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0634\u0627\u062d\u0646 \u0639\u0627\u0644\u0645\u064a \u0628\u0645\u062f\u062e\u0644 USB \u064a\u0639\u0645\u0644 \u0641\u064a \u0623\u064a \u0628\u0644\u062f \u0644\u0623\u0646 \u0627\u0644\u062c\u0647\u062f \u0648\u0627\u0644\u0645\u0642\u0628\u0633 \u0623\u064f\u062e\u0641\u064a\u062a \u062a\u0641\u0627\u0635\u064a\u0644\u0647\u0645\u0627 \u062e\u0644\u0641 \u0645\u062d\u0648\u0651\u0644 \u0642\u064a\u0627\u0633\u064a. \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644\u0645\u0633\u062a\u0642\u0644 \u0639\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u064a\u0641\u0639\u0644 \u0627\u0644\u0634\u064a\u0621 \u0646\u0641\u0633\u0647 \u0645\u0639 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644.</p>"},{"location":"terms/platform-independent/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 \u0628\u0631\u0646\u0627\u0645\u062c \u0645\u0633\u062a\u0642\u0644 \u0639\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 APIs \u0642\u064a\u0627\u0633\u064a\u0629 (<code>Path</code>, <code>Environment</code>, <code>HttpClient</code>, <code>Stream</code>\u060c \u0648 <code>System.Text.Json</code>).  </li> <li>\u062a\u062c\u0646\u0651\u0628 P/Invoke \u0648\u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u0623\u0635\u0644\u064a\u0629 \u0625\u0646 \u0644\u0645 \u062a\u0643\u0646 \u0636\u0631\u0648\u0631\u064a\u0629.  </li> <li>\u0644\u0627 \u062a\u0643\u062a\u0628 \u0645\u0633\u0627\u0631\u0627\u062a/\u0623\u0648\u0627\u0645\u0631 \u064a\u062f\u0648\u064a\u064b\u0627\u061b \u0627\u0639\u062a\u0645\u062f <code>Path.Combine</code> \u0648<code>Directory.*</code>.  </li> <li>\u0648\u062d\u0651\u062f \u0627\u0644\u062a\u0631\u0645\u064a\u0632 (UTF-8) \u0648\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062a\u0648\u0627\u0631\u064a\u062e/\u0627\u0644\u0645\u0646\u0627\u0637\u0642 \u0639\u0628\u0631 <code>DateTimeOffset</code> \u0648<code>CultureInfo</code>.  </li> <li>\u0623\u0636\u0641 CI \u064a\u0628\u0646\u064a \u0648\u064a\u062e\u062a\u0628\u0631 \u0639\u0644\u0649 Windows \u0648Linux \u0648macOS.  </li> <li>\u0648\u062b\u0651\u0642 \u0623\u0646 \u0628\u0631\u0646\u0627\u0645\u062c\u0643 \u0644\u0627 \u064a\u0641\u062a\u0631\u0636 \u0635\u0644\u0627\u062d\u064a\u0627\u062a/\u0645\u062c\u0644\u062f\u0627\u062a \u062e\u0627\u0635\u0629 \u0628\u0646\u0638\u0627\u0645 \u0628\u0639\u064a\u0646\u0647.</li> </ul>"},{"location":"terms/platform-independent/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Platform-Independent \u064a\u0639\u0645\u0644 \u0643\u0645\u0627 \u0647\u0648 \u0639\u0644\u0649 \u0623\u0646\u0638\u0645\u0629 \u0645\u062a\u0639\u062f\u062f\u0629 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062a\u062c\u0631\u064a\u062f\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629\u061b \u0633\u0647\u0644 \u0627\u0644\u0646\u0634\u0631 \u0627\u0644\u0648\u0627\u0633\u0639 Cross-Platform \u0642\u0627\u0639\u062f\u0629 \u0643\u0648\u062f \u0648\u0627\u062d\u062f\u0629 \u0645\u0639 \u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0637\u0641\u064a\u0641\u0629 \u0642\u062f \u064a\u062d\u0648\u064a \u0641\u0631\u0648\u0639 \u0634\u0631\u0637\u064a\u0629 \u0642\u0644\u064a\u0644\u0629 \u062d\u0633\u0628 \u0627\u0644\u0646\u0638\u0627\u0645 Platform-Dependent \u064a\u0633\u062a\u0641\u064a\u062f \u0645\u0646 \u0645\u064a\u0632\u0627\u062a \u0646\u0638\u0627\u0645 \u0645\u062d\u062f\u062f \u0623\u062f\u0627\u0621/\u0645\u064a\u0632\u0627\u062a \u0623\u0639\u0644\u0649 \u0645\u0642\u0627\u0628\u0644 \u0642\u0627\u0628\u0644\u064a\u0629 \u0646\u0642\u0644 \u0623\u0642\u0644"},{"location":"terms/platform-independent/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0627\u0633\u062a\u0642\u0644\u0627\u0644 \u0639\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u064a\u0639\u0646\u064a \u0643\u062a\u0627\u0628\u0629 \u0643\u0648\u062f \u0639\u0627\u0645 \u0648\u0645\u062d\u0627\u064a\u062f\u060c \u064a\u0641\u0647\u0645\u0647 \u0623\u064a \u0646\u0638\u0627\u0645 \u062f\u0648\u0646 \u062a\u0639\u062f\u064a\u0644. \u0627\u0644\u0642\u0627\u0639\u062f\u0629: \u0627\u0633\u062a\u0639\u0645\u0644 \u0627\u0644\u062a\u062c\u0631\u064a\u062f \u0627\u0644\u0642\u064a\u0627\u0633\u064a\u060c \u0648\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0646\u0638\u0627\u0645\u060c \u0648\u0627\u062e\u062a\u0628\u0631 \u0639\u0628\u0631 \u0627\u0644\u0623\u0646\u0638\u0645\u0629.</p>"},{"location":"terms/platform/","title":"Platform","text":""},{"location":"terms/platform/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Software/Computing Platform \u2014 \u0645\u0646\u0635\u0651\u0629 \u0628\u0631\u0645\u062c\u064a\u0629/\u062d\u0648\u0633\u0628\u064a\u0629.</p>"},{"location":"terms/platform/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u064a\u0626\u0629 \u062a\u0646\u0641\u064a\u0630 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u062a\u064f\u0648\u0641\u0651\u0631 \u0646\u0638\u0627\u0645 \u062a\u0634\u063a\u064a\u0644/\u0639\u062a\u0627\u062f + Runtime + \u0648\u0627\u062c\u0647\u0627\u062a \u0648\u0646\u064f\u0638\u064f\u0645 (SDK/APIs) \u0648\u0623\u062d\u064a\u0627\u0646\u064b\u0627 \u062e\u062f\u0645\u0627\u062a \u0633\u062d\u0627\u0628\u064a\u0629. \u062a\u0633\u0645\u062d \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a\u0643 \u0623\u0646 \u062a\u0639\u0645\u0644 \u0648\u062a\u062a\u0643\u0627\u0645\u0644 \u062f\u0648\u0646 \u0623\u0646 \u062a\u0639\u064a\u062f \u0627\u062e\u062a\u0631\u0627\u0639 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0627\u062a.</p>"},{"location":"terms/platform/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0645\u0646\u0635\u0651\u0629 = \u0627\u0644\u0623\u0631\u0636\u064a\u0629 \u0627\u0644\u062a\u064a \u064a\u0642\u0641 \u0639\u0644\u064a\u0647\u0627 \u062a\u0637\u0628\u064a\u0642\u0643: OS + \u0645\u0643\u062a\u0628\u0627\u062a + \u0623\u062f\u0648\u0627\u062a + \u0623\u062d\u064a\u0627\u0646\u064b\u0627 \u0645\u062a\u062c\u0631/\u062a\u0648\u0632\u064a\u0639.  </li> <li>\u0623\u0646\u0648\u0627\u0639 \u0634\u0627\u0626\u0639\u0629: \u0645\u0646\u0635\u0651\u0629 \u0646\u0638\u0627\u0645 (Windows/Linux/iOS/Android)\u060c \u0645\u0646\u0635\u0651\u0629 Runtime (.NET/JVM)\u060c \u0645\u0646\u0635\u0651\u0629 \u0633\u062d\u0627\u0628\u064a\u0629 (Azure/AWS)\u060c \u0645\u0646\u0635\u0651\u0629 \u0623\u062c\u0647\u0632\u0629 (x64/ARM).  </li> <li>\u0627\u0644\u0641\u0631\u0642 \u0639\u0646 Framework: \u0627\u0644\u0625\u0637\u0627\u0631 \u064a\u062d\u062f\u0651\u062f \u0647\u064a\u0643\u0644 \u0627\u0644\u0639\u0645\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u061b \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u062a\u0648\u0641\u0651\u0631 \u0628\u064a\u0626\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u062d\u0648\u0644\u0647.</li> </ul>"},{"location":"terms/platform/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0627\u0628\u0646\u0650 \u0645\u0637\u0639\u064e\u0645\u0643 \u062f\u0627\u062e\u0644 \u0645\u062c\u0645\u0651\u0639 \u0645\u062a\u0643\u0627\u0645\u0644: \u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621\u060c \u0627\u0644\u0645\u064a\u0627\u0647\u060c \u0627\u0644\u0623\u0645\u0646\u060c \u0627\u0644\u0645\u0633\u0627\u062d\u0627\u062a\u060c \u0627\u0644\u0644\u0648\u062d\u0627\u062a\u060c \u0627\u0644\u062f\u0641\u0639. \u0647\u0630\u0627 \u0627\u0644\u0645\u062c\u0645\u0651\u0639 \u0647\u0648 \u0627\u0644\u0645\u0646\u0635\u0651\u0629. \u0637\u0631\u064a\u0642\u0629 \u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u0645\u0637\u0639\u0645 \u0645\u0646 \u0627\u0644\u062f\u0627\u062e\u0644 \u0647\u064a \u0627\u0644\u0625\u0637\u0627\u0631.</p>"},{"location":"terms/platform/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 \u2014 \u0627\u0644\u062a\u0639\u0631\u0641 \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u0648\u0627\u0644\u062a\u0641\u0631\u0651\u0639 \u0627\u0644\u0622\u0645\u0646","text":"<p>C#<pre><code>using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    static void Main()\n    {\n        // \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u0645\u0646\u0635\u0651\u0629\n        Console.WriteLine($\"OS: {RuntimeInformation.OSDescription}\");\n        Console.WriteLine($\"Arch: {RuntimeInformation.ProcessArchitecture}\");\n        Console.WriteLine($\".NET: {RuntimeInformation.FrameworkDescription}\");\n\n        // \u062a\u0641\u0631\u0651\u0639 \u0633\u0644\u0648\u0643\u064a \u062d\u0633\u0628 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 (Cross-Platform \u0645\u0639 \u0641\u0631\u0648\u0642 \u0635\u063a\u064a\u0631\u0629)\n        string home =\n            OperatingSystem.IsWindows() ? Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) :\n            OperatingSystem.IsLinux()   ? Environment.GetEnvironmentVariable(\"HOME\") ?? \"/home\" :\n            OperatingSystem.IsMacOS()   ? Environment.GetEnvironmentVariable(\"HOME\") ?? \"/Users\" :\n            Environment.CurrentDirectory;\n\n        // \u0645\u0633\u0627\u0631 \u0645\u062a\u0648\u0627\u0641\u0642 \u0639\u0628\u0631 Path.Combine\n        string appDir = Path.Combine(home ?? \".\", \".myapp\");\n        Console.WriteLine($\"App Dir: {appDir}\");\n\n        // \u0645\u062b\u0627\u0644: \u0623\u0645\u0631 \u0642\u0635\u064a\u0631 \u062e\u0627\u0635 \u0628\u0648\u064a\u0646\u062f\u0648\u0632 (\u0627\u062e\u062a\u064a\u0627\u0631\u064a \u0648\u0628\u062d\u0631\u0627\u0633\u0629)\n        if (OperatingSystem.IsWindows())\n        {\n            Console.WriteLine(\"Running on Windows \u2014 enable Windows-specific integration here.\");\n        }\n    }\n}\n</code></pre> \u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0643\u062a\u0628 \u0643\u0648\u062f\u064b\u0627 \u0639\u0627\u0628\u0631\u064b\u0627 \u0644\u0644\u0645\u0646\u0635\u0651\u0627\u062a\u060c \u062b\u0645 \u0623\u0636\u0641 \u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 (OS checks) \u0645\u0639 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u062c\u0647\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629 (<code>Path</code>, <code>Environment</code>).</p>"},{"location":"terms/platform/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u062e\u062a\u064a\u0627\u0631/\u062a\u0628\u0646\u0651\u064a \u0645\u0646\u0635\u0651\u0629","text":"<ol> <li>\u062d\u062f\u062f \u0627\u0644\u062c\u0645\u0647\u0648\u0631 \u0648\u0628\u064a\u0626\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644: \u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646\u060c OS\u060c \u0627\u062a\u0635\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u0629\u060c \u0642\u064a\u0648\u062f \u0627\u0644\u0623\u0645\u0627\u0646.  </li> <li>\u0642\u0631\u0651\u0631 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0646\u0634\u0631: \u0633\u0637\u062d \u0645\u0643\u062a\u0628/\u0645\u062d\u0645\u0648\u0644/\u0648\u064a\u0628/\u0633\u062d\u0627\u0628\u0629/\u062d\u0627\u0648\u064a\u0627\u062a.  </li> <li>\u0627\u062e\u062a\u0631 Runtime/SDK: \u0645\u062b\u0644 .NET \u0623\u0648 JVM \u0623\u0648 Node.js \u0648\u0641\u0642 \u0641\u0631\u064a\u0642\u0643 \u0648\u0645\u062a\u0637\u0644\u0628\u0627\u062a\u0643.  </li> <li>\u062e\u062f\u0645\u0627\u062a \u0623\u0633\u0627\u0633\u064a\u0629: \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0647\u0648\u064a\u0629\u060c \u062a\u062e\u0632\u064a\u0646\u060c \u0645\u0631\u0627\u0633\u0644\u0629 \u2014 \u0648\u0641\u0651\u0631\u0647\u0627 \u0645\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u0625\u0646 \u0623\u0645\u0643\u0646 (PaaS).  </li> <li>\u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0646\u0642\u0644: \u0627\u0633\u062a\u0647\u062f\u0641 Cross-Platform\u060c \u0648\u0627\u062c\u0639\u0644 \u0627\u0644\u062a\u0641\u0631\u0651\u0639\u0627\u062a \u0645\u062d\u0635\u0648\u0631\u0629 \u0648\u0648\u0627\u0636\u062d\u0629.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646 \u0648\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644: TLS/HSTS \u0648CSP \u0639\u0644\u0649 \u0627\u0644\u0648\u064a\u0628\u060c \u0623\u0633\u0631\u0627\u0631 \u0641\u064a Vault\u060c \u0648\u0633\u064a\u0627\u0633\u0627\u062a \u0648\u0635\u0648\u0644.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629 \u0648\u0627\u0644\u0627\u0646\u062a\u0634\u0627\u0631: \u0633\u062c\u0644\u0627\u062a\u060c \u0642\u064a\u0627\u0633\u0627\u062a\u060c \u062a\u062a\u0628\u0651\u0639\u061b CI/CD\u061b \u0642\u0646\u0648\u0627\u062a \u062a\u062d\u062f\u064a\u062b (Store/Packages/Containers).</li> </ol>"},{"location":"terms/platform/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062e\u0644\u0637 Framework \u0628\u0640 Platform \u2192 \u0642\u0631\u0627\u0631\u0627\u062a \u0623\u062f\u0648\u0627\u062a \u063a\u064a\u0631 \u0645\u0646\u0627\u0633\u0628\u0629.  </li> <li>\u0643\u062a\u0627\u0628\u0629 \u0645\u0633\u0627\u0631\u0627\u062a/\u0645\u0644\u0641\u0627\u062a \u0628\u0623\u0633\u0644\u0648\u0628 \u0645\u0646\u0635\u0651\u0629 \u0648\u0627\u062d\u062f\u0629 (\u0641\u0648\u0627\u0635\u0644 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a\u060c \u062a\u0631\u0645\u064a\u0632\u0627\u062a) \u062f\u0648\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0627\u062c\u0647\u0627\u062a .NET \u0627\u0644\u0645\u0648\u062d\u0651\u062f\u0629.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a\u0627\u062a (x64/ARM) \u0623\u0648 \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0645\u0627\u0646 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0645\u0646\u0635\u0651\u0629.  </li> <li>\u0631\u0628\u0637 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0628\u062e\u062f\u0645\u0629 \u0633\u062d\u0627\u0628\u064a\u0629 \u0628\u0623\u0633\u0644\u0648\u0628 \u0645\u062d\u0643\u0645 \u062f\u0648\u0646 \u0637\u0628\u0642\u0629 \u062a\u062c\u0631\u064a\u062f \u2192 \u0635\u0639\u0648\u0628\u0629 \u0646\u0642\u0644 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u0644\u0627\u062d\u0642\u064b\u0627.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 features \u062d\u0635\u0631\u064a\u0629 \u062f\u0648\u0646 \u0628\u062f\u0627\u0626\u0644 \u2192 \u064a\u0642\u0644\u0651 Portability.</li> </ul>"},{"location":"terms/platform/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Framework \u0647\u064a\u0643\u0644 \u0639\u0645\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 (\u062a\u0648\u062c\u064a\u0647/DI/\u2026) \u0627\u0644\u0625\u0637\u0627\u0631 \u064a\u0646\u0627\u062f\u064a \u0643\u0648\u062f\u0643 (IoC)\u061b \u0645\u062b\u0627\u0644: ASP.NET Core Platform \u0628\u064a\u0626\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0648\u0627\u0644\u062e\u062f\u0645\u0627\u062a \u062d\u0648\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 OS/Runtime/SDK/\u062e\u062f\u0645\u0627\u062a\u061b \u0646\u0638\u0627\u0645 \u062a\u0648\u0632\u064a\u0639 \u0648\u062a\u0643\u0627\u0645\u0644 Runtime \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0634\u064a\u0641\u0631\u0629 \u0627\u0644\u0645\u064f\u062f\u0627\u0631\u0629/VM \u0645\u062b\u0644 .NET CLR \u0623\u0648 JVM\u061b \u062c\u0632\u0621 \u0645\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 Operating System \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0639\u062a\u0627\u062f \u0648\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0648\u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0637\u0628\u0642\u0629 \u0623\u0633\u0627\u0633\u064a\u0629 \u0636\u0645\u0646 \u0627\u0644\u0645\u0646\u0635\u0651\u0629 PaaS \u0645\u0646\u0635\u0651\u0629 \u0633\u062d\u0627\u0628\u064a\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0644\u0644\u0646\u0634\u0631 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0642\u0648\u0627\u0639\u062f \u0628\u064a\u0627\u0646\u0627\u062a/\u0647\u0648\u064a\u0629/\u0645\u0631\u0627\u0633\u0644\u0629 \u062c\u0627\u0647\u0632\u0629"},{"location":"terms/platform/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0645\u0646\u0635\u0651\u0629 = \u0627\u0644\u0628\u064a\u0626\u0629 \u0627\u0644\u062a\u064a \u062a\u064f\u0634\u063a\u0651\u0644 \u062a\u0637\u0628\u064a\u0642\u0643 \u0648\u062a\u0632\u0648\u0651\u062f \u062e\u062f\u0645\u0627\u062a\u0647 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629. \u0627\u0628\u0646\u0650 \u062a\u0637\u0628\u064a\u0642\u0643 \u0641\u0648\u0642 \u0645\u0646\u0635\u0651\u0629 \u0645\u062a\u0648\u0627\u0641\u0642\u0629 \u0645\u0639 \u062c\u0645\u0647\u0648\u0631\u0643\u060c \u0648\u0627\u062c\u0639\u0644 \u0627\u0644\u0643\u0648\u062f \u0639\u0627\u0628\u0631\u064b\u0627 \u0644\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0645\u0639 \u062a\u0643\u064a\u064a\u0641\u0627\u062a \u0645\u0648\u0636\u0639\u064a\u0629 \u0648\u0627\u0636\u062d\u0629.</p>"},{"location":"terms/polymorphism/","title":"Polymorphism","text":""},{"location":"terms/polymorphism/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Polymorphism \u2014 \u062a\u0639\u062f\u0651\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644 (\u0646\u0641\u0633 \u0627\u0644\u0648\u0627\u062c\u0647\u0629\u060c \u0633\u0644\u0648\u0643 \u0645\u062e\u062a\u0644\u0641 \u062d\u0633\u0628 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0641\u0639\u0644\u064a).</p>"},{"location":"terms/polymorphism/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0622\u0644\u064a\u0629 \u0641\u064a OOP \u062a\u0633\u0645\u062d \u0628\u0625\u0633\u062a\u062f\u0639\u0627\u0621 \u0646\u0641\u0633 \u0627\u0644\u062f\u0627\u0644\u0629/\u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0639\u0644\u0649 \u0643\u0627\u0626\u0646\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0644\u062a\u064f\u0646\u0641\u0651\u0630 \u0628\u0637\u0631\u064a\u0642\u0629 \u0645\u062e\u062a\u0644\u0641\u0629 \u0648\u0641\u0642 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u0644\u0644\u0643\u0627\u0626\u0646 \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 (Runtime Dispatch).</p>"},{"location":"terms/polymorphism/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0643\u062a\u0628 \u0643\u0648\u062f\u064b\u0627 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0646\u0648\u0639 \u0623\u0633\u0627\u0633\u064a (\u0623\u0648 Interface).  </li> <li>\u0646\u0645\u0631\u0651\u0631 \u0644\u0647 \u0623\u0646\u0648\u0627\u0639 \u0645\u0634\u062a\u0642\u0651\u0629\u061b \u062a\u064f\u0646\u0641\u0651\u064e\u0630 \u0627\u0644\u062f\u0648\u0627\u0644 \u0627\u0644\u0645\u064f\u0639\u0627\u062f \u062a\u0639\u0631\u064a\u0641\u0647\u0627 <code>override</code> \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627.  </li> <li>\u064a\u0648\u062c\u062f \u0623\u064a\u0636\u064b\u0627 \u062a\u0639\u062f\u0651\u062f \u0623\u0634\u0643\u0627\u0644 \u062a\u062c\u0645\u064a\u0639\u064a/\u0648\u0642\u062a \u062a\u0631\u062c\u0645\u0629 \u0645\u062b\u0644 Overloading \u0648Generics.</li> </ul>"},{"location":"terms/polymorphism/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0632\u0631 \u201c\u062a\u0634\u063a\u064a\u0644\u201d \u0648\u0627\u062d\u062f: \u064a\u0634\u063a\u0651\u0644 \u0641\u064a\u062f\u064a\u0648 \u0639\u0644\u0649 \u0627\u0644\u062a\u0644\u0641\u0627\u0632\u060c \u0623\u063a\u0646\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0645\u0634\u063a\u0651\u0644\u060c \u0648\u0639\u0631\u0636 \u0639\u0644\u0649 \u0627\u0644\u0628\u0631\u0648\u062c\u0643\u062a\u0631. \u0627\u0644\u0632\u0631 \u0645\u0648\u062d\u0651\u062f\u060c \u0644\u0643\u0646 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u064a\u062a\u0628\u062f\u0651\u0644 \u062d\u0633\u0628 \u0627\u0644\u062c\u0647\u0627\u0632.</p>"},{"location":"terms/polymorphism/#c-override","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u062a\u0639\u062f\u0651\u062f \u0623\u0634\u0643\u0627\u0644 \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 (\u062a\u0648\u0631\u064a\u062b + override)","text":"C#<pre><code>// .NET 8/9\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nabstract class Shape\n{\n    public abstract double Area(); // \u0648\u0627\u062c\u0647\u0629 \u0645\u0648\u062d\u0651\u062f\u0629 \u0644\u062d\u0633\u0627\u0628 \u0627\u0644\u0645\u0633\u0627\u062d\u0629\n}\n\nclass Circle : Shape\n{\n    public double Radius { get; }\n    public Circle(double r) =&gt; Radius = r;\n    public override double Area() =&gt; Math.PI * Radius * Radius;\n}\n\nclass Rectangle : Shape\n{\n    public double W { get; }  // \u0627\u0644\u0639\u0631\u0636\n    public double H { get; }  // \u0627\u0644\u0627\u0631\u062a\u0641\u0627\u0639\n    public Rectangle(double w, double h) { W = w; H = h; }\n    public override double Area() =&gt; W * H;\n}\n\nclass Program\n{\n    static void Main()\n    {\n        // \u0645\u0631\u062c\u0639 \u0645\u0646 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0623\u0633\u0627\u0633\u064a \u0644\u0639\u062f\u0629 \u0623\u0646\u0648\u0627\u0639 \u0641\u0639\u0644\u064a\u0629\n        List&lt;Shape&gt; shapes = new() { new Circle(2), new Rectangle(3, 4) };\n\n        // Runtime Dispatch: \u0643\u0644 \u0639\u0646\u0635\u0631 \u064a\u0646\u0641\u0651\u0630 Area \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0647\n        double total = shapes.Sum(s =&gt; s.Area());\n        Console.WriteLine($\"Total area = {total:F2}\");\n\n        // \u2717 \u0645\u0636\u0627\u062f \u0646\u0645\u0637: \u0641\u062d\u0635 \u0627\u0644\u0646\u0648\u0639 \u0628\u062f\u0644 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 polymorphism\n        // foreach (var s in shapes)\n        //   if (s is Circle c) ... else if (s is Rectangle r) ...\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0633\u062a\u062f\u0639\u0627\u0621 <code>Area()</code> \u0639\u0644\u0649 \u0642\u0627\u0626\u0645\u0629 <code>Shape</code> \u064a\u0648\u062c\u0651\u0647 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0645\u0637\u0627\u0628\u0642 \u0644\u0646\u0648\u0639 \u0627\u0644\u0643\u0627\u0626\u0646.</p>"},{"location":"terms/polymorphism/#c-interface","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u062a\u0639\u062f\u0651\u062f \u0623\u0634\u0643\u0627\u0644 \u0639\u0628\u0631 Interface (\u062a\u0628\u062f\u064a\u0644 \u0633\u0644\u0648\u0643 \u0628\u062f\u0648\u0646 \u0648\u0631\u0627\u062b\u0629)","text":"C#<pre><code>public interface INotifier { void Send(string to, string msg); }\n\npublic class EmailNotifier : INotifier\n{\n    public void Send(string to, string msg) =&gt; Console.WriteLine($\"Email \u2192 {to}: {msg}\");\n}\n\npublic class SmsNotifier : INotifier\n{\n    public void Send(string to, string msg) =&gt; Console.WriteLine($\"SMS \u2192 {to}: {msg}\");\n}\n\npublic class AlertsService\n{\n    private readonly INotifier _notifier;               // \u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0629\n    public AlertsService(INotifier notifier) =&gt; _notifier = notifier;\n\n    public void Critical(string user) =&gt; _notifier.Send(user, \"CRITICAL ALERT!\");\n}\n</code></pre> <p>\u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629: \u0627\u0633\u062a\u0628\u062f\u0644 <code>EmailNotifier</code> \u0628\u0640 <code>SmsNotifier</code> \u062f\u0648\u0646 \u062a\u0639\u062f\u064a\u0644 <code>AlertsService</code>.</p>"},{"location":"terms/polymorphism/#overloadinggenerics","title":"\u0645\u062b\u0627\u0644 \u0642\u0635\u064a\u0631 \u2014 Overloading/Generics (\u062a\u0639\u062f\u0651\u062f \u0623\u0634\u0643\u0627\u0644 \u0648\u0642\u062a \u062a\u0631\u062c\u0645\u0629)","text":"C#<pre><code>// Overloading: \u0646\u0641\u0633 \u0627\u0644\u0627\u0633\u0645\u060c \u062a\u0648\u0642\u064a\u0639\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629 (Compile-time)\nvoid Print(int x)    =&gt; Console.WriteLine($\"int:{x}\");\nvoid Print(string s) =&gt; Console.WriteLine($\"string:{s}\");\n\n// Generics: \u0633\u0644\u0648\u0643 \u0639\u0627\u0645 \u0644\u0623\u0646\u0648\u0627\u0639 \u0645\u062a\u0639\u062f\u062f\u0629 \u0628\u0642\u064a\u062f \u0648\u0627\u062c\u0647\u0629\nT Max&lt;T&gt;(T a, T b) where T : IComparable&lt;T&gt; =&gt; a.CompareTo(b) &gt;= 0 ? a : b;\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u0647\u0630\u0627 \u064a\u062e\u062a\u0644\u0641 \u0639\u0646 \u0627\u0644\u0640 Runtime Polymorphism (\u0644\u0627 \u064a\u062d\u062a\u0627\u062c <code>virtual/override</code>).</p>"},{"location":"terms/polymorphism/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062a\u0639\u062f\u0651\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644 \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>\u0635\u0645\u0651\u0645 \u062d\u0648\u0644 \u0648\u0627\u062c\u0647\u0627\u062a/\u0623\u0646\u0648\u0627\u0639 \u0623\u0633\u0627\u0633\u064a\u0629\u061b \u0644\u0627 \u062a\u0631\u0628\u0637 \u0627\u0644\u0643\u0648\u062f \u0628\u0640 \u0623\u0646\u0648\u0627\u0639 \u0645\u0644\u0645\u0648\u0633\u0629.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>virtual/abstract</code> \u0648<code>override</code> \u0644\u0644\u0633\u0644\u0648\u0643 \u0627\u0644\u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0628\u062f\u064a\u0644.  </li> <li>\u0641\u0636\u0651\u0644 Interfaces \u0639\u0646\u062f\u0645\u0627 \u062a\u0631\u064a\u062f \u062a\u0631\u0643\u064a\u0628\u064b\u0627 \u0644\u0627 \u062a\u0648\u0631\u064a\u062b\u064b\u0627 \u0639\u0645\u064a\u0642\u064b\u0627.  </li> <li>\u062d\u0642\u0651\u0642 DI \u0644\u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 (Email/SMS/\u2026)\u060c \u0648\u0633\u0647\u0651\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u062a\u062c\u0646\u0651\u0628 \u0641\u062d\u0648\u0635 \u0627\u0644\u0646\u0648\u0639 \u0627\u0644\u0645\u062a\u0643\u0631\u0651\u0631\u0629 (<code>is/switch</code>)\u2014\u0627\u0634\u0631\u062d \u0627\u0644\u0633\u0644\u0648\u0643 \u062f\u0627\u062e\u0644 \u0627\u0644\u0643\u0627\u0626\u0646 \u0646\u0641\u0633\u0647.  </li> <li>\u0625\u0646 \u0627\u062d\u062a\u062c\u062a \u062a\u062e\u0635\u064a\u0635\u064b\u0627 \u0645\u0648\u0636\u0639\u064a\u064b\u0627\u060c \u0627\u0633\u062a\u0639\u0645\u0644 \u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 (Strategy Pattern).</li> </ol>"},{"location":"terms/polymorphism/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0633\u0644\u0627\u0633\u0644 <code>if (obj is TypeA) \u2026 else if \u2026</code> \u0628\u062f\u0644 \u0627\u0644\u0627\u0633\u062a\u0641\u0627\u062f\u0629 \u0645\u0646 <code>override</code>.  </li> <li>\u062a\u0648\u0631\u064a\u062b \u0639\u0645\u064a\u0642 \u064a\u0642\u064a\u0651\u062f \u0627\u0644\u062a\u0635\u0645\u064a\u0645\u2014\u0641\u0636\u0651\u0644 Composition.  </li> <li>\u062c\u0639\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 <code>virtual</code> \u062f\u0648\u0646 \u062d\u0627\u062c\u0629 (\u0633\u0637\u062d \u062a\u063a\u064a\u064a\u0631 \u0643\u0628\u064a\u0631).  </li> <li>\u0643\u0633\u0631 LSP (\u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0644\u064a\u0633\u0644\u064a\u0633\u0643\u0648\u0641): \u0635\u0646\u0641 \u0645\u0634\u062a\u0642 \u0644\u0627 \u064a\u062d\u062a\u0631\u0645 \u0639\u0642\u062f \u0627\u0644\u0623\u0633\u0627\u0633\u064a.  </li> <li>\u062e\u0644\u0637 Overloading \u0645\u0639 Overriding (\u0627\u0644\u0623\u0648\u0644 \u062a\u0631\u062c\u0645\u064a\u060c \u0627\u0644\u062b\u0627\u0646\u064a \u0648\u0642\u062a \u062a\u0634\u063a\u064a\u0644).</li> </ul>"},{"location":"terms/polymorphism/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Runtime Polymorphism \u0646\u0641\u0633 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u2192 \u062a\u0646\u0641\u064a\u0630 \u0645\u062e\u062a\u0644\u0641 \u0648\u0642\u062a \u0627\u0644\u062a\u0634\u063a\u064a\u0644 <code>virtual/abstract</code> + <code>override</code> \u0623\u0648 Interface Overriding \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0633\u0627\u0633 \u0641\u064a \u0627\u0644\u0645\u0634\u062a\u0642 \u064a\u062d\u062a\u0627\u062c <code>virtual/abstract</code> \u0641\u064a \u0627\u0644\u0623\u0633\u0627\u0633 Overloading \u0646\u0641\u0633 \u0627\u0644\u0627\u0633\u0645 \u0628\u062a\u0648\u0642\u064a\u0639\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629 \u0642\u0631\u0627\u0631 \u0627\u0644\u0645\u062a\u0631\u062c\u0645 \u0639\u0646\u062f \u0627\u0644\u062a\u0631\u062c\u0645\u0629 Interface Polymorphism \u062a\u0628\u062f\u064a\u0644 \u0633\u0644\u0648\u0643 \u0639\u0628\u0631 \u0639\u0642\u062f \u0645\u0648\u062d\u0651\u062f \u064a\u0642\u0644\u0651\u0644 \u0627\u0642\u062a\u0631\u0627\u0646\u060c \u064a\u0633\u0647\u0651\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Generics \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0639\u0627\u0645\u0629 \u0644\u0623\u0646\u0648\u0627\u0639 \u0645\u062e\u062a\u0644\u0641\u0629 \u062a\u0639\u062f\u0651\u062f \u0623\u0634\u0643\u0627\u0644 \u062a\u0631\u062c\u0645\u064a \u0645\u0639 \u0642\u064a\u0648\u062f"},{"location":"terms/polymorphism/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Polymorphism \u064a\u0645\u0643\u0651\u0646\u0643 \u0645\u0646 \u0643\u062a\u0627\u0628\u0629 \u0643\u0648\u062f \u0639\u0627\u0645 \u064a\u0639\u0645\u0644 \u0645\u0639 \u0623\u0646\u0648\u0627\u0639 \u0645\u062a\u0639\u062f\u062f\u0629 \u062f\u0648\u0646 \u0641\u0631\u0648\u0639 \u0634\u0631\u0637\u064a\u0629. \u0627\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0627\u062a \u0648override\u060c \u0648\u0645\u0631\u0651\u0631 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0628\u0640 DI\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0635\u0645\u064a\u0645 \u0645\u0631\u0646\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0648\u0633\u0647\u0644 \u0627\u0644\u062a\u0637\u0648\u064a\u0631. </p>"},{"location":"terms/presentation-tier/","title":"Presentation Tier","text":""},{"location":"terms/presentation-tier/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Presentation (Web/UI) Tier \u2014 \u0637\u0628\u0642\u0629 \u0627\u0644\u0639\u0631\u0636.</p>"},{"location":"terms/presentation-tier/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0627\u0644\u0637\u0628\u0642\u0629 \u0627\u0644\u0645\u0648\u0627\u062c\u0647\u0629 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645/\u0627\u0644\u0639\u0645\u064a\u0644: HTTP/UI\u060c \u0646\u0645\u0627\u0630\u062c \u0637\u0644\u0628/\u0631\u062f\u060c \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629/\u0627\u0644\u0645\u0639\u062f\u0651\u0627\u062a \u0627\u0644\u0648\u0633\u064a\u0637\u0629\u060c \u0648\u062a\u062d\u0648\u064a\u0644 (Mapping) \u0628\u064a\u0646 \u0627\u0644\u0639\u0627\u0644\u0645 \u0627\u0644\u062e\u0627\u0631\u062c\u064a \u0648\u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644. \u0644\u0627 \u062a\u062d\u062a\u0648\u064a \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 \u0645\u0639\u0642\u0651\u062f\u0629.</p>"},{"location":"terms/presentation-tier/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0633\u062a\u0642\u0628\u0644 \u0627\u0644\u0637\u0644\u0628\u0627\u062a\u060c \u062a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a\u060c \u062a\u062a\u0641\u0627\u0648\u0636 \u0639\u0644\u0649 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 (JSON/\u2026)\u060c \u0648\u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0647\u0648\u064a\u0629.  </li> <li>\u062a\u062d\u0648\u0651\u0644 DTO \u2194 Use Case\u060c \u0648\u062a\u0639\u064a\u062f \u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u0648\u0631\u0633\u0627\u0626\u0644 \u0623\u062e\u0637\u0627\u0621 \u0645\u0648\u062d\u0651\u062f\u0629.  </li> <li>\u062a\u062a\u0648\u0627\u0635\u0644 \u0645\u0639 Business Tier \u0639\u0628\u0631 \u0639\u0642\u0648\u062f (Interfaces) \u2014 \u0628\u0644\u0627 SQL \u0623\u0648 \u0645\u0646\u0637\u0642 \u0645\u062c\u0627\u0644 \u062f\u0627\u062e\u0644\u064a.</li> </ul>"},{"location":"terms/presentation-tier/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0637\u0639\u0645 (\u0627\u0644\u0627\u0633\u062a\u0642\u0628\u0627\u0644): \u062a\u0633\u062a\u0642\u0628\u0644 \u0627\u0644\u0632\u0628\u0648\u0646\u060c \u062a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062d\u062c\u0632\u060c \u062a\u0643\u062a\u0628 \u0627\u0644\u0637\u0644\u0628 \u0628\u0646\u0645\u0648\u0630\u062c \u0645\u0648\u062d\u0651\u062f\u060c \u062b\u0645 \u062a\u0631\u0633\u0644\u0647 \u0644\u0644\u0645\u0637\u0628\u062e (\u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644). \u0644\u0627 \u062a\u0637\u0628\u062e \u0628\u0646\u0641\u0633\u0647\u0627.</p>"},{"location":"terms/presentation-tier/#c-minimal-api-business-tier-dtos","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0637\u0628\u0642\u0629 \u0639\u0631\u0636 Minimal API \u062a\u062a\u062d\u062f\u062b \u0625\u0644\u0649 Business Tier \u0639\u0628\u0631 DTOs + \u0623\u062e\u0637\u0627\u0621 \u0645\u0648\u062d\u0651\u062f\u0629","text":"C#<pre><code>// Web (Presentation Tier) \u2014 .NET 8/9\n// dotnet new web -n WebApi &amp;&amp; cd WebApi\nusing System.ComponentModel.DataAnnotations;\nusing Microsoft.AspNetCore.Mvc;\n\n// ====== \u0639\u0642\u0648\u062f \u0637\u0628\u0642\u0629 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 (\u064a\u062a\u0645 \u062a\u0646\u0641\u064a\u0630\u0647\u0627 \u0641\u064a Business/Data Tiers) ======\npublic interface IOrderService\n{\n    Task&lt;PlaceOrderResult&gt; PlaceOrderAsync(PlaceOrderCommand cmd, CancellationToken ct = default);\n}\npublic record PlaceOrderCommand(int OrderId, string CustomerId, List&lt;OrderItem&gt; Items);\npublic record OrderItem(string Sku, int Qty, decimal Price);\npublic record PlaceOrderResult(int OrderId, decimal Total, string Status);\n\n// ====== \u0628\u062f\u0621 \u062a\u0634\u063a\u064a\u0644 \u0637\u0628\u0642\u0629 \u0627\u0644\u0639\u0631\u0636 ======\nvar builder = WebApplication.CreateBuilder(args);\n\n// Presentation Tier duties: Filters/Middleware/Auth/RateLimit/ProblemDetails\u2026\nbuilder.Services.AddProblemDetails();\nbuilder.Services.AddAuthorization();\nbuilder.Services.AddEndpointsApiExplorer().AddSwaggerGen();\n\n// \u062d\u0642\u0646 \u0639\u0642\u062f \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u2014 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u064a\u0623\u062a\u064a \u0645\u0646 \u0645\u0634\u0631\u0648\u0639 \u0622\u062e\u0631\nbuilder.Services.AddScoped&lt;IOrderService, OrderServiceStub&gt;(); // \u0645\u0624\u0642\u062a\u064b\u0627\n\nvar app = builder.Build();\napp.UseHttpsRedirection();\napp.UseAuthorization();\napp.UseExceptionHandler(); // \u064a\u0633\u062a\u062e\u062f\u0645 ProblemDetails \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627\napp.UseSwagger().UseSwaggerUI();\n\n// \u0646\u0642\u0637\u0629 \u0625\u0646\u0634\u0627\u0621 \u0637\u0644\u0628 \u2014 \u062a\u062a\u062d\u0642\u0642 \u0648\u062a\u062d\u0648\u0651\u0644 \u062b\u0645 \u062a\u0633\u062a\u062f\u0639\u064a \u0627\u0644\u0623\u0639\u0645\u0627\u0644\napp.MapPost(\"/v1/orders\", async ([FromBody] PlaceOrderHttp dto, IOrderService svc, HttpContext ctx, CancellationToken ct) =&gt;\n{\n    // 1) \u062a\u062d\u0642\u0642 \u062a\u0631\u0643\u064a\u0628\u064a \u0633\u0631\u064a\u0639\n    var errs = Validate(dto);\n    if (errs.Count &gt; 0) return Results.ValidationProblem(errs);\n\n    // 2) \u062a\u062d\u0648\u064a\u0644 DTO (\u0639\u0631\u0636) \u2192 Command (\u0623\u0639\u0645\u0627\u0644)\n    var cmd = new PlaceOrderCommand(\n        dto.OrderId,\n        dto.CustomerId!,\n        dto.Items!.Select(i =&gt; new OrderItem(i.Sku!, i.Qty, i.Price)).ToList());\n\n    // 3) \u0646\u062f\u0627\u0621 \u062d\u0627\u0644\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0625\u0631\u062c\u0627\u0639 \u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u062f\u0642\u064a\u0642\u0629\n    try\n    {\n        var res = await svc.PlaceOrderAsync(cmd, ct);\n        return Results.Created($\"/v1/orders/{res.OrderId}\", res);\n    }\n    catch (ArgumentException ex)        { return Results.ValidationProblem(new() { [\"\"] = new[] { ex.Message } }); }\n    catch (InvalidOperationException ex){ return Results.BadRequest(new { error = ex.Message }); }\n})\n.Produces&lt;PlaceOrderResult&gt;(StatusCodes.Status201Created)\n.ProducesProblem(StatusCodes.Status400BadRequest)\n.ProducesValidationProblem(StatusCodes.Status422UnprocessableEntity)\n.WithTags(\"Orders\");\n\napp.Run();\n\n\n// ====== DTOs \u0637\u0628\u0642\u0629 \u0627\u0644\u0639\u0631\u0636 + \u062a\u062d\u0642\u0642 \u062a\u0631\u0643\u064a\u0628\u064a \u0628\u0633\u064a\u0637 ======\npublic class PlaceOrderHttp\n{\n    [Range(1, int.MaxValue)] public int OrderId { get; init; }\n    [Required, MinLength(3)] public string? CustomerId { get; init; }\n    [MinLength(1)] public List&lt;PlaceOrderItemHttp&gt;? Items { get; init; }\n}\npublic class PlaceOrderItemHttp\n{\n    [Required, RegularExpression(@\"^[A-Z0-9-]{3,20}$\")] public string? Sku { get; init; }\n    [Range(1, int.MaxValue)] public int Qty { get; init; }\n    [Range(typeof(decimal), \"0.01\", \"79228162514264337593543950335\")] public decimal Price { get; init; }\n}\n\nstatic Dictionary&lt;string, string[]&gt; Validate(object model)\n{\n    var ctx = new ValidationContext(model);\n    var results = new List&lt;ValidationResult&gt;();\n    Validator.TryValidateObject(model, ctx, results, true);\n    if (model is PlaceOrderHttp po &amp;&amp; po.Items is not null)\n        foreach (var it in po.Items)\n            Validator.TryValidateObject(it, new ValidationContext(it), results, true);\n\n    return results\n        .GroupBy(r =&gt; r.MemberNames.FirstOrDefault() ?? \"\")\n        .ToDictionary(g =&gt; g.Key, g =&gt; g.Select(r =&gt; r.ErrorMessage ?? \"invalid\").ToArray());\n}\n\n// ====== \u062a\u0646\u0641\u064a\u0630 \u0645\u0624\u0642\u062a \u0644\u0639\u0642\u062f \u0627\u0644\u0623\u0639\u0645\u0627\u0644 (Stub) \u2014 \u0644\u0623\u063a\u0631\u0627\u0636 \u0627\u0644\u0639\u0631\u0636 \u0641\u0642\u0637 ======\npublic class OrderServiceStub : IOrderService\n{\n    public Task&lt;PlaceOrderResult&gt; PlaceOrderAsync(PlaceOrderCommand cmd, CancellationToken ct = default)\n    {\n        if (cmd.Items.Sum(i =&gt; i.Price * i.Qty) &lt;= 0) throw new InvalidOperationException(\"total_must_be_positive\");\n        return Task.FromResult(new PlaceOrderResult(cmd.OrderId, cmd.Items.Sum(i =&gt; i.Price * i.Qty), \"confirmed\"));\n    }\n}\n</code></pre> <p>\u0645\u0627\u0630\u0627 \u0641\u0639\u0644\u062a \u0637\u0628\u0642\u0629 \u0627\u0644\u0639\u0631\u0636\u061f - \u062a\u062d\u0642\u0651\u0642 \u062a\u0631\u0643\u064a\u0628\u064a + \u062a\u062d\u0648\u064a\u0644 DTO \u2192 Command. - \u0631\u062c\u0651\u0639\u062a \u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u0635\u062d\u064a\u062d\u0629 (201/400/422). - \u0644\u0645 \u062a\u0646\u0641\u0651\u0630 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u0648\u0644\u0627 SQL \u2014 \u0643\u0644 \u0630\u0644\u0643 \u0641\u064a \u0627\u0644\u0637\u0628\u0642\u0627\u062a \u0627\u0644\u062e\u0644\u0641\u064a\u0629.</p>"},{"location":"terms/presentation-tier/#presentation-tier_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 Presentation Tier \u0633\u0644\u064a\u0645","text":"<ol> <li>\u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u0648\u0627\u062a\u0641\u0627\u0642 \u0623\u062e\u0637\u0627\u0621 \u0645\u0648\u062d\u0651\u062f (<code>ProblemDetails</code>, \u0631\u0645\u0648\u0632 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0631\u062c\u0645\u0629).  </li> <li>Validation \u0639\u0644\u0649 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a\u060c \u0648Sanitization (Trim/Normalize) \u0642\u0628\u0644 \u0627\u0644\u062a\u062d\u0648\u064a\u0644.  </li> <li>AuthN/AuthZ\u060c CORS\u060c Rate Limiting\u060c \u0648Content Negotiation.  </li> <li>Mapping \u0648\u0627\u0636\u062d \u0628\u064a\u0646 DTO \u2194 Use Case/Domain\u060c \u0645\u0639 Versioning (<code>/v1</code>).  </li> <li>Observability: \u0633\u062c\u0651\u0644 <code>Correlation-Id</code>\u060c \u0632\u0645\u0646 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629\u060c \u0648\u0646\u062a\u0627\u0626\u062c \u0627\u0644\u062a\u0641\u0648\u064a\u0636.  </li> <li>\u0644\u0627 \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644: \u0623\u064a \u0642\u0627\u0639\u062f\u0629 \u063a\u064a\u0631 \u0645\u0631\u062a\u0628\u0637\u0629 \u0628\u0627\u0644\u0646\u0642\u0644/\u0627\u0644\u0639\u0631\u0636 \u062a\u064f\u0631\u062d\u0651\u064e\u0644 \u0644\u0644\u0623\u0639\u0645\u0627\u0644.</li> </ol>"},{"location":"terms/presentation-tier/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0643\u062a\u0627\u0628\u0629 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0639\u0645\u0644 \u062f\u0627\u062e\u0644 Controllers/Endpoints.  </li> <li>\u0625\u0631\u062c\u0627\u0639 200 \u062f\u0627\u0626\u0645\u064b\u0627 \u0628\u062f\u0644 \u0623\u0643\u0648\u0627\u062f \u062f\u0642\u064a\u0642\u0629 (201/204/400/401/403/404/409/422).  </li> <li>\u062a\u0645\u0631\u064a\u0631 Entities DB \u0645\u0628\u0627\u0634\u0631\u0629 \u0644\u0644\u0639\u0645\u064a\u0644 \u0628\u062f\u0644 DTO.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0641\u0627\u0648\u0636 \u0639\u0644\u0649 \u0627\u0644\u0645\u062d\u062a\u0648\u0649/\u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0648ETag/Cache \u062d\u064a\u062b \u064a\u0641\u064a\u062f.  </li> <li>\u0639\u062f\u0645 \u062a\u0648\u062d\u064a\u062f \u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u062a\u062d\u0642\u0642 \u2192 \u062a\u062c\u0631\u0628\u0629 \u0633\u064a\u0626\u0629 \u0644\u0644\u0648\u0627\u062c\u0647\u0627\u062a.</li> </ul>"},{"location":"terms/presentation-tier/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Presentation Tier \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0647\u0648\u064a\u0629/\u0627\u0644\u062a\u062d\u0642\u0642/\u0627\u0644\u062a\u062d\u0648\u064a\u0644/\u0627\u0644\u0631\u062f \u0628\u0644\u0627 \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644\u061b \u064a\u062a\u062d\u062f\u062b \u0645\u0639 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u0639\u0628\u0631 \u0639\u0642\u0648\u062f Business Tier \u062a\u0646\u0641\u064a\u0630 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0645\u062c\u0627\u0644 \u064a\u0646\u0633\u0651\u0642\u060c \u064a\u0641\u0631\u0636 \u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a\u060c \u0644\u0627 UI/HTTP Data Tier \u062a\u062e\u0632\u064a\u0646 \u0648\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0648\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0639\u0642\u0648\u062f DB/Cache/Files\u061b \u0644\u0627 \u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 HTTP"},{"location":"terms/presentation-tier/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Presentation Tier = \u201c\u0628\u0627\u0628 \u0627\u0644\u0646\u0638\u0627\u0645\u201d \u0639\u0644\u0649 \u0627\u0644\u0648\u064a\u0628. \u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a\u060c \u0637\u0628\u0651\u0642 \u0627\u0644\u0647\u0648\u064a\u0629 \u0648\u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a \u0627\u0644\u0633\u0637\u062d\u064a\u0629\u060c \u062d\u0648\u0651\u0644 \u0644\u0640 Business Tier\u060c \u0648\u0623\u0639\u062f \u0627\u0633\u062a\u062c\u0627\u0628\u0627\u062a \u062f\u0642\u064a\u0642\u0629 \u0648\u0645\u0648\u062d\u0651\u062f\u0629\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u0646\u0638\u064a\u0641\u0629\u060c \u0622\u0645\u0646\u0629\u060c \u0648\u0633\u0647\u0644\u0629 \u0627\u0644\u062a\u0637\u0648\u064a\u0631.</p>"},{"location":"terms/produce-api/","title":"Produce API (Kafka)","text":""},{"location":"terms/produce-api/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Produce API \u2014 \u0648\u0627\u062c\u0647\u0629 \u201c\u0625\u0646\u062a\u0627\u062c/\u0625\u0631\u0633\u0627\u0644\u201d \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0625\u0644\u0649 \u0645\u0648\u0636\u0648\u0639\u0627\u062a (Topics) \u0643\u0627\u0641\u0643\u0627.</p>"},{"location":"terms/produce-api/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0637\u0644\u0628 (Request) \u064a\u0636\u064a\u0641 \u0633\u062c\u0644\u0627\u062a Records \u0625\u0644\u0649 Partitions \u062f\u0627\u062e\u0644 Topic. \u062a\u062a\u062d\u0643\u0651\u0645 \u0641\u064a \u0627\u0644\u0627\u0633\u062a\u0644\u0627\u0645 \u0639\u0628\u0631 <code>acks=0|1|all</code>\u060c \u0648\u062a\u062f\u0639\u0645 \u0627\u0644\u062a\u062c\u0632\u0626\u0629 \u0628\u0627\u0644\u0645\u0641\u062a\u0627\u062d\u060c \u0627\u0644\u062f\u0645\u062c/\u0627\u0644\u0636\u063a\u0637\u060c \u0648\u062e\u064a\u0627\u0631\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u0645\u062b\u0644 Idempotence \u0648Transactions (\u0644\u0644\u0640 Exactly-Once \u0639\u0628\u0631 \u0645\u0648\u0636\u0648\u0639\u0627\u062a/\u0623\u0642\u0633\u0627\u0645).</p>"},{"location":"terms/produce-api/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0644 Topic \u0645\u0642\u0633\u0651\u0645 \u0625\u0644\u0649 Partitions (\u0623\u0634\u0631\u0637\u0629 \u0646\u0642\u0644 \u0645\u062a\u0648\u0627\u0632\u064a\u0629).  </li> <li>\u062a\u0636\u0639 \u0631\u0633\u0627\u0644\u0629 \u062a\u062d\u0645\u0644 Key\u061b \u0646\u0641\u0633 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u064a\u0630\u0647\u0628 \u063a\u0627\u0644\u0628\u064b\u0627 \u0644\u0646\u0641\u0633 \u0627\u0644\u0642\u0633\u0645 \u2192 \u062a\u0631\u062a\u064a\u0628 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645.  </li> <li><code>acks</code> = \u0625\u064a\u0635\u0627\u0644 \u0627\u0644\u0627\u0633\u062a\u0644\u0627\u0645:  </li> <li><code>0</code> \u0628\u0644\u0627 \u0625\u064a\u0635\u0627\u0644 (\u0623\u0633\u0631\u0639/\u0623\u062e\u0637\u0631)\u060c <code>1</code> \u0645\u0646 \u0627\u0644\u0642\u0627\u0626\u062f \u0641\u0642\u0637\u060c <code>all</code> \u0645\u0646 \u0643\u0644 \u0627\u0644\u0646\u0633\u062e (\u0623\u0643\u062b\u0631 \u0623\u0645\u0627\u0646\u064b\u0627).  </li> <li>Idempotent Producer \u064a\u0645\u0646\u0639 \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0639\u0646\u062f \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629.  </li> <li>Transactions \u062a\u062c\u0639\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0631\u0633\u0627\u0626\u0644 \u062a\u064f\u0643\u062a\u0628 \u0623\u0648 \u062a\u064f\u0644\u063a\u0649 \u0645\u0639\u064b\u0627 (Atomic).</li> </ul>"},{"location":"terms/produce-api/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0634\u0631\u0643\u0629 \u0634\u062d\u0646: \u062a\u062e\u062a\u0627\u0631 \u0633\u064a\u0631\u064b\u0627 (Partition) \u062d\u0633\u0628 \u0627\u0644\u0645\u0644\u0635\u0642/\u0627\u0644\u0645\u0641\u062a\u0627\u062d. \u062a\u0637\u0644\u0628 \u0625\u064a\u0635\u0627\u0644 \u0627\u0633\u062a\u0644\u0627\u0645 \u0645\u0646 \u0627\u0644\u0642\u0627\u0626\u062f \u0641\u0642\u0637 \u0623\u0648 \u0645\u0646 \u062c\u0645\u064a\u0639 \u0627\u0644\u0641\u0631\u0648\u0639 (acks). \u064a\u0645\u0643\u0646\u0643 \u0634\u062d\u0646 \u062f\u0641\u0639\u0629 \u0648\u0627\u062d\u062f\u0629 \u0648\u062a\u0624\u0643\u062f\u0647\u0627 \u0628\u0627\u0644\u0643\u0627\u0645\u0644 \u0623\u0648 \u062a\u0644\u063a\u064a\u0647\u0627 (\u0645\u0639\u0627\u0645\u0644\u0629).</p>"},{"location":"terms/produce-api/#c-kafka-idempotence-acksall","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0645\u0646\u062a\u0650\u062c Kafka \u0628\u0625\u0639\u062f\u0627\u062f \u0645\u0648\u062b\u0648\u0642\u064a\u0629 (Idempotence + acks=all) \u0648\u0645\u0639\u0627\u0645\u0644\u0627\u062a","text":"C#<pre><code>// .NET 8/9  \u2014  dotnet add package Confluent.Kafka\nusing System;\nusing System.Threading.Tasks;\nusing Confluent.Kafka;\n\nclass ProduceDemo\n{\n    static async Task Main()\n    {\n        var topic = \"orders\";\n        var config = new ProducerConfig\n        {\n            BootstrapServers = \"localhost:9092\",\n            Acks = Acks.All,                    // \u0625\u064a\u0635\u0627\u0644 \u0645\u0646 \u0643\u0644 \u0627\u0644\u0646\u0633\u062e\n            EnableIdempotence = true,          // \u0645\u0646\u0639 \u0627\u0644\u062a\u0643\u0631\u0627\u0631 \u0645\u0639 Retries\n            // \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0623\u062f\u0627\u0621/\u0632\u0645\u0646:\n            LingerMs = 10,                     // \u062f\u0645\u062c \u0631\u0633\u0627\u0626\u0644 \u0636\u0645\u0646 \u0646\u0627\u0641\u0630\u0629 \u0642\u0635\u064a\u0631\u0629\n            BatchSize = 64 * 1024,             // \u062d\u062c\u0645 \u062f\u0641\u0639\u0629\n            CompressionType = CompressionType.Lz4,\n            MessageTimeoutMs = 30000           // \u0645\u0647\u0644\u0629 \u0627\u0644\u062a\u0633\u0644\u064a\u0645\n            // (\u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0627\u0644\u062d\u062f\u064a\u062b\u0629 \u062a\u0636\u0628\u0637 max.in.flight/retries \u0628\u0645\u0627 \u064a\u0646\u0627\u0633\u0628 idempotence)\n        };\n\n        using var producer = new ProducerBuilder&lt;string, string&gt;(config).Build();\n\n        // \u0625\u0631\u0633\u0627\u0644 \u0631\u0633\u0627\u0644\u0629 \u0645\u0641\u0631\u062f\u0629 \u0628\u0645\u0641\u062a\u0627\u062d (\u064a\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645)\n        var dr = await producer.ProduceAsync(topic,\n            new Message&lt;string, string&gt;\n            {\n                Key = \"customer-42\",\n                Value = \"{ \\\"orderId\\\": 1001, \\\"amount\\\": 120.0 }\",\n                Headers = new Headers { new Header(\"type\", System.Text.Encoding.UTF8.GetBytes(\"created\")) }\n            });\n\n        Console.WriteLine($\"Delivered to {dr.TopicPartitionOffset} (partition={dr.Partition}, offset={dr.Offset})\");\n\n        // ====== \u0645\u0639\u0627\u0645\u0644\u0627\u062a (Exactly-Once \u0639\u0628\u0631 \u0639\u062f\u0629 \u0645\u0648\u0636\u0648\u0639\u0627\u062a/\u0623\u0642\u0633\u0627\u0645) ======\n        var txConfig = new ProducerConfig(config) { TransactionalId = \"orders-tx-producer-1\" };\n        using var txProducer = new ProducerBuilder&lt;string, string&gt;(txConfig).Build();\n\n        txProducer.InitTransactions(TimeSpan.FromSeconds(10));\n        try\n        {\n            txProducer.BeginTransaction();\n\n            txProducer.Produce(topic, new Message&lt;string, string&gt; { Key=\"customer-42\", Value=\"{\\\"orderId\\\":1002,\\\"amount\\\":75.0}\" });\n            txProducer.Produce(\"audit\", new Message&lt;string, string&gt; { Key=\"order-1002\", Value=\"{\\\"action\\\":\\\"created\\\"}\" });\n\n            // \u064a\u0645\u0643\u0646\u0643 \u0623\u064a\u0636\u064b\u0627 \u0625\u0631\u0633\u0627\u0644 offsets \u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643\u0629 \u0644\u062a\u062d\u0642\u064a\u0642 Exactly-Once end-to-end\n            // txProducer.SendOffsetsToTransaction(offsets, consumerGroupMetadata, TimeSpan.FromSeconds(5));\n\n            txProducer.CommitTransaction();  // \u0625\u0645\u0651\u0627 \u0627\u0644\u0643\u0644 \u0623\u0648 \u0644\u0627 \u0634\u064a\u0621\n        }\n        catch (ProduceException&lt;string, string&gt; ex)\n        {\n            Console.Error.WriteLine($\"Produce error: {ex.Error.Reason}\");\n            txProducer.AbortTransaction();   // \u0625\u0644\u063a\u0627\u0621 \u0627\u0644\u062f\u0641\u0639\u0629 \u0628\u0627\u0644\u0643\u0627\u0645\u0644\n        }\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - <code>EnableIdempotence=true</code> + <code>Acks=All</code> = \u0623\u0645\u0627\u0646 \u0623\u0639\u0644\u0649 \u0636\u062f \u0641\u0642\u062f/\u062a\u0643\u0631\u0627\u0631 \u0627\u0644\u0631\u0633\u0627\u0626\u0644. - Transactions \u062a\u062c\u0639\u0644 \u0625\u0631\u0633\u0627\u0644 \u0639\u062f\u0629 \u0631\u0633\u0627\u0626\u0644/\u0645\u0648\u0627\u0636\u064a\u0639 \u0630\u0631\u0651\u064a\u064b\u0627.</p>"},{"location":"terms/produce-api/#produce-api","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0636\u0628\u0637 Produce API \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>\u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 \u0627\u0644\u0645\u0641\u062a\u0627\u062d: \u0627\u062e\u062a\u0631 <code>Key</code> \u064a\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u0645\u062d\u0644\u064a\u0651\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (\u0646\u0641\u0633 \u0627\u0644\u0639\u0645\u064a\u0644 = \u0646\u0641\u0633 \u0627\u0644\u0642\u0633\u0645) \u0644\u062a\u0636\u0645\u0646 \u062a\u0631\u062a\u064a\u0628\u064b\u0627 \u0645\u0641\u064a\u062f\u064b\u0627.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646 \u0645\u0642\u0627\u0628\u0644 \u0627\u0644\u0632\u0645\u0646:  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>acks=all</code> \u0644\u0644\u0625\u0646\u062a\u0627\u062c \u0627\u0644\u062d\u0631\u062c.  </li> <li>\u0641\u0639\u0651\u0644 Idempotence \u0645\u0639 Retries \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627.  </li> <li>\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u0627\u062a\u0633\u0627\u0642 \u0639\u0627\u0628\u0631 \u0644\u0644\u0645\u0648\u0627\u0636\u064a\u0639/\u0627\u0644\u0623\u0642\u0633\u0627\u0645 \u0623\u0648 \u0645\u0639 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 (EOS).  </li> <li>\u0627\u0644\u0636\u0628\u0637 \u0644\u0644\u0623\u062f\u0627\u0621: <code>linger.ms</code> \u0648<code>batch.size</code> \u0648<code>compression</code> \u0644\u0631\u0641\u0639 Throughput\u060c \u0645\u0639 \u0645\u0631\u0627\u0642\u0628\u0629 \u0627\u0644\u0632\u0645\u0646.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u0627\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062a\u0642\u0627\u0631\u064a\u0631 \u0627\u0644\u062a\u0633\u0644\u064a\u0645 (Delivery Reports) \u0648\u0633\u062c\u0651\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621/\u0627\u0644\u0623\u0633\u0628\u0627\u0628.  </li> <li>\u0627\u0644\u062d\u062c\u0645 \u0648\u0627\u0644\u062d\u062f\u0648\u062f: \u0627\u0646\u062a\u0628\u0647 \u0644\u0640 <code>message.max.bytes</code> \u0639\u0644\u0649 \u0627\u0644\u0648\u0633\u064a\u0637 \u0648\u0627\u0644\u0639\u0645\u064a\u0644\u061b \u0642\u0633\u0651\u0645 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0643\u0628\u064a\u0631\u0629 (Chunking) \u0623\u0648 \u062e\u0632\u0646 \u062e\u0627\u0631\u062c\u064b\u0627.  </li> <li>\u0627\u0644\u062a\u0633\u0644\u0633\u0644/\u0627\u0644\u0645\u062e\u0637\u0637\u0627\u062a: \u0648\u062d\u0651\u062f \u0634\u0643\u0644 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 (Avro/JSON/Protobuf) \u0645\u0639 Schema Registry \u0644\u062a\u0637\u0648\u0651\u0631 \u0622\u0645\u0646.</li> </ol>"},{"location":"terms/produce-api/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0625\u0631\u0633\u0627\u0644 \u0628\u0640 <code>acks=0</code> \u0623\u0648 <code>1</code> \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u062d\u0631\u062c\u0629 \u2192 \u0627\u062d\u062a\u0645\u0627\u0644 \u0641\u0642\u062f.  </li> <li>\u0625\u0647\u0645\u0627\u0644 Idempotence \u0645\u0639 Retries \u2192 \u0631\u0633\u0627\u0626\u0644 \u0645\u0643\u0631\u0651\u0631\u0629.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u062a\u0631\u062a\u064a\u0628 \u0639\u0628\u0631 \u0623\u0642\u0633\u0627\u0645 \u0645\u062e\u062a\u0644\u0641\u0629 (\u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0645\u0636\u0645\u0648\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0633\u0645 \u0641\u0642\u0637).  </li> <li>\u0627\u0644\u0627\u0646\u062a\u0638\u0627\u0631 \u0627\u0644\u0645\u062a\u0632\u0627\u0645\u0646 \u0644\u0643\u0644 <code>ProduceAsync</code> \u2192 Throughput \u0636\u0639\u064a\u0641\u061b \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062f\u0645\u062c \u0648Callbacks.  </li> <li>\u0631\u0633\u0627\u0626\u0644 \u0636\u062e\u0645\u0629 \u062a\u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u062d\u062f \u2192 \u0641\u0634\u0644 \u062a\u0633\u0644\u064a\u0645 \u0645\u062a\u0643\u0631\u0631.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Transactions \u062f\u0648\u0646 \u0636\u0628\u0637 \u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643 \u0639\u0644\u0649 <code>isolation.level=read_committed</code>.</li> </ul>"},{"location":"terms/produce-api/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Produce API (Kafka) \u0646\u0634\u0631 \u0631\u0633\u0627\u0626\u0644 \u0625\u0644\u0649 Topic/Partition <code>acks</code>\u060c Key\u2192Partition\u060c Idempotence/Transactions Consume-API \u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0645\u0639 \u0625\u062f\u0627\u0631\u0629 Offsets \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0645\u0633\u062a\u0647\u0644\u0643\u064a\u0646\u060c \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0648\u0627\u0632\u0646"},{"location":"terms/produce-api/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Produce API \u0647\u0648 \u0637\u0631\u064a\u0642\u0643 \u0644\u0640 \u0625\u0644\u062d\u0627\u0642 \u0631\u0633\u0627\u0626\u0644 \u0628\u0645\u0648\u0627\u0636\u064a\u0639 \u0643\u0627\u0641\u0643\u0627 \u0645\u0639 \u0636\u0628\u0637 \u062f\u0642\u064a\u0642 \u0644\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u0648\u0627\u0644\u0623\u062f\u0627\u0621. \u0627\u062e\u062a\u0631 \u0645\u0641\u062a\u0627\u062d\u064b\u0627 \u0645\u0646\u0627\u0633\u0628\u064b\u0627\u060c \u0641\u0639\u0651\u0644 acks=all + idempotence\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 Transactions \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0625\u0631\u0633\u0627\u0644 \u0645\u062a\u064a\u0646\u060c \u0645\u0631\u0646\u060c \u0648\u064a\u0648\u0627\u0632\u0646 \u0628\u064a\u0646 \u0627\u0644\u0632\u0645\u0646 \u0648\u0627\u0644\u0633\u0644\u0627\u0645\u0629 \u0648\u0641\u0642 \u0627\u062d\u062a\u064a\u0627\u062c \u0645\u0646\u062a\u062c\u0643.</p>"},{"location":"terms/publish-subscribe/","title":"Publish\u2013Subscribe","text":""},{"location":"terms/publish-subscribe/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Publish\u2013Subscribe (Pub/Sub) \u2014 \u0646\u0645\u0637 \u0627\u0644\u0646\u0634\u0631 \u0648\u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643.</p>"},{"location":"terms/publish-subscribe/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u064a\u0631\u0633\u0644 \u0627\u0644\u0646\u0627\u0634\u0631 \u0631\u0633\u0627\u0626\u0644 \u0625\u0644\u0649 \u0645\u0648\u0627\u0636\u064a\u0639/\u0642\u0646\u0648\u0627\u062a \u062f\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u0645\u0633\u062a\u0644\u0645\u064a\u0646. \u064a\u062a\u0644\u0642\u0651\u0649 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0648\u0646 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0648\u0641\u0642 \u0627\u0634\u062a\u0631\u0627\u0643\u0627\u062a\u0647\u0645\u060c \u063a\u0627\u0644\u0628\u064b\u0627 \u0628\u0634\u0643\u0644 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 \u0639\u0628\u0631 \u0648\u0633\u064a\u0637 (Broker).</p>"},{"location":"terms/publish-subscribe/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Topics/Channels: \u0645\u0633\u0627\u0631\u0627\u062a \u0645\u0646\u0637\u0642\u064a\u0629 \u0644\u0644\u0631\u0633\u0627\u0626\u0644 (\u0645\u062b\u0644: <code>orders.created</code>).  </li> <li>Publisher: \u064a\u0631\u0633\u0644 \u0627\u0644\u062d\u062f\u062b \u0644\u0644\u0648\u0633\u064a\u0637\u060c \u062b\u0645 \u064a\u0646\u0633\u0649. \u0644\u0627 \u064a\u062d\u062a\u0627\u062c \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u0633\u062a\u0644\u0645.  </li> <li>Subscriber: \u064a\u0633\u062c\u0651\u0644 \u0639\u0644\u0649 \u0645\u0648\u0636\u0648\u0639 \u0648\u0627\u062d\u062f \u0623\u0648 \u0623\u0643\u062b\u0631 \u0648\u064a\u062a\u0644\u0642\u0649 \u0645\u0627 \u064a\u064f\u0646\u0634\u0631.  </li> <li>\u0648\u0633\u064a\u0637 (Broker): \u064a\u0648\u0632\u0651\u0639 \u0627\u0644\u0631\u0633\u0627\u0626\u0644\u060c \u0648\u0642\u062f \u064a\u0642\u062f\u0651\u0645 \u062a\u062e\u0632\u064a\u0646\u064b\u0627\u060c \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629\u060c \u0648\u0642\u0648\u0627\u0626\u0645 \u0645\u064a\u062a\u0629 (DLQ).  </li> <li>\u0641\u0643 \u0627\u0644\u0627\u0631\u062a\u0628\u0627\u0637: \u0627\u0644\u0645\u0646\u062a\u062c\u0648\u0646 \u0648\u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643\u0648\u0646 \u0645\u0633\u062a\u0642\u0644\u0651\u0648\u0646 \u0632\u0645\u0646\u064a\u064b\u0627 \u0648\u0645\u0643\u0627\u0646\u064a\u064b\u0627. \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u062a\u0648\u0633\u0651\u0639 \u0648\u0627\u0644\u0645\u0631\u0648\u0646\u0629.</li> </ul>"},{"location":"terms/publish-subscribe/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0645\u062d\u0637\u0629 \u0625\u0630\u0627\u0639\u064a\u0629: \u0627\u0644\u0645\u0630\u064a\u0639 \u064a\u0646\u0634\u0631 \u0639\u0644\u0649 \u0645\u0648\u062c\u0629\u060c \u0648\u0643\u0644 \u062c\u0647\u0627\u0632 \u0645\u0636\u0628\u0648\u0637 \u0639\u0644\u0649 \u0627\u0644\u062a\u0631\u062f\u062f \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u064a\u0633\u0645\u0639. \u0627\u0644\u0645\u0630\u064a\u0639 \u0644\u0627 \u064a\u0639\u0631\u0641 \u0639\u062f\u062f \u0623\u0648 \u0623\u0645\u0627\u0643\u0646 \u0627\u0644\u0645\u0633\u062a\u0645\u0639\u064a\u0646.</p>"},{"location":"terms/publish-subscribe/#c-broker","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (Broker \u0630\u0627\u0643\u0631\u0629 \u0635\u063a\u064a\u0631)","text":"C#<pre><code>using System;\nusing System.Collections.Concurrent;\nusing System.Collections.Generic;\n\npublic class InMemoryBroker\n{\n    private readonly ConcurrentDictionary&lt;string, List&lt;Action&lt;string&gt;&gt;&gt; _subs = new();\n\n    public IDisposable Subscribe(string topic, Action&lt;string&gt; handler)\n    {\n        var list = _subs.GetOrAdd(topic, _ =&gt; new List&lt;Action&lt;string&gt;&gt;());\n        lock (list) list.Add(handler);\n\n        return new Unsubscriber(() =&gt;\n        {\n            lock (list) list.Remove(handler);\n        });\n    }\n\n    public void Publish(string topic, string message)\n    {\n        if (_subs.TryGetValue(topic, out var list))\n        {\n            Action&lt;string&gt;[] handlers;\n            lock (list) handlers = list.ToArray();\n            foreach (var h in handlers) h(message); // \u062a\u0628\u0633\u064a\u0637: \u0628\u062f\u0648\u0646 \u0636\u0645\u0627\u0646\u0627\u062a \u062a\u0633\u0644\u064a\u0645/\u062a\u0643\u0631\u0627\u0631\n        }\n    }\n\n    private sealed class Unsubscriber : IDisposable\n    {\n        private readonly Action _dispose;\n        public Unsubscriber(Action dispose) =&gt; _dispose = dispose;\n        public void Dispose() =&gt; _dispose();\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var broker = new InMemoryBroker();\n\n        using var sub1 = broker.Subscribe(\"orders.created\", m =&gt; Console.WriteLine($\"[A] {m}\"));\n        using var sub2 = broker.Subscribe(\"orders.created\", m =&gt; Console.WriteLine($\"[B] {m}\"));\n\n        broker.Publish(\"orders.created\", \"{ \\\"orderId\\\": 123 }\");\n        // \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639:\n        // [A] { \"orderId\": 123 }\n        // [B] { \"orderId\": 123 }\n    }\n}\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u0627\u0644\u0648\u0633\u0637\u0627\u0621 \u0627\u0644\u062d\u0642\u064a\u0642\u064a\u0648\u0646 (Kafka/RabbitMQ/Redis/Service Bus) \u064a\u0648\u0641\u0651\u0631\u0648\u0646 \u0645\u062a\u0627\u0646\u0629\u060c \u062a\u0642\u0633\u064a\u0645\u064b\u0627 (Partitions)\u060c \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629\u060c \u0648\u062a\u0631\u062a\u064a\u0628\u064b\u0627 \u0644\u0643\u0644 \u0642\u0633\u0645.</p>"},{"location":"terms/publish-subscribe/#pubsub","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 Pub/Sub \u0642\u0648\u064a","text":"<ul> <li>\u0639\u0631\u0651\u0641 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0648\u0627\u0644\u0645\u0648\u0627\u0636\u064a\u0639 \u0648\u0623\u0633\u0645\u0627\u0621 \u062b\u0627\u0628\u062a\u0629 (\u0645\u0639 \u0625\u0635\u062f\u0627\u0631 \u0639\u0646\u062f \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u0648\u0627\u0641\u0642\u0629).  </li> <li>\u062d\u062f\u0651\u062f \u0645\u062e\u0637\u0637 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 (JSON/Avro/Protobuf) \u0645\u0639 \u0642\u0648\u0627\u0639\u062f \u062a\u0637\u0648\u0651\u0631 \u0627\u0644\u0645\u062e\u0637\u0637 (Schema Evolution).  </li> <li>\u0627\u062e\u062a\u0631 \u0648\u0633\u064a\u0637\u064b\u0627 \u0645\u0646\u0627\u0633\u0628\u064b\u0627:</li> <li>Kafka: \u062a\u062f\u0641\u0651\u0642 \u0639\u0627\u0644\u064a\u060c \u0627\u0644\u0627\u062d\u062a\u0641\u0627\u0638 \u0637\u0648\u064a\u0644\u060c \u062a\u0642\u0633\u064a\u0645 \u0642\u0648\u064a.  </li> <li>RabbitMQ: \u0623\u0646\u0645\u0627\u0637 \u062a\u0648\u062c\u064a\u0647 \u0645\u0631\u0646\u0629\u060c \u0635\u0641\u0648\u0641\u060c \u062a\u0628\u0627\u062f\u0644 \u0631\u0633\u0627\u0626\u0644.  </li> <li>Redis Pub/Sub: \u062e\u0641\u064a\u0641 \u0648\u0641\u0648\u0631\u064a (\u0628\u062f\u0648\u0646 \u0627\u062d\u062a\u0641\u0627\u0638 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627).  </li> <li>Service Bus/Topic (\u0633\u062d\u0627\u0628\u064a): \u0625\u062f\u0627\u0631\u0629 \u0648\u0631\u0633\u0627\u0626\u0644 \u0645\u062a\u064a\u0646\u0629 + DLQ.  </li> <li>\u062f\u0644\u0627\u0644\u0627\u062a \u0627\u0644\u062a\u0633\u0644\u064a\u0645: \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644 \u0645\u0631\u0629 (At-least-once) \u0645\u0639 Idempotency \u0641\u064a \u0627\u0644\u0645\u0633\u062a\u0647\u0644\u0643.  </li> <li>\u0627\u0644\u0645\u0644\u0627\u062d\u0638\u0629 (Observability): \u0633\u062c\u0651\u0644 \u0645\u0639\u0631\u0641 \u0627\u0644\u0631\u0633\u0627\u0644\u0629\u060c \u062a\u062a\u0628\u0651\u0639 (Tracing)\u060c \u0645\u0642\u0627</li> </ul>"},{"location":"terms/qa/","title":"QA \u2014 Quality Assurance","text":""},{"location":"terms/qa/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Quality Assurance (QA) \u2014 \u0636\u0645\u0627\u0646 \u0627\u0644\u062c\u0648\u062f\u0629</p>"},{"location":"terms/qa/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u0645\u0627\u0631\u0633\u0627\u062a \u0648\u0642\u0648\u0627\u0639\u062f \u062a\u0645\u0646\u0639 \u0627\u0644\u0639\u064a\u0648\u0628 \u0642\u0628\u0644 \u062d\u062f\u0648\u062b\u0647\u0627\u060c \u0648\u062a\u0636\u0645\u0646 \u0623\u0646 \u0627\u0644\u0645\u0646\u062a\u062c \u064a\u0644\u0628\u0651\u064a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0648\u0633\u0645\u0627\u062a \u0627\u0644\u062c\u0648\u062f\u0629 (\u0623\u062f\u0627\u0621\u060c \u0623\u0645\u0627\u0646\u060c \u0645\u0648\u062b\u0648\u0642\u064a\u0629).</p>"},{"location":"terms/qa/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0648\u0642\u0627\u0626\u064a: \u064a\u0636\u0639 \u0645\u0639\u0627\u064a\u064a\u0631\u060c \u0645\u0631\u0627\u062c\u0639\u0627\u062a \u0643\u0648\u062f\u060c \u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 \u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u064a\u0639\u062a\u0645\u062f \u0623\u062a\u0645\u062a\u0629 \u0641\u064a CI/CD \u0645\u0639 \u0628\u0648\u0627\u0628\u0627\u062a \u062c\u0648\u062f\u0629 (Quality Gates).  </li> <li>\u064a\u0642\u064a\u0633: \u0645\u0639\u062f\u0651\u0644 \u0627\u0644\u0639\u064a\u0648\u0628\u060c \u062a\u0633\u0631\u0651\u0628 \u0627\u0644\u0639\u064a\u0648\u0628 \u0644\u0644\u0625\u0646\u062a\u0627\u062c\u060c \u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u0632\u0645\u0646 \u0627\u0644\u0625\u0635\u0644\u0627\u062d.  </li> <li>\u064a\u0634\u0645\u0644: \u062a\u0648\u062b\u064a\u0642 \u0645\u0639\u0627\u064a\u064a\u0631 \u0627\u0644\u0642\u0628\u0648\u0644\u060c \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a\u060c \u0648\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0628\u0627\u0633\u062a\u0645\u0631\u0627\u0631.</li> </ul>"},{"location":"terms/qa/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0633\u064a\u0631 \u062a\u0635\u0646\u064a\u0639 \u0628\u0633\u064a\u0637\u0631\u0629 \u062c\u0648\u062f\u0629 \u0634\u0627\u0645\u0644\u0629: \u0645\u0642\u0627\u064a\u064a\u0633\u060c \u0642\u0648\u0627\u0626\u0645 \u0641\u062d\u0635\u060c \u0623\u062c\u0647\u0632\u0629 \u0642\u064a\u0627\u0633. \u0627\u0644\u0647\u062f\u0641: \u0645\u0646\u0639 \u0627\u0644\u0639\u064a\u0628 \u0644\u0627 \u0645\u062c\u0631\u062f \u0627\u0643\u062a\u0634\u0627\u0641\u0647 \u0628\u0639\u062f \u062e\u0631\u0648\u062c\u0647.</p>"},{"location":"terms/qa/#c-xunit","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0645\u062e\u062a\u0635\u0631 \u2014 C# + xUnit + \u201c\u0628\u0648\u0627\u0628\u0629 \u062c\u0648\u062f\u0629\u201d \u0630\u0643\u064a\u0629","text":"<p>\u0627\u0644\u0642\u0627\u0639\u062f\u0629: \u201c\u0627\u0644\u0633\u0639\u0631 \u0628\u0639\u062f \u0627\u0644\u062e\u0635\u0645 \u0644\u0627 \u064a\u0642\u0644\u0651 \u0639\u0646 \u0635\u0641\u0631\u201d. \u0646\u0643\u062a\u0628 \u0627\u062e\u062a\u0628\u0627\u0631\u064b\u0627\u060c \u0646\u0646\u0641\u0651\u0630 \u0627\u0644\u0645\u0646\u0637\u0642\u060c \u0648\u0646\u0636\u064a\u0641 \u0639\u0642\u0648\u062f\u064b\u0627 \u062f\u0641\u0627\u0639\u064a\u0629 (Guards).</p> C#<pre><code>// PriceCalculator.cs\nusing System;\n\n/// &lt;summary&gt;\n/// Rule: \u0627\u0644\u062e\u0635\u0645 \u0628\u064a\u0646 0..1. \u0644\u0627 \u064a\u0639\u0648\u062f \u0627\u0644\u0646\u0627\u062a\u062c \u0623\u0642\u0644 \u0645\u0646 0. \u062a\u0642\u0631\u064a\u0628\u0647 \u0644\u0640 2 \u0645\u0646\u0627\u0632\u0644.\n/// &lt;/summary&gt;\npublic class PriceCalculator\n{\n    public decimal Final(decimal price, double discount)\n    {\n        if (price &lt; 0) throw new ArgumentOutOfRangeException(nameof(price));\n        var d = Math.Clamp(discount, 0d, 1d);\n        var result = price - price * (decimal)d;\n        return result &lt;= 0 ? 0 : decimal.Round(result, 2);\n    }\n}\n</code></pre> C#<pre><code>// PriceCalculatorTests.cs  (xUnit)\n// dotnet add package xunit\n// dotnet add package xunit.runner.visualstudio\nusing Xunit;\n\npublic class PriceCalculatorTests\n{\n    [Theory]\n    [InlineData(100, 0.10, 90)]\n    [InlineData(50,  0.00, 50)]\n    [InlineData(10,  0.50, 5)]\n    [InlineData(10,  2.00, 0)] // \u064a\u062b\u0628\u062a \u0634\u0631\u0637 \"\u0644\u0627 \u064a\u0642\u0644 \u0639\u0646 \u0635\u0641\u0631\"\n    public void FinalPrice_Complies_With_Rules(decimal price, double discount, decimal expected)\n    {\n        var calc = new PriceCalculator();\n        Assert.Equal(expected, calc.Final(price, discount));\n    }\n\n    [Fact]\n    public void NegativePrice_Throws()\n    {\n        var calc = new PriceCalculator();\n        Assert.Throws&lt;ArgumentOutOfRangeException&gt;(() =&gt; calc.Final(-1, 0.1));\n    }\n}\n</code></pre> <p>\u062a\u0644\u0645\u064a\u062d CI (Quality Gate): \u0627\u062c\u0639\u0644 \u0627\u0644\u062a\u062d\u0630\u064a\u0631\u0627\u062a \u0623\u062e\u0637\u0627\u0621\u064b\u0627\u060c \u0648\u0627\u0641\u0631\u0636 \u062d\u062f\u064b\u0627 \u0644\u062a\u063a\u0637\u064a\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a. \u0645\u0644\u0641 \u200e<code>Directory.Build.props</code> (MSBuild) \u064a\u0645\u0643\u0646\u0647 \u062a\u0641\u0639\u064a\u0644 <code>TreatWarningsAsErrors</code>\u060c \u0648\u064a\u0645\u0643\u0646 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0639\u0628\u0631 \u0623\u062f\u0648\u0627\u062a \u0645\u062b\u0644 coverlet \u0641\u064a \u062e\u0637\u0651 CI (<code>dotnet test /p:CollectCoverage=true /p:Threshold=80</code>).</p>"},{"location":"terms/qa/#qa","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 QA \u0641\u0639\u0651\u0627\u0644","text":"<ol> <li>\u0639\u0631\u0651\u0641 \u0627\u0644\u062c\u0648\u062f\u0629: \u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0648\u0638\u064a\u0641\u064a\u0629 \u0648\u0644\u0627-\u0648\u0638\u064a\u0641\u064a\u0629 (\u0623\u062f\u0627\u0621\u060c \u0623\u0645\u0627\u0646\u060c \u062a\u0648\u0641\u0651\u0631) + \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644.  </li> <li>\u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 \u0627\u062e\u062a\u0628\u0627\u0631: \u0647\u0631\u0645 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a (\u0648\u062d\u062f\u0627\u062a \u226b \u062a\u0643\u0627\u0645\u0644 \u226b \u0637\u0631\u0641-\u0644\u0637\u0631\u0641)\u060c \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0623\u062f\u0627\u0621/\u0623\u0645\u0646.  </li> <li>\u062d\u0648\u0643\u0645\u0629 \u0627\u0644\u0643\u0648\u062f: \u0645\u0639\u0627\u064a\u064a\u0631 \u062a\u0646\u0633\u064a\u0642\u060c \u062a\u062d\u0644\u064a\u0644 \u062b\u0627\u0628\u062a (Analyzers)\u060c \u0645\u0631\u0627\u062c\u0639\u0627\u062a PR.  </li> <li>\u0623\u062a\u0645\u062a\u0629: \u0628\u0646\u0627\u0621\u060c \u0641\u062d\u0635\u060c \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u062a\u063a\u0637\u064a\u0629\u060c \u062a\u062d\u0644\u064a\u0644 \u062a\u0628\u0639\u064a\u0627\u062a \u0648\u062b\u063a\u0631\u0627\u062a\u060c \u0628\u0648\u0627\u0628\u0627\u062a \u062a\u0645\u0646\u0639 \u0627\u0644\u062f\u0645\u062c \u0639\u0646\u062f \u0627\u0644\u0641\u0634\u0644.  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0639\u064a\u0648\u0628: \u062a\u0635\u0646\u064a\u0641\u060c \u0623\u0648\u0644\u0648\u064a\u0629\u060c \u062a\u062a\u0628\u0651\u0639 \u0632\u0645\u0646 \u0627\u0644\u062d\u0644\u060c \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0633\u0628\u0628 \u0627\u0644\u062c\u0630\u0631\u064a (RCA).  </li> <li>\u0645\u0642\u0627\u064a\u064a\u0633: \u0645\u0639\u062f\u0644 \u0627\u0644\u0639\u064a\u0648\u0628/\u0623\u0633\u0628\u0648\u0639\u060c Escape Rate (\u0639\u064a\u0648\u0628 \u0627\u0644\u0625\u0646\u062a\u0627\u062c)\u060c \u0648\u0642\u062a \u0627\u0644\u0625\u0635\u0644\u0627\u062d\u060c \u0627\u0644\u062a\u063a\u0637\u064a\u0629 (\u0643\u0645\u0624\u0634\u0631 \u0644\u0627 \u0647\u062f\u0641).  </li> <li>\u062a\u062d\u0633\u064a\u0646 \u0645\u0633\u062a\u0645\u0631: \u062f\u0631\u0648\u0633 \u0645\u0633\u062a\u0641\u0627\u062f\u0629 \u0628\u0639\u062f \u0643\u0644 \u0625\u0635\u062f\u0627\u0631\u060c \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a\u060c \u062a\u062f\u0631\u064a\u0628 \u0627\u0644\u0641\u0631\u064a\u0642.</li> </ol>"},{"location":"terms/qa/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0639\u062a\u0628\u0627\u0631 QA = \u0627\u062e\u062a\u0628\u0627\u0631 \u064a\u062f\u0648\u064a \u0641\u0642\u0637. QA \u0623\u0648\u0633\u0639: \u0639\u0645\u0644\u064a\u0629 + \u0645\u0639\u0627\u064a\u064a\u0631 + \u0623\u062a\u0645\u062a\u0629.  </li> <li>\u0627\u0644\u0633\u0639\u064a \u0648\u0631\u0627\u0621 \u066a100 \u062a\u063a\u0637\u064a\u0629 \u0628\u0644\u0627 \u0642\u064a\u0645\u0629. \u0627\u0644\u062a\u063a\u0637\u064a\u0629 \u0645\u0624\u0634\u0631\u060c \u0648\u0644\u064a\u0633\u062a \u0647\u062f\u0641\u064b\u0627 \u0628\u062d\u062f \u0630\u0627\u062a\u0647.  </li> <li>\u063a\u064a\u0627\u0628 \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644 \u0648\u0627\u0636\u062d\u0629 \u2192 \u0646\u0632\u0627\u0639\u0627\u062a \u0648\u062a\u0623\u062e\u064a\u0631.  </li> <li>\u062a\u0631\u0643 \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u062b\u0627\u0628\u062a \u0648\u0627\u0644\u0640 Warnings \u062a\u062a\u0631\u0627\u0643\u0645.  </li> <li>\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0637\u0631\u0641-\u0644\u0637\u0631\u0641 \u0643\u062b\u064a\u0631\u0629 \u0648\u0628\u0637\u064a\u0626\u0629 \u0628\u062f\u0644 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0648\u062d\u062f\u0627\u062a/\u062a\u0643\u0627\u0645\u0644 \u0633\u0631\u064a\u0639\u0629.  </li> <li>\u0639\u062f\u0645 \u0642\u064a\u0627\u0633 \u062a\u0633\u0631\u0651\u0628 \u0627\u0644\u0639\u064a\u0648\u0628 \u0644\u0644\u0625\u0646\u062a\u0627\u062c \u0623\u0648 \u0632\u0645\u0646 \u0627\u0644\u0639\u0644\u0627\u062c.</li> </ul>"},{"location":"terms/qa/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 QA \u0645\u0646\u0639 \u0627\u0644\u0639\u064a\u0648\u0628 \u0648\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0645\u0639\u0627\u064a\u064a\u0631\u060c \u0645\u0631\u0627\u062c\u0639\u0627\u062a\u060c \u0627\u0633\u062a\u0631\u0627\u062a\u064a\u062c\u064a\u0629 \u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0628\u0648\u0627\u0628\u0627\u062a \u062c\u0648\u062f\u0629 QC \u0643\u0634\u0641 \u0627\u0644\u0639\u064a\u0648\u0628 \u0641\u064a \u0627\u0644\u0645\u0646\u062a\u062c \u0627\u0644\u0646\u0627\u062a\u062c \u0641\u062d\u0635/\u062a\u0641\u062a\u064a\u0634/\u0627\u062e\u062a\u0628\u0627\u0631 \u0627\u0644\u0646\u0627\u062a\u062c \u0646\u0641\u0633\u0647 Testing \u062a\u0646\u0641\u064a\u0630 \u0641\u062d\u0648\u0635 \u0644\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0639\u064a\u0648\u0628 \u062c\u0632\u0621 \u0645\u0646 QC\u061b \u0648\u062d\u062f\u0627\u062a/\u062a\u0643\u0627\u0645\u0644/\u0642\u0628\u0648\u0644/\u0623\u062f\u0627\u0621/\u0623\u0645\u0646 SDLC \u0625\u0637\u0627\u0631 \u0645\u0631\u0627\u062d\u0644 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 QA \u064a\u0631\u0627\u0641\u0642 \u0643\u0644 \u0627\u0644\u0645\u0631\u0627\u062d\u0644 SRE/Monitoring \u062c\u0648\u062f\u0629 \u0645\u0627 \u0628\u0639\u062f \u0627\u0644\u0646\u0634\u0631 SLIs/SLOs\u060c \u062a\u0646\u0628\u064a\u0647\u0627\u062a\u060c MTTR"},{"location":"terms/qa/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>QA = \u0645\u0638\u0644\u0651\u0629 \u0648\u0642\u0627\u0626\u064a\u0629 \u0644\u0644\u062c\u0648\u062f\u0629: \u0645\u0639\u0627\u064a\u064a\u0631 + \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a + \u0623\u062a\u0645\u062a\u0629 + \u0642\u064a\u0627\u0633. \u0627\u062f\u0645\u062c\u0647\u0627 \u0641\u064a SDLC \u0648CI/CD \u0628\u0628\u0648\u0627\u0628\u0627\u062a \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u062a\u0648\u0627\u0632\u0646 \u0627\u0644\u0647\u0631\u0645 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u064a\u2014 \u0633\u062a\u0642\u0644\u0651 \u0627\u0644\u0639\u064a\u0648\u0628\u060c \u0648\u062a\u0632\u062f\u0627\u062f \u0627\u0644\u062b\u0642\u0629\u060c \u0648\u062a\u062a\u0633\u0627\u0631\u0639 \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0628\u062b\u0628\u0627\u062a.</p>"},{"location":"terms/quic/","title":"QUIC \u2014 Quick UDP Internet Connections","text":""},{"location":"terms/quic/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Quick UDP Internet Connections (QUIC) \u2014 \u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0625\u0646\u062a\u0631\u0646\u062a \u0633\u0631\u064a\u0639\u0629 \u0641\u0648\u0642 UDP.</p>"},{"location":"terms/quic/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0646\u0642\u0644 \u062d\u062f\u064a\u062b \u064a\u0639\u0645\u0644 \u0641\u0648\u0642 UDP\u060c \u064a\u062f\u0645\u062c TLS 1.3\u060c \u0648\u064a\u0642\u062f\u0651\u0645 \u062a\u0639\u062f\u0651\u062f \u062a\u062f\u0641\u0651\u0642\u0627\u062a \u062f\u0627\u062e\u0644 \u0627\u062a\u0635\u0627\u0644 \u0648\u0627\u062d\u062f \u062f\u0648\u0646 \u0645\u0634\u0643\u0644\u0629 Head-of-Line \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0646\u0642\u0644. \u064a\u062f\u0639\u0645 \u0627\u062a\u0635\u0627\u0644\u064b\u0627 \u0623\u0633\u0631\u0639 (1-RTT/\u200e0-RTT)\u060c \u0648\u0647\u062c\u0631\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 (Connection Migration) \u0639\u0646\u062f \u062a\u063a\u064a\u0651\u0631 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u0648\u0627\u0645\u062a\u062f\u0627\u062f\u0627\u062a Datagrams \u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642\u0629. \u062a\u0639\u0645\u0644 \u0639\u0644\u064a\u0647 HTTP/3.</p>"},{"location":"terms/quic/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0628\u062f\u0623 \u0628\u0645\u0635\u0627\u0641\u062d\u0629 TLS 1.3 \u062f\u0627\u062e\u0644 QUIC (\u0625\u0637\u0627\u0631 CRYPTO) \u2192 \u0642\u0646\u0627\u0629 \u0622\u0645\u0646\u0629 \u0628\u0633\u0631\u0639\u0629.  </li> <li>Streams \u0645\u0633\u062a\u0642\u0644\u0651\u0629: \u0644\u0648 \u062a\u0623\u062e\u0651\u0631 \u062a\u062f\u0641\u0651\u0642 \u0644\u0627 \u064a\u0639\u0644\u0651\u0642 \u0627\u0644\u0628\u0627\u0642\u064a.  </li> <li>Connection IDs \u062a\u0633\u0645\u062d \u0628\u062a\u0628\u062f\u064a\u0644 \u0634\u0628\u0643\u0629/IP \u0628\u062f\u0648\u0646 \u0625\u0633\u0642\u0627\u0637 \u0627\u0644\u062c\u0644\u0633\u0629.  </li> <li>\u062a\u062d\u0643\u0651\u0645 \u0627\u0632\u062f\u062d\u0627\u0645 \u0648\u0643\u0634\u0641 \u0641\u0642\u062f\u0627\u0646 \u0634\u0628\u064a\u0647 \u0628\u0640 TCP\u060c \u0644\u0643\u0646 \u0639\u0644\u0649 UDP.  </li> <li>0-RTT \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 (\u0623\u0633\u0631\u0639\u060c \u0644\u0643\u0646 \u0627\u0646\u062a\u0628\u0647 \u0644\u0642\u0627\u0628\u0644\u064a\u0629 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644/Replay).</li> </ul>"},{"location":"terms/quic/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0646\u0641\u0642 \u0633\u0631\u064a\u0639 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u062f\u0627\u062e\u0644 \u0637\u0631\u064a\u0642 \u0648\u0627\u062d\u062f: \u0643\u0644 \u0645\u0633\u0627\u0631 Stream \u0645\u0633\u062a\u0642\u0644. \u0644\u0648 \u062a\u0639\u0637\u0651\u0644 \u0645\u0633\u0627\u0631\u060c \u0644\u0627 \u064a\u0648\u0642\u0641 \u0628\u0642\u064a\u0629 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a.</p>"},{"location":"terms/quic/#c-http3-quic","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 HTTP/3 (\u0641\u0648\u0642 QUIC) \u062e\u0627\u062f\u0645 + \u0639\u0645\u064a\u0644","text":""},{"location":"terms/quic/#kestrel-http3","title":"\u062e\u0627\u062f\u0645 Kestrel \u064a\u0641\u0639\u0651\u0644 HTTP/3","text":"C#<pre><code>// Program.cs (.NET 8/9)\nusing Microsoft.AspNetCore.Server.Kestrel.Core;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.WebHost.ConfigureKestrel(k =&gt;\n{\n    k.ListenAnyIP(443, o =&gt;\n    {\n        o.UseHttps(\"cert.pfx\", \"P@ssw0rd\");                 // \u0634\u0647\u0627\u062f\u0629 \u0635\u0627\u0644\u062d\u0629\n        o.Protocols = HttpProtocols.Http1AndHttp2AndHttp3;  // \u062a\u0645\u0643\u064a\u0646 H3 \u0641\u0648\u0642 QUIC\n    });\n    // \u0645\u0644\u0627\u062d\u0638\u0629: \u0627\u0641\u062a\u062d \u0627\u0644\u0645\u0646\u0641\u0630 UDP/443 \u0639\u0644\u0649 \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a. \u064a\u062d\u062a\u0627\u062c \u0627\u0644\u0646\u0638\u0627\u0645 \u062f\u0639\u0645 MsQuic.\n});\n\nvar app = builder.Build();\n\napp.MapGet(\"/\", () =&gt; Results.Ok(new { via = \"HTTP/3 over QUIC\" }));\n\napp.Run();\n</code></pre>"},{"location":"terms/quic/#httpclient-http3","title":"\u0639\u0645\u064a\u0644 HttpClient \u064a\u0637\u0644\u0628 HTTP/3","text":"C#<pre><code>using System.Net;\nusing System.Net.Http;\n\n// \u064a\u0637\u0644\u0628 H3 \u0648\u064a\u0642\u0628\u0644 \u062a\u0631\u0642\u064a\u0629 \u0625\u0644\u0649 \u0623\u0642\u0644 \u0639\u0646\u062f \u0639\u062f\u0645 \u0627\u0644\u062f\u0639\u0645\nvar req = new HttpRequestMessage(HttpMethod.Get, \"https://localhost/\")\n{\n    Version = HttpVersion.Version30,\n    VersionPolicy = HttpVersionPolicy.RequestVersionOrHigher\n};\n\nusing var http = new HttpClient(new SocketsHttpHandler\n{\n    // \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0644\u062b\u0642\u0629 \u0628\u0634\u0647\u0627\u062f\u062a\u0643 \u0645\u062d\u0644\u064a\u064b\u0627 \u0623\u0648 \u0627\u0633\u062a\u062e\u062f\u0645 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u062b\u0648\u0642\u0629\n    ConnectTimeout = TimeSpan.FromSeconds(5)\n});\n\nvar res = await http.SendAsync(req);\nConsole.WriteLine($\"HTTP Version: {res.Version}\"); // 3.0 \u0639\u0646\u062f \u0646\u062c\u0627\u062d H3\nConsole.WriteLine(await res.Content.ReadAsStringAsync());\n</code></pre> <p>\u0625\u0646 \u0623\u0631\u062f\u062a \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0643 \u0627\u0644\u062e\u0627\u0635 \u0641\u0648\u0642 QUIC (\u0628\u062f\u0648\u0646 HTTP/3)\u060c \u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0633\u0627\u062d\u0629 \u0627\u0644\u0623\u0633\u0645\u0627\u0621 <code>System.Net.Quic</code> (\u200e<code>QuicListener/QuicConnection/QuicStream</code>)\u060c \u0645\u0639 ALPN \u0645\u062e\u0635\u0651\u0635 \u0648\u0634\u0647\u0627\u062f\u0629 TLS.</p>"},{"location":"terms/quic/#quichttp3","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f QUIC/HTTP/3","text":"<ul> <li>\u0627\u0641\u062a\u062d UDP/443 (\u0628\u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0625\u0644\u0649 TCP/443) \u0639\u0644\u0649 \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0648Security Groups.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0634\u0647\u0627\u062f\u0629 TLS \u0645\u0648\u062b\u0648\u0642\u0629\u060c \u0648\u0641\u0639\u0651\u0644 HTTP/3 \u0641\u064a \u0627\u0644\u062e\u0627\u062f\u0645/\u0627\u0644\u0640 Proxy (Kestrel/NGINX/Envoy/CDN).  </li> <li>\u062a\u062d\u0642\u0642 \u0645\u0646 Alt-Svc \u0623\u0648 \u0627\u0644\u0625\u0639\u0644\u0627\u0646 \u0627\u0644\u0645\u0628\u0627\u0634\u0631 \u0639\u0646 H3\u060c \u0648\u0641\u0639\u0651\u0644 ALPN = h3.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0645\u0646 \u0627\u0644\u0639\u0645\u064a\u0644: \u0627\u0637\u0628\u0639 \u0646\u0633\u062e\u0629 HTTP \u0648\u062a\u062d\u0642\u0642 \u0623\u0646\u0647\u0627 3.0\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u0623\u062f\u0648\u0627\u062a \u062a\u062a\u0628\u0651\u0639 (Wireshark/MsQuic logs).  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u0645\u0642\u0627\u064a\u064a\u0633: RTT\u060c \u0641\u0642\u062f\u0627\u0646\u060c \u0645\u0639\u062f\u0644 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0625\u0631\u0633\u0627\u0644\u060c \u0639\u062f\u062f \u0627\u0644\u062a\u062f\u0641\u0642\u0627\u062a.  </li> <li>\u0641\u0639\u0651\u0644 Fallback \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0625\u0644\u0649 H2/H1 \u0639\u0646\u062f\u0645\u0627 \u0644\u0627 \u064a\u062a\u0648\u0641\u0631 QUIC.</li> </ul>"},{"location":"terms/quic/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0646\u0633\u064a\u0627\u0646 \u0641\u062a\u062d UDP/443 \u2192 \u064a\u0628\u0642\u0649 \u0643\u0644 \u0634\u064a\u0621 \u0639\u0644\u0649 H2/H1.  </li> <li>\u062a\u0648\u0642\u0651\u0639 \u062a\u062d\u0633\u0651\u0646 \u062f\u0627\u0626\u0645 \u0628\u0644\u0627 \u0642\u064a\u0627\u0633\u061b \u0628\u0639\u0636 \u0627\u0644\u0634\u0628\u0643\u0627\u062a/\u0627\u0644\u0623\u062c\u0647\u0632\u0629 \u0642\u062f \u062a\u062d\u062f\u0651 \u0645\u0646 QUIC.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 0-RTT \u0644\u0639\u0645\u0644\u064a\u0627\u062a \u063a\u064a\u0631 Idempotent (\u062e\u0637\u0631 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644).  </li> <li>\u0625\u0647\u0645\u0627\u0644 ALPN \u0623\u0648 \u0639\u062f\u0645 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u0634\u0647\u0627\u062f\u0629/\u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d.  </li> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 QUIC \u201c\u0644\u0627 \u064a\u062d\u062a\u0627\u062c \u0636\u0628\u0637 \u0627\u0632\u062f\u062d\u0627\u0645\u201d \u2014 \u0645\u0627 \u0632\u0627\u0644 \u064a\u062d\u062a\u0627\u062c \u0625\u0639\u062f\u0627\u062f\u064b\u0627 \u0648\u0645\u0631\u0627\u0642\u0628\u0629.</li> </ul>"},{"location":"terms/quic/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 TCP \u0627\u062a\u0635\u0627\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u0631\u062a\u0651\u0628 (Stream) HOL \u0639\u0644\u0649 \u0627\u0644\u0646\u0642\u0644 \u0639\u0646\u062f \u0627\u0644\u062a\u0639\u062f\u062f \u0639\u0628\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 UDP \u0631\u0633\u0627\u0626\u0644 \u062e\u0641\u064a\u0641\u0629 \u0628\u0644\u0627 \u0627\u062a\u0635\u0627\u0644 \u0644\u0627 \u0636\u0645\u0627\u0646 \u062a\u0633\u0644\u064a\u0645/\u062a\u0631\u062a\u064a\u0628 QUIC \u0646\u0642\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u062a\u062f\u0641\u0651\u0642\u0627\u062a \u0641\u0648\u0642 UDP + TLS 1.3 1-RTT/0-RTT\u060c Migration\u060c \u062a\u0642\u0644\u064a\u0644 HOL\u060c \u064a\u062a\u0637\u0644\u0628 UDP/443 HTTP/3 HTTP \u0641\u0648\u0642 QUIC \u064a\u0633\u062a\u062e\u062f\u0645 \u062a\u062f\u0641\u0651\u0642\u0627\u062a QUIC \u0648ALPN=h3"},{"location":"terms/quic/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>QUIC \u064a\u062c\u0645\u0639 \u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u0634\u0628\u064a\u0647\u0629 \u0628\u0640 TCP \u0645\u0639 \u0633\u0631\u0639\u0629 \u0648\u0645\u0631\u0648\u0646\u0629 UDP\u060c \u0648\u064a\u064f\u0634\u063a\u0651\u0644 HTTP/3. \u0641\u0639\u0651\u0644 H3 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645\u060c \u0627\u0641\u062a\u062d UDP/443\u060c \u0648\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0646\u0633\u062e\u0629 \u0645\u0646 \u0627\u0644\u0639\u0645\u064a\u0644\u2014\u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0623\u0633\u0631\u0639 \u0648\u0623\u0642\u0644 \u062a\u0623\u062b\u0651\u0631\u064b\u0627 \u0628\u062a\u0623\u062e\u064a\u0631 \u062a\u062f\u0641\u0651\u0642 \u0648\u0627\u062d\u062f.</p>"},{"location":"terms/razor-pages/","title":"Razor Pages","text":""},{"location":"terms/razor-pages/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Razor Pages (ASP.NET Core) \u2014 \u0646\u0645\u0637 \u0635\u0641\u062d\u0627\u062a \u0645\u0628\u0646\u064a \u0639\u0644\u0649 \u0631\u064a\u0632\u0631 \u0644\u0643\u062a\u0627\u0628\u0629 \u0635\u0641\u062d\u0627\u062a \u0648\u064a\u0628 \u062a\u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0635\u0641\u062d\u0629 \u0628\u062f\u0644 \u0648\u062d\u062f\u0627\u062a \u062a\u062d\u0643\u0651\u0645 \u0643\u0627\u0645\u0644\u0629.</p>"},{"location":"terms/razor-pages/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0643\u0644 \u0635\u0641\u062d\u0629 = \u0645\u0644\u0641 .cshtml + \u0635\u0641\u0651 PageModel \u0645\u0644\u0627\u0635\u0642 \u0644\u0647\u0627. \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u0633\u0627\u0631\u060c \u0627\u0644\u0639\u0631\u0636\u060c \u0648\u0631\u0628\u0637 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a/\u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u064a\u062a\u0645 \u0641\u064a \u0645\u0643\u0627\u0646 \u0648\u0627\u062d\u062f\u061b \u0623\u0628\u0633\u0637 \u0645\u0646 MVC \u0627\u0644\u062a\u0642\u0644\u064a\u062f\u064a \u0644\u0644\u0635\u0641\u062d\u0627\u062a \u0627\u0644\u0642\u064a\u0627\u0633\u064a\u0629 (Forms/CRUD).</p>"},{"location":"terms/razor-pages/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0635\u0641\u062d\u0629 \u062a\u0645\u0644\u0643 Handlers \u0645\u062b\u0644 <code>OnGet/OnPost</code> (\u0648<code>OnPostDelete</code>\u2026)\u060c  </li> <li>\u0631\u0628\u0637 \u0646\u0645\u0648\u0630\u062c \u0639\u0628\u0631 <code>[BindProperty]</code> \u0648\u062a\u062d\u0642\u0651\u0642 \u0628\u0640 DataAnnotations\u060c  </li> <li>Tag Helpers (<code>asp-for</code>, <code>asp-page</code>, <code>asp-page-handler</code>) \u0644\u0628\u0646\u0627\u0621 HTML \u0622\u0645\u0646 \u0648\u0646\u0638\u064a\u0641\u060c  </li> <li>\u062a\u0648\u062c\u064a\u0647 \u0645\u0646 \u062a\u0648\u062c\u064a\u0647 \u0627\u0644\u0635\u0641\u062d\u0629 \u0646\u0641\u0633\u0647\u0627 (<code>@page \"{id:int?}\"</code>).</li> </ul>"},{"location":"terms/razor-pages/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u062f\u0644 \u0627\u0644\u0645\u0631\u0648\u0631 \u0639\u0644\u0649 \u0645\u0648\u062d\u0651\u062f \u0627\u062a\u0635\u0627\u0644\u0627\u062a (Controller) \u0644\u0643\u0644 \u0645\u0633\u0627\u0631\u060c \u0644\u062f\u064a\u0643 \u0645\u0643\u062a\u0628 \u0648\u0627\u062d\u062f \u0644\u0643\u0644 \u0635\u0641\u062d\u0629: \u0627\u0644\u0627\u0633\u062a\u0644\u0627\u0645 \u0648\u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0648\u0627\u0644\u0639\u0631\u0636 \u0641\u064a \u0645\u0643\u0627\u0646 \u0648\u0627\u062d\u062f.</p>"},{"location":"terms/razor-pages/#razor-pages-getpost","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u2014 \u0645\u0634\u0631\u0648\u0639 Razor Pages \u0628\u0633\u064a\u0637 (GET/POST + \u0631\u0628\u0637 + \u062a\u062d\u0642\u0651\u0642)","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new webapp -n RazorPagesDemo &amp;&amp; cd RazorPagesDemo &amp;&amp; dotnet run\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddRazorPages();\nvar app = builder.Build();\n\nif (!app.Environment.IsDevelopment()) { app.UseExceptionHandler(\"/Error\"); app.UseHsts(); }\n\napp.UseHttpsRedirection();\napp.UseStaticFiles();\napp.UseRouting();\n\napp.MapRazorPages();   // &lt;-- \u0645\u0647\u0645: \u062a\u0641\u0639\u064a\u0644 \u0635\u0641\u062d\u0627\u062a \u0631\u064a\u0632\u0631\napp.Run();\n</code></pre> C#<pre><code>// Pages/Contact.cshtml.cs  (\u0635\u0641\u0651 \u0627\u0644\u0635\u0641\u062d\u0629: PageModel)\nusing System.ComponentModel.DataAnnotations;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.AspNetCore.Mvc.RazorPages;\n\npublic class ContactModel : PageModel\n{\n    [BindProperty, Required, EmailAddress]\n    public string Email { get; set; } = \"\";\n\n    [BindProperty, Required, StringLength(200)]\n    public string Message { get; set; } = \"\";\n\n    public string? Status { get; set; }\n\n    public void OnGet() { }  // \u0639\u0631\u0636 \u0623\u0648\u0644\u064a\n\n    public IActionResult OnPost()\n    {\n        if (!ModelState.IsValid) return Page(); // \u0625\u0639\u0627\u062f\u0629 \u0646\u0641\u0633 \u0627\u0644\u0635\u0641\u062d\u0629 \u0628\u0627\u0644\u0623\u062e\u0637\u0627\u0621\n        // TODO: \u0625\u0631\u0633\u0627\u0644 \u0628\u0631\u064a\u062f/\u062d\u0641\u0638 \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a\u2026\n        Status = \"\u062a\u0645 \u0627\u0644\u0627\u0633\u062a\u0644\u0627\u0645\u060c \u0634\u0643\u0631\u064b\u0627!\";\n        ModelState.Clear();\n        return Page(); // \u0639\u0631\u0636 \u0646\u0641\u0633 \u0627\u0644\u0635\u0641\u062d\u0629 \u0628\u0646\u062a\u064a\u062c\u0629\n    }\n\n    // \u0645\u062b\u0627\u0644 Handler \u0645\u0633\u0645\u0651\u0649: POST /Contact?handler=Preview\n    public IActionResult OnPostPreview()\n    {\n        if (!ModelState.IsValid) return Page();\n        Status = $\"\u0645\u0639\u0627\u064a\u0646\u0629: {Message[..Math.Min(30, Message.Length)]}...\";\n        return Page();\n    }\n}\n</code></pre> HTML<pre><code>@* Pages/Contact.cshtml *@\n@page\n@model ContactModel\n@{\n    ViewData[\"Title\"] = \"\u0627\u062a\u0635\u0644 \u0628\u0646\u0627\";\n}\n\n&lt;h2&gt;@ViewData[\"Title\"]&lt;/h2&gt;\n\n@if (!string.IsNullOrEmpty(Model.Status))\n{\n  &lt;div class=\"alert alert-success\"&gt;@Model.Status&lt;/div&gt;\n}\n\n&lt;form method=\"post\"&gt;\n  &lt;div class=\"mb-3\"&gt;\n    &lt;label asp-for=\"Email\" class=\"form-label\"&gt;&lt;/label&gt;\n    &lt;input asp-for=\"Email\" class=\"form-control\" /&gt;\n    &lt;span asp-validation-for=\"Email\" class=\"text-danger\"&gt;&lt;/span&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"mb-3\"&gt;\n    &lt;label asp-for=\"Message\" class=\"form-label\"&gt;&lt;/label&gt;\n    &lt;textarea asp-for=\"Message\" class=\"form-control\"&gt;&lt;/textarea&gt;\n    &lt;span asp-validation-for=\"Message\" class=\"text-danger\"&gt;&lt;/span&gt;\n  &lt;/div&gt;\n\n  &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;\u0625\u0631\u0633\u0627\u0644&lt;/button&gt;\n  &lt;button type=\"submit\" asp-page-handler=\"Preview\" class=\"btn btn-secondary\"&gt;\u0645\u0639\u0627\u064a\u0646\u0629&lt;/button&gt;\n&lt;/form&gt;\n\n@section Scripts {\n  &lt;partial name=\"_ValidationScriptsPartial\" /&gt;\n}\n</code></pre> <p>\u0646\u0642\u0627\u0637 \u0645\u0647\u0645\u0651\u0629: - Anti-forgery \u0645\u0641\u0639\u0651\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0645\u0639 <code>&lt;form method=\"post\"&gt;</code> (\u0639\u0628\u0631 Tag Helper). - Handlers: <code>OnPostPreview</code> \u064a\u064f\u0633\u062a\u062f\u0639\u0649 \u0628\u0632\u0631 <code>asp-page-handler=\"Preview\"</code>. - \u064a\u0645\u0643\u0646 \u062a\u062e\u0635\u064a\u0635 \u0627\u0644\u0645\u0633\u0627\u0631 \u0645\u0646 \u0623\u0639\u0644\u0649 \u0627\u0644\u0645\u0644\u0641: <code>@page \"{id:int?}\"</code>.</p>"},{"location":"terms/razor-pages/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u0628\u062f\u0621 \u0628\u0633\u0631\u0639\u0629","text":"<ol> <li>\u0623\u0646\u0634\u0626 \u0627\u0644\u0642\u0627\u0644\u0628: <code>dotnet new webapp -n MyApp</code>.  </li> <li>\u0641\u064a <code>Program.cs</code>: <code>builder.Services.AddRazorPages();</code> \u062b\u0645 <code>app.MapRazorPages();</code>.  </li> <li>\u0623\u0636\u0650\u0641 \u0635\u0641\u062d\u0629: \u0645\u0644\u0641\u0627\u0646 \u062a\u062d\u062a <code>Pages/</code>:  </li> <li><code>X.cshtml</code> (\u0627\u0644\u0639\u0644\u0627\u0645\u0627\u062a \u0648Tag Helpers)\u060c  </li> <li><code>X.cshtml.cs</code> (PageModel \u0645\u0639 <code>OnGet/OnPost</code>).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>[BindProperty]</code> \u0648DataAnnotations \u0644\u0644\u062a\u062d\u0642\u0651\u0642\u061b \u0623\u0639\u062f <code>Page()</code> \u0639\u0646\u062f \u0639\u062f\u0645 \u0627\u0644\u0635\u0651\u062d\u0629.  </li> <li>\u0627\u0633\u062a\u0639\u0645\u0644 Tag Helpers \u0628\u062f\u0644\u0627\u064b \u0645\u0646 HTML \u064a\u062f\u0648\u064a (<code>asp-for</code>, <code>asp-validation-for</code>).  </li> <li>Handler \u0645\u062e\u0635\u0651\u0635\u061f \u0623\u0646\u0634\u0626 <code>OnPostName</code> \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u0632\u0631 <code>asp-page-handler=\"Name\"</code>.</li> </ol>"},{"location":"terms/razor-pages/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0646\u0633\u064a\u0627\u0646 <code>app.MapRazorPages()</code> \u2192 \u0635\u0641\u062d\u0627\u062a \u062a\u0631\u062c\u0639 404.  </li> <li>\u0643\u062a\u0627\u0628\u0629 \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u062b\u0642\u064a\u0644 \u0641\u064a PageModel \u0628\u062f\u0644 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u062e\u062f\u0645\u0629/Use Case.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0648\u0625\u0631\u062c\u0627\u0639 Redirect \u062f\u0627\u0626\u0645\u064b\u0627 \u2192 \u0641\u0642\u062f\u0627\u0646 \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 <code>Request.Form</code> \u064a\u062f\u0648\u064a\u064b\u0627 \u0628\u062f\u0644 Model Binding \u0648DataAnnotations.  </li> <li>\u062e\u0644\u0637 Razor Pages \u0645\u0639 Controllers \u0644\u0646\u0641\u0633 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0628\u0644\u0627 \u062a\u062e\u0637\u064a\u0637 \u0648\u0627\u0636\u062d.</li> </ul>"},{"location":"terms/razor-pages/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Razor Pages \u0635\u0641\u062d\u0627\u062a \u062a\u0631\u0643\u0632 \u0639\u0644\u0649 \u0627\u0644\u0635\u0641\u062d\u0629 (Forms/CRUD \u0633\u0631\u064a\u0639) \u0623\u0628\u0633\u0637 \u0645\u0646 MVC\u061b \u0645\u0644\u0641 \u0635\u0641\u062d\u0629 + PageModel MVC (Controllers/Views) \u062a\u062d\u0643\u0651\u0645 \u0645\u0631\u0643\u0632\u064a \u0644\u0645\u062c\u0627\u0644\u0627\u062a \u0648\u0627\u0633\u0639\u0629 \u0645\u0646\u0627\u0633\u0628 \u0644\u0640 APIs \u0645\u0639\u0642\u062f\u0629 \u0648\u0645\u0633\u0627\u0631\u0627\u062a \u0643\u062b\u064a\u0631\u0629 Minimal APIs \u0646\u0642\u0627\u0637 \u0646\u0647\u0627\u064a\u0629 API \u0641\u0642\u0637 \u0628\u0644\u0627 \u0648\u0627\u062c\u0647\u0627\u062a\u061b \u0645\u062b\u0627\u0644\u064a \u0644\u0640 \u062e\u062f\u0645\u0627\u062a \u062e\u0641\u064a\u0641\u0629 Blazor (Server/WASM) \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u062a\u0641\u0627\u0639\u0644\u064a\u0629 C# DOM \u0627\u0641\u062a\u0631\u0627\u0636\u064a \u0648\u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0639\u0627\u0644\u064a\u0629 Razor Class Library \u0645\u0634\u0627\u0631\u0643\u0629 \u0648\u0627\u062c\u0647\u0627\u062a/\u062c\u0632\u0621\u0627\u062a Razor \u062a\u0639\u0644\u064a\u0628 \u0645\u0643\u0648\u0651\u0646\u0627\u062a/Layouts \u0642\u0627\u0628\u0644\u0629 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645"},{"location":"terms/razor-pages/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Razor Pages \u062a\u064f\u0628\u0633\u0651\u0637 \u0628\u0646\u0627\u0621 \u0635\u0641\u062d\u0627\u062a \u0627\u0644\u0648\u064a\u0628 \u0641\u064a ASP.NET Core: \u0635\u0641\u062d\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u062c\u0645\u0639 \u0627\u0644\u062a\u0648\u062c\u064a\u0647 + \u0627\u0644\u0639\u0631\u0636 + \u0627\u0644\u0631\u0628\u0637/\u0627\u0644\u062a\u062d\u0642\u0651\u0642\u060c \u0645\u0639 Handlers \u0648\u0627\u0636\u062d\u0629 \u0648Tag Helpers\u2014 \u0645\u0646\u0627\u0633\u0628\u0629 \u062c\u062f\u064b\u0627 \u0644\u0635\u0641\u062d\u0627\u062a Forms/CRUD \u0627\u0644\u0646\u0638\u064a\u0641\u0629\u060c \u0645\u0639 \u0625\u0628\u0642\u0627\u0621 \u0645\u0646\u0637\u0642 \u0627\u0644\u0623\u0639\u0645\u0627\u0644 \u0641\u064a \u062e\u062f\u0645\u0627\u062a \u0645\u0646\u0641\u0635\u0644\u0629. </p>"},{"location":"terms/razor/","title":"Razor","text":""},{"location":"terms/razor/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Razor View Engine / Syntax \u2014 \u0645\u062d\u0631\u0651\u0643/\u0635\u064a\u0627\u063a\u0629 Razor (\u062f\u0645\u062c C# \u062f\u0627\u062e\u0644 HTML).</p>"},{"location":"terms/razor/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>Razor \u0647\u0648 \u0635\u064a\u0627\u063a\u0629 \u0642\u0648\u0627\u0644\u0628 \u062a\u0643\u062a\u0628 \u0628\u0647\u0627 \u0635\u0641\u062d\u0627\u062a HTML \u0645\u0639 \u062a\u0636\u0645\u064a\u0646 C# \u0628\u0633\u0644\u0627\u0633\u0629. \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0641\u064a MVC Views (.cshtml) \u0648Razor Pages \u0648Blazor (.razor)\u060c \u0648\u064a\u062d\u0648\u0651\u064e\u0644 \u0627\u0644\u0642\u0627\u0644\u0628 \u0625\u0644\u0649 \u0643\u0644\u0627\u0633 C# \u064a\u064f\u0646\u0641\u0651\u064e\u0630 (\u0645\u0639 \u062a\u0631\u0645\u064a\u0632 HTML \u062a\u0644\u0642\u0627\u0626\u064a \u0644\u0644\u062d\u0645\u0627\u064a\u0629 \u0645\u0646 XSS).</p>"},{"location":"terms/razor/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0625\u0634\u0627\u0631\u0629 <code>@</code> = \u0627\u0644\u062a\u062d\u0648\u064a\u0644 \u0625\u0644\u0649 C# \u062f\u0627\u062e\u0644 HTML.  </li> <li>\u062a\u0648\u062c\u064a\u0647\u0627\u062a \u0623\u0633\u0627\u0633\u064a\u0629: <code>@model</code>, <code>@page</code> (\u0644\u0640 Razor Pages), <code>@inject</code>, <code>@layout</code>.  </li> <li>Tag Helpers: \u0633\u0645\u0627\u062a \u0645\u062b\u0644 <code>asp-for/asp-action/asp-page</code> \u062a\u0628\u0646\u064a HTML \u0635\u062d\u064a\u062d\u064b\u0627 \u0648\u0622\u0645\u0646\u064b\u0627.  </li> <li>\u0628\u0646\u064a\u0629 \u0639\u0627\u0645\u0629: Layout + Sections + Partials/View Components \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.</li> </ul>"},{"location":"terms/razor/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0641\u0643\u0651\u0631\u0647 \u0643\u0645\u064f\u062a\u0631\u062c\u0645 \u062d\u064a\u0651 \u062f\u0627\u062e\u0644 HTML: \u062a\u0639\u0637\u064a\u0647 C# \u0642\u0635\u064a\u0631\u0629\u060c \u0641\u064a\u0648\u0644\u0651\u062f \u0644\u0643 \u0635\u0641\u062d\u0629 HTML \u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u0629 \u0622\u0645\u0646\u0629.</p>"},{"location":"terms/razor/#1-view-mvc-cshtml-tag-helpers","title":"\u0645\u062b\u0627\u0644 1 \u2014 View MVC \u0645\u062e\u062a\u0635\u0631 (<code>.cshtml</code>) \u0645\u0639 Tag Helpers","text":"Text Only<pre><code>@* Views/Products/Index.cshtml *@\n@model IEnumerable&lt;Product&gt;\n@{\n    ViewData[\"Title\"] = \"Products\";\n    Layout = \"_Layout\";\n}\n&lt;h1&gt;@ViewData[\"Title\"]&lt;/h1&gt;\n\n&lt;a asp-action=\"Create\" class=\"btn btn-primary\"&gt;Add&lt;/a&gt;\n\n&lt;table class=\"table\"&gt;\n  &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Id&lt;/th&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Price&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;\n  &lt;tbody&gt;\n  @foreach (var p in Model)\n  {\n      &lt;tr&gt;\n        &lt;td&gt;@p.Id&lt;/td&gt;\n        &lt;td&gt;@p.Name&lt;/td&gt;\n        &lt;td&gt;@p.Price.ToString(\"C\")&lt;/td&gt;\n      &lt;/tr&gt;\n  }\n  &lt;/tbody&gt;\n&lt;/table&gt;\n\n@* \u062a\u0631\u0645\u064a\u0632 HTML \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627\u061b \u0627\u0633\u062a\u062e\u062f\u0645 Html.Raw \u0628\u062d\u0630\u0631 \u0634\u062f\u064a\u062f \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 *@\n</code></pre>"},{"location":"terms/razor/#2-razor-pages-pagemodel","title":"\u0645\u062b\u0627\u0644 2 \u2014 Razor Pages (\u0635\u0641\u062d\u0629 + PageModel)","text":"Text Only<pre><code>@* Pages/Index.cshtml *@\n@page\n@model IndexModel\n&lt;h2&gt;Quick Note&lt;/h2&gt;\n\n&lt;form method=\"post\" asp-page-handler=\"Add\"&gt;\n  &lt;input asp-for=\"Note\" class=\"form-control\" /&gt;\n  &lt;span asp-validation-for=\"Note\" class=\"text-danger\"&gt;&lt;/span&gt;\n  &lt;button class=\"btn btn-success\" type=\"submit\"&gt;Save&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;ul&gt;\n  @foreach (var n in Model.Notes) { &lt;li&gt;@n&lt;/li&gt; }\n&lt;/ul&gt;\n\n@section Scripts { &lt;partial name=\"_ValidationScriptsPartial\" /&gt; }\n</code></pre> C#<pre><code>// Pages/Index.cshtml.cs\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.AspNetCore.Mvc.RazorPages;\nusing System.ComponentModel.DataAnnotations;\npublic class IndexModel : PageModel\n{\n    [BindProperty, Required, StringLength(100)]\n    public string? Note { get; set; }\n    public List&lt;string&gt; Notes { get; } = new();\n\n    public void OnGet() { }                          // GET\n    public IActionResult OnPostAdd()                 // POST /?handler=Add\n    {\n        if (!ModelState.IsValid) return Page();\n        Notes.Add(Note!);\n        ModelState.Clear(); Note = \"\";\n        return Page();\n    }\n}\n</code></pre> <p>\u0645\u0647\u0645: Form Tag Helper \u064a\u0636\u064a\u0641 Anti-forgery Token \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0641\u064a POST. \u0644\u0627 \u062a\u0644\u063a\u0650\u0647.</p>"},{"location":"terms/razor/#3-partial-view","title":"\u0645\u062b\u0627\u0644 3 \u2014 Partial View \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645","text":"Text Only<pre><code>@* Views/Shared/_ProductRow.cshtml *@\n@model Product\n&lt;tr&gt;&lt;td&gt;@Model.Id&lt;/td&gt;&lt;td&gt;@Model.Name&lt;/td&gt;&lt;td&gt;@Model.Price&lt;/td&gt;&lt;/tr&gt;\n</code></pre> Text Only<pre><code>@* \u0627\u0644\u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u062f\u0627\u062e\u0644 \u0623\u064a View *@\n&lt;tbody&gt;\n  @foreach (var p in Model)\n  { &lt;partial name=\"_ProductRow\" model=\"p\" /&gt; }\n&lt;/tbody&gt;\n</code></pre>"},{"location":"terms/razor/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0633\u0631\u064a\u0639\u0629","text":"<ol> <li>\u0627\u0644\u0628\u062f\u0621 </li> <li>MVC: <code>dotnet new mvc</code> \u2192 \u0627\u0633\u062a\u062e\u062f\u0645 Views/Layouts/Partials.  </li> <li>Razor Pages: <code>dotnet new webapp</code> \u2192 \u0635\u0641\u062d\u0627\u062a \u0628\u0640 <code>@page</code>.</li> <li>\u0627\u0644\u0646\u0645\u0627\u0630\u062c \u0648\u0627\u0644\u062a\u062d\u0642\u0651\u0642: \u0623\u0636\u0641 Data Annotations + <code>asp-validation-*</code>.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646: \u0627\u062a\u0631\u0643 \u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a\u060c \u0648\u062a\u062c\u0646\u0651\u0628 <code>@Html.Raw</code> \u0625\u0644\u0627 \u0644\u0645\u062d\u062a\u0648\u0649 \u0645\u0648\u062b\u0648\u0642.  </li> <li>\u0627\u0644\u062a\u0646\u0638\u064a\u0645: Layout \u0645\u0648\u062d\u0651\u062f\u060c Partials/Components \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u060c \u0648ViewModels \u0648\u0627\u0636\u062d\u0629.  </li> <li>\u0627\u0644\u0623\u062f\u0627\u0621: \u0627\u0633\u062a\u062e\u062f\u0645 Cache Tag Helper \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u060c \u0648\u0642\u0644\u0651\u0644 \u0645\u0646\u0637\u0642 \u0627\u0644\u0639\u0631\u0636 \u0641\u064a \u0627\u0644\u0642\u0627\u0644\u0628.</li> </ol>"},{"location":"terms/razor/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u062b\u0642\u064a\u0644 \u062f\u0627\u062e\u0644 <code>.cshtml</code> \u0628\u062f\u0644 \u062e\u062f\u0645\u0627\u062a/Handlers.  </li> <li>\u0627\u0633\u062a\u0639\u0645\u0627\u0644 <code>Html.Raw</code> \u0644\u0645\u062d\u062a\u0648\u0649 \u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642 \u2192 XSS.  </li> <li>\u0625\u0647\u0645\u0627\u0644 ModelState \u0648\u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0639\u0646\u062f POST.  </li> <li>\u0628\u0646\u0627\u0621 \u0631\u0648\u0627\u0628\u0637/\u0646\u0645\u0627\u0630\u062c \u064a\u062f\u0648\u064a\u064b\u0627 \u0628\u062f\u0644 Tag Helpers \u2192 \u0645\u0633\u0627\u0631\u0627\u062a/\u0623\u0633\u0645\u0627\u0621 \u063a\u064a\u0631 \u0645\u062a\u0646\u0627\u0633\u0642\u0629.  </li> <li>\u062e\u0644\u0637 Razor Pages \u0645\u0639 MVC \u0628\u0644\u0627 \u062a\u0646\u0638\u064a\u0645 \u0648\u0627\u0636\u062d \u0644\u0644\u0645\u062c\u0644\u062f\u0627\u062a \u0648\u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a.</li> </ul>"},{"location":"terms/razor/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Razor \u0635\u064a\u0627\u063a\u0629 \u0642\u0648\u0627\u0644\u0628 C# \u062f\u0627\u062e\u0644 HTML \u062a\u0631\u0645\u064a\u0632 \u062a\u0644\u0642\u0627\u0626\u064a\u060c Layout/Sections/Partials\u060c Tag Helpers Razor Pages \u0635\u0641\u062d\u0629 = \u0648\u0627\u062c\u0647\u0629 + PageModel \u0623\u0628\u0633\u0637 \u0644\u0640 CRUD\u061b \u062a\u0648\u062c\u064a\u0647 \u0645\u0628\u0646\u064a \u0639\u0644\u0649 \u0627\u0644\u0645\u0644\u0641\u0627\u062a MVC Views + Controllers \u0641\u0635\u0644 Controller/Model/View\u061b \u0645\u0631\u0646 \u0644\u0644\u0645\u0634\u0627\u0631\u064a\u0639 \u0627\u0644\u0643\u0628\u064a\u0631\u0629 Blazor \u0645\u0643\u0648\u0646\u0627\u062a \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0628\u0640 <code>.razor</code> \u064a\u0639\u0645\u0644 Server/WebAssembly\u061b \u0646\u0641\u0633 \u0635\u064a\u0627\u063a\u0629 Razor \u0644\u0643\u0646 \u0646\u0645\u0648\u0630\u062c \u0645\u0643\u0648\u0651\u0646\u0627\u062a"},{"location":"terms/razor/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Razor \u064a\u0645\u0646\u062d\u0643 \u0642\u0648\u0627\u0644\u0628 HTML + C# \u0646\u0638\u064a\u0641\u0629 \u0648\u0622\u0645\u0646\u0629. \u0627\u0633\u062a\u0639\u0645\u0644 Tag Helpers\u060c \u0627\u0641\u0635\u0644 \u0627\u0644\u0645\u0646\u0637\u0642 \u0639\u0646 \u0627\u0644\u0642\u0648\u0627\u0644\u0628\u060c \u0648\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u0627\u0644\u062a\u062d\u0642\u0651\u0642/\u0645\u0643\u0627\u0641\u062d\u0629 \u0627\u0644\u062a\u0632\u0648\u064a\u0631\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0635\u0641\u062d\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0635\u064a\u0627\u0646\u0629 \u0648\u0633\u0631\u064a\u0639\u0629 \u0627\u0644\u0625\u0646\u0634\u0627\u0621.</p>"},{"location":"terms/request-response-model/","title":"R&amp;R Model \u2014 Request &amp; Response Model","text":""},{"location":"terms/request-response-model/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Request &amp; Response Model (R&amp;R) \u2014 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629</p>"},{"location":"terms/request-response-model/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0646\u0645\u0637 \u062a\u0648\u0627\u0635\u0644 \u0628\u064a\u0646 \u0639\u0645\u064a\u0644 \u0648\u062e\u0627\u062f\u0645 \u062d\u064a\u062b \u064a\u0631\u0633\u0644 \u0627\u0644\u0639\u0645\u064a\u0644 \u0637\u0644\u0628\u064b\u0627 (Request) \u0648\u064a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0627\u0633\u062a\u062c\u0627\u0628\u0629 (Response). \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u062a\u0632\u0627\u0645\u0646\u0629 \u0627\u0644\u0642\u0635\u064a\u0631\u0629 (\u0642\u0631\u0627\u0621\u0629/\u0625\u0646\u0634\u0627\u0621/\u062a\u062d\u062f\u064a\u062b/\u062d\u0630\u0641) \u0645\u0639 \u0631\u0645\u0648\u0632 \u062d\u0627\u0644\u0629 \u0648\u0627\u0636\u062d\u0629 \u0648\u0647\u064a\u0626\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062a\u0641\u0642 \u0639\u0644\u064a\u0647\u0627.</p>"},{"location":"terms/request-response-model/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0639\u0645\u064a\u0644 \u064a\u0642\u0648\u0644: \u201c\u0623\u0639\u0637\u0646\u064a /products/5\u201d \u2192 \u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0631\u062f \u0628\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0646\u062a\u062c \u0623\u0648 \u0628\u062e\u0637\u0623.  </li> <li>\u064a\u062a\u0643\u0648\u0651\u0646 \u0643\u0644 \u062a\u0641\u0627\u0639\u0644 \u0645\u0646: \u0633\u0637\u0631 \u0637\u0644\u0628 + \u0631\u0624\u0648\u0633 Headers + (\u0627\u062e\u062a\u064a\u0627\u0631\u064a\u064b\u0627) \u062c\u0633\u0645 Body.  </li> <li>\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u062a\u062d\u0648\u064a: Status Code (200/201/400/404/500\u2026) + Headers + Body.  </li> <li>\u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0648\u064a\u0628 (HTTP/HTTPS)\u060c \u0648\u0644\u0648\u0627\u062c\u0647\u0627\u062a REST \u0648GraphQL (\u0639\u0628\u0631 HTTP)\u060c \u0648\u062d\u062a\u0649 RPC \u0641\u0648\u0642 HTTPS.  </li> </ul>"},{"location":"terms/request-response-model/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0643\u062a\u0628 \u062e\u062f\u0645\u0629: \u062a\u0623\u062e\u0630 \u0646\u0645\u0648\u0630\u062c \u0637\u0644\u0628\u060c \u062a\u0645\u0644\u0623\u0647\u060c \u0648\u062a\u0633\u0644\u0651\u0645\u0647 \u0644\u0644\u0645\u0648\u0638\u0651\u0641. \u0628\u0639\u062f \u062f\u0642\u0627\u0626\u0642 \u062a\u0633\u062a\u0644\u0645 \u0646\u062a\u064a\u062c\u0629 \u0645\u062e\u062a\u0648\u0645\u0629 \u062a\u0628\u064a\u0646 \u0627\u0644\u0646\u062c\u0627\u062d \u0623\u0648 \u0627\u0644\u0631\u0641\u0636 \u0648\u0633\u0628\u0628 \u0627\u0644\u0642\u0631\u0627\u0631.</p>"},{"location":"terms/request-response-model/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062e\u0627\u062f\u0645 + \u0639\u0645\u064a\u0644)","text":""},{"location":"terms/request-response-model/#aspnet-core-minimal-api","title":"\u062e\u0627\u062f\u0645 (ASP.NET Core Minimal API)","text":"C#<pre><code>// Program.cs\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapGet(\"/api/products/{id:int}\", (int id) =&gt;\n{\n    if (id &lt;= 0) return Results.BadRequest(new { error = \"Invalid id.\" });\n    var product = new { id, name = \"Laptop\", price = 999 };\n    return Results.Ok(product); // 200 + JSON\n});\n\napp.MapPost(\"/api/orders\", (OrderDto dto) =&gt;\n{\n    if (string.IsNullOrWhiteSpace(dto.ProductId)) return Results.BadRequest();\n    // \u0627\u062d\u0641\u0638 \u0627\u0644\u0637\u0644\u0628...\n    return Results.Created($\"/api/orders/123\", new { orderId = 123, status = \"created\" }); // 201\n});\n\napp.Run();\n\nrecord OrderDto(string ProductId, int Qty);\n</code></pre>"},{"location":"terms/request-response-model/#httpclient","title":"\u0639\u0645\u064a\u0644 (\u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0639\u0628\u0631 HttpClient)","text":"C#<pre><code>using var http = new HttpClient { BaseAddress = new Uri(\"https://localhost:5001\") };\n\n// 1) \u0637\u0644\u0628 GET\nvar r1 = await http.GetAsync(\"/api/products/5\");\nConsole.WriteLine((int)r1.StatusCode);                // 200 \u0623\u0648 \u063a\u064a\u0631\u0647\nConsole.WriteLine(await r1.Content.ReadAsStringAsync());\n\n// 2) \u0637\u0644\u0628 POST \u0645\u0639 JSON\nvar r2 = await http.PostAsJsonAsync(\"/api/orders\", new { ProductId = \"5\", Qty = 2 });\nConsole.WriteLine((int)r2.StatusCode);                // 201 \u0639\u0646\u062f \u0627\u0644\u0625\u0646\u0634\u0627\u0621\nConsole.WriteLine(r2.Headers.Location);               // /api/orders/123\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - <code>GET</code> \u064a\u0637\u0628\u0639 <code>200</code> \u062b\u0645 JSON \u0644\u0644\u0645\u0646\u062a\u062c. - <code>POST</code> \u064a\u0637\u0628\u0639 <code>201</code> \u0648\u0645\u0648\u0642\u0639 \u0627\u0644\u0645\u0648\u0631\u062f \u0627\u0644\u062c\u062f\u064a\u062f \u0641\u064a \u062a\u0631\u0648\u064a\u0633\u0629 <code>Location</code>.</p>"},{"location":"terms/request-response-model/#rr","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 R&amp;R \u0641\u0639\u0651\u0627\u0644","text":"<ul> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0639\u0642\u0648\u062f (\u0646\u0650\u0645\u0627\u0630\u062c \u0627\u0644\u0637\u0644\u0628/\u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629) \u0648\u0647\u064a\u0626\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (JSON \u063a\u0627\u0644\u0628\u064b\u0627).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0631\u0645\u0648\u0632 \u062d\u0627\u0644\u0629 HTTP \u0628\u062f\u0642\u0651\u0629\u060c \u0648\u0623\u0639\u062f \u0631\u0633\u0627\u0626\u0644 \u062e\u0637\u0623 \u0648\u0627\u0636\u062d\u0629 (\u0645\u0641\u062a\u0627\u062d <code>error</code>/<code>code</code>).  </li> <li>\u0648\u062b\u0651\u0642 \u0627\u0644\u0640 API \u0639\u0628\u0631 OpenAPI/Swagger.  </li> <li>\u0631\u0627\u0639\u0650 Idempotency: \u0627\u062c\u0639\u0644 <code>GET/PUT/DELETE</code> \u0622\u0645\u0646\u0629 \u0644\u0644\u062a\u0643\u0631\u0627\u0631\u061b \u0648\u0627\u062f\u0639\u0645 \u0645\u0641\u0627\u062a\u064a\u062d idempotency \u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062f\u0641\u0639.  </li> <li>\u0623\u0636\u0641 Pagination/Sorting/Filtering \u0644\u0646\u0647\u0627\u064a\u0627\u062a \u0627\u0644\u0642\u0648\u0627\u0626\u0645.  </li> <li>\u0646\u0641\u0651\u0630 Auth (JWT/OAuth2) \u0648Rate Limiting \u0648Caching \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0639\u0628\u0631 Postman/curl \u0648\u0623\u062f\u062e\u0650\u0644\u0647\u0627 \u0641\u064a CI.</li> </ul>"},{"location":"terms/request-response-model/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Client-Server \u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0623\u062f\u0648\u0627\u0631 \u0628\u064a\u0646 \u0639\u0645\u064a\u0644 \u064a\u0637\u0644\u0628 \u0648\u062e\u0627\u062f\u0645 \u064a\u0644\u0628\u0651\u064a \u0646\u0645\u0637 \u0645\u0639\u0645\u0627\u0631\u064a \u0639\u0627\u0645\u061b \u0644\u0627 \u064a\u062d\u062f\u0651\u062f \u0634\u0643\u0644 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0628\u0627\u0644\u062a\u0641\u0635\u064a\u0644 Request\u2013Response Model \u062a\u0628\u0627\u062f\u0644 \u0645\u062a\u0632\u0627\u0645\u0646: \u0637\u0644\u0628 \u0648\u0627\u062d\u062f \u2192 \u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0648\u0627\u062d\u062f\u0629 \u0648\u0627\u0636\u062d \u0648\u0628\u0633\u064a\u0637\u061b \u0645\u0646\u0627\u0633\u0628 \u0644\u0639\u0645\u0644\u064a\u0627\u062a CRUD \u0627\u0644\u0642\u0635\u064a\u0631\u0629 \u0648\u0631\u0645\u0648\u0632 \u0627\u0644\u062d\u0627\u0644\u0629 Publish-Subscribe \u0628\u062b \u0623\u062d\u062f\u0627\u062b \u0644\u0645\u0634\u062a\u0631\u0643\u064a\u0646 \u0645\u062a\u0639\u062f\u062f\u064a\u0646 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 \u063a\u0627\u0644\u0628\u064b\u0627\u061b \u062c\u064a\u062f \u0644\u0644\u0628\u062b \u0648\u0627\u0644\u0625\u0634\u0639\u0627\u0631\u0627\u062a \u0648\u0627\u0644\u0641\u0627\u0639\u0644\u064a\u0627\u062a"},{"location":"terms/request-response-model/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>R&amp;R (Request\u2013Response) = \u201c\u0627\u0633\u0623\u0644\u2026 \u064a\u0635\u0644\u0643 \u062c\u0648\u0627\u0628\u201d. \u0635\u0645\u0651\u0645 \u0627\u0644\u0639\u0642\u0648\u062f \u0628\u0648\u0636\u0648\u062d\u060c \u0627\u0633\u062a\u062e\u062f\u0645 \u0631\u0645\u0648\u0632 \u0627\u0644\u062d\u0627\u0644\u0629 \u0628\u062f\u0642\u0629\u060c \u0648\u0648\u062b\u0651\u0642 \u0643\u0644 \u0634\u064a\u0621 \u0644\u0636\u0645\u0627\u0646 \u062a\u0648\u0627\u0635\u0644 \u0645\u062a\u064a\u0646 \u0628\u064a\u0646 \u0627\u0644\u0639\u0645\u064a\u0644 \u0648\u0627\u0644\u062e\u0627\u062f\u0645.</p>"},{"location":"terms/request-response-model/#_7","title":"\u0633\u0624\u0627\u0644 \u062a\u062b\u0628\u064a\u062a (\u0625\u062c\u0627\u0628\u0629 \u0645\u062e\u0641\u064a\u0651\u0629)","text":"<p>\u0645\u062a\u0649 \u062a\u0641\u0636\u0651\u0644 Pub/Sub \u0639\u0644\u0649 R&amp;R\u061f</p> \u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0625\u062c\u0627\u0628\u0629   \u0639\u0646\u062f\u0645\u0627 \u062a\u062d\u062a\u0627\u062c **\u0628\u062b \u0623\u062d\u062f\u0627\u062b \u0644\u0639\u062f\u0629 \u0645\u0633\u062a\u0647\u0644\u0643\u064a\u0646** \u0623\u0648 **\u062a\u0641\u0627\u0639\u0644 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646** (\u0625\u0634\u0639\u0627\u0631\u0627\u062a\u060c Telemetry\u060c \u062a\u0643\u0627\u0645\u0644\u0627\u062a \u0636\u0639\u064a\u0641\u0629 \u0627\u0644\u0627\u0631\u062a\u0628\u0627\u0637).     \u0623\u0645\u0651\u0627 **\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u062a\u0632\u0627\u0645\u0646\u0629 \u0627\u0644\u0642\u0635\u064a\u0631\u0629** (\u0642\u0631\u0627\u0621\u0629/\u062a\u0639\u062f\u064a\u0644 \u0645\u0648\u0631\u062f) \u0641\u0640 R&amp;R \u0623\u0628\u0633\u0637 \u0648\u0623\u0646\u0633\u0628."},{"location":"terms/requirements/","title":"Requirements","text":""},{"location":"terms/requirements/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Requirements \u2014 \u0627\u0644\u0645\u062a\u0637\u0644\u0651\u0628\u0627\u062a (\u0645\u0627 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0641\u0639\u0644\u0647 \u0627\u0644\u0646\u0638\u0627\u0645 \u0648\u0643\u064a\u0641 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0623\u062f\u0627\u0624\u0647).</p>"},{"location":"terms/requirements/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0641\u0635\u064a\u0644 \u0645\u0627 \u064a\u062d\u062a\u0627\u062c\u0647 \u0623\u0635\u062d\u0627\u0628 \u0627\u0644\u0645\u0635\u0644\u062d\u0629 \u0645\u0646 \u0627\u0644\u0646\u0638\u0627\u0645: - \u0648\u0638\u064a\u0641\u064a\u0629 (Functional): \u0633\u0644\u0648\u0643\u064a\u0627\u062a \u0648\u0645\u064a\u0632\u0627\u062a. - \u0644\u0627-\u0648\u0638\u064a\u0641\u064a\u0629 (NFRs): \u0623\u062f\u0627\u0621\u060c \u0623\u0645\u0627\u0646\u060c \u062a\u0648\u0627\u0641\u064f\u0631\u060c \u0642\u0627\u0628\u0644\u064a\u0629 \u0635\u064a\u0627\u0646\u0629\u2026 \u0645\u0639 \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644 \u0648\u0627\u0636\u062d\u0629 \u0648\u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u062a\u062a\u0628\u0651\u0639 \u0645\u0646 \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u062d\u062a\u0649 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.</p>"},{"location":"terms/requirements/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0643\u062a\u0628 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0628\u0635\u064a\u063a\u0629 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 (Given/When/Then \u0623\u0648 \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644).  </li> <li>\u0646\u0645\u064a\u0651\u0632 \u0628\u064a\u0646 Must/Should/Could/Won\u2019t (MoSCoW \u0644\u0644\u0623\u0648\u0644\u0648\u064a\u0629).  </li> <li>\u0646\u0648\u062b\u0651\u0642 \u0627\u0644\u0642\u064a\u0648\u062f (Constraints) \u0648\u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u0627\u062a (Assumptions).  </li> <li>\u0646\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u062a\u062a\u0628\u0651\u0639 (Traceability): \u0643\u0644 \u0645\u062a\u0637\u0644\u0628 \u2194 \u062a\u0635\u0645\u064a\u0645 \u2194 \u0643\u0648\u062f \u2194 \u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u062a\u062a\u063a\u064a\u0651\u0631\u061b \u0644\u0630\u0627 \u0646\u062d\u062a\u0627\u062c \u062d\u0643\u0645 \u062a\u063a\u064a\u064a\u0631 \u0648\u0625\u0635\u062f\u0627\u0631\u0627\u062a.</li> </ul>"},{"location":"terms/requirements/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0639\u0642\u062f \u0628\u0646\u0627\u0621 \u0634\u0642\u0629: \u064a\u062d\u062f\u062f \u0639\u062f\u062f \u0627\u0644\u063a\u0631\u0641\u060c \u0627\u0644\u0645\u0633\u0627\u062d\u0627\u062a\u060c \u0627\u0644\u0639\u0632\u0644 \u0627\u0644\u062d\u0631\u0627\u0631\u064a\u060c \u0648\u0645\u0648\u0639\u062f \u0627\u0644\u062a\u0633\u0644\u064a\u0645. \u0627\u0644\u0645\u0642\u0627\u0648\u0644 \u0644\u0627 \u064a\u0628\u062f\u0623 \u062f\u0648\u0646 \u0639\u0642\u062f \u0648\u0627\u0636\u062d \u064a\u0645\u0643\u0646 \u0641\u062d\u0635\u0647 \u0639\u0646\u062f \u0627\u0644\u062a\u0633\u0644\u064a\u0645.</p>"},{"location":"terms/requirements/#c-xunit","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0645\u062e\u062a\u0635\u0631 \u2014 \u0645\u0646 \u0645\u062a\u0637\u0644\u0628 \u0625\u0644\u0649 \u0627\u062e\u062a\u0628\u0627\u0631 \u0625\u0644\u0649 \u062a\u0646\u0641\u064a\u0630 (C# + xUnit)","text":"<p>REQ-PR-001: \u064a\u0633\u062a\u0637\u064a\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0625\u0639\u0627\u062f\u0629 \u062a\u0639\u064a\u064a\u0646 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0628\u0634\u0631\u0637 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0631\u0645\u0632 \u0627\u0644\u0627\u0633\u062a\u0639\u0627\u062f\u0629 \u0635\u062d\u064a\u062d\u064b\u0627 \u0648\u063a\u064a\u0631 \u0645\u0646\u062a\u0647\u064a \u0648\u0644\u0645 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0633\u0627\u0628\u0642\u064b\u0627. \u0642\u0628\u0648\u0644: - \u0625\u0630\u0627 \u0643\u0627\u0646 \u0627\u0644\u0631\u0645\u0632 \u0633\u0644\u064a\u0645\u064b\u0627 \u2192 \u064a\u0631\u062c\u0639 Success \u0648\u062a\u064f\u062d\u062f\u0651\u062b \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631. - \u0625\u0630\u0627 \u0643\u0627\u0646 \u0645\u0646\u062a\u0647\u064a\u064b\u0627 \u0623\u0648 \u0645\u0633\u062a\u0639\u0645\u0644\u064b\u0627 \u0623\u0648 \u063a\u064a\u0631 \u0645\u0637\u0627\u0628\u0642 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u2192 Failure \u0628\u0631\u0633\u0627\u0644\u0629 \u0645\u0646\u0627\u0633\u0628\u0629.</p>"},{"location":"terms/requirements/#1","title":"1) \u0627\u062e\u062a\u0628\u0627\u0631 (\u064a\u0639\u0628\u0651\u0631 \u0639\u0646 \u0645\u0639\u0627\u064a\u064a\u0631 \u0627\u0644\u0642\u0628\u0648\u0644)","text":"C#<pre><code>// dotnet add package xunit\n// dotnet add package xunit.runner.visualstudio\nusing System;\nusing System.Threading.Tasks;\nusing Xunit;\n\npublic class PasswordResetTests\n{\n    [Fact] // \u062d\u0627\u0644\u0629 \u0646\u062c\u0627\u062d\n    public async Task Reset_Succeeds_When_Token_Valid_And_Owned()\n    {\n        var store = new InMemoryResetStore();\n        var svc = new PasswordResetService(store);\n\n        var token = await store.IssueAsync(\"user@example.com\", expiresInMinutes: 15);\n        var res = await svc.ResetAsync(\"user@example.com\", token, \"N3wP@ssw0rd!\");\n\n        Assert.True(res.Success);\n        Assert.True(await store.IsPasswordSetAsync(\"user@example.com\"));\n    }\n\n    [Theory] // \u062d\u0627\u0644\u0627\u062a \u0641\u0634\u0644\n    [InlineData(\"other@example.com\", \"TokenNotForUser\")]\n    [InlineData(\"user@example.com\",  \"Expired\")]\n    [InlineData(\"user@example.com\",  \"Used\")]\n    public async Task Reset_Fails_When_Token_Invalid(string email, string mode)\n    {\n        var store = new InMemoryResetStore();\n        var svc = new PasswordResetService(store);\n\n        var token = await store.IssueAsync(\"user@example.com\", expiresInMinutes: 0); // \u064a\u0646\u062a\u0647\u064a \u0641\u0648\u0631\u064b\u0627\n        if (mode == \"Used\") await store.MarkUsedAsync(token);\n        if (mode == \"TokenNotForUser\") email = \"other@example.com\";\n\n        var res = await svc.ResetAsync(email, token, \"N3wP@ssw0rd!\");\n        Assert.False(res.Success);\n        Assert.NotEmpty(res.Error!);\n    }\n}\n</code></pre>"},{"location":"terms/requirements/#2","title":"2) \u0627\u0644\u062a\u0646\u0641\u064a\u0630 (\u0628\u0633\u0627\u0637\u0629 \u062a\u0643\u0641\u064a \u0644\u0627\u062c\u062a\u064a\u0627\u0632 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a)","text":"C#<pre><code>using System;\nusing System.Collections.Concurrent;\nusing System.Threading.Tasks;\n\npublic record ResetResult(bool Success, string? Error = null);\n\npublic interface IResetStore\n{\n    Task&lt;string&gt; IssueAsync(string email, int expiresInMinutes);\n    Task&lt;(string Email, DateTimeOffset Expiry, bool Used)?&gt; LookupAsync(string token);\n    Task MarkUsedAsync(string token);\n    Task SetPasswordAsync(string email, string newPassword);\n    Task&lt;bool&gt; IsPasswordSetAsync(string email);\n}\n\npublic class PasswordResetService\n{\n    private readonly IResetStore _store;\n    public PasswordResetService(IResetStore store) =&gt; _store = store;\n\n    // \u062a\u0646\u0641\u064a\u0630 \u0645\u062a\u0637\u0644\u0628 REQ-PR-001\n    public async Task&lt;ResetResult&gt; ResetAsync(string email, string token, string newPassword)\n    {\n        var info = await _store.LookupAsync(token);\n        if (info is null) return new ResetResult(false, \"invalid_token\");\n        if (!string.Equals(info.Value.Email, email, StringComparison.OrdinalIgnoreCase))\n            return new ResetResult(false, \"token_not_for_user\");\n        if (info.Value.Used) return new ResetResult(false, \"token_used\");\n        if (DateTimeOffset.UtcNow &gt; info.Value.Expiry) return new ResetResult(false, \"token_expired\");\n\n        // (\u062a\u0628\u0633\u064a\u0637) \u062a\u062d\u0642\u0642 \u062d\u062f \u0623\u062f\u0646\u0649 \u0644\u0646FR \u0627\u0644\u0623\u0645\u0646\n        if (newPassword.Length &lt; 8) return new ResetResult(false, \"weak_password\");\n\n        await _store.SetPasswordAsync(email, newPassword);\n        await _store.MarkUsedAsync(token);\n        return new ResetResult(true);\n    }\n}\n\n// \u062a\u062e\u0632\u064a\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u0630\u0627\u0643\u0631\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0641\u0642\u0637\npublic class InMemoryResetStore : IResetStore\n{\n    private record Token(string Email, DateTimeOffset Expiry, bool Used);\n    private readonly ConcurrentDictionary&lt;string, Token&gt; _tokens = new();\n    private readonly ConcurrentDictionary&lt;string, string&gt; _passwords = new();\n\n    public Task&lt;string&gt; IssueAsync(string email, int expiresInMinutes)\n    {\n        var token = Guid.NewGuid().ToString(\"N\");\n        _tokens[token] = new Token(email, DateTimeOffset.UtcNow.AddMinutes(expiresInMinutes), false);\n        return Task.FromResult(token);\n    }\n    public Task&lt;(string Email, DateTimeOffset Expiry, bool Used)?&gt; LookupAsync(string token)\n        =&gt; Task.FromResult(_tokens.TryGetValue(token, out var t)\n           ? (string Email, DateTimeOffset Expiry, bool Used)? (t.Email, t.Expiry, t.Used) : null);\n    public Task MarkUsedAsync(string token)\n    { if (_tokens.TryGetValue(token, out var t)) _tokens[token] = t with { Used = true }; return Task.CompletedTask; }\n    public Task SetPasswordAsync(string email, string newPassword)\n    { _passwords[email] = newPassword; return Task.CompletedTask; }\n    public Task&lt;bool&gt; IsPasswordSetAsync(string email) =&gt; Task.FromResult(_passwords.ContainsKey(email));\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0628\u062f\u0623\u0646\u0627 \u0628\u0645\u062a\u0637\u0644\u0628 \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u060c \u0643\u062a\u0628\u0646\u0627 \u0627\u062e\u062a\u0628\u0627\u0631\u064b\u0627 (\u0642\u0628\u0648\u0644)\u060c \u062b\u0645 \u062a\u0646\u0641\u064a\u0630\u064b\u0627 \u064a\u062d\u0642\u0651\u0642 \u0627\u0644\u0634\u0631\u0637. \u0623\u064a \u062a\u063a\u064a\u064a\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u062a\u0637\u0644\u0628 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0646\u0639\u0643\u0633 \u0641\u064a \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0642\u0628\u0644 \u0627\u0644\u0643\u0648\u062f.</p>"},{"location":"terms/requirements/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0643\u062a\u0627\u0628\u0629 \u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u0645\u062a\u0627\u0632\u0629","text":"<ul> <li>\u0627\u0643\u062a\u0628 \u0647\u062f\u0641 \u0627\u0644\u0639\u0645\u0644 \u0648\u0646\u0637\u0627\u0642\u064b\u0627 \u0648\u0627\u0636\u062d\u064b\u0627 \u0644\u0643\u0644 \u0645\u062a\u0637\u0644\u0628.  </li> <li>\u0635\u0650\u063a \u0642\u0635\u0635 \u0645\u0633\u062a\u062e\u062f\u0645 \u0645\u0639 \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644 (Given/When/Then).  </li> <li>\u063a\u0637\u0651\u0650 NFRs \u0628\u0642\u064a\u0645 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0642\u064a\u0627\u0633:  </li> <li>Performance: P95 \u2264 200ms \u0639\u0646\u062f 200rps.  </li> <li>Availability: 99.9% \u0634\u0647\u0631\u064a\u064b\u0627.  </li> <li>Security: MFA\u060c \u062a\u0634\u0641\u064a\u0631 TLS1.2+\u060c \u0633\u062c\u0644\u0627\u062a \u062a\u062f\u0642\u064a\u0642.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 MoSCoW \u0644\u0644\u0623\u0648\u0644\u0648\u064a\u0629.  </li> <li>\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u0627\u0644\u062a\u062a\u0628\u0651\u0639 (RTM): \u0643\u0644 \u0645\u062a\u0637\u0644\u0628 \u0644\u0647 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u062a\u0635\u0645\u064a\u0645\u060c \u0648\u062a\u0630\u0627\u0643\u0631.  </li> <li>\u0631\u0627\u062c\u0639 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u0639 \u0623\u0635\u062d\u0627\u0628 \u0627\u0644\u0645\u0635\u0644\u062d\u0629 \u0648\u0627\u0642\u0641\u0644 \u0627\u0644\u0646\u0633\u062e\u0629 (Version) \u0642\u0628\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630.  </li> <li>\u0636\u0639 \u0633\u064a\u0627\u0633\u0629 \u062a\u063a\u064a\u064a\u0631 (Change Control) \u0648\u062a\u0623\u062b\u064a\u0631\u0647\u0627 \u0639\u0644\u0649 \u0627\u0644\u062c\u062f\u0648\u0644/\u0627\u0644\u062a\u0643\u0644\u0641\u0629.</li> </ul>"},{"location":"terms/requirements/#rtm-traceability","title":"\u0645\u062b\u0627\u0644 RTM \u0635\u063a\u064a\u0631 (Traceability)","text":"Req ID \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062e\u062a\u0635\u0631 \u062a\u0635\u0645\u064a\u0645/\u0643\u0648\u062f \u0627\u062e\u062a\u0628\u0627\u0631 REQ-PR-001 \u0625\u0639\u0627\u062f\u0629 \u062a\u0639\u064a\u064a\u0646 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0628\u0631\u0645\u0632 \u0635\u0627\u0644\u062d <code>PasswordResetService</code> <code>PasswordResetTests.*</code>"},{"location":"terms/requirements/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u063a\u0627\u0645\u0636\u0629 (\u201c\u0633\u0631\u064a\u0639\u201d\u060c \u201c\u0622\u0645\u0646\u201d) \u0628\u062f\u0648\u0646 \u0645\u0642\u0627\u064a\u064a\u0633.  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u0639 \u0627\u0644\u062d\u0644\u0651 (\u201c\u0627\u0633\u062a\u0639\u0645\u0644 PostgreSQL\u201d) \u0628\u062f\u0644 \u0627\u0644\u0646\u062a\u064a\u062c\u0629.  </li> <li>\u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0642\u0628\u0648\u0644 \u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0646\u0633\u064a\u0627\u0646 NFRs \u062b\u0645 \u0627\u0643\u062a\u0634\u0627\u0641\u0647\u0627 \u0628\u0639\u062f \u0641\u0648\u0627\u062a \u0627\u0644\u0623\u0648\u0627\u0646.  </li> <li>\u063a\u064a\u0627\u0628 \u0627\u0644\u062a\u062a\u0628\u0651\u0639 \u2192 \u0635\u0639\u0648\u0628\u0629 \u0645\u0639\u0631\u0641\u0629 \u0645\u0627 \u0627\u0644\u0630\u064a \u0643\u064f\u0633\u0631 \u0639\u0646\u062f \u0627\u0644\u062a\u063a\u064a\u064a\u0631.  </li> <li>\u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0628\u062f\u0648\u0646 \u062d\u0643\u0645 \u062a\u063a\u064a\u064a\u0631 \u0648\u0625\u0635\u062f\u0627\u0631\u0627\u062a.</li> </ul>"},{"location":"terms/requirements/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Requirements \u0645\u0627 \u064a\u062c\u0628 \u0623\u0646 \u064a\u0641\u0639\u0644\u0647 \u0627\u0644\u0646\u0638\u0627\u0645 (Functional/NFRs) \u062a\u064f\u0643\u062a\u0628 \u0628\u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Acceptance Criteria \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u062c\u0627\u062d \u0644\u0643\u0644 \u0642\u0635\u0629/\u0645\u064a\u0632\u0629 \u062a\u064f\u062d\u0648\u064e\u0651\u0644 \u0625\u0644\u0649 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0642\u0628\u0648\u0644 Approach \u0645\u0642\u0627\u0631\u0628\u0629/\u062e\u0637\u0629 \u0644\u062a\u062d\u0642\u064a\u0642 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0628\u062f\u0627\u0626\u0644 \u0648\u0645\u0641\u0627\u0636\u0644\u0627\u062a \u0648\u062e\u0637\u0648\u0627\u062a \u062a\u0646\u0641\u064a\u0630 Architecture \u062d\u062f\u0648\u062f \u0648\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0648\u062a\u062f\u0641\u0642\u0627\u062a \u062a\u064f\u0628\u0646\u0649 \u0644\u062f\u0639\u0645 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a/NFRs SDLC \u0645\u0631\u0627\u062d\u0644 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u062a\u062f\u062e\u0644 \u0645\u0646 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0648\u062a\u064f\u062a\u0627\u0628\u064e\u0639 QA \u0636\u0645\u0627\u0646 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0648\u0627\u0644\u062c\u0648\u062f\u0629 \u064a\u062a\u062d\u0642\u0642 \u0623\u0646 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u064f\u0644\u0628\u0651\u0627\u0629 \u0628\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a/\u0628\u0648\u0627\u0628\u0627\u062a"},{"location":"terms/requirements/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0645\u062a\u0637\u0644\u0651\u0628\u0627\u062a \u0647\u064a \u0627\u0644\u0639\u0642\u062f \u0627\u0644\u0630\u064a \u064a\u0642\u0648\u062f \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0648\u0627\u0644\u0643\u0648\u062f \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631. \u0627\u062c\u0639\u0644\u0647\u0627 \u0648\u0627\u0636\u062d\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0642\u064a\u0627\u0633 \u0645\u0639 \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644 \u0648\u062a\u062a\u0628\u0651\u0639 \u0643\u0627\u0645\u0644\u2014 \u0648\u0628\u0630\u0644\u0643 \u062a\u062a\u062d\u0648\u0651\u0644 \u0625\u0644\u0649 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062a\u062d\u0631\u0633 \u0627\u0644\u0645\u0646\u062a\u062c \u0639\u0646\u062f \u0643\u0644 \u062a\u063a\u064a\u064a\u0631.</p>"},{"location":"terms/rest/","title":"REST \u2014 Representational State Transfer","text":""},{"location":"terms/rest/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Representational State Transfer (REST) \u2014 \u0646\u0642\u0644 \u0627\u0644\u062d\u0627\u0644\u0629 \u0627\u0644\u062a\u0645\u062b\u064a\u0644\u064a\u0629.</p>"},{"location":"terms/rest/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u0633\u0644\u0648\u0628 \u062a\u0635\u0645\u064a\u0645 \u0648\u0627\u062c\u0647\u0627\u062a \u0648\u064a\u0628 \u064a\u0639\u0631\u0651\u0641 \u0645\u0648\u0627\u0631\u062f (Resources) \u0628\u0639\u0646\u0627\u0648\u064a\u0646 URI\u060c \u0648\u064a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639\u0647\u0627 \u0639\u0628\u0631 HTTP \u0628\u0634\u0643\u0644 \u0639\u062f\u064a\u0645 \u0627\u0644\u062d\u0627\u0644\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0644\u0627\u0644\u0627\u062a \u0627\u0644\u0637\u0631\u0642 (GET/POST/PUT/PATCH/DELETE) \u0648\u062a\u0645\u062b\u064a\u0644\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629 (JSON/XML)\u060c \u0645\u0639 \u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u0648\u0627\u0636\u062d\u0629 \u0648\u062a\u0641\u0627\u0648\u0636 \u0645\u062d\u062a\u0648\u0649 \u0648\u062a\u062e\u0632\u064a\u0646 \u0645\u0624\u0642\u062a.</p>"},{"location":"terms/rest/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0644 \u0634\u064a\u0621 \u0645\u0648\u0631\u062f: \u0645\u0646\u062a\u062c\u060c \u0637\u0644\u0628\u060c \u0645\u0633\u062a\u062e\u062f\u0645. \u0644\u0643\u0644 \u0645\u0648\u0631\u062f URI \u062b\u0627\u0628\u062a.  </li> <li>HTTP \u0647\u0648 \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644:  </li> <li><code>GET</code> \u0644\u062c\u0644\u0628. <code>POST</code> \u0644\u062e\u0644\u0642. <code>PUT</code> \u0644\u0627\u0633\u062a\u0628\u062f\u0627\u0644. <code>PATCH</code> \u0644\u062a\u0639\u062f\u064a\u0644 \u062c\u0632\u0626\u064a. <code>DELETE</code> \u0644\u0644\u062d\u0630\u0641.  </li> <li>\u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629: 200/201/204/304/400/401/403/404/409/412/422/429/5xx.  </li> <li>Stateless: \u0643\u0644 \u0637\u0644\u0628 \u0645\u0643\u062a\u0641\u064d \u0628\u0630\u0627\u062a\u0647 (Auth\u060c Locale\u2026 \u0636\u0645\u0646 \u0627\u0644\u0631\u0624\u0648\u0633/\u0627\u0644\u062a\u0648\u0643\u0646).  </li> <li>\u062a\u0645\u062b\u064a\u0644\u0627\u062a: JSON \u0627\u0644\u0623\u0643\u062b\u0631 \u0634\u064a\u0648\u0639\u064b\u0627. Content-Type/Accept \u0644\u0644\u062a\u0641\u0627\u0648\u0636.  </li> <li>\u0627\u0644\u0631\u0648\u0627\u0628\u0637/\u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641: \u064a\u0645\u0643\u0646 \u0625\u0631\u062c\u0627\u0639 \u0631\u0648\u0627\u0628\u0637 (HATEOAS) \u0644\u062a\u0648\u0636\u064a\u062d \u0627\u0644\u062a\u0646\u0642\u0644.  </li> <li>\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a: <code>ETag</code>/<code>Last-Modified</code> + <code>If-None-Match</code> \u0644\u062e\u0641\u0636 \u0627\u0644\u0646\u0642\u0644.  </li> <li>\u0627\u0644\u062a\u0648\u0627\u0641\u0642: \u0627\u0644\u0625\u0635\u062f\u0627\u0631 (Versioning) \u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0631 \u0623\u0648 \u0627\u0644\u0631\u0624\u0648\u0633.</li> </ul>"},{"location":"terms/rest/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0643\u062a\u0628\u0629 \u0639\u0627\u0645\u0629: \u0644\u0643\u0644 \u0643\u062a\u0627\u0628 \u0631\u0642\u0645 \u0631\u0641\u0651 (URI). \u062a\u0633\u062a\u062e\u062f\u0645 \u0623\u0641\u0639\u0627\u0644\u064b\u0627 \u0645\u0648\u062d\u0651\u062f\u0629: \u0627\u0642\u0631\u0623 (GET)\u060c \u0623\u0636\u0650\u0641 \u0643\u062a\u0627\u0628\u064b\u0627 (POST)\u060c \u0639\u062f\u0651\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0643\u062a\u0627\u0628 (PUT/PATCH)\u060c \u0627\u062d\u0630\u0641\u0647 (DELETE). \u0627\u0644\u0644\u0648\u0627\u0626\u062d \u0648\u0627\u0636\u062d\u0629 (\u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629) \u0648\u0627\u0644\u0645\u0648\u0638\u0651\u0641 \u0644\u0627 \u064a\u062a\u0630\u0643\u0651\u0631 \u0632\u064a\u0627\u0631\u062a\u0643 \u0627\u0644\u0633\u0627\u0628\u0642\u0629 (Stateless).</p>"},{"location":"terms/rest/#c-minimal-rest-api-etag-concurrency","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 Minimal REST API (\u0642\u0627\u0626\u0645\u0629 \u0645\u0646\u062a\u062c\u0627\u062a + ETag + Concurrency)","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n RestDemo &amp;&amp; cd RestDemo &amp;&amp; dotnet run\nusing Microsoft.AspNetCore.Mvc;\nusing System.Security.Cryptography;\nusing System.Text;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddSingleton&lt;IProductsRepo, InMemoryProductsRepo&gt;();\nvar app = builder.Build();\n\napp.UseHttpsRedirection();\n\nvar api = app.MapGroup(\"/v1/products\").WithTags(\"Products\");\n\n// GET /v1/products?skip=0&amp;take=20&amp;q=ssd\napi.MapGet(\"/\", ([FromQuery] int skip, [FromQuery] int take, [FromQuery] string? q, IProductsRepo repo) =&gt;\n{\n    skip = Math.Max(0, skip);\n    take = take is &lt;= 0 or &gt; 100 ? 20 : take;\n    var data = repo.All(q).Skip(skip).Take(take);\n    return Results.Ok(new { items = data, count = data.Count() });\n});\n\n// GET /v1/products/{id}  \u2014 \u064a\u062f\u0639\u0645 ETag/If-None-Match\napi.MapGet(\"/{id:int}\", (int id, HttpRequest req, IProductsRepo repo) =&gt;\n{\n    var p = repo.Find(id);\n    if (p is null) return Results.NotFound();\n\n    var etag = ETag.Of(p.UpdatedAtUtc, p.Id); // \u062a\u0648\u0644\u064a\u062f ETag \u0628\u0633\u064a\u0637\n    if (req.Headers.IfNoneMatch == etag)      // Cache hit\n        return Results.StatusCode(StatusCodes.Status304NotModified);\n\n    return Results.Ok(p).WithETag(etag);\n});\n\n// POST /v1/products  \u2014 201 Created + Location\napi.MapPost(\"/\", ([FromBody] ProductCreate dto, IProductsRepo repo, HttpContext ctx) =&gt;\n{\n    if (string.IsNullOrWhiteSpace(dto.Name) || dto.Price &lt;= 0)\n        return Results.ValidationProblem(new() { [\"name/price\"] = [\"\u0627\u0633\u0645 \u0645\u0637\u0644\u0648\u0628 \u0648\u0633\u0639\u0631 &gt; 0\"] });\n\n    var created = repo.Add(dto);\n    var url = $\"{ctx.Request.Scheme}://{ctx.Request.Host}/v1/products/{created.Id}\";\n    return Results.Created(url, created).WithETag(ETag.Of(created.UpdatedAtUtc, created.Id));\n});\n\n// PUT /v1/products/{id}  \u2014 \u0627\u0633\u062a\u0628\u062f\u0627\u0644 \u0643\u0627\u0645\u0644 + \u062a\u0641\u0627\u062f\u064a \u062a\u0639\u0627\u0631\u0636 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 If-Match\napi.MapPut(\"/{id:int}\", (int id, [FromBody] ProductUpdate dto, HttpRequest req, IProductsRepo repo) =&gt;\n{\n    var existing = repo.Find(id);\n    if (existing is null) return Results.NotFound();\n\n    var currentEtag = ETag.Of(existing.UpdatedAtUtc, existing.Id);\n    var ifMatch = req.Headers.IfMatch.ToString();\n    if (!string.IsNullOrEmpty(ifMatch) &amp;&amp; ifMatch != currentEtag)\n        return Results.StatusCode(StatusCodes.Status412PreconditionFailed); // \u062a\u0639\u0627\u0631\u0636 \u0646\u0633\u062e\u0629\n\n    if (string.IsNullOrWhiteSpace(dto.Name) || dto.Price &lt;= 0)\n        return Results.ValidationProblem(new() { [\"name/price\"] = [\"\u0627\u0633\u0645 \u0645\u0637\u0644\u0648\u0628 \u0648\u0633\u0639\u0631 &gt; 0\"] });\n\n    var updated = repo.Replace(id, dto);\n    return Results.Ok(updated).WithETag(ETag.Of(updated.UpdatedAtUtc, updated.Id));\n});\n\n// DELETE /v1/products/{id}  \u2014 204 No Content\napi.MapDelete(\"/{id:int}\", (int id, IProductsRepo repo) =&gt;\n{\n    return repo.Delete(id) ? Results.NoContent() : Results.NotFound();\n});\n\napp.Run();\n\n\n// ====== \u0627\u0644\u0646\u0645\u0627\u0630\u062c/\u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 \u0648\u0627\u0644\u0640 ETag ======\npublic record Product(int Id, string Name, decimal Price, DateTime UpdatedAtUtc);\npublic record ProductCreate(string Name, decimal Price);\npublic record ProductUpdate(string Name, decimal Price);\n\npublic interface IProductsRepo\n{\n    IEnumerable&lt;Product&gt; All(string? q = null);\n    Product? Find(int id);\n    Product Add(ProductCreate dto);\n    Product Replace(int id, ProductUpdate dto);\n    bool Delete(int id);\n}\n\npublic class InMemoryProductsRepo : IProductsRepo\n{\n    private readonly List&lt;Product&gt; _db = new() {\n        new(1,\"Keyboard\",120, DateTime.UtcNow),\n        new(2,\"Mouse\",60,    DateTime.UtcNow)\n    };\n    private int _next = 3;\n\n    public IEnumerable&lt;Product&gt; All(string? q = null)\n        =&gt; string.IsNullOrWhiteSpace(q) ? _db : _db.Where(p =&gt; p.Name.Contains(q, StringComparison.OrdinalIgnoreCase));\n\n    public Product? Find(int id) =&gt; _db.FirstOrDefault(p =&gt; p.Id == id);\n\n    public Product Add(ProductCreate dto)\n    {\n        var p = new Product(_next++, dto.Name, dto.Price, DateTime.UtcNow);\n        _db.Add(p); return p;\n    }\n\n    public Product Replace(int id, ProductUpdate dto)\n    {\n        var i = _db.FindIndex(p =&gt; p.Id == id);\n        var updated = new Product(id, dto.Name, dto.Price, DateTime.UtcNow);\n        _db[i] = updated; return updated;\n    }\n\n    public bool Delete(int id) =&gt; _db.RemoveAll(p =&gt; p.Id == id) &gt; 0;\n}\n\npublic static class ETag\n{\n    public static string Of(DateTime updatedUtc, int id)\n    {\n        // ETag \u0636\u0639\u064a\u0641 \u0645\u0628\u0633\u0651\u0637 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 (id + ticks)\n        var payload = $\"{id}-{updatedUtc.Ticks}\";\n        var bytes = SHA256.HashData(Encoding.UTF8.GetBytes(payload));\n        return $\"W/\\\"{Convert.ToBase64String(bytes)[..16]}\\\"\";\n    }\n\n    public static IResult WithETag(this IResult res, string etag)\n        =&gt; Results.Extensions(res, ctx =&gt; ctx.Response.Headers.ETag = etag);\n}\n</code></pre> <p>\u062c\u0631\u0651\u0628 \u0633\u0631\u064a\u0639\u064b\u0627 (curl): Bash<pre><code># \u0642\u0627\u0626\u0645\u0629\ncurl -s http://localhost:5000/v1/products\n\n# \u0639\u0646\u0635\u0631 \u0648\u0627\u062d\u062f + ETag\ncurl -i http://localhost:5000/v1/products/1\n# \u0627\u0633\u062a\u062e\u062f\u0645 \u0642\u064a\u0645\u0629 ETag \u0645\u0646 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629:\ncurl -i http://localhost:5000/v1/products/1 -H 'If-None-Match: W/\"abc...\"'   # 304\n\n# \u0625\u0646\u0634\u0627\u0621\ncurl -i -X POST http://localhost:5000/v1/products \\\n  -H 'Content-Type: application/json' \\\n  -d '{ \"name\":\"SSD\", \"price\":250 }'\n\n# \u062a\u062d\u062f\u064a\u062b \u0645\u0639 If-Match (\u062a\u0641\u0627\u062f\u064a \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0645\u0641\u0642\u0648\u062f\u0629)\ncurl -i http://localhost:5000/v1/products/2\n# \u0636\u0639 ETag \u0627\u0644\u0630\u064a \u0627\u0633\u062a\u0644\u0645\u062a\u0647:\ncurl -i -X PUT http://localhost:5000/v1/products/2 \\\n  -H 'Content-Type: application/json' -H 'If-Match: W/\"abc...\"' \\\n  -d '{ \"name\":\"Mouse Pro\", \"price\":75 }'\n</code></pre></p>"},{"location":"terms/rest/#rest","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 REST \u0633\u0644\u064a\u0645","text":"<ol> <li>\u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u0645\u0648\u0627\u0631\u062f: \u0623\u0633\u0645\u0627\u0621 \u062c\u0645\u0639 \u0648\u0627\u0636\u062d\u0629 (<code>/users</code>, <code>/orders/{id}/items</code>).  </li> <li>\u062f\u0644\u0627\u0644\u0627\u062a HTTP \u0635\u062d\u064a\u062d\u0629: \u0644\u0627 \u062a\u0633\u062a\u062e\u062f\u0645 <code>POST</code> \u0644\u0644\u062a\u0639\u062f\u064a\u0644 \u0625\u0630\u0627 \u0643\u0627\u0646 <code>PUT/PATCH</code> \u0645\u0646\u0627\u0633\u0628\u064b\u0627.  </li> <li>\u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u062f\u0642\u064a\u0642\u0629 + \u0631\u0633\u0627\u0626\u0644 \u062e\u0637\u0623 \u0645\u0641\u0647\u0648\u0645\u0629 (\u062d\u0642\u0648\u0644 <code>code</code>, <code>message</code>, <code>details</code>).  </li> <li>\u0627\u0644\u062a\u0635\u0641\u064a\u0629/\u0627\u0644\u062a\u0631\u0642\u064a\u0645/\u0627\u0644\u0641\u0631\u0632 \u0639\u0628\u0631 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a (<code>?q=&amp;sort=&amp;skip=&amp;take=</code>).  </li> <li>\u0627\u0644\u062a\u0648\u0627\u0641\u0642 \u0627\u0644\u0645\u062a\u062f\u0631\u0651\u062c: \u0623\u0636\u0641 \u062e\u0635\u0627\u0626\u0635 \u062c\u062f\u064a\u062f\u0629 \u062f\u0648\u0646 \u0643\u0633\u0631 \u0627\u0644\u0639\u0645\u0644\u0627\u0621\u061b \u0644\u0644\u0625\u0636\u0627\u0641\u0627\u062a \u0627\u0644\u0643\u0633\u0651\u0627\u0631\u0629 \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 (<code>/v1</code>).  </li> <li>\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a: <code>ETag/If-None-Match</code>, <code>Cache-Control</code>, \u0648<code>Last-Modified</code>.  </li> <li>\u0627\u0644\u0648\u062b\u0627\u0626\u0642: OpenAPI/Swagger + \u0623\u0645\u062b\u0644\u0629 \u0648\u0642\u064a\u0648\u062f.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646: HTTPS\u060c Auth (JWT/OAuth2)\u060c CORS\u060c \u062d\u062f\u0648\u062f \u0645\u0639\u062f\u0644 (429)\u060c \u0625\u062f\u062e\u0627\u0644 \u0622\u0645\u0646.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: Trace/Log/Correlation-Id\u060c \u0645\u0642\u0627\u064a\u064a\u0633 (<code>2xx/4xx/5xx</code>, \u0632\u0645\u0646 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629).</li> </ol>"},{"location":"terms/rest/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0633\u0627\u0631\u0627\u062a \u0623\u0641\u0639\u0627\u0644 \u0628\u062f\u0644 \u0623\u0633\u0645\u0627\u0621 \u0645\u0648\u0627\u0631\u062f (<code>/createUser</code> \u0628\u062f\u0644 <code>/users</code>).  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0623\u0643\u0648\u0627\u062f \u0627\u0644\u062d\u0627\u0644\u0629 \u0623\u0648 \u0625\u0631\u062c\u0627\u0639 200 \u062f\u0627\u0626\u0645\u064b\u0627.  </li> <li>\u062e\u0644\u0637 \u062f\u0644\u0627\u0644\u0627\u062a \u0627\u0644\u0637\u0631\u0642 (\u062a\u0639\u062f\u064a\u0644 \u0628\u0640 <code>GET</code>\u060c \u0623\u0648 \u062d\u0630\u0641 \u0628\u0640 <code>POST</code>).  </li> <li>\u0639\u062f\u0645 \u062f\u0639\u0645 \u0627\u0644\u062a\u0631\u0642\u064a\u0645/\u0627\u0644\u062a\u0635\u0641\u064a\u0629 \u2192 \u0627\u0633\u062a\u062c\u0627\u0628\u0627\u062a \u0636\u062e\u0645\u0629.  </li> <li>\u0643\u0633\u0631 \u0627\u0644\u062a\u0648\u0627\u0641\u0642 \u0628\u0625\u0632\u0627\u0644\u0629 \u062d\u0642\u0648\u0644 \u062f\u0648\u0646 \u0625\u0635\u062f\u0627\u0631 \u062c\u062f\u064a\u062f.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a/ETag \u0623\u0648 Concurrency (<code>If-Match</code>) \u2192 \u0633\u0628\u0627\u0642\u0627\u062a \u062a\u062d\u062f\u064a\u062b.</li> </ul>"},{"location":"terms/rest/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 REST \u0645\u0648\u0627\u0631\u062f \u0639\u0644\u0649 HTTP \u0628\u062f\u0644\u0627\u0644\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629 \u0628\u0633\u064a\u0637\u060c \u0648\u0627\u0633\u0639 \u0627\u0644\u0627\u0646\u062a\u0634\u0627\u0631\u060c \u064a\u062f\u0639\u0645 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a RPC/JSON-RPC \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0645\u0628\u0627\u0634\u0631\u0629 \u0623\u0641\u0639\u0627\u0644 \u0639\u0644\u0649 \u0637\u0631\u0642\u061b \u0644\u064a\u0633 \u0645\u0648\u062c\u0651\u0647 \u0645\u0648\u0627\u0631\u062f gRPC \u062b\u0646\u0627\u0626\u064a \u0639\u0627\u0644\u064a \u0627\u0644\u0623\u062f\u0627\u0621 \u0645\u0639 Streaming \u064a\u062a\u0637\u0644\u0628 HTTP/2 \u0648\u0645\u0644\u0641\u0627\u062a <code>.proto</code> GraphQL \u062c\u0644\u0628 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0631\u0646 \u0628\u0637\u0644\u0628 \u0648\u0627\u062d\u062f \u0646\u0642\u0637\u0629 \u0648\u0627\u062d\u062f\u0629\u061b \u062a\u0639\u0642\u064a\u062f \u0641\u064a \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a/\u0627\u0644\u0623\u0645\u0646 SOAP \u0631\u0633\u0627\u0626\u0644 XML \u0628\u0639\u0642\u062f WSDL \u0648WS-* \u062b\u0642\u064a\u0644 \u0644\u0643\u0646\u0647 \u063a\u0646\u064a\u0651 \u0628\u0627\u0644\u0645\u0639\u0627\u064a\u064a\u0631 \u0627\u0644\u0645\u0624\u0633\u0633\u064a\u0629"},{"location":"terms/rest/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>REST \u064a\u0648\u0641\u0651\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u0648\u0627\u0636\u062d\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0648\u0633\u0639 \u0639\u0628\u0631 \u0645\u0648\u0627\u0631\u062f \u0648\u0637\u0631\u0642 HTTP \u0648\u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629. \u0646\u0645\u0630\u062c \u0645\u0648\u0627\u0631\u062f\u0643 \u062c\u064a\u0651\u062f\u064b\u0627\u060c \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0644\u0627\u0644\u0627\u062a \u0635\u062d\u064a\u062d\u0629\u060c \u0648\u062b\u0651\u0642 \u0628\u0640 OpenAPI\u060c \u0648\u0641\u0639\u0651\u0644 ETag/Versioning\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 API \u0645\u062a\u064a\u0646\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u0635\u064a\u0627\u0646\u0629\u060c \u0648\u0633\u0647\u0644 \u0627\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643. </p>"},{"location":"terms/restful/","title":"RESTful","text":""},{"location":"terms/restful/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>RESTful API \u2014 \u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u064a\u0629 \u062a\u0637\u0628\u0651\u0642 \u0645\u0628\u0627\u062f\u0626 REST \u0639\u0644\u0649 \u0646\u062d\u0648\u064d \u0639\u0645\u0644\u064a (\u0645\u0648\u0627\u0631\u062f\u060c \u062f\u0644\u0627\u0644\u0627\u062a HTTP\u060c \u062a\u0645\u062b\u064a\u0644\u0627\u062a\u060c \u0648\u0631\u0648\u0627\u0628\u0637).</p>"},{"location":"terms/restful/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0648\u0627\u062c\u0647\u0629 \u0645\u0648\u062c\u0651\u0647\u0629 \u0645\u0648\u0627\u0631\u062f \u062a\u0633\u062a\u062e\u062f\u0645 HTTP \u0628\u0634\u0643\u0644 \u0639\u062f\u064a\u0645 \u0627\u0644\u062d\u0627\u0644\u0629\u060c \u062a\u0639\u064a\u062f \u062a\u0645\u062b\u064a\u0644\u0627\u062a (JSON/\u2026)\u060c \u062a\u0633\u062a\u062e\u062f\u0645 \u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u0635\u062d\u064a\u062d\u0629\u060c ETag/Cache\u060c \u0648\u2014\u0639\u0646\u062f \u0627\u0644\u0627\u0643\u062a\u0645\u0627\u0644\u2014\u062a\u0648\u0641\u0651\u0631 \u0631\u0648\u0627\u0628\u0637 (HATEOAS) \u0644\u0627\u0643\u062a\u0634\u0627\u0641 \u0627\u0644\u062a\u062f\u0641\u0651\u0642.</p>"},{"location":"terms/restful/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0645\u0648\u0631\u062f \u0644\u0647 URI \u062b\u0627\u0628\u062a: <code>/v1/books/42</code>.  </li> <li>\u0627\u0644\u0623\u0641\u0639\u0627\u0644 HTTP \u062a\u062d\u0645\u0644 \u0627\u0644\u0645\u0639\u0646\u0649: <code>GET/POST/PUT/PATCH/DELETE</code>.  </li> <li>Stateless: \u0643\u0644 \u0637\u0644\u0628 \u0645\u0633\u062a\u0642\u0644 (Auth/Locale \u0636\u0645\u0646 \u0627\u0644\u0631\u0624\u0648\u0633).  </li> <li>\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0648\u0627\u0636\u062d\u0629 (<code>/v1</code>) \u0648\u062a\u0637\u0648\u0651\u0631 \u0645\u062a\u062f\u0631\u0651\u062c \u063a\u064a\u0631 \u0643\u0633\u0651\u0627\u0631.  </li> <li>\u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a: <code>ETag/If-None-Match</code>, <code>Cache-Control</code>.  </li> <li>HATEOAS (\u0627\u062e\u062a\u064a\u0627\u0631\u064a \u0644\u0643\u0646\u0647 \u201c\u0623\u0643\u0645\u0644\u201d): \u0627\u0644\u062a\u0645\u062b\u064a\u0644 \u064a\u0639\u064a\u062f \u0631\u0648\u0627\u0628\u0637 (<code>_links</code>) \u0644\u062e\u0637\u0648\u0627\u062a \u0642\u0627\u062f\u0645\u0629.  </li> <li>\u0633\u0644\u0627\u0645\u0629/\u0625\u062f\u064a\u0645\u0628\u0648\u062a\u0646\u0633: <code>GET</code> \u0622\u0645\u0646\u060c <code>PUT/DELETE</code> Idempotent\u060c \u0648<code>POST</code> \u0644\u064a\u0633 \u0643\u0630\u0644\u0643.</li> </ul>"},{"location":"terms/restful/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0643\u062a\u0628\u0629 \u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a\u0629 \u0645\u0646\u0638\u0651\u0645\u0629: \u0644\u0643\u0644 \u0643\u062a\u0627\u0628 \u0639\u0646\u0648\u0627\u0646 \u062b\u0627\u0628\u062a\u060c \u0644\u062f\u064a\u0643 \u0623\u0641\u0639\u0627\u0644 \u0645\u0648\u062d\u0651\u062f\u0629 (\u0627\u0642\u0631\u0623/\u0623\u0636\u0650\u0641/\u0639\u062f\u0651\u0644/\u0627\u062d\u0630\u0641). \u0643\u0644 \u0635\u0641\u062d\u0629 \u062a\u0648\u0635\u0644\u0643 \u0628\u0631\u0648\u0627\u0628\u0637 \u0625\u0644\u0649 \u201c\u0627\u0644\u062a\u0627\u0644\u064a/\u0627\u0644\u0633\u0627\u0628\u0642/\u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644\u201d.</p>"},{"location":"terms/restful/#c-minimal-restful-api-hateoas-etag-concurrency","title":"\u0645\u062b\u0627\u0644 C# \u2014 Minimal RESTful API \u0645\u0639 HATEOAS + ETag + Concurrency","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n RestfulDemo &amp;&amp; cd RestfulDemo &amp;&amp; dotnet run\nusing Microsoft.AspNetCore.Mvc;\nusing System.Security.Cryptography;\nusing System.Text;\n\n// ====== \u0627\u0644\u062a\u0631\u0643\u064a\u0628 \u0648\u0627\u0644\u062e\u062f\u0645\u0627\u062a ======\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddSingleton&lt;IBooksRepo, InMemoryBooksRepo&gt;();\nvar app = builder.Build();\n\napp.UseHttpsRedirection();\n\nstring Base(string path) =&gt; $\"/v1/books{path}\";\n\n// \u062a\u0648\u0644\u064a\u062f ETag \u0636\u0639\u064a\u0641 (\u0643\u0627\u0641\u064d \u0644\u0644\u0645\u062b\u0627\u0644)\nstatic string MakeETag(Book b)\n{\n    var payload = $\"{b.Id}-{b.UpdatedAtUtc.Ticks}\";\n    var bytes = SHA256.HashData(Encoding.UTF8.GetBytes(payload));\n    return $\"W/\\\"{Convert.ToBase64String(bytes)[..16]}\\\"\";\n}\n\n// \u062a\u062d\u0648\u064a\u0644 Book \u0625\u0644\u0649 \u062a\u0645\u062b\u064a\u0644 RESTful \u0645\u0639 \u0631\u0648\u0627\u0628\u0637\nstatic object ToResource(Book b) =&gt; new\n{\n    b.Id, b.Title, b.Price,\n    _links = new {\n        self       = new { href = $\"/v1/books/{b.Id}\", method = \"GET\" },\n        update     = new { href = $\"/v1/books/{b.Id}\", method = \"PUT\" },\n        delete     = new { href = $\"/v1/books/{b.Id}\", method = \"DELETE\" },\n        collection = new { href = \"/v1/books\",         method = \"GET\" }\n    }\n};\n\n// ====== \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a ======\nvar api = app.MapGroup(\"/v1/books\").WithTags(\"Books\");\n\n// GET /v1/books?skip=0&amp;take=20&amp;q=ddd  (\u0642\u0627\u0626\u0645\u0629 + \u0631\u0648\u0627\u0628\u0637 \u062a\u0646\u0642\u0651\u0644)\napi.MapGet(\"/\", ([FromQuery] int skip, [FromQuery] int take, [FromQuery] string? q, IBooksRepo repo, HttpContext ctx) =&gt;\n{\n    skip = Math.Max(0, skip);\n    take = take is &lt;= 0 or &gt; 100 ? 20 : take;\n\n    var all = repo.All(q).ToList();\n    var page = all.Skip(skip).Take(take).Select(ToResource).ToList();\n\n    string self = $\"{Base(\"\")}?skip={skip}&amp;take={take}\" + (string.IsNullOrEmpty(q) ? \"\" : $\"&amp;q={Uri.EscapeDataString(q)}\");\n    string? next = (skip + take &lt; all.Count) ? $\"{Base(\"\")}?skip={skip + take}&amp;take={take}\" + (string.IsNullOrEmpty(q) ? \"\" : $\"&amp;q={Uri.EscapeDataString(q)}\") : null;\n    string? prev = (skip &gt; 0) ? $\"{Base(\"\")}?skip={Math.Max(0, skip - take)}&amp;take={take}\" + (string.IsNullOrEmpty(q) ? \"\" : $\"&amp;q={Uri.EscapeDataString(q)}\") : null;\n\n    return Results.Ok(new {\n        count = all.Count,\n        items = page,\n        _links = new {\n            self = new { href = self, method = \"GET\" },\n            next = next is null ? null : new { href = next, method = \"GET\" },\n            prev = prev is null ? null : new { href = prev, method = \"GET\" }\n        }\n    });\n});\n\n// GET /v1/books/{id}  (\u064a\u062f\u0639\u0645 ETag/If-None-Match)\napi.MapGet(\"/{id:int}\", (int id, HttpRequest req, IBooksRepo repo) =&gt;\n{\n    var b = repo.Find(id);\n    if (b is null) return Results.NotFound();\n\n    var etag = MakeETag(b);\n    if (req.Headers.IfNoneMatch == etag)\n        return Results.StatusCode(StatusCodes.Status304NotModified);\n\n    var res = Results.Ok(ToResource(b));\n    res.EnableBuffering(); // \u0644\u0644\u0633\u0645\u0627\u062d \u0628\u0625\u0636\u0627\u0641\u0629 \u0631\u0623\u0633 \u0642\u0628\u0644 \u0627\u0644\u0625\u0631\u0633\u0627\u0644 (\u0627\u062e\u062a\u064a\u0627\u0631\u064a)\n    return res.WithETag(etag);\n});\n\n// POST /v1/books  (201 + Location + \u062a\u0645\u062b\u064a\u0644)\napi.MapPost(\"/\", ([FromBody] BookCreate dto, IBooksRepo repo, HttpContext ctx) =&gt;\n{\n    if (string.IsNullOrWhiteSpace(dto.Title) || dto.Price &lt;= 0)\n        return Results.ValidationProblem(new(){{\"title/price\",[\"\u0639\u0646\u0648\u0627\u0646 \u0645\u0637\u0644\u0648\u0628 \u0648\u0633\u0639\u0631 &gt; 0\"]}});\n\n    var b = repo.Add(dto);\n    var etag = MakeETag(b);\n    var url = $\"{ctx.Request.Scheme}://{ctx.Request.Host}{Base($\"/{b.Id}\")}\";\n    return Results.Created(url, ToResource(b)).WithETag(etag);\n});\n\n// PUT /v1/books/{id}  (Idempotent + If-Match \u0644\u062a\u0641\u0627\u062f\u064a \u062a\u0639\u0627\u0631\u0636 \u0627\u0644\u0646\u0633\u062e)\napi.MapPut(\"/{id:int}\", (int id, [FromBody] BookUpdate dto, HttpRequest req, IBooksRepo repo) =&gt;\n{\n    var cur = repo.Find(id);\n    if (cur is null) return Results.NotFound();\n\n    var currentEtag = MakeETag(cur);\n    var ifMatch = req.Headers.IfMatch.ToString();\n    if (!string.IsNullOrEmpty(ifMatch) &amp;&amp; ifMatch != currentEtag)\n        return Results.StatusCode(StatusCodes.Status412PreconditionFailed);\n\n    if (string.IsNullOrWhiteSpace(dto.Title) || dto.Price &lt;= 0)\n        return Results.ValidationProblem(new(){{\"title/price\",[\"\u0639\u0646\u0648\u0627\u0646 \u0645\u0637\u0644\u0648\u0628 \u0648\u0633\u0639\u0631 &gt; 0\"]}});\n\n    var updated = repo.Replace(id, dto);\n    return Results.Ok(ToResource(updated)).WithETag(MakeETag(updated));\n});\n\n// DELETE /v1/books/{id}  (Idempotent \u2014 204)\napi.MapDelete(\"/{id:int}\", (int id, IBooksRepo repo)\n    =&gt; repo.Delete(id) ? Results.NoContent() : Results.NotFound());\n\napp.Run();\n\n// ====== \u0627\u0644\u0646\u0645\u0627\u0630\u062c/\u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 ======\npublic record Book(int Id, string Title, decimal Price, DateTime UpdatedAtUtc);\npublic record BookCreate(string Title, decimal Price);\npublic record BookUpdate(string Title, decimal Price);\n\npublic interface IBooksRepo\n{\n    IEnumerable&lt;Book&gt; All(string? q = null);\n    Book? Find(int id);\n    Book Add(BookCreate dto);\n    Book Replace(int id, BookUpdate dto);\n    bool Delete(int id);\n}\n\npublic class InMemoryBooksRepo : IBooksRepo\n{\n    private readonly List&lt;Book&gt; _db = new() {\n        new(1,\"DDD Quickly\",120, DateTime.UtcNow),\n        new(2,\"Clean Code\",  90, DateTime.UtcNow)\n    };\n    private int _next = 3;\n\n    public IEnumerable&lt;Book&gt; All(string? q = null)\n        =&gt; string.IsNullOrWhiteSpace(q) ? _db : _db.Where(b =&gt; b.Title.Contains(q, StringComparison.OrdinalIgnoreCase));\n\n    public Book? Find(int id) =&gt; _db.FirstOrDefault(p =&gt; p.Id == id);\n\n    public Book Add(BookCreate dto)\n    {\n        var b = new Book(_next++, dto.Title, dto.Price, DateTime.UtcNow);\n        _db.Add(b); return b;\n    }\n\n    public Book Replace(int id, BookUpdate dto)\n    {\n        var i = _db.FindIndex(p =&gt; p.Id == id);\n        var updated = new Book(id, dto.Title, dto.Price, DateTime.UtcNow);\n        _db[i] = updated; return updated;\n    }\n\n    public bool Delete(int id) =&gt; _db.RemoveAll(p =&gt; p.Id == id) &gt; 0;\n}\n\n// ====== \u0627\u0645\u062a\u062f\u0627\u062f \u0628\u0633\u064a\u0637 \u0644\u0625\u0636\u0627\u0641\u0629 ETag ======\npublic static class ResultExtensions\n{\n    public static IResult WithETag(this IResult res, string etag)\n        =&gt; Results.Extensions(res, ctx =&gt; ctx.Response.Headers.ETag = etag);\n}\n</code></pre> <p>\u062a\u062c\u0631\u0628\u0629 \u0633\u0631\u064a\u0639\u0629 (curl): Bash<pre><code># \u0642\u0627\u0626\u0645\u0629 + \u0631\u0648\u0627\u0628\u0637 \u062a\u0646\u0642\u0644\ncurl -s http://localhost:5000/v1/books\n\n# \u0639\u0646\u0635\u0631 \u0648\u0627\u062d\u062f + ETag\ncurl -i http://localhost:5000/v1/books/1\n# \u062c\u0631\u0651\u0628 \u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a\ncurl -i http://localhost:5000/v1/books/1 -H 'If-None-Match: W/\"abc...\"'   # 304\n\n# \u0625\u0646\u0634\u0627\u0621 (201 + Location + \u0631\u0648\u0627\u0628\u0637)\ncurl -i -X POST http://localhost:5000/v1/books \\\n  -H 'Content-Type: application/json' \\\n  -d '{ \"title\":\"The Pragmatic Programmer\", \"price\":150 }'\n\n# \u062a\u062d\u062f\u064a\u062b \u0645\u062d\u0645\u064a \u0628\u0640 If-Match (\u062a\u0641\u0627\u062f\u064a \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0645\u0641\u0642\u0648\u062f\u0629)\nET=$(curl -si http://localhost:5000/v1/books/2 | grep ETag | cut -d' ' -f2)\ncurl -i -X PUT http://localhost:5000/v1/books/2 \\\n  -H \"If-Match: $ET\" -H 'Content-Type: application/json' \\\n  -d '{ \"title\":\"Clean Code (2nd)\", \"price\":95 }'\n</code></pre></p>"},{"location":"terms/restful/#api-restful","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 API RESTful","text":"<ol> <li>\u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0628\u0623\u0633\u0645\u0627\u0621 \u062c\u0645\u0639 \u0648\u0627\u0636\u062d\u0629 \u0648\u0631\u0648\u0627\u0628\u0637 \u0628\u064a\u0646\u064a\u0629 (<code>_links</code>).  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0644\u0627\u0644\u0627\u062a HTTP \u0627\u0644\u0635\u062d\u064a\u062d\u0629 + \u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629 \u062f\u0642\u064a\u0642\u0629 (<code>201/204/304/409/412/422</code>).  </li> <li>\u0627\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a \u0648\u0627\u0644\u062a\u0632\u0627\u0645\u0646: <code>ETag/If-None-Match</code> \u0644\u0644\u0642\u0631\u0627\u0621\u0629\u060c \u0648<code>If-Match</code> \u0644\u0644\u062a\u062d\u062f\u064a\u062b.  </li> <li>\u0625\u0635\u062f\u0627\u0631 (<code>/v1</code>) \u0648\u062a\u0637\u0648\u0651\u0631 \u063a\u064a\u0631 \u0643\u0633\u0651\u0627\u0631 (\u0625\u0636\u0627\u0641\u0629 \u062e\u0635\u0627\u0626\u0635 \u0628\u062f\u0644 \u062d\u0630\u0641\u0647\u0627).  </li> <li>\u0627\u0644\u0623\u0645\u0646: HTTPS\u060c Auth (JWT/OAuth2)\u060c \u062d\u062f\u0648\u062f \u0645\u0639\u062f\u0644 (429)\u060c CORS.  </li> <li>\u0627\u0644\u062a\u0648\u062b\u064a\u0642: OpenAPI/Swagger + \u0623\u0645\u062b\u0644\u0629 \u0648\u0627\u0642\u0639\u064a\u0629 \u0648\u0623\u062e\u0637\u0627\u0621 \u0645\u0648\u062d\u0651\u062f\u0629.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: Logs/Trace/Correlation-Id \u0648\u0645\u0642\u0627\u064a\u064a\u0633 (<code>2xx/4xx/5xx</code>, \u0632\u0645\u0646).</li> </ol>"},{"location":"terms/restful/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0645\u0633\u0627\u0631\u0627\u062a \u0623\u0641\u0639\u0627\u0644 (<code>/createBook</code>) \u0628\u062f\u0644 \u0645\u0648\u0627\u0631\u062f (<code>/books</code>).  </li> <li>\u062a\u062c\u0627\u0647\u0644 HATEOAS/\u0631\u0648\u0627\u0628\u0637 \u0643\u0644\u064a\u064b\u0627 \u062b\u0645 \u062a\u0639\u0642\u064a\u062f \u0627\u0644\u0627\u0643\u062a\u0634\u0627\u0641.  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u062f\u0644\u0627\u0644\u0627\u062a (\u062a\u0639\u062f\u064a\u0644 \u0628\u0640 <code>GET</code> \u0623\u0648 \u062d\u0630\u0641 \u0628\u0640 <code>POST</code>).  </li> <li>\u0639\u062f\u0645 \u062f\u0639\u0645 ETag/If-Match \u2192 \u0633\u0628\u0627\u0642\u0627\u062a \u0648\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0645\u0641\u0642\u0648\u062f\u0629.  </li> <li>\u0643\u0633\u0631 \u0627\u0644\u062a\u0648\u0627\u0641\u0642 \u0628\u0625\u0632\u0627\u0644\u0629 \u062d\u0642\u0648\u0644 \u062f\u0648\u0646 \u0625\u0635\u062f\u0627\u0631 \u062c\u062f\u064a\u062f.  </li> <li>\u0631\u062f\u0651 200 \u062f\u0627\u0626\u0645\u064b\u0627 \u0628\u062f\u0644 \u0623\u0643\u0648\u0627\u062f \u062f\u0642\u064a\u0642\u0629 (201/204/404/409/412).</li> </ul>"},{"location":"terms/restful/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 RESTful \u062a\u0637\u0628\u064a\u0642 \u0639\u0645\u0644\u064a \u0644\u0645\u0628\u0627\u062f\u0626 REST \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u062d\u0642\u064a\u0642\u064a\u0629 \u0645\u0648\u0627\u0631\u062f\u060c \u062f\u0644\u0627\u0644\u0627\u062a HTTP\u060c \u0623\u0643\u0648\u0627\u062f \u062d\u0627\u0644\u0629\u060c (\u0627\u062e\u062a\u064a\u0627\u0631\u064a) HATEOAS REST \u0623\u0633\u0644\u0648\u0628/\u0646\u0645\u0637 \u0645\u0639\u0645\u0627\u0631\u064a \u0645\u0628\u0627\u062f\u0626 \u0639\u0627\u0645\u0629\u061b \u0644\u0627 \u064a\u0644\u0632\u0645\u0643 \u062a\u0646\u0641\u064a\u0630\u064b\u0627 \u0645\u062d\u062f\u062f\u064b\u0627 RPC/JSON-RPC \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0645\u0628\u0627\u0634\u0631\u0629 \u0623\u0633\u0645\u0627\u0621 \u0623\u0641\u0639\u0627\u0644\u061b \u0644\u064a\u0633 \u0645\u0648\u062c\u0651\u0647 \u0645\u0648\u0627\u0631\u062f GraphQL \u062c\u0644\u0628 \u0645\u0631\u0646 \u0628\u0643\u064a\u0627\u0646 \u0648\u0627\u062d\u062f \u062a\u062e\u0632\u064a\u0646 \u0645\u0624\u0642\u062a \u0623\u0639\u0642\u062f\u061b \u0646\u0642\u0637\u0629 \u0648\u0627\u062d\u062f\u0629 gRPC \u0623\u062f\u0627\u0621 \u0639\u0627\u0644\u064d \u0648Streaming \u0639\u0628\u0631 HTTP/2 \u0645\u0644\u0641\u0627\u062a <code>.proto</code> \u0648\u062a\u0648\u0644\u064a\u062f \u0643\u0648\u062f SOAP \u0631\u0633\u0627\u0626\u0644 XML \u0628\u0639\u0642\u062f WSDL \u0623\u062b\u0642\u0644\u061b \u0645\u0639\u0627\u064a\u064a\u0631 \u0645\u0624\u0633\u0633\u064a\u0629 (WS-*)"},{"location":"terms/restful/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>RESTful \u064a\u0639\u0646\u064a \u0623\u0646 API\u0651\u0643 \u064a\u0639\u064a\u0634 \u0645\u0628\u0627\u062f\u0626 REST: \u0645\u0648\u0627\u0631\u062f \u0648\u0627\u0636\u062d\u0629\u060c \u0623\u0641\u0639\u0627\u0644 \u0635\u062d\u064a\u062d\u0629\u060c \u0623\u0643\u0648\u0627\u062f \u062f\u0642\u064a\u0642\u0629\u060c \u062a\u0645\u062b\u064a\u0644\u0627\u062a \u063a\u0646\u064a\u0629 \u0648\u0631\u0648\u0627\u0628\u0637\u060c \u0645\u0639 ETag/Versioning \u0648\u0623\u0645\u0646 \u0648\u0645\u0631\u0627\u0642\u0628\u0629\u2014\u0641\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0648\u0627\u062c\u0647\u0629 \u0645\u062a\u064a\u0646\u0629\u060c \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0648\u0633\u0639 \u0648\u0633\u0647\u0644\u0629 \u0627\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0639\u0628\u0631 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a. </p>"},{"location":"terms/saas/","title":"SaaS \u2014 Software as a Service","text":""},{"location":"terms/saas/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Software as a Service (SaaS) \u2014 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \u0643\u062e\u062f\u0645\u0629.</p>"},{"location":"terms/saas/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0637\u0628\u064a\u0642 \u062c\u0627\u0647\u0632 \u0645\u0633\u062a\u0636\u0627\u0641 \u0641\u064a \u0627\u0644\u0633\u062d\u0627\u0628\u0629. \u062a\u0635\u0644 \u0625\u0644\u064a\u0647 \u0639\u0628\u0631 \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u0623\u0648 API \u0628\u0627\u0634\u062a\u0631\u0627\u0643. \u0627\u0644\u0645\u0632\u0648\u0651\u062f \u064a\u062f\u064a\u0631 \u0627\u0644\u0628\u0646\u064a\u0629 \u0648\u0627\u0644\u0645\u0646\u0635\u0651\u0629 \u0648\u0627\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a. \u0623\u0646\u062a \u062a\u062f\u064a\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0648\u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.</p>"},{"location":"terms/saas/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u0627 \u062e\u0648\u0627\u062f\u0645 \u0648\u0644\u0627 \u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0639\u0646\u062f\u0643. \u0643\u0644 \u0634\u064a\u0621 \u0639\u0646\u062f \u0627\u0644\u0645\u0632\u0648\u0651\u062f.  </li> <li>\u062a\u062f\u062e\u0644 \u0628\u062d\u0633\u0627\u0628\u0643 \u0648\u062a\u0628\u062f\u0623 \u0627\u0644\u0639\u0645\u0644.  </li> <li>\u064a\u0648\u062c\u062f \u0648\u0627\u062c\u0647\u0629 \u0648\u064a\u0628 \u0648/\u0623\u0648 \u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0631\u0645\u062c\u0629 (APIs) \u0644\u0644\u062a\u0643\u0627\u0645\u0644.  </li> <li>\u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u062a\u0639\u062f\u0651\u062f \u0627\u0644\u0645\u0633\u062a\u0623\u062c\u0631\u064a\u0646 (Multi-Tenant) \u0645\u0639 \u0639\u0632\u0644 \u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u064a\u062f\u0639\u0645 SSO, RBAC, Logs, Backups \u062d\u0633\u0628 \u0627\u0644\u062e\u0637\u0629.</li> </ul>"},{"location":"terms/saas/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u062f\u0644 \u0634\u0631\u0627\u0621 \u0628\u0631\u0646\u0627\u0645\u062c \u0648\u062a\u0631\u0643\u064a\u0628\u0647\u060c \u062a\u0633\u062a\u0623\u062c\u0631\u0647 \u0643\u062e\u062f\u0645\u0629 \u062c\u0627\u0647\u0632\u0629 \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a. \u0645\u062b\u0644 \u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643 \u0641\u064a \u0635\u0627\u0644\u0629 \u0631\u064a\u0627\u0636\u064a\u0629 \u0643\u0627\u0645\u0644\u0629 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0628\u062f\u0644 \u0628\u0646\u0627\u0621 \u0635\u0627\u0644\u0629 \u0641\u064a \u0628\u064a\u062a\u0643.</p>"},{"location":"terms/saas/#c-api-saas","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u0627\u0633\u062a\u0647\u0644\u0627\u0643 API \u0644\u062e\u062f\u0645\u0629 SaaS (\u0645\u0639 \u0645\u0647\u0644\u0627\u062a \u0648\u0645\u062d\u0627\u0648\u0644\u0627\u062a \u0648\u0625\u064a\u0642\u0627\u0639 \u062d\u062f\u0648\u062f)","text":"<p>\u064a\u0648\u0636\u0651\u062d \u0627\u0644\u0645\u0635\u0627\u062f\u0642\u0629 \u0628\u0640 Bearer Token\u060c \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0639\u0646\u062f 429/5xx\u060c \u0648\u0627\u0644\u0627\u0646\u062a\u0638\u0627\u0631 \u062d\u0633\u0628 Retry-After.</p> C#<pre><code>// dotnet add package System.Net.Http.Json\nusing System;\nusing System.Net;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Text;\nusing System.Text.Json;\nusing System.Threading.Tasks;\n\nclass SaaSClient\n{\n    static readonly HttpClient http = new HttpClient\n    {\n        BaseAddress = new Uri(Environment.GetEnvironmentVariable(\"SAAS_BASE_URL\")\n                              ?? \"https://api.example-saas.com\"),\n        Timeout = TimeSpan.FromSeconds(10)\n    };\n\n    static SaaSClient()\n    {\n        var token = Environment.GetEnvironmentVariable(\"SAAS_TOKEN\") ?? \"demo-token\";\n        http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token);\n        http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));\n    }\n\n    public static async Task SendMessageAsync(string to, string body)\n    {\n        var payload = JsonSerializer.Serialize(new { to, body });\n\n        for (int attempt = 1; attempt &lt;= 3; attempt++)\n        {\n            using var req = new HttpRequestMessage(HttpMethod.Post, \"/v1/messages\")\n            {\n                Content = new StringContent(payload, Encoding.UTF8, \"application/json\")\n            };\n\n            using var res = await http.SendAsync(req);\n            if (res.IsSuccessStatusCode)\n            {\n                var json = await res.Content.ReadAsStringAsync();\n                Console.WriteLine($\"OK: {json}\");\n                return;\n            }\n\n            // 429/5xx: \u0627\u0646\u062a\u0638\u0631 \u062b\u0645 \u0623\u0639\u062f \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 (Exponential Backoff + Retry-After)\n            if (res.StatusCode == (HttpStatusCode)429 || (int)res.StatusCode &gt;= 500)\n            {\n                var delay = res.Headers.RetryAfter?.Delta\n                            ?? TimeSpan.FromSeconds(Math.Pow(2, attempt));\n                await Task.Delay(delay);\n                continue;\n            }\n\n            // \u0623\u062e\u0637\u0627\u0621 \u0623\u062e\u0631\u0649 \u2014 \u0627\u0637\u0628\u0639 \u0648\u0627\u0646\u0647\u0650\n            var err = await res.Content.ReadAsStringAsync();\n            throw new HttpRequestException($\"SaaS error {(int)res.StatusCode}: {err}\");\n        }\n\n        throw new TimeoutException(\"Max retries reached while calling SaaS API.\");\n    }\n\n    static async Task Main()\n    {\n        await SendMessageAsync(\"user@example.com\", \"Hello from SaaS API!\");\n    }\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0639\u0646\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0637\u0644\u0628: \u064a\u0637\u0628\u0639 <code>OK: {...}</code> \u0645\u0639 \u0645\u0639\u0631\u0651\u0641 \u0627\u0644\u0631\u0633\u0627\u0644\u0629. - \u0639\u0646\u062f \u0636\u063a\u0637 \u0627\u0644\u0645\u0639\u062f\u0651\u0644: \u064a\u0646\u062a\u0638\u0631 \u062d\u0633\u0628 <code>Retry-After</code> \u062b\u0645 \u064a\u062d\u0627\u0648\u0644 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649.</p>"},{"location":"terms/saas/#saas","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0639\u062a\u0645\u0627\u062f SaaS","text":"<ol> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0641\u0626\u0629: \u0628\u0631\u064a\u062f/\u0625\u0634\u0639\u0627\u0631\u0627\u062a\u060c CRM\u060c \u062f\u0641\u0639\u0627\u062a\u060c \u062f\u0639\u0645 \u0641\u0646\u064a\u060c \u062a\u062d\u0644\u064a\u0644\u0627\u062a\u2026  </li> <li>\u0642\u064a\u0651\u0645 \u0627\u0644\u0623\u0645\u0627\u0646 \u0648\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644: \u062a\u0634\u0641\u064a\u0631\u060c SSO/SAML/OIDC\u060c RBAC\u060c DPA/ISO/GDPR.  </li> <li>\u0627\u0641\u062d\u0635 \u0627\u0644\u0640 SLA\u060c \u0627\u0644\u062a\u0648\u0627\u0641\u0631\u060c \u062d\u062f\u0648\u062f \u0627\u0644\u0645\u0639\u062f\u0651\u0644 (Rate Limits)\u060c \u0648\u062e\u0637\u0629 \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u062a\u0643\u0627\u0645\u0644: REST/Webhooks/SDKs\u060c \u0648\u0633\u0647\u0648\u0644\u0629 \u0627\u0644\u0627\u0633\u062a\u064a\u0631\u0627\u062f/\u0627\u0644\u062a\u0635\u062f\u064a\u0631.  </li> <li>\u062e\u0637\u0651\u0637 \u0644\u0640 \u0627\u0644\u062e\u0631\u0648\u062c: \u062a\u0635\u062f\u064a\u0631 \u0628\u064a\u0627\u0646\u0627\u062a\u060c \u062a\u0646\u0633\u064a\u0642 \u0648\u0627\u0636\u062d\u060c \u0648\u062b\u064a\u0642\u0629 \u0645\u0644\u0643\u064a\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u0641\u0639\u0651\u0644 \u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u0633\u062c\u0644\u0627\u062a\u060c \u062a\u0646\u0628\u064a\u0647\u0627\u062a \u0641\u0634\u0644 \u0627\u0644\u062a\u0643\u0627\u0645\u0644\u060c \u0642\u064a\u0627\u0633 \u062a\u0643\u0644\u0641\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.  </li> <li>\u0627\u0641\u0635\u0644 \u0627\u0644\u0628\u064a\u0626\u0627\u062a: <code>dev/staging/prod</code>\u060c \u0648\u0645\u0641\u0627\u062a\u064a\u062d API \u0645\u062e\u062a\u0644\u0641\u0629 \u0644\u0643\u0644 \u0628\u064a\u0626\u0629.  </li> </ol>"},{"location":"terms/saas/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0643\u0627\u0645\u0644 \u062f\u0648\u0646 \u062e\u0637\u0629 \u062e\u0631\u0648\u062c \u0623\u0648 Export \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629 \u0648\u0645\u0648\u0642\u0639 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (Residency).  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u062d\u062f\u0648\u062f \u0627\u0644\u0645\u0639\u062f\u0651\u0644 \u2192 \u0623\u062e\u0637\u0627\u0621 429 \u0645\u062a\u0643\u0631\u0651\u0631\u0629.  </li> <li>\u062e\u0644\u0637 \u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0641\u064a \u0628\u064a\u0626\u0629 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0648\u0627\u0633\u0639\u0629 \u0628\u0644\u0627 RBAC \u062f\u0642\u064a\u0642 \u0623\u0648 \u0645\u0631\u0627\u062c\u0639\u0629 \u0648\u0635\u0648\u0644 \u062f\u0648\u0631\u064a\u0629.  </li> <li>\u0639\u062f\u0645 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0646\u0642\u0637\u0627\u0639 SaaS \u0628\u062e\u064a\u0627\u0631\u0627\u062a \u0628\u062f\u064a\u0644\u0629/\u0637\u0627\u0628\u0648\u0631 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629.</li> </ul>"},{"location":"terms/saas/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IaaS \u062e\u0648\u0627\u062f\u0645/\u0634\u0628\u0643\u0627\u062a \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u062a\u062f\u064a\u0631 \u0646\u0638\u0627\u0645\u0647\u0627 \u0628\u0646\u0641\u0633\u0643 \u0645\u0631\u0648\u0646\u0629 \u0639\u0627\u0644\u064a\u0629\u061b \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0648\u0623\u0645\u0646 \u0627\u0644\u0646\u0638\u0627\u0645 \u0639\u0644\u064a\u0643 PaaS \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0643\u0648\u062f \u0639\u0644\u0649 \u0645\u0646\u0635\u0651\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0646\u0634\u0631 \u0633\u0631\u064a\u0639\u060c Autoscale\u060c \u062a\u062d\u0643\u0645 \u0623\u0642\u0644 \u0628\u0627\u0644\u0640 OS SaaS \u062a\u0637\u0628\u064a\u0642 \u062c\u0627\u0647\u0632 \u064a\u064f\u0633\u062a\u0647\u0644\u0643 \u0639\u0628\u0631 \u0627\u0644\u0648\u064a\u0628/API \u0623\u0633\u0631\u0639 \u062a\u0628\u0646\u0651\u064a\u061b \u0623\u0642\u0644 \u062a\u062d\u0643\u0651\u0645 \u062f\u0627\u062e\u0644\u064a\u061b \u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0644\u062a\u0643\u0627\u0645\u0644"},{"location":"terms/saas/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>SaaS \u064a\u062a\u064a\u062d \u0644\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u062c\u0627\u0647\u0632\u0629 \u0641\u0648\u0631\u064b\u0627 \u0639\u0628\u0631 \u0627\u0644\u0648\u064a\u0628 \u0648\u0648\u0627\u062c\u0647\u0627\u062a \u0628\u0631\u0645\u062c\u0629. \u0631\u0643\u0651\u0632 \u0639\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0646/\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644/\u0627\u0644\u062a\u0643\u0627\u0645\u0644/\u062e\u0637\u0629 \u0627\u0644\u062e\u0631\u0648\u062c\u060c \u0648\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0642\u064a\u0648\u062f (Rate Limits/\u0627\u0639\u062a\u0645\u0627\u062f\u064a\u0629) \u0628\u0630\u0643\u0627\u0621 \u062f\u0627\u062e\u0644 \u062a\u0637\u0628\u064a\u0642\u0643. \u0627\u0644\u0643\u0648\u062f \u0623\u0639\u0644\u0627\u0647 \u064a\u0648\u0636\u062d \u0646\u0645\u0637 \u0627\u0633\u062a\u0647\u0644\u0627\u0643 API \u0622\u0645\u0646\u064b\u0627 \u0645\u0639 \u0645\u0647\u0644\u0627\u062a\u060c \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629\u060c \u0648\u0627\u062d\u062a\u0631\u0627\u0645 \u0633\u064a\u0627\u0633\u0627\u062a \u0627\u0644\u0645\u0632\u0648\u0651\u062f.</p>"},{"location":"terms/sandboxed/","title":"Sandboxed","text":""},{"location":"terms/sandboxed/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Sandboxed \u2014 \u0645\u064f\u0634\u063a\u0651\u064e\u0644 \u062f\u0627\u062e\u0644 \u0635\u0646\u062f\u0648\u0642 \u062d\u0645\u0627\u064a\u0629 (Sandbox) \u0628\u062d\u062f\u0648\u062f \u0648\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u064f\u0642\u064a\u0651\u064e\u062f\u0629.</p>"},{"location":"terms/sandboxed/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0634\u063a\u064a\u0644 \u0643\u0648\u062f/\u062a\u0637\u0628\u064a\u0642 \u062f\u0627\u062e\u0644 \u0628\u064a\u0626\u0629 \u0645\u0642\u064a\u0651\u062f\u0629 \u0628\u0633\u064a\u0627\u0633\u0627\u062a \u0623\u0645\u0627\u0646 (\u0645\u0644\u0641\u0627\u062a\u060c \u0634\u0628\u0643\u0629\u060c \u0630\u0648\u0627\u0643\u0631\u060c \u0646\u062f\u0627\u0621\u0627\u062a \u0646\u0638\u0627\u0645) \u0644\u0645\u0646\u0639 \u062a\u0623\u062b\u064a\u0631\u0647 \u0639\u0644\u0649 \u0628\u0642\u064a\u0629 \u0627\u0644\u0646\u0638\u0627\u0645. \u062a\u064f\u0633\u062a\u062e\u062f\u0645 \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d\u0627\u062a\u060c \u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u0647\u0627\u062a\u0641\u060c \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a\u060c \u0648\u0627\u0644\u0648\u0638\u0627\u0626\u0641 \u0627\u0644\u0633\u062d\u0627\u0628\u064a\u0629 \u0644\u062a\u0646\u0641\u064a\u0630 \u0622\u0645\u0646 \u0648\u0645\u0639\u0632\u0648\u0644.</p>"},{"location":"terms/sandboxed/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0623\u0642\u0644\u0651 \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u0645\u0643\u0646\u0629: \u0644\u0627 \u064a\u0631\u0649 \u0625\u0644\u0627 \u0645\u0627 \u064a\u062d\u062a\u0627\u062c\u0647.  </li> <li>\u0642\u064a\u0648\u062f \u0635\u0627\u0631\u0645\u0629: \u0645\u0646\u0639 \u0646\u062f\u0627\u0621\u0627\u062a \u0646\u0638\u0627\u0645 \u062e\u0637\u0650\u0631\u0629 (seccomp)\u060c \u0642\u0637\u0639 \u0627\u0644\u0634\u0628\u0643\u0629\u060c \u0645\u0644\u0641\u0627\u062a \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637.  </li> <li>\u062d\u062f\u0648\u062f \u0645\u0648\u0627\u0631\u062f: CPU/\u0630\u0627\u0643\u0631\u0629/\u0639\u062f\u062f \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a.  </li> <li>\u0623\u0633\u0648\u0627\u0631 \u0645\u062a\u0639\u062f\u062f\u0629: \u0623\u0633\u0645\u0627\u0621/\u0645\u0633\u0627\u062d\u0627\u062a \u0645\u0644\u0641\u0627\u062a \u0648\u0634\u0628\u0643\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0651\u0629 (namespaces).  </li> <li>\u0644\u0648 \u062a\u0639\u0637\u0651\u0644 \u0644\u0627 \u064a\u062c\u0631\u0651 \u0645\u0639\u0647 \u0627\u0644\u0646\u0638\u0627\u0645\u061b \u0627\u0644\u0636\u0631\u0631 \u064a\u0628\u0642\u0649 \u062f\u0627\u062e\u0644 \u201c\u0627\u0644\u0635\u0646\u062f\u0648\u0642\u201d.</li> </ul>"},{"location":"terms/sandboxed/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0635\u0646\u062f\u0648\u0642 \u0631\u0645\u0644 \u0641\u064a \u0627\u0644\u062d\u062f\u064a\u0642\u0629: \u0627\u0644\u0623\u0637\u0641\u0627\u0644 \u064a\u0644\u0639\u0628\u0648\u0646 \u062f\u0627\u062e\u0644\u0647 \u0628\u0623\u062f\u0648\u0627\u062a \u0645\u062d\u062f\u0648\u062f\u0629\u060c \u0648\u0627\u0644\u062c\u062f\u0631\u0627\u0646 \u062a\u0645\u0646\u0639 \u062e\u0631\u0648\u062c \u0627\u0644\u0631\u0645\u0644 \u0648\u062a\u0645\u0646\u0639 \u0627\u0644\u0641\u0648\u0636\u0649 \u0641\u064a \u0643\u0644 \u0627\u0644\u062d\u062f\u064a\u0642\u0629. \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u201c\u064a\u0644\u0639\u0628\u201d \u062f\u0627\u062e\u0644 \u062d\u062f\u0648\u062f\u0647 \u062f\u0648\u0646 \u062a\u062e\u0631\u064a\u0628 \u0627\u0644\u0628\u064a\u062a \u0643\u0644\u0647.</p>"},{"location":"terms/sandboxed/#cli-docker","title":"\u0645\u062b\u0627\u0644 CLI \u0642\u0635\u064a\u0631 (\u062a\u0634\u063a\u064a\u0644 \u062a\u0637\u0628\u064a\u0642 \u062f\u0627\u062e\u0644 \u0635\u0646\u062f\u0648\u0642 \u0639\u0628\u0631 Docker)","text":"<p>Bash<pre><code>docker run --rm \\\n  --read-only \\                 # \u0646\u0638\u0627\u0645 \u0645\u0644\u0641\u0627\u062a \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637\n  --pids-limit 128 \\            # \u062d\u062f \u0623\u0642\u0635\u0649 \u0644\u0644\u0639\u0645\u0644\u064a\u0627\u062a\n  --cpus 0.5 --memory 256m \\    # \u062d\u062f\u0648\u062f CPU/RAM\n  --cap-drop ALL \\              # \u0625\u0633\u0642\u0627\u0637 \u0643\u0644 \u0627\u0644\u0642\u062f\u0631\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629\n  --security-opt no-new-privileges \\  # \u0645\u0646\u0639 \u062a\u0635\u0639\u064a\u062f \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a\n  --network none \\              # \u0628\u062f\u0648\u0646 \u0634\u0628\u0643\u0629\n  myapp:latest                  # \u0627\u0644\u0635\u0648\u0631\u0629/\u0627\u0644\u062a\u0637\u0628\u064a\u0642\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0636\u0645\u0646 \u0642\u064a\u0648\u062f \u0642\u0648\u064a\u0629\u061b \u0623\u064a \u0645\u062d\u0627\u0648\u0644\u0629 \u0644\u0644\u0643\u062a\u0627\u0628\u0629 \u0639\u0644\u0649 \u0627\u0644\u062c\u0630\u0631 \u0623\u0648 \u0627\u0644\u062e\u0631\u0648\u062c \u0644\u0644\u0634\u0628\u0643\u0629 \u062a\u0641\u0634\u0644.</p>"},{"location":"terms/sandboxed/#html","title":"\u0645\u062b\u0627\u0644 HTML \u0633\u0637\u0631 \u0648\u0627\u062d\u062f (\u0635\u0646\u062f\u0648\u0642 \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d)","text":"<p>HTML<pre><code>&lt;iframe src=\"/untrusted\" sandbox=\"allow-scripts\" referrerpolicy=\"no-referrer\"&gt;&lt;/iframe&gt;\n</code></pre> \u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0635\u0641\u062d\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0625\u0637\u0627\u0631 \u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0641\u062a\u062d \u0646\u0648\u0627\u0641\u0630 \u0623\u0648 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0640 APIs \u0625\u0644\u0627 \u0627\u0644\u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627 \u0635\u0631\u0627\u062d\u0629.</p>"},{"location":"terms/sandboxed/#sandboxing","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 Sandboxing","text":"<ul> <li>\u0634\u063a\u0651\u0644 \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u0643\u0645\u0633\u062a\u062e\u062f\u0645 \u063a\u064a\u0631 \u0625\u062f\u0627\u0631\u064a (non-root) \u0648\u0623\u0633\u0642\u0637 \u0627\u0644\u0642\u062f\u0631\u0627\u062a \u063a\u064a\u0631 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629.  </li> <li>\u0627\u062c\u0639\u0644 \u0646\u0638\u0627\u0645 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637\u060c \u0648\u0627\u0633\u0645\u062d \u0628\u0645\u062c\u0644\u062f\u0627\u062a \u0645\u0624\u0642\u0651\u062a\u0629 \u0645\u0639\u0632\u0648\u0644\u0629 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.  </li> <li>\u062d\u062f\u0651\u0650\u062f \u0627\u0644\u0645\u0648\u0627\u0631\u062f: CPU/RAM/PIDs\u060c \u0648\u0623\u063a\u0644\u0642 \u0627\u0644\u0634\u0628\u0643\u0629 \u0625\u0646 \u0644\u0645 \u062a\u0643\u0646 \u0645\u0637\u0644\u0648\u0628\u0629.  </li> <li>\u0641\u0639\u0651\u0650\u0644 \u0633\u064a\u0627\u0633\u0627\u062a \u0646\u062f\u0627\u0621\u0627\u062a \u0627\u0644\u0646\u0638\u0627\u0645 (\u0645\u062b\u0644 seccomp) \u0648AppArmor/SELinux \u0639\u0646\u062f \u0627\u0644\u062a\u0648\u0641\u0631.  </li> <li>\u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d: \u0627\u0633\u062a\u062e\u062f\u0645 <code>iframe[sandbox]</code> \u0648CSP \u0648Origin Isolation.  </li> <li>\u0641\u064a \u0627\u0644\u0647\u0627\u062a\u0641: \u0627\u0637\u0644\u0628 \u0623\u0630\u0648\u0646\u0627\u062a \u062f\u0642\u064a\u0642\u0629 \u0641\u0642\u0637 (Permissions) \u0648\u0641\u0635\u0651\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0633\u0628 \u0627\u0644\u062d\u0633\u0627\u0628/\u0627\u0644\u0645\u0633\u0627\u062d\u0629.  </li> <li>\u0623\u0636\u0641 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u062a\u064f\u062b\u0628\u062a \u0641\u0634\u0644 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u062d\u0638\u0648\u0631\u0629 (\u0643\u062a\u0627\u0628\u0629 \u062e\u0627\u0631\u062c \u0627\u0644\u0645\u0633\u0627\u0631/\u0627\u062a\u0635\u0627\u0644 \u0634\u0628\u0643\u064a/\u062a\u0646\u0641\u064a\u0630 \u0641\u0631\u0639\u064a).</li> </ul>"},{"location":"terms/sandboxed/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Isolated \u0641\u0635\u0644 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629 (Process/Container/Network/Test) \u0644\u0643\u0646 \u0644\u064a\u0633\u062a \u062f\u0627\u0626\u0645\u064b\u0627 \u0645\u064f\u0646\u0641\u0651\u064e\u0630\u0629 \u0628\u0633\u064a\u0627\u0633\u0627\u062a \u0635\u0627\u0631\u0645\u0629 Sandboxed \u062a\u0634\u063a\u064a\u0644 \u0636\u0645\u0646 \u0642\u064a\u0648\u062f \u0623\u0645\u0646\u064a\u0629 \u0645\u064f\u0646\u0641\u0651\u064e\u0630\u0629 \u0633\u064a\u0627\u0633\u0627\u062a \u0623\u0645\u0627\u0646 \u062a\u062d\u062f\u0651 \u0646\u062f\u0627\u0621\u0627\u062a \u0627\u0644\u0646\u0638\u0627\u0645/\u0627\u0644\u0645\u0644\u0641/\u0627\u0644\u0634\u0628\u0643\u0629\u061b \u0645\u0628\u062f\u0623 \u0623\u0642\u0644 \u0635\u0644\u0627\u062d\u064a\u0627\u062a Shared Environment \u0645\u0634\u0627\u0631\u0643\u0629 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0628\u064a\u0646 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0625\u0646\u062a\u0627\u062c\u064a \u0648\u0633\u0647\u0644 \u0644\u0643\u0646 \u0645\u062e\u0627\u0637\u0631 \u062a\u0623\u062b\u064a\u0631 \u0645\u062a\u0628\u0627\u062f\u0644 \u0648\u062a\u0633\u0631\u0628 \u062d\u0627\u0644\u0629 \u0623\u0639\u0644\u0649"},{"location":"terms/sandboxed/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Sandboxed = \u062a\u0634\u063a\u064a\u0644 \u0645\u064f\u0642\u064a\u0651\u064e\u062f \u0628\u0633\u064a\u0627\u0633\u0627\u062a \u0623\u0645\u0627\u0646 \u0648\u062d\u062f\u0648\u062f \u0645\u0648\u0627\u0631\u062f \u062a\u0639\u0632\u0644 \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0648\u062a\u0645\u0646\u0639 \u0627\u0644\u062a\u0635\u0639\u064a\u062f. \u0627\u0628\u062f\u0623 \u0628\u0640 \u0623\u0642\u0644 \u0635\u0644\u0627\u062d\u064a\u0627\u062a\u060c \u0648\u0627\u062c\u0645\u0639 \u0628\u064a\u0646 \u0627\u0644\u0639\u0632\u0644 \u0627\u0644\u0645\u0646\u0637\u0642\u064a \u0648\u0627\u0644\u0633\u064a\u0627\u0633\u0627\u062a \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u064a\u0629 \u0644\u062a\u062d\u0642\u064a\u0642 \u062d\u0645\u0627\u064a\u0629 \u0641\u0639\u0644\u064a\u0629.</p>"},{"location":"terms/sdk/","title":"SDK","text":""},{"location":"terms/sdk/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Software Development Kit (SDK) \u2014 \u062d\u0650\u0632\u0645\u0629 \u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a (\u0639\u062f\u0629 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0644\u0645\u0646\u0635\u0651\u0629/\u0645\u0646\u062a\u062c \u0645\u0639\u064a\u0651\u0646).</p>"},{"location":"terms/sdk/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0645\u062c\u0645\u0648\u0639\u0629 \u0623\u062f\u0648\u0627\u062a \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u0644\u0644\u062a\u0637\u0648\u064a\u0631: \u0645\u062a\u0631\u062c\u0645\u0627\u062a/Runtime\u060c \u0645\u0643\u062a\u0628\u0627\u062a \u0648\u0648\u0627\u062c\u0647\u0627\u062a\u060c \u0623\u062f\u0648\u0627\u062a \u0633\u0637\u0631 \u0623\u0648\u0627\u0645\u0631\u060c \u0648\u062b\u0627\u0626\u0642\u060c \u0648\u0623\u062d\u064a\u0627\u0646\u064b\u0627 \u0645\u062d\u0627\u0643\u064a\u0627\u062a. \u064a\u062a\u064a\u062d \u0644\u0643 \u0627\u0644\u0628\u0646\u0627\u0621 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0648\u0627\u0644\u0646\u0634\u0631 \u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u062a\u0633\u062a\u0647\u062f\u0641 \u0645\u0646\u0635\u0651\u0629 \u0645\u062d\u062f\u0651\u062f\u0629 (\u0645\u062b\u0644 .NET\u060c Android\u060c iOS\u060c Windows).</p>"},{"location":"terms/sdk/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0641\u0643\u0651\u0631 \u0628\u0627\u0644\u0640 SDK \u0643\u0640 \u0639\u062f\u0629 \u0646\u062c\u0651\u0627\u0631 \u0643\u0627\u0645\u0644\u0629: \u0645\u0637\u0631\u0642\u0629 (Compiler)\u060c \u0645\u0633\u0627\u0645\u064a\u0631 (Libraries)\u060c \u062a\u0639\u0644\u064a\u0645\u0627\u062a (Docs)\u060c \u0648\u062c\u062f\u0627\u0648\u0644 \u0642\u064a\u0627\u0633 (CLI).  </li> <li>\u0644\u064a\u0633 \u0645\u062d\u0631\u0651\u0631\u064b\u0627 \u0628\u0648\u0627\u062c\u0647\u0629 \u0631\u0633\u0648\u0645\u064a\u0629\u061b \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u0639\u0645\u0627\u0644\u0647 \u0645\u0646 IDE \u0623\u0648 Code Editor \u0623\u0648 \u0627\u0644\u0637\u0631\u0641\u064a\u0651\u0629.  </li> <li>\u064a\u0648\u0641\u0651\u0631 \u0648\u0627\u062c\u0647\u0627\u062a \u0642\u064a\u0627\u0633\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 \u0648\u062a\u0634\u063a\u064a\u0644 \u0648\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0646\u0634\u0631 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0644\u0645\u0646\u0635\u0651\u0629 \u0645\u0639\u064a\u0651\u0646\u0629.  </li> <li>\u0623\u0645\u062b\u0644\u0629: .NET SDK, Android SDK, iOS/macOS SDK (Xcode), Windows SDK.</li> </ul>"},{"location":"terms/sdk/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0634\u0631\u0627\u0621 \u0637\u0642\u0645 \u0623\u062f\u0648\u0627\u062a \u0644\u0628\u0646\u0627\u0621 \u0623\u062b\u0627\u062b: \u0644\u062f\u064a\u0643 \u0627\u0644\u0623\u062f\u0648\u0627\u062a\u060c \u0627\u0644\u0642\u0637\u0639 \u0627\u0644\u0642\u064a\u0627\u0633\u064a\u0629\u060c \u0648\u0643\u062a\u064a\u0651\u0628 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u0627\u062a. \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0639\u0645\u0644 \u0628\u0623\u064a \u0648\u0631\u0634\u0629 (IDE/Editor)\u060c \u0644\u0643\u0646 \u0627\u0644\u0639\u062f\u0629 \u0646\u0641\u0633\u0647\u0627 \u0647\u064a \u0627\u0644\u0640 SDK.</p>"},{"location":"terms/sdk/#net-sdk-cli","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u0645\u062e\u062a\u0635\u0631 (.NET SDK: CLI + \u0643\u0648\u062f)","text":""},{"location":"terms/sdk/#cli-net-sdk","title":"\u0623\u0648\u0627\u0645\u0631 CLI \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 .NET SDK","text":"Bash<pre><code># \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062a\u0646\u0635\u064a\u0628 \u0648\u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a\ndotnet --info\n\n# \u0625\u0646\u0634\u0627\u0621 \u0645\u0634\u0631\u0648\u0639 \u0643\u0648\u0646\u0633\u0648\u0644 \u0648\u0627\u0633\u062a\u0647\u062f\u0627\u0641 net9.0\ndotnet new console -n SdkDemo -f net9.0\ncd SdkDemo\n\n# \u0625\u0636\u0627\u0641\u0629 \u062d\u0632\u0645\u0629 (\u0645\u062b\u0627\u0644: Newtonsoft.Json)\ndotnet add package Newtonsoft.Json\n\n# \u0627\u0644\u0628\u0646\u0627\u0621 \u0648\u0627\u0644\u062a\u0634\u063a\u064a\u0644\ndotnet build\ndotnet run\n\n# \u0646\u0634\u0631 \u0643\u062a\u0637\u0628\u064a\u0642 \u0645\u0633\u062a\u0642\u0644 \u0644\u0646\u0638\u0627\u0645 \u0645\u062d\u062f\u0651\u062f (Self-contained)\ndotnet publish -c Release -r win-x64 --self-contained true\n</code></pre>"},{"location":"terms/sdk/#sdk-style","title":"\u0645\u0644\u0641 \u0645\u0634\u0631\u0648\u0639 \u0628\u0623\u0633\u0644\u0648\u0628 \u201cSDK-Style\u201d","text":"XML<pre><code>&lt;!-- SdkDemo.csproj --&gt;\n&lt;Project Sdk=\"Microsoft.NET.Sdk\"&gt;\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;net9.0&lt;/TargetFramework&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;\n    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;\n  &lt;/PropertyGroup&gt;\n&lt;/Project&gt;\n</code></pre>"},{"location":"terms/sdk/#c","title":"\u0628\u0631\u0646\u0627\u0645\u062c C# \u0628\u0633\u064a\u0637","text":"<p>C#<pre><code>// Program.cs\nusing System;\nclass Program\n{\n    static void Main() =&gt; Console.WriteLine(\"Hello from the .NET SDK!\");\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: - \u062a\u0639\u0631\u0636 <code>dotnet --info</code> \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a \u0648\u0627\u0644\u0623\u0637\u0631. - \u064a\u0637\u0628\u0639 \u0627\u0644\u062a\u0637\u0628\u064a\u0642: <code>Hello from the .NET SDK!</code> - \u064a\u0648\u0644\u0651\u062f <code>publish</code> \u0645\u0644\u0641\u0627\u062a \u062a\u0634\u063a\u064a\u0644 \u0628\u062d\u0633\u0628 \u0627\u0644\u0647\u062f\u0641 (\u0645\u062b\u0644 win-x64).</p>"},{"location":"terms/sdk/#sdk_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 SDK \u0628\u0643\u0641\u0627\u0621\u0629","text":"<ul> <li>\u0646\u0632\u0651\u0644 \u0648\u062b\u0628\u0651\u062a \u0627\u0644\u0640 SDK \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u0644\u0645\u0646\u0635\u0651\u062a\u0643 (\u062a\u0623\u0643\u0651\u062f \u0645\u0646 \u062a\u0648\u0627\u0641\u0642 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0645\u0639 \u0645\u0634\u0631\u0648\u0639\u0643).  </li> <li>\u0627\u0636\u0628\u0637 \u0627\u0644\u0645\u062a\u063a\u064a\u0651\u0631\u0627\u062a \u0627\u0644\u0628\u064a\u0626\u064a\u0629 \u0625\u0646 \u0644\u0632\u0645 (\u0645\u062b\u0627\u0644 Android: <code>JAVA_HOME</code>, <code>ANDROID_HOME</code>).  </li> <li>\u062a\u062d\u0642\u0651\u0642 \u0639\u0628\u0631 \u0623\u0645\u0631 \u0645\u0639\u0644\u0648\u0645\u0627\u062a/\u0646\u0633\u062e\u0629 (<code>dotnet --info</code>, <code>java -version</code>, <code>xcodebuild -version</code>).  </li> <li>\u0627\u0628\u062f\u0623 \u0628\u0642\u0648\u0627\u0644\u0628 \u062c\u0627\u0647\u0632\u0629 (\u0645\u0634\u0631\u0648\u0639 Console/Web/Library) \u062b\u0645 \u0623\u0636\u0641 \u0627\u0644\u062a\u0628\u0639\u064a\u0627\u062a.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 CLI/Tooling \u0645\u0639 IDE \u0644\u062a\u0648\u062d\u064a\u062f \u0627\u0644\u0628\u0646\u0627\u0621 \u0641\u064a \u0641\u0631\u0642 \u0627\u0644\u0639\u0645\u0644 \u0648CI.  </li> <li>\u0648\u062b\u0651\u0642 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0648\u062e\u064a\u0627\u0631\u0627\u062a \u0627\u0644\u0646\u0634\u0631 \u0644\u0643\u0644 \u0645\u0646\u0635\u0651\u0629\u060c \u0648\u0623\u0636\u0641 \u0633\u0643\u0631\u0628\u062a\u0627\u062a <code>build</code>/<code>publish</code>.</li> </ul>"},{"location":"terms/sdk/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 SDK \u0648IDE: \u0627\u0644\u0623\u0648\u0644 \u062d\u0632\u0645\u0629 \u0623\u062f\u0648\u0627\u062a\u060c \u0627\u0644\u062b\u0627\u0646\u064a \u0628\u064a\u0626\u0629 \u062a\u062d\u0631\u064a\u0631 \u0645\u062a\u0643\u0627\u0645\u0644\u0629.  </li> <li>\u0627\u062e\u062a\u0644\u0627\u0641 \u0625\u0635\u062f\u0627\u0631\u0627\u062a Runtime/SDK \u0628\u064a\u0646 \u0623\u062c\u0647\u0632\u0629 \u0627\u0644\u0641\u0631\u064a\u0642 \u2192 \u0646\u062a\u0627\u0626\u062c \u0628\u0646\u0627\u0621 \u0645\u062e\u062a\u0644\u0641\u0629.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u0645\u062d\u0627\u0643\u064a\u0627\u062a/\u0627\u0644\u0645\u0646\u0635\u0651\u0627\u062a (Android/iOS) \u0642\u0628\u0644 \u0627\u0644\u0628\u0646\u0627\u0621 \u0623\u0648 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0627\u0633\u062a\u0647\u062f\u0627\u0641 \u0625\u0637\u0627\u0631 \u062e\u0627\u0637\u0626 (\u0645\u062b\u0644 <code>net8.0</code> \u0628\u064a\u0646\u0645\u0627 \u0623\u062f\u0648\u0627\u062a\u0643 \u0644\u0627 \u062a\u062f\u0639\u0645\u0647) \u0623\u0648 \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0651\u0631\u0629.</li> </ul>"},{"location":"terms/sdk/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Code Editor \u062a\u062d\u0631\u064a\u0631 \u0646\u0635 \u0627\u0644\u0643\u0648\u062f \u0641\u0642\u0637 \u062e\u0641\u064a\u0641\u061b \u064a\u062a\u0648\u0633\u0651\u0639 \u0639\u0628\u0631 \u0625\u0636\u0627\u0641\u0627\u062a IDE \u062a\u062d\u0631\u064a\u0631 + \u0628\u0646\u0627\u0621 + \u062a\u0635\u062d\u064a\u062d + \u0625\u062f\u0627\u0631\u0629 \u0645\u0634\u0631\u0648\u0639 \u064a\u062a\u0643\u0627\u0645\u0644 \u0639\u0627\u062f\u0629\u064b \u0645\u0639 SDKs \u0648VCS \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a SDK \u0645\u062a\u0631\u062c\u0645\u0627\u062a/\u0645\u0643\u062a\u0628\u0627\u062a/\u0623\u062f\u0648\u0627\u062a \u0628\u0646\u0627\u0621 \u0648\u0646\u0634\u0631 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0645\u0646 IDE/Editor \u0623\u0648 CLI\u061b \u0644\u064a\u0633 \u0645\u062d\u0631\u0651\u0631\u064b\u0627 \u0628\u062d\u062f\u0651 \u0630\u0627\u062a\u0647 Debugger \u062a\u0646\u0641\u064a\u0630 \u062e\u0637\u0648\u0629 \u0628\u062e\u0637\u0648\u0629 \u0648\u0641\u062d\u0635 \u0627\u0644\u062d\u0627\u0644\u0629 \u0642\u062f \u064a\u0623\u062a\u064a \u0636\u0645\u0646 IDE \u0623\u0648 \u0643\u0623\u062f\u0627\u0629 \u0645\u0646\u0641\u0635\u0644\u0629"},{"location":"terms/sdk/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>SDK = \u0627\u0644\u0639\u0650\u062f\u0651\u0629 \u0627\u0644\u0641\u0639\u0644\u064a\u0629 \u0644\u0644\u062a\u0637\u0648\u064a\u0631 (Compiler/Tools/Libraries/Docs). \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0645\u0639 \u0645\u062d\u0631\u0651\u0631\u0643 \u0623\u0648 IDE \u0644\u062a\u0628\u0646\u064a \u0648\u062a\u064f\u0634\u063a\u0651\u0644 \u0648\u062a\u064e\u0646\u0634\u0631 \u0628\u062b\u0628\u0627\u062a \u0639\u0628\u0631 \u0628\u064a\u0626\u0627\u062a \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u0648\u0627\u0644\u062a\u0643\u0627\u0645\u0644 \u0627\u0644\u0645\u0633\u062a\u0645\u0631.</p>"},{"location":"terms/sdlc/","title":"SDLC \u2014 Software Development Life Cycle","text":""},{"location":"terms/sdlc/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Software Development Life Cycle (SDLC) \u2014 \u062f\u0648\u0631\u0629 \u062d\u064a\u0627\u0629 \u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a</p>"},{"location":"terms/sdlc/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u064a\u0635\u0641 \u0645\u0631\u0627\u062d\u0644 \u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0646\u0638\u0627\u0645 \u0645\u0646 \u0627\u0644\u0641\u0643\u0631\u0629 \u062d\u062a\u0649 \u0627\u0644\u0635\u064a\u0627\u0646\u0629: \u062a\u062e\u0637\u064a\u0637 \u2192 \u0645\u062a\u0637\u0644\u0628\u0627\u062a \u2192 \u062a\u0635\u0645\u064a\u0645 \u2192 \u0628\u0646\u0627\u0621 \u2192 \u0627\u062e\u062a\u0628\u0627\u0631 \u2192 \u0646\u0634\u0631 \u2192 \u062a\u0634\u063a\u064a\u0644/\u062a\u062d\u0633\u064a\u0646\u060c \u0645\u0639 \u062d\u0648\u0627\u062c\u0632 \u062c\u0648\u062f\u0629\u060c \u0648\u062b\u0627\u0626\u0642\u060c \u0648\u062a\u062a\u0628\u0639 \u062a\u063a\u064a\u064a\u0631\u0627\u062a.</p>"},{"location":"terms/sdlc/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0647\u062f\u0641 SDLC: \u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0645\u062e\u0627\u0637\u0631 \u0648\u0631\u0641\u0639 \u0627\u0644\u062c\u0648\u062f\u0629 \u0639\u0628\u0631 \u0645\u0631\u0627\u062d\u0644 \u0648\u0627\u0636\u062d\u0629 \u0648\u0645\u0633\u0624\u0648\u0644\u064a\u0627\u062a \u0645\u062d\u062f\u0651\u062f\u0629.  </li> <li>\u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u0645\u0639 \u0645\u0646\u0647\u062c\u064a\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629: Waterfall (\u062a\u0633\u0644\u0633\u0644 \u062e\u0637\u0651\u064a)\u060c Agile (\u062a\u0643\u0631\u0627\u0631\u0627\u062a Sprint)\u060c DevOps (\u0623\u062a\u0645\u062a\u0629 \u0648\u0646\u0634\u0631 \u0645\u0633\u062a\u0645\u0631).  </li> <li>\u0645\u062e\u0631\u062c\u0627\u062a \u0623\u0633\u0627\u0633\u064a\u0629: \u0648\u062b\u0627\u0626\u0642 \u0645\u062a\u0637\u0644\u0628\u0627\u062a (SRS)\u060c \u062a\u0635\u0645\u064a\u0645 \u0645\u0639\u0645\u0627\u0631\u064a\u060c \u0643\u0648\u062f \u0648\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u062d\u0650\u0632\u0645/\u0625\u0635\u062f\u0627\u0631\u0627\u062a\u060c \u0645\u0642\u0627\u064a\u064a\u0633 \u062a\u0634\u063a\u064a\u0644.</li> </ul>"},{"location":"terms/sdlc/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u0646\u0627\u0621 \u0645\u0646\u0632\u0644: \u062f\u0631\u0627\u0633\u0629 \u062c\u062f\u0648\u0649 (\u062a\u062e\u0637\u064a\u0637)\u060c \u0645\u062e\u0637\u0637\u0627\u062a (\u062a\u0635\u0645\u064a\u0645)\u060c \u0628\u0646\u0627\u0621 (\u062a\u0646\u0641\u064a\u0630)\u060c \u062a\u0641\u062a\u064a\u0634 (\u0627\u062e\u062a\u0628\u0627\u0631)\u060c \u062a\u0633\u0644\u064a\u0645 \u0648\u0633\u0643\u0646 (\u0646\u0634\u0631)\u060c \u0635\u064a\u0627\u0646\u0629 \u062f\u0648\u0631\u064a\u0629 (\u062a\u0634\u063a\u064a\u0644).</p>"},{"location":"terms/sdlc/#c-sdlc","title":"\u0645\u062b\u0627\u0644 C# \u0639\u0645\u0644\u064a \u2014 \u0631\u0628\u0637 \u0645\u0631\u0627\u062d\u0644 SDLC \u0628\u0643\u0648\u062f \u0635\u063a\u064a\u0631","text":"<p>\u0633\u0646\u064f\u0638\u0647\u0631: 1) \u0645\u062a\u0637\u0644\u0628\u0627\u062a: \u201c\u0627\u062d\u0633\u0628 \u0627\u0644\u0633\u0639\u0631 \u0628\u0639\u062f \u062e\u0635\u0645\u060c \u0648\u0644\u0627 \u064a\u0642\u0644 \u0627\u0644\u0646\u0627\u062a\u062c \u0639\u0646 \u0635\u0641\u0631\u201d. 2) \u0627\u062e\u062a\u0628\u0627\u0631 (TDD): \u0646\u0643\u062a\u0628 \u0627\u062e\u062a\u0628\u0627\u0631\u064b\u0627 \u0642\u0628\u0644 \u0627\u0644\u062a\u0646\u0641\u064a\u0630. 3) \u0628\u0646\u0627\u0621: \u0646\u064f\u0646\u0641\u0651\u0630 \u0627\u0644\u0645\u0646\u0637\u0642 \u0645\u0639 \u062a\u0648\u062b\u064a\u0642. 4) \u062a\u0634\u063a\u064a\u0644: Log \u0628\u0633\u064a\u0637 \u0648\u201c\u0631\u0642\u0645 \u0625\u0635\u062f\u0627\u0631\u201d \u0644\u062a\u062a\u0628\u0651\u0639 \u0627\u0644\u0646\u0634\u0631.</p>"},{"location":"terms/sdlc/#1-xunit","title":"1) \u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u062d\u062f\u0627\u062a (xUnit)","text":"C#<pre><code>// dotnet add package xunit\n// dotnet add package xunit.runner.visualstudio\n// dotnet test\nusing Xunit;\n\npublic class PriceCalculatorTests\n{\n    [Theory]\n    [InlineData(100, 0.10, 90)]\n    [InlineData(50,  0.00, 50)]\n    [InlineData(10,  0.50, 5)]\n    [InlineData(10,  2.00, 0)] // \u0644\u0627 \u064a\u0642\u0644 \u0639\u0646 \u0635\u0641\u0631\n    public void FinalPrice_Is_Capped_At_Zero(decimal price, double discount, decimal expected)\n    {\n        var calc = new PriceCalculator();\n        Assert.Equal(expected, calc.Final(price, discount));\n    }\n}\n</code></pre>"},{"location":"terms/sdlc/#2","title":"2) \u0627\u0644\u062a\u0646\u0641\u064a\u0630","text":"C#<pre><code>using System;\nusing System.Diagnostics.CodeAnalysis;\n\n/// &lt;summary&gt;\n/// Req#PRC-001: \u0627\u062d\u0633\u0628 \u0627\u0644\u0633\u0639\u0631 \u0628\u0639\u062f \u062e\u0635\u0645 \u0646\u0633\u0628\u064a (0..1) \u0648\u0644\u0627 \u064a\u0642\u0644 \u0627\u0644\u0646\u0627\u062a\u062c \u0639\u0646 \u0635\u0641\u0631.\n/// &lt;/summary&gt;\npublic class PriceCalculator\n{\n    /// &lt;param name=\"price\"&gt;\u0627\u0644\u0633\u0639\u0631 \u0642\u0628\u0644 \u0627\u0644\u062e\u0635\u0645 (&gt;=0)&lt;/param&gt;\n    /// &lt;param name=\"discount\"&gt;\u0646\u0633\u0628\u0629 \u0627\u0644\u062e\u0635\u0645 \u0628\u064a\u0646 0 \u06481 (\u0642\u062f \u062a\u062a\u062c\u0627\u0648\u0632 1 \u062e\u0637\u0623 \u0645\u0646 \u0627\u0644\u0645\u0635\u062f\u0631)&lt;/param&gt;\n    public decimal Final(decimal price, double discount)\n    {\n        if (price &lt; 0) throw new ArgumentOutOfRangeException(nameof(price));\n        var d = Math.Clamp(discount, 0d, 1d);\n        var result = price - (price * (decimal)d);\n        return result &lt; 0 ? 0 : decimal.Round(result, 2);\n    }\n}\n</code></pre>"},{"location":"terms/sdlc/#3-logging-version","title":"3) \u0646\u0642\u0637\u0629 \u062a\u0634\u063a\u064a\u0644 \u0635\u063a\u064a\u0631\u0629 (Logging + Version)","text":"C#<pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        var version = typeof(Program).Assembly.GetName().Version?.ToString() ?? \"0.0.0\";\n        Console.WriteLine($\"App Version: {version}  (Deployed: {DateTime.UtcNow:O})\");\n\n        var calc = new PriceCalculator();\n        var final = calc.Final(100m, 0.15);\n        Console.WriteLine($\"Final price: {final}\"); // \u0645\u0631\u0627\u0642\u0628\u0629 \u0633\u0631\u064a\u0639\u0629 \u0644\u0644\u0648\u0638\u064a\u0641\u0629 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u0648\u062b\u0651\u0642\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u062a\u0639\u0644\u064a\u0642 \u0648\u0627\u0633\u0645 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631. - \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u064a\u062b\u0628\u062a \u0627\u0644\u0633\u0644\u0648\u0643 \u0648\u064a\u0645\u0646\u0639 \u0627\u0644\u0627\u0646\u062d\u0631\u0627\u0641. - \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u064a\u062d\u0642\u0651\u0642 \u0627\u0644\u0634\u0631\u0637 \u0648\u064a\u0639\u0627\u0644\u062c \u0627\u0644\u062d\u0648\u0627\u0641. - \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u064a\u0637\u0628\u0639 \u0627\u0644\u0625\u0635\u062f\u0627\u0631/\u0627\u0644\u0632\u0645\u0646 \u0644\u062a\u062a\u0628\u0651\u0639 \u0627\u0644\u0646\u0634\u0631 (Release Traceability).</p>"},{"location":"terms/sdlc/#sdlc","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 SDLC","text":"<ol> <li>\u0627\u0644\u062a\u062e\u0637\u064a\u0637: \u0647\u062f\u0641 \u0627\u0644\u0639\u0645\u0644\u060c \u0623\u0635\u062d\u0627\u0628 \u0627\u0644\u0645\u0635\u0644\u062d\u0629\u060c \u0627\u0644\u0645\u062e\u0627\u0637\u0631\u060c \u0627\u0644\u0645\u064a\u0632\u0627\u0646\u064a\u0629\u060c KPI.  </li> <li>\u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a (SRS): \u0648\u0638\u064a\u0641\u064a\u0629/\u0644\u0627-\u0648\u0638\u064a\u0641\u064a\u0629 (\u0623\u062f\u0627\u0621\u060c \u0623\u0645\u0627\u0646\u060c \u062a\u0648\u0641\u0651\u0631)\u060c \u0642\u0628\u0648\u0644 (Acceptance).  </li> <li>\u0627\u0644\u062a\u0635\u0645\u064a\u0645: \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 (C4)\u060c \u0642\u0631\u0627\u0631\u0627\u062a ADR\u060c \u0646\u0645\u0627\u0630\u062c \u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u0627\u062c\u0647\u0627\u062a.  </li> <li>\u0627\u0644\u062a\u0646\u0641\u064a\u0630: \u0645\u0639\u0627\u064a\u064a\u0631 \u0643\u0648\u062f\u060c \u0645\u0631\u0627\u062c\u0639\u0627\u062a (PRs)\u060c \u0623\u062a\u0645\u062a\u0629 \u0628\u0646\u0627\u0621\u060c \u062a\u062d\u0644\u064a\u0644 \u062b\u0627\u0628\u062a (Analyzers).  </li> <li>\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631: \u0648\u062d\u062f\u0627\u062a/\u062a\u0643\u0627\u0645\u0644/\u0642\u0628\u0648\u0644/\u0623\u0645\u0646/\u0623\u062f\u0627\u0621\u060c \u062a\u063a\u0637\u064a\u0629 \u0648\u201c\u0628\u0648\u0627\u0628\u0627\u062a \u062c\u0648\u062f\u0629\u201d.  </li> <li>\u0627\u0644\u0646\u0634\u0631: \u062a\u0639\u0644\u064a\u0628 (Packages/Containers)\u060c \u0628\u064a\u0626\u0627\u062a <code>dev/stage/prod</code>\u060c \u0647\u0648\u064a\u0627\u062a \u0633\u0631\u0651\u064a\u0629 \u0622\u0645\u0646\u0629.  </li> <li>\u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0648\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: Logs/Metrics/Tracing\u060c \u062a\u0646\u0628\u064a\u0647\u0627\u062a\u060c \u0625\u062f\u0627\u0631\u0629 \u062d\u0648\u0627\u062f\u062b\u060c \u062e\u0637\u0629 \u0631\u062c\u0648\u0639.  </li> <li>\u0627\u0644\u062a\u062d\u0633\u064a\u0646: \u062a\u0639\u0644\u0651\u0645 \u0645\u0646 \u0627\u0644\u0645\u0642\u0627\u064a\u064a\u0633 \u0648\u0627\u0644\u0623\u062e\u0637\u0627\u0621\u060c \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0648\u0627\u0644\u062f\u064a\u0648\u0646 \u0627\u0644\u062a\u0642\u0646\u064a\u0629.</li> </ol>"},{"location":"terms/sdlc/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0628\u062f\u0621 \u0627\u0644\u0643\u0648\u062f \u0642\u0628\u0644 \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0648\u0645\u0639\u0627\u064a\u064a\u0631 \u0627\u0644\u0642\u0628\u0648\u0644.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0623\u0648 \u062c\u0639\u0644\u0647\u0627 \u0647\u0634\u0629 \u063a\u064a\u0631 \u062d\u062a\u0645\u064a\u0629.  </li> <li>\u0646\u0634\u0631 \u064a\u062f\u0648\u064a \u0628\u0644\u0627 \u0623\u062a\u0645\u062a\u0629/\u0628\u0648\u0627\u0628\u0627\u062a (\u064a\u0624\u062f\u064a \u0644\u0623\u062e\u0637\u0627\u0621 \u0645\u062a\u0643\u0631\u0651\u0631\u0629).  </li> <li>\u062e\u0644\u0637 \u0628\u064a\u0626\u0627\u062a \u0648\u0623\u0633\u0631\u0627\u0631 \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0645\u0639 \u0627\u0644\u062a\u0637\u0648\u064a\u0631.  </li> <li>\u063a\u064a\u0627\u0628 \u0642\u064a\u0627\u0633 \u0628\u0639\u062f \u0627\u0644\u0646\u0634\u0631 (\u0644\u0627 Telemetry \u2192 \u0644\u0627 \u062a\u062d\u0633\u064a\u0646 \u0641\u0639\u0644\u064a).</li> </ul>"},{"location":"terms/sdlc/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 SDLC \u0625\u0637\u0627\u0631 \u0645\u0631\u0627\u062d\u0644 \u062a\u0637\u0648\u064a\u0631 \u062d\u062a\u0649 \u0627\u0644\u0635\u064a\u0627\u0646\u0629 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 Waterfall/Agile/DevOps Waterfall \u062a\u0633\u0644\u0633\u0644 \u062e\u0637\u0651\u064a \u0628\u0645\u0631\u0627\u062d\u0644 \u062b\u0627\u0628\u062a\u0629 \u0648\u0627\u0636\u062d \u0627\u0644\u0639\u0642\u0648\u062f\u061b \u0635\u0639\u0628 \u0627\u0644\u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0645\u062a\u0623\u062e\u0631 Agile \u062a\u0643\u0631\u0627\u0631\u0627\u062a \u0642\u0635\u064a\u0631\u0629 \u0648\u062a\u063a\u0630\u064a\u0629 \u0631\u0627\u062c\u0639\u0629 \u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u062a\u0637\u0648\u0651\u0631\u0629\u061b \u0623\u0648\u0644\u0648\u064a\u0629 \u0644\u0644\u0642\u064a\u0645\u0629 DevOps \u0623\u062a\u0645\u062a\u0629 \u0628\u0646\u0627\u0621/\u0627\u062e\u062a\u0628\u0627\u0631/\u0646\u0634\u0631 \u0648\u0645\u0631\u0627\u0642\u0628\u0629 CI/CD\u060c \u0642\u0627\u0628\u0644\u064a\u0629 \u0646\u0634\u0631 \u0645\u062a\u0643\u0631\u0651\u0631 QA \u0636\u0645\u0627\u0646 \u0627\u0644\u062c\u0648\u062f\u0629 \u0639\u0628\u0631 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062c\u0648\u0652\u062f\u0629 \u0628\u0648\u0627\u0628\u0627\u062a \u062c\u0648\u062f\u0629\u060c \u062a\u063a\u0637\u064a\u0629\u060c \u0641\u062d\u0648\u0635 \u0623\u0645\u0627\u0646/\u0623\u062f\u0627\u0621"},{"location":"terms/sdlc/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>SDLC \u064a\u0646\u0638\u0651\u0645 \u0631\u062d\u0644\u0629 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629 \u0645\u0646 \u0627\u0644\u0641\u0643\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u062a\u0634\u063a\u064a\u0644. \u0648\u062b\u0651\u0642 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a\u060c \u0635\u0645\u0651\u0645 \u0628\u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629\u060c \u0627\u0628\u0646\u0650 \u0628\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u0627\u0646\u0634\u0631 \u0628\u0623\u062a\u0645\u062a\u0629\u060c \u0648\u0631\u0627\u0642\u0628\u2014 \u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062c\u0648\u062f\u0629 \u0623\u0639\u0644\u0649 \u0648\u0645\u062e\u0627\u0637\u0631 \u0623\u0642\u0644 \u0648\u0633\u0631\u0639\u0629 \u062a\u062d\u0633\u064a\u0646 \u0645\u0633\u062a\u0645\u0631\u0629.</p>"},{"location":"terms/server-sent-events/","title":"(SSE) Server-Sent Events","text":""},{"location":"terms/server-sent-events/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Server-Sent Events (SSE) \u2014 \u0623\u062d\u062f\u0627\u062b \u064a\u064f\u0631\u0633\u0644\u0647\u0627 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0644\u0639\u0645\u064a\u0644 \u0639\u0628\u0631 \u0627\u062a\u0635\u0627\u0644 HTTP \u0645\u0633\u062a\u0645\u0631\u0651.</p>"},{"location":"terms/server-sent-events/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0642\u0646\u0627\u0629 \u0623\u062d\u0627\u062f\u064a\u0651\u0629 \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u2192 \u0627\u0644\u0639\u0645\u064a\u0644 \u0641\u0648\u0642 HTTP/HTTPS. \u064a\u0628\u0642\u064a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0645\u0641\u062a\u0648\u062d\u064b\u0627 \u0648\u064a\u064f\u0631\u0633\u0644 \u0623\u062d\u062f\u0627\u062b\u064b\u0627 \u0646\u0635\u064a\u0651\u0629 (stream) \u064a\u062f\u0639\u0645 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0648Last-Event-ID.</p>"},{"location":"terms/server-sent-events/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0628\u062f\u0623 \u0627\u0644\u0639\u0645\u064a\u0644 \u0637\u0644\u0628 HTTP \u0625\u0644\u0649 \u0645\u0633\u0627\u0631 SSE.  </li> <li>\u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0631\u062f\u0651 \u0628\u0640 <code>Content-Type: text/event-stream</code> \u0648\u064a\u0628\u0642\u064a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0645\u0641\u062a\u0648\u062d\u064b\u0627.  </li> <li>\u064a\u0631\u0633\u0644 \u0633\u0637\u0648\u0631\u064b\u0627 \u0639\u0644\u0649 \u0634\u0643\u0644:  </li> <li><code>data: ...</code> \u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062d\u062f\u062b  </li> <li><code>event: name</code> \u0644\u0627\u0633\u0645 \u0645\u062e\u0635\u0635 (\u0627\u062e\u062a\u064a\u0627\u0631\u064a)  </li> <li><code>id: 123</code> \u0644\u0645\u0639\u0631\u0651\u0641 \u0627\u0644\u062d\u062f\u062b (\u0627\u062e\u062a\u064a\u0627\u0631\u064a)  </li> <li>\u0633\u0637\u0631 \u0641\u0627\u0631\u063a \u0644\u0625\u0646\u0647\u0627\u0621 \u0627\u0644\u0631\u0633\u0627\u0644\u0629  </li> <li>\u0627\u0644\u0645\u062a\u0635\u0641\u062d \u064a\u0633\u062a\u0642\u0628\u0644 \u0639\u0628\u0631 EventSource \u0648\u064a\u0639\u064a\u062f \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 \u0639\u0646\u062f \u0627\u0644\u0627\u0646\u0642\u0637\u0627\u0639.</li> </ul>"},{"location":"terms/server-sent-events/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u062f\u0644 \u0625\u0631\u0633\u0627\u0644 \u0631\u0633\u0627\u0644\u0629 \u062c\u062f\u064a\u062f\u0629 \u0643\u0644 \u0645\u0631\u0629\u060c \u062a\u0641\u062a\u062d \u062d\u0646\u0641\u064a\u0651\u0629 \u0645\u0627\u0621 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0644\u0639\u0645\u064a\u0644. \u0627\u0644\u0645\u0627\u0621 (\u0627\u0644\u0623\u062d\u062f\u0627\u062b) \u064a\u062a\u062f\u0641\u0651\u0642 \u0628\u0627\u0646\u062a\u0638\u0627\u0645 \u0623\u0648 \u0639\u0646\u062f \u062d\u062f\u0648\u062b \u0634\u064a\u0621 \u062c\u062f\u064a\u062f.</p>"},{"location":"terms/server-sent-events/#c-aspnet-core-minimal-api-sse","title":"\u0645\u062b\u0627\u0644 \u062e\u0627\u062f\u0645 C# (ASP.NET Core Minimal API \u2014 \u0628\u062b SSE)","text":"C#<pre><code>// Program.cs\nusing System.Text.Json;\n\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapGet(\"/sse\", async context =&gt;\n{\n    context.Response.Headers.Append(\"Cache-Control\", \"no-cache\");\n    context.Response.Headers.Append(\"Content-Type\", \"text/event-stream\");\n\n    var i = 0;\n    while (!context.RequestAborted.IsCancellationRequested)\n    {\n        var payload = JsonSerializer.Serialize(new { tick = i++, at = DateTime.UtcNow });\n        await context.Response.WriteAsync($\"id: {i}\\n\");\n        await context.Response.WriteAsync(\"event: tick\\n\");\n        await context.Response.WriteAsync($\"data: {payload}\\n\\n\"); // \u0633\u0637\u0631 \u0641\u0627\u0631\u063a \u064a\u0646\u0647\u064a \u0627\u0644\u062d\u062f\u062b\n        await context.Response.Body.FlushAsync();\n        await Task.Delay(1000, context.RequestAborted);\n    }\n});\n\napp.Run();\n</code></pre>"},{"location":"terms/server-sent-events/#javascript-eventsource","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u064a\u0644 \u0645\u062a\u0635\u0641\u062d (JavaScript \u2014 EventSource)","text":"HTML<pre><code>&lt;script&gt;\n  const es = new EventSource(\"/sse\", { withCredentials: true }); // \u064a\u0633\u0645\u062d \u0628\u0627\u0644\u0643\u0648\u0643\u064a\u0632 \u0625\u0646 \u0644\u0632\u0645\n  es.addEventListener(\"tick\", (e) =&gt; {\n    const data = JSON.parse(e.data);\n    console.log(\"tick:\", data.tick, \"at:\", data.at);\n  });\n  es.onerror = () =&gt; {\n    console.log(\"SSE error \u2014 \u0633\u064a\u0639\u064a\u062f \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627\");\n    // \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u064a\u0639\u064a\u062f \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627\u061b \u064a\u0645\u0643\u0646 \u0636\u0628\u0637 backoff \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0639\u0628\u0631 retry:\n    // \u0645\u062b\u0627\u0644: \u0625\u0631\u0633\u0627\u0644 \"retry: 5000\\n\" \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0636\u0628\u0637 5 \u062b\u0648\u0627\u0646\u064d\n  };\n&lt;/script&gt;\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): - \u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0628\u062b \u062d\u062f\u062b\u064b\u0627 \u0643\u0644 \u062b\u0627\u0646\u064a\u0629 \u0628\u0627\u0633\u0645 <code>tick</code> \u0648\u064a\u062d\u0645\u0644 JSON. - \u0627\u0644\u0643\u0648\u0646\u0633\u0648\u0644 \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u064a\u0637\u0628\u0639 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0645\u0633\u062a\u0644\u0645\u0629 \u0628\u0634\u0643\u0644 \u0644\u062d\u0638\u064a.  </p>"},{"location":"terms/server-sent-events/#sse","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 SSE \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0627\u0636\u0628\u0637 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629: <code>text/event-stream</code>, <code>Cache-Control: no-cache</code>, \u0648Flush \u0628\u0639\u062f \u0643\u0644 \u062d\u062f\u062b.  </li> <li>\u0623\u0631\u0633\u0644 \u062a\u0639\u0644\u064a\u0642\u0627\u062a keep-alive \u062f\u0648\u0631\u064a\u0629 (<code>: ping\\n\\n</code>) \u0644\u0645\u0646\u0639 \u0625\u063a\u0644\u0627\u0642 \u0627\u0644\u0648\u0633\u0637\u0627\u0621.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 <code>id:</code> \u0645\u0639 Last-Event-ID \u0644\u062f\u0639\u0645 \u0627\u0644\u0627\u0633\u062a\u0626\u0646\u0627\u0641 \u0628\u0639\u062f \u0627\u0644\u0627\u0646\u0642\u0637\u0627\u0639.  </li> <li>\u0644\u0644\u0623\u0645\u0627\u0646: HTTPS \u062f\u0627\u0626\u0645\u064b\u0627\u060c \u062a\u062d\u0642\u0651\u0642 \u0645\u0646 Auth (\u0643\u0648\u0643\u064a/Token) \u0648\u0627\u0633\u0645 \u0627\u0644\u0623\u0635\u0644 (Origin) \u0639\u0646\u062f \u0627\u0644\u0644\u0632\u0648\u0645.  </li> <li>\u0648\u0633\u0651\u0639 \u0623\u0641\u0642\u064a\u064b\u0627 \u0639\u0628\u0631 Pub/Sub \u062e\u0644\u0641 \u0627\u0644\u062e\u0648\u0627\u062f\u0645 \u0648Sticky Sessions \u0625\u0630\u0627 \u0627\u062d\u062a\u062c\u062a \u062d\u0627\u0644\u0629 \u0627\u062a\u0635\u0627\u0644.  </li> <li>\u0631\u0627\u0642\u0628: \u0639\u062f\u062f \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a\u060c \u0645\u0639\u062f\u0644 \u0627\u0644\u0623\u062d\u062f\u0627\u062b\u060c \u0632\u0645\u0646 \u0627\u0644\u062a\u0623\u062e\u064a\u0631\u060c \u0648\u0625\u062e\u0641\u0627\u0642\u0627\u062a \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644.</li> </ul>"},{"location":"terms/server-sent-events/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0625\u0631\u0633\u0627\u0644 JSON \u062e\u0627\u0645 \u0628\u062f\u0648\u0646 \u0635\u064a\u063a\u0629 SSE \u0627\u0644\u0635\u062d\u064a\u062d\u0629 (\u0646\u0633\u064a\u0627\u0646 <code>data:</code> \u0648\u0627\u0644\u0633\u0637\u0631 \u0627\u0644\u0641\u0627\u0631\u063a).  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 CORS \u0645\u064f\u0639\u0637\u0651\u0644 \u0623\u0648 \u0646\u0633\u064a\u0627\u0646 \u062a\u0641\u0639\u064a\u0644 Credentials \u0625\u0630\u0627 \u0643\u0627\u0646\u062a Auth \u0628\u0627\u0644\u0643\u0648\u0643\u064a\u0632.  </li> <li>\u0628\u062b \u0631\u0633\u0627\u0626\u0644 \u0636\u062e\u0645\u0629 \u062f\u0648\u0646 \u062a\u0642\u0633\u064a\u0645 \u0645\u0646\u0637\u0642\u064a \u0623\u0648 \u062f\u0648\u0646 keep-alive \u2192 \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a \u062a\u064f\u063a\u0644\u0642 \u0639\u0628\u0631 Proxies.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 SSE \u062d\u064a\u062b \u064a\u062a\u0637\u0644\u0628 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u062a\u062c\u0627\u0647\u064a\u0646 (\u062e\u0627\u062f\u0645\u2194\u0639\u0645\u064a\u0644) \u2014 \u062d\u064a\u0646\u0647\u0627 WebSocket \u0623\u0646\u0633\u0628.</li> </ul>"},{"location":"terms/server-sent-events/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 HTTP \u0637\u0644\u0628/\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0645\u062a\u0642\u0637\u0651\u0639\u0629 \u0628\u0633\u064a\u0637 \u0648\u0645\u062a\u0632\u0627\u0645\u0646\u061b \u0644\u0627 \u0628\u062b \u0645\u0633\u062a\u0645\u0631 WebSocket \u0642\u0646\u0627\u0629 \u062b\u0646\u0627\u0626\u064a\u0629 \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u062f\u0627\u0626\u0645\u0629 \u0641\u0648\u0631\u064a\u0629 \u0648\u0627\u062a\u062c\u0627\u0647\u0627\u0646\u061b \u0623\u0639\u0642\u062f \u0642\u0644\u064a\u0644\u064b\u0627 \u0645\u0646 SSE Server-Sent Events \u0628\u062b \u0623\u062d\u0627\u062f\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0644\u0639\u0645\u064a\u0644 \u0646\u0635\u064a \u0641\u0642\u0637\u061b \u0627\u062a\u0635\u0627\u0644 HTTP \u0645\u0633\u062a\u0645\u0631\u061b \u0625\u0639\u0627\u062f\u0629 \u0627\u062a\u0635\u0627\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u0629"},{"location":"terms/server-sent-events/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>SSE \u064a\u0645\u0646\u062d\u0643 \u0628\u062b\u064b\u0627 \u0644\u062d\u0638\u064a\u064b\u0627 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0625\u0644\u0649 \u0627\u0644\u0639\u0645\u064a\u0644 \u0641\u0648\u0642 HTTP \u0628\u0633\u0647\u0648\u0644\u0629 \u0648\u0628\u062f\u0648\u0646 \u062a\u0639\u0642\u064a\u062f WebSocket. \u0625\u0646 \u0623\u0631\u062f\u062a \u0627\u062a\u062c\u0627\u0647\u064a\u0646 \u0627\u0633\u062a\u062e\u062f\u0645 WebSocket\u060c \u0648\u0625\u0646 \u0623\u0631\u062f\u062a \u0628\u062b\u064b\u0627 \u0628\u0633\u064a\u0637\u064b\u0627 \u0641\u0640 SSE \u062e\u064a\u0627\u0631 \u0639\u0645\u0644\u064a \u0648\u0641\u0639\u0651\u0627\u0644.</p>"},{"location":"terms/shared-environment/","title":"Shared Environment","text":""},{"location":"terms/shared-environment/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Shared Environment \u2014 \u0628\u064a\u0626\u0629 \u0645\u064f\u0634\u062a\u0631\u0643\u0629 (\u062a\u062a\u0642\u0627\u0633\u0645\u0647\u0627 \u0639\u062f\u0651\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a/\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646/\u062e\u062f\u0645\u0627\u062a).</p>"},{"location":"terms/shared-environment/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0634\u063a\u064a\u0644 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u062f\u0627\u062e\u0644 \u0646\u0641\u0633 \u0627\u0644\u0646\u0638\u0627\u0645/\u0627\u0644\u0645\u0648\u0627\u0631\u062f: \u0645\u0644\u0641\u0627\u062a\u060c \u0634\u0628\u0643\u0629\u060c \u0630\u0627\u0643\u0631\u0629\u060c \u062a\u0628\u0639\u064a\u0627\u062a\u060c \u0625\u0639\u062f\u0627\u062f\u0627\u062a. \u0645\u0631\u064a\u062d\u0629 \u0648\u0631\u062e\u064a\u0635\u0629\u060c \u0644\u0643\u0646\u0647\u0627 \u062a\u0632\u064a\u062f \u0627\u0644\u062a\u0623\u062b\u064a\u0631 \u0627\u0644\u0645\u062a\u0628\u0627\u062f\u0644 \u0648\u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u0639\u0627\u0631\u0636 \u0648\u0627\u0644\u062a\u0633\u0631\u064a\u0628.</p>"},{"location":"terms/shared-environment/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0628\u0639\u064a\u0627\u062a \u0645\u0634\u062a\u0631\u0643\u0629: \u0646\u0633\u062e\u0629 \u062d\u0632\u0645\u0629 \u0648\u0627\u062d\u062f\u0629 \u0642\u062f \u062a\u0643\u0633\u0631 \u062a\u0637\u0628\u064a\u0642\u064b\u0627 \u0622\u062e\u0631.  </li> <li>\u062d\u0627\u0644\u0629 \u0645\u0634\u062a\u0631\u0643\u0629: \u0645\u0644\u0641/\u0645\u062c\u0644\u0651\u062f/\u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u062d\u062f\u0629 \u0644\u0644\u062c\u0645\u064a\u0639.  </li> <li>\u062a\u0646\u0627\u0641\u0633 \u0639\u0644\u0649 \u0627\u0644\u0645\u0648\u0627\u0631\u062f: CPU/RAM/\u0645\u0642\u0627\u0628\u0633 \u0627\u0644\u0634\u0628\u0643\u0629.  </li> <li>\u0623\u0645\u0627\u0646 \u0623\u0636\u0639\u0641: \u0623\u064a \u062e\u0644\u0644 \u0642\u062f \u064a\u0624\u062b\u0631 \u0641\u064a \u0628\u0642\u064a\u0629 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a.</li> </ul>"},{"location":"terms/shared-environment/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0633\u0643\u0627\u0646 \u0634\u0642\u0651\u0629 \u0648\u0627\u062d\u062f\u0629 \u064a\u062a\u0634\u0627\u0631\u0643\u0648\u0646 \u0627\u0644\u0645\u0637\u0628\u062e: \u0644\u0648 \u0623\u062d\u062f\u0647\u0645 \u0641\u0648\u0636\u0648\u064a\u060c \u0627\u0644\u0643\u0644 \u064a\u062a\u0623\u062b\u0631. \u0627\u0644\u062d\u0644\u061f \u0642\u0648\u0627\u0639\u062f \u0648\u0627\u0636\u062d\u0629\u060c \u0623\u0631\u0641\u0641 \u0645\u064f\u0633\u0645\u0651\u0627\u0629\u060c \u0648\u0623\u0642\u0641\u0627\u0644 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.</p>"},{"location":"terms/shared-environment/#c-mutex","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062a\u0646\u0633\u064a\u0642 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0645\u0644\u0641 \u0645\u0634\u062a\u0631\u0643 \u0639\u0628\u0631 Mutex)","text":"<p>C#<pre><code>using System;\nusing System.IO;\nusing System.Threading;\n\nclass Program\n{\n    static void Main()\n    {\n        // \u0645\u0633\u0627\u0631 \u0645\u0634\u062a\u0631\u0643 \u0639\u0644\u0649 \u0627\u0644\u062c\u0647\u0627\u0632 (\u0645\u062b\u0627\u0644)\n        string sharedDir = Path.Combine(\n            Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData),\n            \"MyCompany\", \"SharedEnvDemo\");\n        Directory.CreateDirectory(sharedDir);\n\n        string counterFile = Path.Combine(sharedDir, \"counter.txt\");\n\n        // Mutex \u0646\u0638\u0627\u0645\u064a \u0628\u0627\u0633\u0645 \u0639\u0627\u0644\u0645\u064a \u0644\u0645\u0646\u0639 \u0627\u0644\u0633\u0628\u0627\u0642 \u0628\u064a\u0646 \u0639\u0645\u0644\u064a\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629\n        using var mutex = new Mutex(false, \"Global\\\\SharedEnvDemo-Counter\");\n        mutex.WaitOne();\n        try\n        {\n            int n = File.Exists(counterFile) ? int.Parse(File.ReadAllText(counterFile)) : 0;\n            n++;\n            File.WriteAllText(counterFile, n.ToString());\n            Console.WriteLine($\"Counter = {n}\");\n        }\n        finally\n        {\n            mutex.ReleaseMutex();\n        }\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: - \u0643\u0644 \u062a\u0634\u063a\u064a\u0644 \u064a\u0632\u064a\u062f \u0627\u0644\u0639\u062f\u0627\u062f \u0628\u0623\u0645\u0627\u0646 \u062d\u062a\u0649 \u0644\u0648 \u0643\u0627\u0646\u062a \u0647\u0646\u0627\u0643 \u0639\u0645\u0644\u064a\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629. - \u0628\u062f\u0648\u0646 \u0627\u0644\u0640 Mutex \u0642\u062f \u062a\u0631\u0649 \u0642\u0631\u0627\u0621\u0627\u062a/\u0643\u062a\u0627\u0628\u0627\u062a \u0645\u062a\u0639\u0627\u0631\u0636\u0629 (\u0633\u0628\u0627\u0642 Race Condition).</p>"},{"location":"terms/shared-environment/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0628\u064a\u0626\u0629 \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0629","text":"<ul> <li>\u0623\u0633\u0645\u0650 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0648\u062e\u0635\u0651\u0635 \u0645\u0633\u0627\u0631\u0627\u062a/\u062c\u062f\u0627\u0648\u0644/\u0645\u0648\u0627\u0636\u064a\u0639 \u0631\u0633\u0627\u0626\u0644 \u0644\u0643\u0644 \u062a\u0637\u0628\u064a\u0642.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0642\u0641\u0644\u064b\u0627/Mutex \u0623\u0648 \u0642\u0641\u0644 \u0645\u0644\u0641\u0627\u062a \u0623\u0648 \u0645\u0639\u0627\u0645\u0644\u0627\u062a DB \u0644\u062a\u062c\u0646\u0628 \u0627\u0644\u0633\u0628\u0627\u0642\u0627\u062a.  </li> <li>\u062b\u0628\u0651\u062a \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a (lock files) \u0648\u062c\u0631\u0651\u0628 \u0641\u064a \u0628\u064a\u0626\u0629 \u0645\u0631\u062d\u0644\u064a\u0629 \u0642\u0628\u0644 \u0627\u0644\u0625\u0646\u062a\u0627\u062c.  </li> <li>\u0637\u0628\u0651\u0642 Least Privilege \u0639\u0644\u0649 \u0627\u0644\u0645\u0644\u0641\u0627\u062a/\u0627\u0644\u062e\u062f\u0645\u0627\u062a.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u062d\u0635\u0635 (CPU/RAM/IO) \u0648\u0633\u0650\u062c\u0650\u0644\u0651\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.  </li> <li>\u0646\u0638\u0651\u0641 \u0628\u0642\u0627\u064a\u0627 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0627\u0644\u0645\u0624\u0642\u062a\u0629 \u0648\u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u0625\u0646\u0647\u0627\u0621.</li> </ul>"},{"location":"terms/shared-environment/#_6","title":"\u0645\u062a\u0649 \u0623\u0633\u062a\u062e\u062f\u0645\u0647\u061f \u0648\u0645\u062a\u0649 \u0623\u062a\u062c\u0646\u0651\u0628\u0647\u061f","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0639\u0646\u062f\u0645\u0627 \u064a\u0643\u0648\u0646 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0633\u0631\u064a\u0639/\u0627\u0644\u062a\u0643\u0644\u0641\u0629 \u0627\u0644\u0645\u0646\u062e\u0641\u0636\u0629 \u0623\u0647\u0645\u0651 \u0645\u0646 \u0627\u0644\u0639\u0632\u0644 (\u0645\u062e\u062a\u0628\u0631\u0627\u062a \u062a\u0637\u0648\u064a\u0631/\u0633\u064a\u0631\u0641\u0631 \u062a\u062c\u0645\u064a\u0639\u064a).  </li> <li>\u062a\u062c\u0646\u0651\u0628\u0647 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062d\u0633\u0651\u0627\u0633\u0629 \u0623\u0645\u0646\u064a\u064b\u0627/\u0623\u062f\u0627\u0626\u064a\u064b\u0627\u061b \u0627\u062e\u062a\u0631 Isolated \u0623\u0648 Sandboxed.</li> </ul>"},{"location":"terms/shared-environment/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Isolated \u0641\u0635\u0644 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0644\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u062a\u062f\u0627\u062e\u0644 \u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629 (Process/Container/Network/Test) Shared Environment \u062a\u0634\u063a\u064a\u0644 \u0633\u0631\u064a\u0639 \u0648\u062a\u0643\u0644\u0641\u0629 \u0623\u0642\u0644 \u0628\u0645\u0634\u0627\u0631\u0643\u0629 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u062e\u0637\u0631 \u062a\u0639\u0627\u0631\u0636/\u062a\u0633\u0631\u064a\u0628 \u0623\u0639\u0644\u0649\u061b \u064a\u062d\u062a\u0627\u062c \u0642\u0648\u0627\u0639\u062f \u0648\u0636\u0628\u0637 \u0648\u0635\u0648\u0644 Sandboxed \u062a\u0634\u063a\u064a\u0644 \u0636\u0645\u0646 \u0642\u064a\u0648\u062f \u0623\u0645\u0646\u064a\u0629 \u0645\u064f\u0646\u0641\u064e\u0651\u0630\u0629 \u0633\u064a\u0627\u0633\u0627\u062a \u062a\u062d\u062f\u0651 \u0646\u062f\u0627\u0621\u0627\u062a \u0627\u0644\u0646\u0638\u0627\u0645/\u0627\u0644\u0645\u0644\u0641/\u0627\u0644\u0634\u0628\u0643\u0629 \u0628\u0635\u0631\u0627\u0645\u0629"},{"location":"terms/shared-environment/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Shared Environment \u064a\u0633\u0631\u0651\u0639 \u0627\u0644\u0628\u062f\u0621 \u0648\u064a\u0648\u0641\u0651\u0631 \u0627\u0644\u0645\u0648\u0627\u0631\u062f\u060c \u0644\u0643\u0646\u0647 \u064a\u0636\u064a\u0641 \u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u062f\u0627\u062e\u0644. \u0636\u0639 \u0642\u0648\u0627\u0639\u062f \u0645\u0634\u062a\u0631\u0643\u0629\u060c \u0648\u0641\u0651\u0631 \u0642\u0641\u0644\u064b\u0627/\u062a\u0633\u0645\u064a\u0627\u062a \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0641\u0643\u0651\u0631 \u0628\u0627\u0644\u0639\u0632\u0644 \u0623\u0648 \u0627\u0644\u0635\u0646\u0652\u062f\u064e\u0642\u0629 \u0639\u0646\u062f\u0645\u0627 \u064a\u0631\u062a\u0641\u0639 \u0627\u0644\u062e\u0637\u0631.</p>"},{"location":"terms/soap/","title":"SOAP \u2014 Simple Object Access Protocol","text":""},{"location":"terms/soap/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>SOAP \u2014 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0627\u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u0628\u0633\u064a\u0637 \u0644\u0644\u0643\u0627\u0626\u0646\u0627\u062a (\u062a\u0628\u0627\u062f\u0644 \u0631\u0633\u0627\u0626\u0644 XML \u0648\u0641\u0642 \u063a\u0644\u0627\u0641 \u0645\u0639\u064a\u0627\u0631\u064a).</p>"},{"location":"terms/soap/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0631\u0633\u0627\u0626\u0644 \u064a\u0639\u062a\u0645\u062f XML \u0645\u0639 \u063a\u0644\u0627\u0641 (Envelope) \u064a\u062d\u0648\u064a Header \u0627\u062e\u062a\u064a\u0627\u0631\u064a\u064b\u0627 \u0648Body \u0625\u062c\u0628\u0627\u0631\u064a\u064b\u0627. \u064a\u0639\u062a\u0645\u062f \u063a\u0627\u0644\u0628\u064b\u0627 \u0639\u0628\u0631 HTTP/HTTPS\u060c \u0648\u064a\u0648\u0635\u0641 \u0628\u0627\u0644\u0639\u0642\u062f \u0639\u0628\u0631 WSDL\u060c \u0648\u064a\u062f\u0639\u0645\u0647 \u0645\u0639\u064a\u0627\u0631 WS-* (\u0623\u0645\u0646/\u0639\u0646\u0648\u0646\u0629/\u0645\u0648\u062b\u0648\u0642\u064a\u0629).</p>"},{"location":"terms/soap/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0631\u0633\u0627\u0644\u0629 = Envelope \u2192 Header \u2192 Body/Fault.  </li> <li>SOAP 1.1: <code>Content-Type: text/xml</code> + \u0631\u0623\u0633 SOAPAction.  </li> <li>SOAP 1.2: <code>Content-Type: application/soap+xml; action=\"...\"</code>.  </li> <li>\u0623\u0633\u0627\u0644\u064a\u0628 \u0627\u0644\u0623\u0646\u0645\u0627\u0637: RPC \u0623\u0648 Document/Literal (\u0627\u0644\u0645\u0648\u0635\u0649 \u0628\u0647 \u0644\u0644\u062a\u0648\u0627\u0641\u0642).  </li> <li>WSDL \u064a\u062d\u062f\u062f \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a/\u0623\u0646\u0648\u0627\u0639 XML \u0644\u062a\u0648\u0644\u064a\u062f \u0639\u0645\u064a\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 (Proxies).</li> </ul>"},{"location":"terms/soap/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0637\u0631\u062f \u0628\u0631\u064a\u062f\u064a \u0631\u0633\u0645\u064a: \u0638\u0631\u0641 (Envelope)\u060c \u0639\u0644\u064a\u0647 \u0628\u064a\u0627\u0646\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629 (Header: \u062a\u0648\u0642\u064a\u0639/\u0639\u0646\u0648\u0627\u0646)\u060c \u0648\u062f\u0627\u062e\u0644 \u0627\u0644\u0638\u0631\u0641 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 (Body) \u0623\u0648 \u0648\u0631\u0642\u0629 \u062e\u0637\u0623 (Fault).</p>"},{"location":"terms/soap/#c-soap-httpclient","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u062e\u062f\u0645\u0629 SOAP \u064a\u062f\u0648\u064a\u064b\u0627 \u0639\u0628\u0631 <code>HttpClient</code>","text":"<p>\u0646\u0631\u0633\u0644 \u0637\u0644\u0628\u064b\u0627 \u0644\u0639\u0645\u0644\u064a\u0629 Add(a,b) \u0625\u0644\u0649 \u0646\u0642\u0637\u0629 <code>/soap</code> (\u0623\u0633\u0644\u0648\u0628 1.1). \u0639\u062f\u0651\u0644 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646/\u0627\u0644\u0623\u0633\u0645\u0627\u0621 \u062d\u0633\u0628 \u062e\u062f\u0645\u062a\u0643 \u0627\u0644\u062d\u0642\u064a\u0642\u064a\u0629 (Namespace/Action/Endpoint).</p> C#<pre><code>// .NET 8/9\nusing System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Xml.Linq;\n\nclass SoapDemo\n{\n    static async System.Threading.Tasks.Task Main()\n    {\n        var endpoint = \"https://example.com/soap\";          // \u2190 \u063a\u064a\u0651\u0631\u0647\n        var ns = \"http://tempuri.org/\";                     // \u2190 \u063a\u064a\u0651\u0631\u0647 \u062d\u0633\u0628 WSDL\n        var action = \"http://tempuri.org/ICalc/Add\";        // \u2190 SOAPAction\n\n        // 1) \u0628\u0646\u0627\u0621 \u0627\u0644\u0645\u063a\u0644\u0651\u0641 (Envelope) \u2014 SOAP 1.1\n        var soapEnv = $@\"&lt;?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?&gt;\n&lt;soap:Envelope xmlns:xsi=\"\"http://www.w3.org/2001/XMLSchema-instance\"\"\n               xmlns:xsd=\"\"http://www.w3.org/2001/XMLSchema\"\"\n               xmlns:soap=\"\"http://schemas.xmlsoap.org/soap/envelope/\"\"&gt;\n  &lt;soap:Header/&gt;\n  &lt;soap:Body&gt;\n    &lt;Add xmlns=\"\"{ns}\"\"&gt;\n      &lt;a&gt;7&lt;/a&gt;\n      &lt;b&gt;5&lt;/b&gt;\n    &lt;/Add&gt;\n  &lt;/soap:Body&gt;\n&lt;/soap:Envelope&gt;\";\n\n        using var http = new HttpClient();\n        var content = new StringContent(soapEnv, Encoding.UTF8, \"text/xml\");\n        content.Headers.Add(\"SOAPAction\", $\"\\\"{action}\\\"\"); // \u0645\u0647\u0645 \u0641\u064a 1.1\n\n        // 2) \u0625\u0631\u0633\u0627\u0644 \u0648\u0627\u0633\u062a\u0642\u0628\u0627\u0644\n        var resp = await http.PostAsync(endpoint, content);\n        var xml = await resp.Content.ReadAsStringAsync();\n\n        // 3) \u0645\u0639\u0627\u0644\u062c\u0629 Fault \u0623\u0648 \u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0627\u0644\u0646\u062a\u064a\u062c\u0629\n        var doc = XDocument.Parse(xml);\n        XNamespace soap = \"http://schemas.xmlsoap.org/soap/envelope/\";\n        if (doc.Root?.Element(soap + \"Body\")?.Element(soap + \"Fault\") is XElement fault)\n        {\n            var code = fault.Element(\"faultcode\")?.Value;\n            var msg  = fault.Element(\"faultstring\")?.Value;\n            throw new Exception($\"SOAP Fault: {code} - {msg}\");\n        }\n\n        XNamespace svc = ns;\n        var result = doc.Root?\n            .Element(soap + \"Body\")?\n            .Element(svc + \"AddResponse\")?\n            .Element(svc + \"AddResult\")?.Value;\n\n        Console.WriteLine($\"AddResult = {result}\");\n    }\n}\n</code></pre> <p>\u0628\u062f\u064a\u0644\u064b\u0627: \u0627\u0633\u062a\u062e\u062f\u0645 WSDL \u0644\u062a\u0648\u0644\u064a\u062f \u0639\u0645\u064a\u0644 \u0642\u0648\u064a (Proxy) \u0628\u0623\u062f\u0627\u0629 \u062a\u0648\u0644\u064a\u062f (\u0645\u062b\u0644 <code>dotnet-svcutil</code>) \u0628\u062f\u0644 \u0628\u0646\u0627\u0621 XML \u064a\u062f\u0648\u064a\u064b\u0627.</p>"},{"location":"terms/soap/#soap","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643/\u0625\u0646\u0634\u0627\u0621 SOAP","text":"<ol> <li>\u0627\u0642\u0631\u0623 WSDL: \u062d\u062f\u0651\u062f Binding/Port/Operations \u0648Namespaces \u0648SOAPAction.  </li> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0625\u0635\u062f\u0627\u0631: 1.1 (\u0645\u0639 SOAPAction) \u0623\u0648 1.2 (<code>application/soap+xml</code>).  </li> <li>\u0648\u0644\u0651\u062f \u0639\u0645\u064a\u0644\u064b\u0627 \u0645\u0646 WSDL (\u0623\u0641\u0636\u0644\u064a\u0629) \u0623\u0648 \u0627\u0628\u0646\u0650 Envelope \u064a\u062f\u0648\u064a\u064b\u0627 \u0643\u0645\u0627 \u0628\u0627\u0644\u0645\u062b\u0627\u0644.  </li> <li>\u0623\u0645\u0646: \u0625\u0646 \u0637\u064f\u0644\u0628\u060c \u0623\u0636\u0641 WS-Security (UsernameToken/\u062a\u0648\u0642\u064a\u0639/\u062a\u0634\u0641\u064a\u0631) \u0636\u0645\u0646 Header\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 TLS.  </li> <li>\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 Fault: \u0627\u0641\u062d\u0635 <code>Fault</code> \u062f\u0627\u0626\u0645\u064b\u0627 \u0648\u0633\u062c\u0651\u0644 Reason/Detail.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u062a\u0648\u0627\u0641\u0642: \u0627\u0644\u0623\u0633\u0645\u0627\u0621 \u0648\u0645\u0633\u0627\u062d\u0627\u062a \u0627\u0644\u0623\u0633\u0645\u0627\u0621 Namespace \u062d\u0633\u0651\u0627\u0633\u0629\u061b \u0631\u0627\u0642\u0628 \u0627\u0644\u0640 XML Schema \u0628\u0639\u0646\u0627\u064a\u0629.</li> </ol>"},{"location":"terms/soap/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062e\u0637\u0623 \u0641\u064a Namespace \u0623\u0648 \u0627\u0644\u0639\u0646\u0635\u0631 \u0627\u0644\u062c\u0630\u0631\u064a (\u064a\u0643\u0633\u0631 \u0627\u0644\u062a\u0641\u0627\u0633\u064a\u0631).  </li> <li>\u0646\u0633\u064a\u0627\u0646 SOAPAction \u0641\u064a 1.1 \u0623\u0648 \u0648\u0636\u0639\u0647 \u0641\u064a 1.2 \u0628\u0637\u0631\u064a\u0642\u0629 \u062e\u0627\u0637\u0626\u0629.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0639\u0646\u0635\u0631 Fault \u0648\u0627\u0644\u0627\u0643\u062a\u0641\u0627\u0621 \u0628\u0631\u0645\u0632 HTTP.  </li> <li>\u062a\u0636\u0645\u064a\u0646 \u0643\u0644\u0645\u0627\u062a \u0645\u0631\u0648\u0631 \u062e\u0627\u0645 \u0641\u064a Header \u0628\u062f\u0644\u0627\u064b \u0645\u0646 WS-Security \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u0623\u0648 TLS.  </li> <li>\u062e\u0644\u0637 RPC \u0648Document/Literal \u0641\u064a \u0627\u0644\u0639\u0642\u062f/\u0627\u0644\u0631\u0633\u0627\u0644\u0629.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0632\u0645\u0646 \u0646\u0638\u0627\u0645 \u063a\u064a\u0631 \u0645\u062a\u0632\u0627\u0645\u0646 \u0639\u0646\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Timestamps \u0641\u064a WS-Security (\u0627\u0646\u062d\u0631\u0627\u0641 \u0627\u0644\u0633\u0627\u0639\u0629).</li> </ul>"},{"location":"terms/soap/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 SOAP \u062a\u0628\u0627\u062f\u0644 \u0631\u0633\u0627\u0626\u0644 XML \u0628\u0639\u0642\u062f WSDL \u0648\u0645\u0639\u0627\u064a\u064a\u0631 WS-* \u064a\u062f\u0639\u0645 \u0623\u0645\u0646/\u0645\u0648\u062b\u0648\u0642\u064a\u0629/\u0645\u0639\u0627\u0645\u0644\u0627\u062a\u061b \u0623\u062b\u0642\u0644 \u0645\u0646 REST REST \u0648\u0627\u062c\u0647\u0627\u062a \u0645\u0648\u0627\u0631\u062f \u0639\u0628\u0631 HTTP JSON \u0634\u0627\u0626\u0639\u061b \u0628\u0633\u0627\u0637\u0629/\u0623\u062f\u0627\u0621\u061b \u0628\u0644\u0627 \u0639\u0642\u062f \u0635\u0627\u0631\u0645 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 gRPC \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0625\u062c\u0631\u0627\u0621 \u062b\u0646\u0627\u0626\u064a \u0639\u0628\u0631 HTTP/2 \u0628\u0631\u0648\u062a\u0648\u0628\u064e\u0641\u060c \u0639\u0627\u0644\u064a \u0627\u0644\u0623\u062f\u0627\u0621\u060c Streaming\u060c \u064a\u062d\u062a\u0627\u062c \u062a\u0648\u0644\u064a\u062f \u0643\u0648\u062f WSDL \u0648\u0635\u0641 \u0639\u0645\u0644\u064a\u0627\u062a/\u0623\u0646\u0648\u0627\u0639 SOAP \u064a\u0648\u0644\u0651\u062f Clients/Servers \u0645\u062a\u0648\u0627\u0641\u0642\u0629 WS-Security \u062a\u0648\u0642\u064a\u0639/\u062a\u0634\u0641\u064a\u0631/Token \u064a\u0636\u064a\u0641 Headers \u0623\u0645\u0646\u064a\u0629 \u0644\u0644\u0631\u0633\u0627\u0626\u0644"},{"location":"terms/soap/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>SOAP = \u0631\u0633\u0627\u0626\u0644 XML \u0645\u0639\u064a\u0627\u0631\u064a\u0629 \u0628\u063a\u0644\u0627\u0641 \u0645\u062d\u062f\u0651\u062f\u060c \u062a\u064f\u0628\u0646\u0649 \u0639\u0644\u0649 WSDL \u0648\u062a\u062a\u0643\u0627\u0645\u0644 \u0645\u0639 WS-* \u0644\u0644\u0623\u0645\u0646 \u0648\u0627\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629. \u0639\u0646\u062f \u0627\u0644\u0627\u0633\u062a\u0647\u0644\u0627\u0643: \u0627\u062d\u062a\u0631\u0645 Namespaces/Actions\u060c \u062a\u0639\u0627\u0645\u0644 \u0645\u0639 Fault\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 TLS/WS-Security\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0643\u0627\u0645\u0644 \u0635\u0627\u0631\u0645 \u0627\u0644\u0639\u0642\u062f \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0623\u0646\u0638\u0645\u0629 \u0627\u0644\u0645\u0624\u0633\u0633\u064a\u0629 \u0648\u0627\u0644\u0644\u0648\u0627\u0626\u062d \u0627\u0644\u0635\u0627\u0631\u0645\u0629.</p>"},{"location":"terms/spa/","title":"SPA \u2014 Single-Page Application","text":""},{"location":"terms/spa/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Single-Page Application (SPA) \u2014 \u062a\u0637\u0628\u064a\u0642 \u0635\u0641\u062d\u0629 \u0648\u0627\u062d\u062f\u0629.</p>"},{"location":"terms/spa/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0648\u0627\u062c\u0647\u0629 \u0648\u064a\u0628 \u062a\u064f\u062d\u0645\u0651\u0650\u0644 \u0635\u0641\u062d\u0629 HTML \u0648\u0627\u062d\u062f\u0629 \u062b\u0645 \u062a\u064f\u062d\u062f\u0651\u0650\u062b \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u064b\u0627 \u0639\u0628\u0631 JavaScript. \u0627\u0644\u062a\u0646\u0642\u0651\u0644 \u0639\u0645\u064a\u0644\u0640\u064a (Routing \u0639\u0644\u0649 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d). \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0646 APIs (\u0639\u0627\u062f\u0629 REST/gRPC/SSE).</p>"},{"location":"terms/spa/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0623\u0648\u0644 \u0632\u064a\u0627\u0631\u0629: \u062a\u062d\u0645\u064a\u0644 HTML + JS/CSS.  </li> <li>\u0628\u0639\u062f \u0630\u0644\u0643: \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0634\u0627\u0634\u0627\u062a \u0628\u062f\u0648\u0646 \u0625\u0639\u0627\u062f\u0629 \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0635\u0641\u062d\u0629.  </li> <li>\u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u064f\u062c\u0644\u0628 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0639\u0628\u0631 AJAX/Fetch \u0623\u0648 WebSocket/SSE.  </li> <li>\u0645\u0634\u0627\u0643\u0644 \u0634\u0627\u0626\u0639\u0629: SEO \u0644\u0644\u0623\u0648\u0644\u064a\u0629\u060c \u062d\u062c\u0645 \u0627\u0644\u0628\u0627\u0646\u062f\u0644\u060c \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u062d\u0627\u0644\u0629.</li> </ul>"},{"location":"terms/spa/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u0637\u0628\u064a\u0642 \u0647\u0627\u062a\u0641 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d: \u0646\u0641\u0633 \u0627\u0644\u0634\u0627\u0634\u0629 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629\u060c \u0648\u0645\u0643\u0648\u0651\u0646\u0627\u062a \u062a\u062a\u0628\u062f\u0651\u0644 \u0645\u062d\u0644\u064a\u064b\u0627\u060c \u0648\u062a\u062c\u0644\u0628 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645.</p>"},{"location":"terms/spa/#c-spa-aspnet-core-fallback-api","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0627\u0633\u062a\u0636\u0627\u0641\u0629 SPA \u0639\u0628\u0631 ASP.NET Core + Fallback \u0644\u0644\u0645\u0633\u0627\u0631\u0627\u062a + API","text":"C#<pre><code>// Program.cs (.NET 8/9)\n// \u0633\u064a\u0646\u0627\u0631\u064a\u0648: \u062a\u0628\u0646\u064a \u0627\u0644\u0648\u0627\u062c\u0647\u0629 (React/Angular/Vite) \u0644\u062a\u062e\u0631\u062c \u0645\u0644\u0641\u0627\u062a \u0625\u0644\u0649 wwwroot/\n// ASP.NET Core \u064a\u0642\u062f\u0651\u0645 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0627\u0644\u062b\u0627\u0628\u062a\u0629 + API\u060c \u0645\u0639 Fallback \u0644\u0623\u064a \u0645\u0633\u0627\u0631 \u063a\u064a\u0631 API \u0625\u0644\u0649 index.html\nusing Microsoft.AspNetCore.Mvc;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// CORS \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 (\u0627\u0633\u0645\u062d \u0644\u062a\u0637\u0628\u064a\u0642 \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0625\u0646 \u0643\u0627\u0646 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u0645\u0646\u0641\u0630 \u0622\u062e\u0631)\nbuilder.Services.AddCors(o =&gt; o.AddPolicy(\"dev\", p =&gt; p\n    .AllowAnyHeader().AllowAnyMethod().WithOrigins(\"http://localhost:5173\",\"http://localhost:3000\")));\n\nvar app = builder.Build();\n\napp.UseHttpsRedirection();\napp.UseCors(\"dev\");\n\n// 1) \u0645\u0644\u0641\u0627\u062a \u0627\u0644\u0648\u0627\u062c\u0647\u0629 (\u0628\u0639\u062f build \u0625\u0644\u0649 wwwroot)\napp.UseDefaultFiles();   // \u064a\u0628\u062d\u062b \u0639\u0646 index.html\napp.UseStaticFiles();    // \u064a\u0642\u062f\u0651\u0645 /assets/* \u0645\u0639 Cache-Control\n\n// 2) API \u0635\u063a\u064a\u0631\u0629 \u062a\u064f\u062e\u062f\u0645 \u062a\u062d\u062a /api/*\napp.MapGet(\"/api/products\", () =&gt;\n{\n    var items = new[] {\n        new { id=1, name=\"Keyboard\", price=120m },\n        new { id=2, name=\"Mouse\",    price=60m  }\n    };\n    return Results.Ok(items);\n})\n.WithName(\"GetProducts\")\n.Produces(StatusCodes.Status200OK);\n\n// 3) **SPA Fallback** \u2014 \u0623\u064a \u0645\u0633\u0627\u0631 \u0644\u0627 \u064a\u0628\u062f\u0623 \u0628\u0640 /api \u064a\u064f\u0631\u062c\u064e\u0639 \u0644\u0647 index.html\n// \u0647\u0630\u0627 \u064a\u0645\u0643\u0651\u0646 \u0627\u0644\u0640 Client-Side Routing \u0645\u062b\u0644 /dashboard \u0623\u0648 /product/42\napp.MapFallbackToFile(\"index.html\");\n\napp.Run();\n\n/*\n\u0628\u0646\u064a\u0629 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 (\u0645\u0644\u062e\u0651\u0635):\n- wwwroot/\n   \u251c\u2500 index.html          \u2190 \u0646\u0642\u0637\u0629 \u0627\u0644\u062f\u062e\u0648\u0644 \u0644\u0644\u0640 SPA\n   \u2514\u2500 assets/...          \u2190 Bundles/CSS/Images (\u0645\u0639 \u0647\u0627\u0634 \u0644\u0644\u0623\u0633\u0645\u0627\u0621 \u0644\u0644\u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0645\u0624\u0642\u062a)\n- Program.cs              \u2190 \u0647\u0630\u0627 \u0627\u0644\u0645\u0644\u0641\n\u0645\u0644\u0627\u062d\u0638\u0629: \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u062a\u0637\u0648\u064a\u0631 \u064a\u0645\u0643\u0646\u0643 \u062a\u0634\u063a\u064a\u0644 \u0648\u0627\u062c\u0647\u0629 Vite/React \u0639\u0644\u0649 5173 \u0648\u062a\u0641\u0639\u064a\u0644 CORS \u0623\u0639\u0644\u0627\u0647.\n\u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c: \u0646\u0641\u0651\u0630 build\u060c \u0648\u0627\u0646\u0633\u062e \u0646\u0627\u062a\u062c \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u062f\u0627\u062e\u0644 wwwroot.\n*/\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - <code>/api/*</code> \u0644\u0644\u0628\u0627\u0643-\u0625\u0646\u062f. - \u0628\u0627\u0642\u064a \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u062a\u0639\u0648\u062f \u0625\u0644\u0649 index.html \u0644\u064a\u062a\u0648\u0644\u0651\u0649 Router \u0627\u0644\u0639\u0645\u064a\u0644\u064a \u0627\u0644\u0639\u0631\u0636. - \u0627\u0633\u062a\u062e\u062f\u0645 \u0623\u0633\u0645\u0627\u0621 \u0645\u0644\u0641\u0627\u062a \u0628\u0623\u062e\u062a\u0627\u0645 (hash) \u0644\u062a\u0641\u0639\u064a\u0644 Cache \u0642\u0648\u064a\u0629 \u0644\u0644\u0623\u0635\u0648\u0644.</p>"},{"location":"terms/spa/#spa","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 SPA \u201c\u0635\u062d\u064a\u0651\u0629\u201d","text":"<ol> <li>\u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0643\u0648\u062f (Code-Splitting) + \u062a\u062d\u0645\u064a\u0644 \u0643\u0633\u0648\u0644 \u0644\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u062b\u0642\u064a\u0644\u0629.  </li> <li>\u062d\u0627\u0644\u0629 \u0648\u0627\u062c\u0647\u0629 \u0645\u0646\u0638\u0651\u0645\u0629 (Store/Signals) \u0648\u062a\u0628\u0633\u064a\u0637 \u0627\u0644\u062a\u062f\u0641\u0642.  </li> <li>\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0627\u0646\u0637\u0628\u0627\u0639 \u0627\u0644\u0623\u0648\u0644: Skeleton\u060c Prefetch\u060c \u0648\u2014\u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629\u2014SSR/Hydration.  </li> <li>\u0627\u0644\u0623\u0645\u0627\u0646: \u062d\u0645\u0627\u064a\u0629 XSS/CSRF\u060c \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0631\u0645\u0648\u0632 \u0628\u0639\u0646\u0627\u064a\u0629 (\u064a\u0641\u0636\u0651\u064e\u0644 HttpOnly \u0644\u0644\u0643\u0648\u0643\u064a\u0632).  </li> <li>SEO: \u0625\u0646 \u0643\u0627\u0646 \u0645\u062d\u062a\u0648\u0649 \u0639\u0627\u0645\u064b\u0627\u060c \u0623\u0636\u0641 SSR/Prerender \u0623\u0648 Meta tags \u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a\u0629.  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: \u062a\u062a\u0628\u0651\u0639 \u0623\u062e\u0637\u0627\u0621 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d\u060c \u0623\u062f\u0627\u0621 LCP/CLS/TTI\u060c \u0648\u0637\u0644\u0628\u0627\u062a API.  </li> <li>Routing \u0639\u0645\u064a\u0644\u0640\u064a + Fallback \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0645\u0646\u0639 404 \u0639\u0646\u062f \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0635\u0641\u062d\u0629.  </li> <li>\u062e\u062f\u0645\u0629 PWA (\u0627\u062e\u062a\u064a\u0627\u0631\u064a): Service Worker \u0644\u0644\u062a\u062e\u0632\u064a\u0646 \u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644 \u0648\u0625\u0634\u0639\u0627\u0631\u0627\u062a.</li> </ol>"},{"location":"terms/spa/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0628\u0627\u0646\u062f\u0644 \u0636\u062e\u0645 (\u0643\u0644 \u0634\u064a\u0621 \u0641\u064a \u0623\u0648\u0644 \u0632\u064a\u0627\u0631\u0629) \u2192 \u0632\u0645\u0646 \u0623\u0648\u0644\u064a \u0628\u0637\u064a\u0621.  </li> <li>\u0639\u062f\u0645 \u0625\u0639\u062f\u0627\u062f Fallback \u2192 \u0645\u0633\u0627\u0631\u0627\u062a \u0639\u0645\u064a\u0642\u0629 \u062a\u064f\u0638\u0647\u0631 404 \u0639\u0646\u062f \u0627\u0644\u062a\u062d\u062f\u064a\u062b.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Polling \u0641\u0642\u0637 \u0628\u062f\u0644 SSE/WebSocket \u0644\u0644\u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0645\u0628\u0627\u0634\u0631\u0629.  </li> <li>\u062e\u0644\u0637 \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 \u062b\u0642\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a.  </li> <li>\u062a\u062c\u0627\u0647\u0644 Accessibility/Keyboard/Focus \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 (document.title/aria).  </li> <li>\u062a\u062e\u0632\u064a\u0646 Tokens \u0641\u064a <code>localStorage</code> \u0628\u0644\u0627 \u062d\u0630\u0631 (\u0642\u0627\u0628\u0644 \u0644\u0644\u0640 XSS).</li> </ul>"},{"location":"terms/spa/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 SPA \u0648\u0627\u062c\u0647\u0629 \u0639\u0645\u064a\u0644 \u0648\u0627\u062d\u062f\u0629 + Routing \u0639\u0645\u064a\u0644 \u0633\u0631\u064a\u0639 \u0628\u0639\u062f \u0627\u0644\u062a\u062d\u0645\u064a\u0644\u061b \u064a\u062d\u062a\u0627\u062c API/\u062d\u0644 SEO MPA \u0635\u0641\u062d\u0627\u062a \u062a\u064f\u0648\u0644\u0651\u064e\u062f \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0627\u0646\u062a\u0642\u0627\u0644 \u0643\u0627\u0645\u0644 \u0627\u0644\u0635\u0641\u062d\u0629\u061b SEO \u0633\u0647\u0644 SSR \u062a\u0648\u0644\u064a\u062f HTML \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u062d\u0633\u0651\u0646 \u0627\u0644\u0640 SEO \u0648\u0648\u0642\u062a \u0627\u0644\u0638\u0647\u0648\u0631 \u0627\u0644\u0623\u0648\u0644 SSG/ISR \u0628\u0646\u0627\u0621 \u0635\u0641\u062d\u0627\u062a \u0645\u0633\u0628\u0642\u064b\u0627 \u0623\u062f\u0627\u0621 \u0645\u0645\u062a\u0627\u0632 \u0644\u0645\u062d\u062a\u0648\u0649 \u0634\u0628\u0647 \u062b\u0627\u0628\u062a Blazor WASM SPA \u0628\u0640 C# \u0639\u0644\u0649 WebAssembly \u062d\u062c\u0645 \u0623\u0648\u0644\u064a \u0623\u0643\u0628\u0631 \u063a\u0627\u0644\u0628\u064b\u0627\u061b \u0628\u062f\u0648\u0646 JS \u062b\u0642\u064a\u0644"},{"location":"terms/spa/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>SPA = \u0635\u0641\u062d\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u062a\u062d\u0643\u0651\u0645 \u0628\u0643\u0644 \u0627\u0644\u062a\u0646\u0642\u0651\u0644 \u0648\u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 API \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0627\u0633\u062a\u062e\u062f\u0645 Fallback \u0644\u0644\u0645\u0633\u0627\u0631\u0627\u062a\u060c \u0642\u0633\u0651\u0645 \u0627\u0644\u0628\u0627\u0646\u062f\u0644\u060c \u0648\u0627\u062d\u0645\u0650 \u0627\u0644\u0648\u0627\u062c\u0647\u0629\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u062c\u0631\u0628\u0629 \u0633\u0644\u0633\u0629\u060c \u0633\u0631\u064a\u0639\u0629 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0628\u0639\u062f \u0627\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0648\u0633\u0651\u0639 \u0645\u0639 \u0646\u0645\u0648 \u0627\u0644\u062a\u0637\u0628\u064a\u0642. </p>"},{"location":"terms/sql-injection/","title":"SQL Injection","text":""},{"location":"terms/sql-injection/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>SQL Injection \u2014 \u062d\u0642\u0646 \u0623\u0648\u0627\u0645\u0631/\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a SQL \u062f\u0627\u062e\u0644 \u062a\u0637\u0628\u064a\u0642\u0643.</p>"},{"location":"terms/sql-injection/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062b\u063a\u0631\u0629 \u062a\u062d\u062f\u062b \u0639\u0646\u062f \u062f\u0645\u062c \u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u062e\u0644 \u0627\u0633\u062a\u0639\u0644\u0627\u0645 SQL \u0643\u0646\u0635\u0651 \u062e\u0627\u0645. \u064a\u0633\u0645\u062d \u0644\u0644\u0645\u0647\u0627\u062c\u0645 \u0628\u062a\u0646\u0641\u064a\u0630 \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u063a\u064a\u0631 \u0645\u0642\u0635\u0648\u062f\u0629: \u062a\u062c\u0627\u0648\u0632 \u062a\u0633\u062c\u064a\u0644 \u0627\u0644\u062f\u062e\u0648\u0644\u060c \u0642\u0631\u0627\u0621\u0629/\u062a\u0639\u062f\u064a\u0644/\u062d\u0630\u0641 \u0628\u064a\u0627\u0646\u0627\u062a.</p>"},{"location":"terms/sql-injection/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u064a\u0628\u0646\u064a \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u064b\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0633\u0644\u0627\u0633\u0644 \u0646\u0635\u064a\u0629 \u0645\u0646 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645.  </li> <li>\u0627\u0644\u0645\u064f\u062f\u062e\u0644 \u0627\u0644\u062e\u0628\u064a\u062b \u064a\u064f\u0643\u0645\u0644 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0648\u064a\u063a\u064a\u0651\u0631 \u0645\u0639\u0646\u0627\u0647.  </li> <li>\u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u0646\u0641\u0651\u0630 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0643\u0645\u0627 \u0648\u0635\u0644\u0647\u0627.  </li> <li>\u0627\u0644\u0646\u062a\u064a\u062c\u0629: \u062a\u0633\u0631\u064a\u0628 \u0628\u064a\u0627\u0646\u0627\u062a \u0623\u0648 \u062a\u0639\u062f\u064a\u0644\u0647\u0627 \u0623\u0648 \u0627\u0644\u0633\u064a\u0637\u0631\u0629 \u0639\u0644\u0649 \u0627\u0644\u062d\u0633\u0627\u0628\u0627\u062a.</li> </ul>"},{"location":"terms/sql-injection/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0643\u062a\u0627\u0628\u0629 \u0623\u0645\u0631\u064d \u0641\u064a \u0648\u0631\u0642\u0629\u064d \u0645\u0639 \u0641\u0631\u0627\u063a\u0627\u062a \u064a\u0645\u0644\u0624\u0647\u0627 \u0623\u062d\u062f\u0647\u0645. \u0644\u0648 \u0643\u062a\u0628 \u0639\u0628\u0627\u0631\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629\u060c \u064a\u062a\u062d\u0648\u0651\u0644 \u0627\u0644\u0645\u0639\u0646\u0649 \u062a\u0645\u0627\u0645\u0627. \u0627\u0644\u062d\u0644\u061f \u0646\u0645\u0648\u0630\u062c \u062b\u0627\u0628\u062a \u064a\u0636\u0639 \u0627\u0644\u0642\u064a\u0645 \u0641\u064a \u062e\u0627\u0646\u0627\u062a \u0622\u0645\u0646\u0629 \u0641\u0642\u0637.</p>"},{"location":"terms/sql-injection/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# (\u0636\u0639\u064a\u0641 \u062b\u0645 \u0622\u0645\u0646)","text":""},{"location":"terms/sql-injection/#_5","title":"\u274c \u0636\u0639\u064a\u0641: \u062f\u0645\u062c \u0627\u0644\u0646\u0635\u0648\u0635 (\u0644\u0627 \u062a\u0641\u0639\u0644)","text":"C#<pre><code>string user = txtUser.Text;\nstring pass = txtPass.Text;\n\nstring sql = $\"SELECT Id FROM Users WHERE Username = '{user}' AND Password = '{pass}'\";\n// \u0647\u0643\u0630\u0627 \u064a\u0645\u0643\u0646 \u0644\u0645\u062f\u062e\u0644 \u062e\u0628\u064a\u062b \u0623\u0646 \u064a\u063a\u064a\u0651\u0631 \u0645\u0639\u0646\u0649 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0643\u0644\u0647\n\nusing var con = new SqlConnection(connString);\nusing var cmd = new SqlCommand(sql, con);\ncon.Open();\nvar id = cmd.ExecuteScalar();\n</code></pre>"},{"location":"terms/sql-injection/#preparedparameterized","title":"\u2705 \u0622\u0645\u0646: \u0645\u0639\u0627\u0645\u0644\u0627\u062a (Prepared/Parameterized)","text":"C#<pre><code>using var con = new SqlConnection(connString);\nusing var cmd = new SqlCommand(\n    \"SELECT Id FROM Users WHERE Username = @u AND PasswordHash = @p\", con);\n\ncmd.Parameters.Add(\"@u\", SqlDbType.NVarChar, 64).Value = txtUser.Text;\n// \u0645\u0631\u0651\u0631 \u0627\u0644\u0642\u064a\u0645 \u0643\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u2014 \u0644\u0627 \u062a\u064f\u062f\u0645\u062c \u062f\u0627\u062e\u0644 \u0646\u0635\u0651 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645\ncmd.Parameters.Add(\"@p\", SqlDbType.VarChar, 64).Value = ComputeHash(txtPass.Text);\n\ncon.Open();\nvar id = cmd.ExecuteScalar();\n</code></pre>"},{"location":"terms/sql-injection/#orm-ef-core","title":"\u2705 \u0622\u0645\u0646 \u0623\u064a\u0636\u064b\u0627: ORM (EF Core \u064a\u0633\u062a\u062e\u062f\u0650\u0645 \u0645\u0639\u0627\u0645\u0644\u0627\u062a \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627)","text":"C#<pre><code>// EF Core \u064a\u062d\u0648\u0651\u0650\u0644 \u0627\u0644\u062a\u0639\u0628\u064a\u0631 \u0627\u0644\u062a\u0627\u0644\u064a \u0625\u0644\u0649 \u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0645\u064f\u0639\u064e\u0644\u0652\u0645\u0646 (Parameterized)\nvar u = await db.Users\n    .SingleOrDefaultAsync(x =&gt; x.Username == user &amp;&amp; x.PasswordHash == hash);\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u0644\u0627 \u062a\u062e\u0632\u0651\u0646 \u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0645\u0631\u0648\u0631 \u0643\u0646\u0635\u0651. \u0627\u0633\u062a\u062e\u062f\u0645 Hash + Salt \u0648\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0645\u062b\u0644 PBKDF2/Argon2/Bcrypt.</p>"},{"location":"terms/sql-injection/#checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u062a\u062e\u0641\u064a\u0641 (Checklist)","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Parameterized Queries / Prepared Statements \u062f\u0627\u0626\u0645\u064b\u0627.  </li> <li>\u0627\u0639\u062a\u0645\u062f ORM \u0645\u0648\u062b\u0648\u0642 (EF Core/Dapper \u0645\u0639 \u0645\u0639\u0627\u0645\u0644\u0627\u062a).  </li> <li>Least Privilege: \u062d\u0633\u0627\u0628 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u062d\u062f\u0648\u062f\u0629.  </li> <li>\u062a\u0628\u064a\u064a\u0636 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 (Allowlist) \u0644\u0644\u062d\u0642\u0648\u0644 \u0630\u0627\u062a \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0645\u0639\u0631\u0648\u0641\u0629 (\u0645\u062b\u0644 SortField).  </li> <li>\u0641\u0639\u0651\u0644 ORM/DB Escaping \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u061b \u0644\u0627 \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 <code>Replace</code> \u0627\u0644\u064a\u062f\u0648\u064a.  </li> <li>\u0633\u062c\u0651\u0644 \u0645\u062d\u0627\u0648\u0644\u0627\u062a \u063a\u064a\u0631 \u0637\u0628\u064a\u0639\u064a\u0629 \u0648\u0631\u0627\u0642\u0628 \u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645.  </li> <li>\u0623\u062e\u0641\u0650 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621\u061b \u0623\u0631\u0633\u0644 \u0631\u0633\u0627\u0626\u0644 \u0639\u0627\u0645\u0629 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u060c \u0648\u062f\u0648\u0651\u0646 \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644 \u062f\u0627\u062e\u0644\u064a\u064b\u0627.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0628\u0640 \u0623\u062f\u0648\u0627\u062a \u0641\u062d\u0635 (SAST/DAST) \u0648\u0623\u0646\u0634\u0626 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0648\u062d\u062f\u0627\u062a \u0636\u062f \u0627\u0644\u062d\u0642\u0646.</li> </ul>"},{"location":"terms/sql-injection/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u062a\u0635\u0641\u064a\u0629 \u0646\u0635\u0651\u064a\u0629 \u064a\u062f\u0648\u064a\u0629 \u0628\u062f\u0644 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a.  </li> <li>\u0628\u0646\u0627\u0621 \u0623\u062c\u0632\u0627\u0621 SQL \u0645\u0646 \u062e\u064a\u0627\u0631\u0627\u062a \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0645\u0628\u0627\u0634\u0631\u0629 (\u0645\u062b\u0644 <code>ORDER BY \" + sort</code>).  </li> <li>\u0627\u0633\u062a\u0639\u0645\u0627\u0644 \u0645\u0633\u062a\u062e\u062f\u0645 DB \u0628\u0627\u0645\u062a\u064a\u0627\u0632\u0627\u062a \u0639\u0627\u0644\u064a\u0629 (dbo).  </li> <li>\u0643\u0634\u0641 \u0631\u0633\u0627\u0626\u0644 \u0623\u062e\u0637\u0627\u0621 SQL \u0627\u0644\u062a\u0641\u0635\u064a\u0644\u064a\u0629 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0646\u0647\u0627\u0626\u064a.</li> </ul>"},{"location":"terms/sql-injection/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 XSS \u062d\u0642\u0646 \u0633\u0643\u0631\u0628\u062a \u0641\u064a \u0627\u0644\u0645\u062a\u0635\u0641\u062d \u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0644\u0645\u062a\u0635\u0641\u0651\u062d/DOM\u061b \u0627\u0644\u0639\u0644\u0627\u062c \u0628\u0640 CSP \u0648\u062a\u0637\u0647\u064a\u0631 HTML SQL Injection \u0627\u0644\u062a\u0644\u0627\u0639\u0628 \u0628\u0627\u0633\u062a\u0639\u0644\u0627\u0645\u0627\u062a \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062d\u0644\u0651\u0647 \u0627\u0644\u0623\u0633\u0627\u0633: \u0645\u0639\u0627\u0645\u0644\u0627\u062a/Prepared + Least Privilege Command Injection \u062d\u0642\u0646 \u0623\u0648\u0627\u0645\u0631 \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u064a\u062d\u062f\u062b \u0639\u0646\u062f \u062a\u0645\u0631\u064a\u0628 \u0645\u062f\u062e\u0644\u0627\u062a \u0644\u0623\u0648\u0627\u0645\u0631 Shell \u062f\u0648\u0646 \u0636\u0628\u0637"},{"location":"terms/sql-injection/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u062c\u0630\u0631 \u0627\u0644\u0645\u0634\u0643\u0644\u0629: \u062f\u0645\u062c \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0641\u064a \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0643\u0646\u0635. \u0627\u0644\u0639\u0644\u0627\u062c: \u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0645\u064f\u0639\u064e\u0644\u0652\u0645\u0646\u0629\u060c \u0635\u0644\u0627\u062d\u064a\u0627\u062a \u062f\u0646\u064a\u0627\u060c \u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0641\u062d\u0635 \u0622\u0644\u064a.</p>"},{"location":"terms/sql-injection/#_9","title":"\u0633\u0624\u0627\u0644 \u062a\u062b\u0628\u064a\u062a","text":"<p>\u0623\u0646\u062a \u062a\u0628\u0646\u064a \u0627\u0633\u062a\u0639\u0644\u0627\u0645\u064b\u0627 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0645\u062f\u062e\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645. \u0645\u0627 \u0627\u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0623\u0647\u0645 \u0644\u062a\u062c\u0646\u0651\u0628 SQL Injection\u061f</p> \u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0625\u062c\u0627\u0628\u0629   \u0627\u0633\u062a\u062e\u062f\u0627\u0645 **Prepared/Parameterized Queries** (\u0623\u0648 ORM \u064a\u0637\u0628\u0651\u0642\u0647\u0627 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627)\u060c \u0645\u0639 **Least Privilege** \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a."},{"location":"terms/ssms/","title":"SSMS","text":""},{"location":"terms/ssms/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>SQL Server Management Studio \u2014 \u0628\u064a\u0626\u0629 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u0644\u0625\u062f\u0627\u0631\u0629 \u062e\u0627\u062f\u0645 SQL.</p>"},{"location":"terms/ssms/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0623\u062f\u0627\u0629 \u0631\u0633\u0648\u0645\u064a\u0629 \u0627\u062d\u062a\u0631\u0627\u0641\u064a\u0629 \u0645\u0646 \u0645\u0627\u064a\u0643\u0631\u0648\u0633\u0648\u0641\u062a \u0644\u0625\u062f\u0627\u0631\u0629 \u0642\u0648\u0627\u0639\u062f \u0628\u064a\u0627\u0646\u0627\u062a SQL Server \u0628\u0633\u0647\u0648\u0644\u0629 \u0648\u0641\u0639\u0627\u0644\u064a\u0629.</p>"},{"location":"terms/ssms/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<p>\u0645\u062b\u0644 \u0644\u0648\u062d\u0629 \u062a\u062d\u0643\u0651\u0645 \u0644\u0639\u0628\u0629 \u062a\u064f\u062a\u064a\u062d \u0644\u0643: - \u0631\u0624\u064a\u0629 \u0627\u0644\u0645\u0628\u0627\u0646\u064a (\u0627\u0644\u062c\u062f\u0627\u0648\u0644\u060c \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a). - \u062a\u0639\u062f\u064a\u0644\u0647\u0627 \u0623\u0648 \u0628\u0646\u0627\u0621 \u062c\u062f\u064a\u062f\u0629. - \u0637\u0631\u062d \u0633\u0624\u0627\u0644: \"\u0643\u0645 \u0639\u062f\u062f \u0627\u0644\u0645\u0628\u0627\u0646\u064a\u061f\" (\u0627\u0633\u062a\u0639\u0644\u0627\u0645 SQL)\u060c \u0648\u062d\u0635\u0648\u0644\u0643 \u0639\u0644\u0649 \u0627\u0644\u062c\u0648\u0627\u0628 \u0645\u0628\u0627\u0634\u0631\u0629.</p>"},{"location":"terms/ssms/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u062e\u064a\u0651\u0644 \u0623\u0646 \u0644\u062f\u064a\u0643 \u0645\u0643\u062a\u0628\u064b\u0627 \u0641\u064a \u0644\u0639\u0628\u0629 \u0628\u0646\u0627\u0621 \u0645\u062f\u064a\u0646\u0629\u060c \u0648\u0645\u0646 \u062e\u0644\u0627\u0644\u0647 \u062a\u0633\u062a\u0637\u064a\u0639: 1. \u0645\u0634\u0627\u0647\u062f\u0629 \u0643\u0644 \u0627\u0644\u0645\u0628\u0627\u0646\u064a \u0627\u0644\u0645\u0648\u062c\u0648\u062f\u0629 (\u0627\u0644\u062c\u062f\u0627\u0648\u0644). 2. \u0628\u0646\u0627\u0621 \u0645\u0628\u0627\u0646\u064d \u062c\u062f\u064a\u062f\u0629 \u0623\u0648 \u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0642\u062f\u064a\u0645\u0629. 3. \u0643\u062a\u0627\u0628\u0629 \u0633\u0624\u0627\u0644 \u0645\u062b\u0644: \"\u0643\u0645 \u0639\u062f\u062f \u0627\u0644\u0633\u0643\u0627\u0646 \u0641\u064a \u0627\u0644\u062d\u064a X\u061f\" (\u0627\u0633\u062a\u0639\u0644\u0627\u0645 SQL) \u0648\u0645\u0639\u0631\u0641\u0629 \u0627\u0644\u062c\u0648\u0627\u0628 \u0641\u0648\u0631\u064b\u0627. \u0647\u0630\u0627 \u0627\u0644\u0645\u0643\u062a\u0628 \u0641\u064a \u0627\u0644\u0644\u0639\u0628\u0629 \u0647\u0648 SSMS.</p>"},{"location":"terms/ssms/#sql-ssms","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f SQL \u0628\u0633\u064a\u0637 \u062f\u0627\u062e\u0644 SSMS","text":"<p>SQL<pre><code>-- \u0625\u0646\u0634\u0627\u0621 \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u062c\u062f\u064a\u062f\u0629\nCREATE DATABASE MyCity;\n-- \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0642\u0627\u0639\u062f\u0629\nUSE MyCity;\n-- \u0625\u0646\u0634\u0627\u0621 \u062c\u062f\u0648\u0644 \u0644\u0644\u0645\u0628\u0627\u0646\u064a\nCREATE TABLE Buildings (Name NVARCHAR(50));\n-- \u0639\u0631\u0636 \u062c\u0645\u064a\u0639 \u0627\u0644\u062c\u062f\u0627\u0648\u0644 \u0641\u064a \u0627\u0644\u0642\u0627\u0639\u062f\u0629\nSELECT * FROM sys.tables;\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u0638\u0647\u0648\u0631 \u0631\u0633\u0627\u0626\u0644 \u0646\u062c\u0627\u062d \u0644\u0643\u0644 \u062e\u0637\u0648\u0629\u060c \u062b\u0645 \u0642\u0627\u0626\u0645\u0629 \u0628\u0627\u0644\u062c\u062f\u0627\u0648\u0644 (\u0645\u062b\u0644: Buildings).</p>"},{"location":"terms/ssms/#ssms_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 SSMS","text":"<ul> <li>\u062d\u0645\u0651\u0644 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 21 (\u0627\u0644\u0623\u062d\u062f\u062b) \u0645\u0646 \u0645\u0648\u0642\u0639 \u0645\u0627\u064a\u0643\u0631\u0648\u0633\u0648\u0641\u062a.</li> <li>\u0634\u063a\u0651\u0644 \u0627\u0644\u0645\u0644\u0641 \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u064a \u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a Administrator \u0644\u0628\u062f\u0621 \u0627\u0644\u062a\u062b\u0628\u064a\u062a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062b\u0628\u0651\u062a Visual Studio.</li> <li>\u0627\u062a\u0635\u0644 \u0628\u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a (\u0645\u062b\u0644: localhost) \u0639\u0628\u0631 \u0645\u0635\u0627\u062f\u0642\u0629 Windows \u0623\u0648 SQL.</li> <li>\u0627\u0641\u062a\u062d Object Explorer \u0644\u0631\u0624\u064a\u0629 \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u0643\u0627\u0644\u062c\u062f\u0627\u0648\u0644 \u0648\u0627\u0644\u0637\u0644\u0628\u0627\u062a.</li> <li>\u0627\u0641\u062a\u062d \u0646\u0627\u0641\u0630\u0629 New Query\u060c \u0648\u0627\u0643\u062a\u0628 \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0633\u0627\u0628\u0642\u060c \u062b\u0645 \u0627\u0636\u063a\u0637 \u0644\u062a\u0646\u0641\u064a\u0630.</li> </ul>"},{"location":"terms/ssms/#_5","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0623\u062f\u0627\u0629 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 SSMS (\u0627\u0644\u0625\u0635\u062f\u0627\u0631 21) \u0625\u062f\u0627\u0631\u0629 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0631\u0633\u0648\u0645\u064a\u064b\u0627 (SQL Server) \u062d\u062f\u064a\u062b\u060c \u0645\u0628\u0646\u064a \u0639\u0644\u0649 Visual Studio 2022\u060c \u0645\u062a\u0643\u0627\u0645\u0644 SSMS (\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0623\u0642\u062f\u0645) \u0625\u062f\u0627\u0631\u0629 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0641\u0642\u0637 \u0623\u0642\u0644 \u0645\u0632\u0627\u064a\u0627 \u0648\u062d\u062f\u064a\u062b\u0629\u060c \u062f\u0648\u0646 \u062f\u0639\u0645 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629 Azure Data Studio \u062a\u062d\u0631\u064a\u0631 SQL \u0639\u0644\u0649 \u0623\u0646\u0638\u0645\u0629 \u0645\u062a\u0639\u062f\u062f\u0629 (\u0648\u064a\u0646\u062f\u0648\u0632\u060c \u0645\u0627\u0643\u060c...) \u0623\u062e\u0641\u060c \u064a\u062f\u0639\u0645 Git\u060c \u0644\u0643\u0646 \u0623\u0642\u0644 \u0634\u0645\u0648\u0644\u064b\u0627 \u0645\u0646 SSMS"},{"location":"terms/ssms/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>SSMS \u0647\u0648 \u0623\u062f\u0627\u0629 \u0631\u0633\u0648\u0645\u064a\u0629 \u0642\u0648\u064a\u0629 \u0645\u0646 \u0645\u0627\u064a\u0643\u0631\u0648\u0633\u0648\u0641\u062a \u0644\u0625\u062f\u0627\u0631\u0629 \u0642\u0648\u0627\u0639\u062f \u0628\u064a\u0627\u0646\u0627\u062a SQL \u0628\u0641\u0639\u0627\u0644\u064a\u0629.</p>"},{"location":"terms/stored-procedure/","title":"Stored Procedure","text":""},{"location":"terms/stored-procedure/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Stored Procedure \u2014 \u0625\u062c\u0631\u0627\u0621 \u0645\u064f\u062e\u0632\u0651\u064e\u0646 (\u0631\u0648\u062a\u064a\u0646 SQL \u0645\u062d\u0641\u0648\u0638 \u062f\u0627\u062e\u0644 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a).</p>"},{"location":"terms/stored-procedure/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0643\u062a\u0644\u0629 \u0623\u0648\u0627\u0645\u0631 SQL \u064a\u062a\u0645 \u062d\u0641\u0638\u0647\u0627 \u0648\u062a\u0634\u063a\u064a\u0644\u0647\u0627 \u0628\u0627\u0633\u0645 \u062b\u0627\u0628\u062a \u0648\u0628\u0645\u0639\u0627\u0645\u0644\u0627\u062a. \u062a\u0641\u064a\u062f \u0641\u064a \u062a\u0642\u0644\u064a\u0644 \u062a\u0646\u0642\u0651\u0644 \u0627\u0644\u0634\u0628\u0643\u0629\u060c \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u060c \u0627\u0644\u0623\u0645\u0646 (\u0635\u0644\u0627\u062d\u064a\u0629 <code>EXECUTE</code>)\u060c \u0648\u0627\u0644\u0623\u062f\u0627\u0621 (\u062e\u0637\u0637 \u062a\u0646\u0641\u064a\u0630 \u0645\u064f\u062e\u0632\u0651\u064e\u0646\u0629).</p>"},{"location":"terms/stored-procedure/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0641\u0643\u0651\u0631 \u0628\u0647\u0627 \u0643\u0640 \u062f\u0627\u0644\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0644\u0643\u0646 \u064a\u0645\u0643\u0646\u0647\u0627 \u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u062a\u0634\u063a\u064a\u0644 \u0645\u0639\u0627\u0645\u0644\u0627\u062a.  </li> <li>\u062a\u0633\u062a\u062f\u0639\u064a\u0647\u0627 \u0628\u0640 <code>EXEC</code> \u0648\u062a\u0645\u0631\u064a\u0631 \u0645\u0639\u0627\u0645\u0644\u0627\u062a (Input/Output).  </li> <li>\u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u062a\u062f\u064a\u0631 \u0627\u0644\u062e\u0637\u0629\u060c \u0627\u0644\u0623\u0630\u0648\u0646\u0627\u062a\u060c \u0648\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629 \u062f\u0627\u062e\u0644\u064a\u064b\u0627.</li> </ul>"},{"location":"terms/stored-procedure/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u201c\u0625\u062c\u0631\u0627\u0621 \u0625\u062f\u0627\u0631\u064a\u201d \u062c\u0627\u0647\u0632 \u0641\u064a \u062e\u0632\u0646\u0629 \u0627\u0644\u0634\u0631\u0643\u0629: \u062a\u064f\u0633\u0644\u0651\u0645 \u0627\u0644\u0637\u0644\u0628 \u0645\u0639 \u0646\u0645\u0648\u0630\u062c (\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a) \u0648\u064a\u064f\u0646\u0641\u0651\u064e\u0630 \u0627\u0644\u0633\u064a\u0646\u0627\u0631\u064a\u0648 \u0627\u0644\u0643\u0627\u0645\u0644 \u0628\u0633\u0631\u0639\u0629 \u0648\u0628\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0645\u0636\u0628\u0648\u0637\u0629.</p>"},{"location":"terms/stored-procedure/#sql-t-sql","title":"\u0645\u062b\u0627\u0644 SQL (T-SQL) \u2014 \u0625\u0646\u0634\u0627\u0621\u060c \u0627\u0633\u062a\u062f\u0639\u0627\u0621\u060c \u0648\u0645\u0639\u0627\u0644\u062c\u0629 \u0623\u062e\u0637\u0627\u0621","text":"SQL<pre><code>-- 1) \u0625\u062c\u0631\u0627\u0621 \u0642\u0631\u0627\u0621\u0629: \u0625\u0631\u062c\u0627\u0639 \u0625\u062c\u0645\u0627\u0644\u064a \u0637\u0644\u0628\nCREATE OR ALTER PROCEDURE dbo.GetOrderTotal\n    @OrderId INT,\n    @Total DECIMAL(18,2) OUTPUT\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    SELECT @Total = SUM(Price * Qty)\n    FROM dbo.OrderLines\n    WHERE OrderId = @OrderId;\n\n    IF (@Total IS NULL) SET @Total = 0;\nEND\nGO\n\n-- 2) \u0625\u062c\u0631\u0627\u0621 \u0643\u062a\u0627\u0628\u0629 \u0628\u0645\u0639\u0627\u0645\u0644\u0629 + \u0645\u0639\u0627\u0644\u062c\u0629 \u062e\u0637\u0623\nCREATE OR ALTER PROCEDURE dbo.PlaceOrder\n    @OrderId  INT,\n    @Customer NVARCHAR(64)\nAS\nBEGIN\n    SET NOCOUNT ON;\n    BEGIN TRY\n        BEGIN TRAN;\n\n        INSERT INTO dbo.Orders(Id, CustomerId) VALUES(@OrderId, @Customer);\n\n        -- \u0645\u062b\u0627\u0644: \u0639\u0646\u0627\u0635\u0631 \u0645\u064f\u062d\u0636\u0651\u0631\u0629 \u0645\u0633\u0628\u0642\u064b\u0627 \u0641\u064a \u062c\u062f\u0648\u0644 \u0645\u0624\u0642\u062a #Items\n        INSERT INTO dbo.OrderLines(OrderId, Sku, Qty, Price)\n        SELECT @OrderId, Sku, Qty, Price FROM #Items;\n\n        COMMIT;\n    END TRY\n    BEGIN CATCH\n        IF @@TRANCOUNT &gt; 0 ROLLBACK;\n        THROW; -- \u064a\u0631\u0641\u0639 \u0627\u0644\u062e\u0637\u0623 \u0644\u0644\u0645\u0633\u062a\u062f\u0639\u064a \u0645\u0639 \u0631\u0642\u0645/\u062d\u0627\u0644\u0629 \u0648\u0627\u0636\u062d\u064a\u0646\n    END CATCH\nEND\nGO\n\n-- \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0648\u0625\u062e\u0631\u0627\u062c \u0642\u064a\u0645\u0629\nDECLARE @t DECIMAL(18,2);\nEXEC dbo.GetOrderTotal @OrderId = 1001, @Total = @t OUTPUT;\nSELECT Total = @t;\n</code></pre>"},{"location":"terms/stored-procedure/#c-sqlclient","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0625\u062c\u0631\u0627\u0621 \u0645\u062e\u0632\u0651\u0646 \u0639\u0628\u0631 <code>SqlClient</code> (\u0645\u062f\u062e\u0644\u0627\u062a/\u0645\u062e\u0631\u062c\u0627\u062a)","text":"C#<pre><code>// .NET 8/9 \u2014 dotnet add package Microsoft.Data.SqlClient\nusing Microsoft.Data.SqlClient;\nusing System.Data;\n\nvar cs = \"Server=localhost;Database=Shop;Trusted_Connection=True;TrustServerCertificate=True\";\n\n// \u0645\u062b\u0627\u0644: \u0642\u0631\u0627\u0621\u0629 \u0645\u062e\u0631\u064e\u062c OUTPUT\nusing (var cn = new SqlConnection(cs))\n{\n    await cn.OpenAsync();\n\n    using var cmd = new SqlCommand(\"dbo.GetOrderTotal\", cn) { CommandType = CommandType.StoredProcedure };\n    cmd.Parameters.Add(new SqlParameter(\"@OrderId\", SqlDbType.Int) { Value = 1001 });\n    var outParam = new SqlParameter(\"@Total\", SqlDbType.Decimal)\n    {\n        Precision = 18, Scale = 2, Direction = ParameterDirection.Output\n    };\n    cmd.Parameters.Add(outParam);\n\n    await cmd.ExecuteNonQueryAsync();\n    Console.WriteLine($\"Total = {(decimal)outParam.Value:0.00}\");\n}\n\n// \u0645\u062b\u0627\u0644: \u0643\u062a\u0627\u0628\u0629 \u062f\u0627\u062e\u0644 \u0645\u0639\u0627\u0645\u0644\u0629 \u062a\u0637\u0628\u064a\u0642\u064a\u0629 \u062a\u0633\u062a\u062f\u0639\u064a SP\nusing (var cn = new SqlConnection(cs))\n{\n    await cn.OpenAsync();\n    using var tx = cn.BeginTransaction();\n\n    try\n    {\n        using var cmd = new SqlCommand(\"dbo.PlaceOrder\", cn, tx) { CommandType = CommandType.StoredProcedure };\n        cmd.Parameters.AddWithValue(\"@OrderId\", 1002);\n        cmd.Parameters.AddWithValue(\"@Customer\", \"abdalkreem\");\n\n        await cmd.ExecuteNonQueryAsync();\n        await tx.CommitAsync();\n    }\n    catch\n    {\n        await tx.RollbackAsync();\n        throw;\n    }\n}\n</code></pre> <p>\u0645\u0644\u062d\u0648\u0638\u0629: \u064a\u0645\u0643\u0646 \u0623\u064a\u0636\u064b\u0627 \u0627\u0633\u062a\u062f\u0639\u0627\u0624\u0647\u0627 \u0645\u0646 EF Core (\u0644\u0644\u062a\u062d\u062f\u064a\u062b\u0627\u062a \u0639\u0628\u0631 <code>ExecuteSqlRaw</code> \u0623\u0648 \u0644\u0644\u0642\u0631\u0627\u0621\u0629 \u0639\u0628\u0631 <code>FromSql</code>).</p>"},{"location":"terms/stored-procedure/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u0645\u062e\u0632\u0651\u0646\u0629 \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>\u0633\u0645\u0651\u0650\u0647\u0627 \u0628\u0648\u0636\u0648\u062d \u0648\u0628\u0627\u0633\u062a\u062e\u062f\u0645 Schema (<code>sales.PlaceOrder</code>)\u060c \u0648\u062a\u062c\u0646\u0651\u0628 <code>sp_</code> \u0641\u064a SQL Server.  </li> <li>\u0645\u0631\u0651\u0631 \u0645\u0639\u0627\u0645\u0644\u0627\u062a Strongly-Typed\u060c \u0648\u0627\u0636\u0628\u0637 <code>Precision/Scale</code> \u0644\u0644\u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u0639\u0634\u0631\u064a\u0629.  </li> <li>\u0627\u062c\u0639\u0644\u0647\u0627 \u0642\u0635\u064a\u0631\u0629 \u0648\u0645\u062d\u062f\u0651\u062f\u0629 \u0627\u0644\u0647\u062f\u0641\u061b \u062a\u062c\u0646\u0651\u0628 \u201c\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u0639\u0645\u0644\u0627\u0642\u0629\u201d.  </li> <li>\u0623\u0636\u0650\u0641 <code>SET NOCOUNT ON</code> \u0644\u062a\u0642\u0644\u064a\u0644 \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0635\u0641\u0648\u0641 \u0627\u0644\u0645\u062a\u0623\u062b\u0631\u0629.  </li> <li>\u062a\u062d\u0643\u0651\u0645 \u0628\u0627\u0644\u0623\u0630\u0648\u0646\u0627\u062a: \u0627\u0645\u0646\u062d <code>EXECUTE</code> \u0639\u0644\u0649 \u0627\u0644\u0625\u062c\u0631\u0627\u0621 \u0628\u062f\u0644 CRUD \u0645\u0628\u0627\u0634\u0631 \u0639\u0644\u0649 \u0627\u0644\u062c\u062f\u0627\u0648\u0644.  </li> <li>\u0641\u0639\u0651\u0644 \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 (<code>TRY...CATCH</code> + <code>THROW</code>) \u0648\u062d\u062f\u0648\u062f \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0625\u062c\u0631\u0627\u0621 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u062e\u0637\u0637 \u0648\u0627\u0644\u0625\u062d\u0635\u0627\u0621\u0627\u062a\u060c \u0648\u062d\u062f\u0651\u062b\u0647\u0627 \u0639\u0646\u062f \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.  </li> <li>\u0648\u062b\u0651\u0650\u0642 \u0627\u0644\u0639\u0642\u062f: \u0627\u0644\u0623\u0633\u0645\u0627\u0621\u060c \u0627\u0644\u0623\u0646\u0648\u0627\u0639\u060c \u0627\u0644\u0645\u0639\u0627\u0646\u064a\u060c \u0648\u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0627\u0644\u0623\u062e\u0637\u0627\u0621.</li> </ol>"},{"location":"terms/stored-procedure/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0648\u0636\u0639 \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 \u0645\u0639\u0642\u062f\u0629 \u0628\u0627\u0644\u0643\u0627\u0645\u0644 \u0641\u064a \u0627\u0644\u0640 DB \u2192 \u0635\u0639\u0648\u0628\u0629 \u0627\u062e\u062a\u0628\u0627\u0631/\u0625\u0635\u062f\u0627\u0631.  </li> <li>\u0628\u0646\u0627\u0621 SQL \u062f\u064a\u0646\u0627\u0645\u064a\u0643\u064a \u063a\u064a\u0631 \u0645\u064f\u0639\u0644\u0651\u0642 \u21d2 \u0642\u0627\u0628\u0644 \u0644\u062d\u0642\u0646 SQL (\u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0639\u0627\u0645\u0644\u0627\u062a/\u0642\u0648\u0627\u0644\u0628 \u0622\u0645\u0646\u0629).  </li> <li>\u0646\u0633\u064a\u0627\u0646 <code>SET NOCOUNT ON</code> \u2192 \u0627\u0644\u062a\u0628\u0627\u0633 \u0644\u062f\u0649 \u0627\u0644\u0639\u0645\u0644\u0627\u0621 \u0627\u0644\u0630\u064a\u0646 \u064a\u0639\u062a\u0645\u062f\u0648\u0646 \u0639\u0644\u0649 <code>RecordsAffected</code>.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0623\u0643\u0648\u0627\u062f \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0648\u0631\u0641\u0639 \u0646\u0635\u0648\u0635 \u0639\u0627\u0645\u0629 \u0641\u0642\u0637.  </li> <li>\u062c\u0639\u0644 \u0627\u0644\u0625\u062c\u0631\u0627\u0621 \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062d\u0627\u0644\u0629 \u062c\u0644\u0633\u0629 (Temp \u0645\u0641\u062a\u0648\u062d\u0629 \u0628\u0644\u0627 \u062a\u0648\u062b\u064a\u0642/\u062a\u0646\u0638\u064a\u0641).  </li> <li>\u062a\u0645\u0627\u062b\u0644 \u0623\u0633\u0645\u0627\u0621 \u0648\u0645\u0639\u0627\u0646\u064a \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u063a\u064a\u0631 \u0648\u0627\u0636\u062d \u21d2 \u0648\u0627\u062c\u0647\u0629 \u0647\u0634\u0651\u0629.  </li> <li>\u0646\u0642\u0644 \u0643\u0644 \u0634\u064a\u0621 \u0625\u0644\u0649 \u0627\u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u201c\u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0623\u062f\u0627\u0621\u201d \u062f\u0648\u0646 \u0642\u064a\u0627\u0633 \u0641\u0639\u0644\u064a.</li> </ul>"},{"location":"terms/stored-procedure/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Stored Procedure \u062a\u0646\u0641\u064a\u0630 \u062d\u0632\u0645 SQL \u0628\u0627\u0633\u0645 \u0648\u062b\u0627\u0628\u062a \u064a\u0645\u0643\u0646 \u0623\u0646 \u062a\u064f\u062d\u062f\u0650\u062b \u0648\u062a\u0642\u0631\u0623\u060c \u062a\u062f\u064a\u0631 \u0645\u0639\u0627\u0645\u0644\u0627\u062a\u060c \u0648\u0623\u0630\u0648\u0646\u0627\u062a <code>EXECUTE</code> Function (Scalar/TVF) \u062d\u0633\u0627\u0628/\u0625\u0631\u062c\u0627\u0639 \u0642\u064a\u0645\u0629/\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u064f\u0641\u062a\u0631\u0636 \u0623\u0646 \u062a\u0643\u0648\u0646 \u062e\u0627\u0644\u0635\u0629 \u0628\u062f\u0648\u0646 \u0622\u062b\u0627\u0631 \u062c\u0627\u0646\u0628\u064a\u0629 (\u0644\u0644\u0623\u062f\u0627\u0621/\u0627\u0644\u0641\u0647\u0631\u0633\u0629) Ad-hoc SQL \u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0645\u0628\u0627\u0634\u0631 \u0645\u0646 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0631\u0646\u061b \u0644\u0643\u0646 \u0623\u0630\u0648\u0646\u0627\u062a/\u0623\u062f\u0627\u0621/\u0623\u0645\u0627\u0646 \u0623\u0642\u0644 \u0625\u0646 \u0623\u0633\u064a\u0621 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 ORM (EF Core) \u062e\u0631\u0627\u0626\u0637 \u0643\u0627\u0626\u0646-\u0639\u0644\u0627\u0642\u0629 \u0648\u0627\u0646\u062a\u0627\u062c\u064a\u0629 \u064a\u0645\u0643\u0646\u0647 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 SP\u061b \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0643\u0648\u062f \u0627\u0644\u0642\u0627\u0628\u0644 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 Jobs/Triggers \u062a\u0634\u063a\u064a\u0644 \u062a\u0644\u0642\u0627\u0626\u064a \u062f\u0627\u062e\u0644 DB \u062a\u062c\u0646\u0651\u0628 \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 \u062b\u0642\u064a\u0644\u0629 \u0641\u064a\u0647\u0627\u061b \u0627\u0633\u062a\u062e\u062f\u0645 \u0628\u062d\u0630\u0631"},{"location":"terms/stored-procedure/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0645\u064f\u062e\u0632\u0651\u064e\u0646 = \u0631\u0648\u062a\u064a\u0646 SQL \u0645\u064f\u0639\u0627\u062f \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0627\u062e\u0644 \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u064a\u0624\u0645\u0651\u0646 \u0623\u062f\u0627\u0621 (\u062e\u0637\u0629 \u0645\u062d\u0641\u0648\u0638\u0629)\u060c \u0623\u0645\u0646 (\u0623\u0630\u0648\u0646\u0627\u062a \u062a\u0646\u0641\u064a\u0630)\u060c \u0648\u0627\u062a\u0633\u0627\u0642 (\u0645\u0639\u0627\u0645\u0644\u0627\u062a/\u0623\u062e\u0637\u0627\u0621 \u0645\u064f\u062f\u0627\u0631\u0629). \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0644\u0645\u0647\u0627\u0645 DB \u0648\u0627\u0636\u062d\u0629\u060c \u0648\u0628\u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 \u0645\u062d\u062f\u0648\u062f\u0629\u060c \u0648\u0645\u0639 \u062a\u0648\u062b\u064a\u0642\u064d \u0648\u0645\u0639\u0627\u0645\u0644\u0627\u062a\u064d \u0622\u0645\u0646\u0629 \u2014 \u0644\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0637\u0628\u0642\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062a\u064a\u0646\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0635\u064a\u0627\u0646\u0629.</p> <p>\u0645\u0644\u0627\u062d\u0638\u0629: \u0625\u0646 \u0643\u0646\u062a \u062a\u0642\u0635\u062f Prosegur (\u0634\u0631\u0643\u0629 \u0623\u0645\u0646 \u0625\u0633\u0628\u0627\u0646\u064a\u0629) \u0648\u0644\u064a\u0633 Stored Procedure\u060c \u0623\u062e\u0628\u0631\u0646\u064a \u0644\u0623\u0634\u0631\u062d\u0647\u0627 \u0628\u0627\u0644\u0635\u064a\u063a\u0629 \u0646\u0641\u0633\u0647\u0627. </p>"},{"location":"terms/tcp-ip/","title":"TCP/IP","text":""},{"location":"terms/tcp-ip/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Transmission Control Protocol / Internet Protocol (TCP/IP) \u2014 \u0645\u062c\u0645\u0648\u0639\u0629 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a (\u0637\u0628\u0642\u0627\u062a \u0648\u0634\u0628\u0643\u0627\u062a \u0648\u0627\u062a\u0635\u0627\u0644 \u0645\u0648\u062b\u0648\u0642/\u063a\u064a\u0631 \u0645\u0648\u062b\u0648\u0642).</p>"},{"location":"terms/tcp-ip/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0639\u0627\u0626\u0644\u0629 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u062a\u064f\u0634\u063a\u0651\u0650\u0644 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a: - IP \u0644\u0644\u062a\u0648\u062c\u064a\u0647 \u0648\u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646. - TCP \u0644\u0627\u062a\u0635\u0627\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u0648\u062c\u0651\u0647 \u0627\u062a\u0635\u0627\u0644\u064b\u0627. - UDP \u0644\u0625\u0631\u0633\u0627\u0644 \u062e\u0641\u064a\u0641 \u0628\u062f\u0648\u0646 \u0636\u0645\u0627\u0646\u0627\u062a. \u0648\u062a\u0639\u0644\u0648\u0647\u0627 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0645\u062b\u0644 HTTP/DNS/SMTP\u060c \u0648\u062a\u062d\u062a\u0647\u0627 \u0637\u0628\u0642\u0627\u062a \u0627\u0644\u0631\u0628\u0637 \u0645\u062b\u0644 Ethernet/Wi-Fi.</p>"},{"location":"terms/tcp-ip/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0637\u0628\u0642\u0627\u062a (\u0645\u0628\u0633\u0651\u0637): Link (Ethernet/Wi-Fi) \u2192 Internet (IP, ICMP) \u2192 Transport (TCP/UDP) \u2192 Application (HTTP/DNS/\u2026).</li> <li>IP \u064a\u0642\u0631\u0651\u0631 \u201c\u0625\u0644\u0649 \u0623\u064a \u0639\u0646\u0648\u0627\u0646 \u062a\u0630\u0647\u0628 \u0627\u0644\u0631\u0632\u0645\u0629\u201d.  </li> <li>TCP \u064a\u0636\u0645\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0628\u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0648\u0645\u0646 \u062f\u0648\u0646 \u0641\u0642\u062f (\u062a\u062a\u0627\u0628\u0639/\u0625\u0642\u0631\u0627\u0631/\u0625\u0639\u0627\u062f\u0629 \u0625\u0631\u0633\u0627\u0644).  </li> <li>UDP \u064a\u0631\u0633\u0644 \u0628\u0633\u0631\u0639\u0629 \u0648\u0628\u062f\u0648\u0646 \u062d\u0645\u0644 \u0625\u0636\u0627\u0641\u064a (\u0642\u062f \u062a\u0636\u064a\u0639 \u0631\u064f\u0632\u0645).  </li> <li>\u0627\u0644\u0645\u0646\u0627\u0641\u0630 (Ports) \u062a\u0645\u064a\u0651\u0632 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0639\u0644\u0649 \u0646\u0641\u0633 \u0627\u0644\u0645\u0636\u064a\u0641 (80/443/53\u2026).</li> </ul>"},{"location":"terms/tcp-ip/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0634\u062d\u0646 \u0628\u0636\u0627\u0626\u0639: - IP = \u0637\u0631\u064a\u0642 \u0627\u0644\u0634\u062d\u0646 \u0648\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0628\u064a\u0648\u062a. - TCP = \u062e\u062f\u0645\u0629 \u062a\u0648\u0635\u064a\u0644 \u0645\u0639 \u062a\u062a\u0628\u0639 \u0648\u062a\u0623\u0643\u064a\u062f \u0627\u0633\u062a\u0644\u0627\u0645. - UDP = \u062f\u0631\u0651\u0627\u062c\u0629 \u0633\u0631\u064a\u0639\u0629 \u0628\u0644\u0627 \u0625\u064a\u0635\u0627\u0644\u061b \u0623\u0633\u0631\u0639 \u0644\u0643\u0646 \u0642\u062f \u062a\u0641\u0648\u062a \u0637\u0631\u062f\u064b\u0627.</p>"},{"location":"terms/tcp-ip/#c-tcp-echo","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062e\u0627\u062f\u0648\u0645/\u0639\u0645\u064a\u0644 TCP Echo)","text":"<p>C#<pre><code>// dotnet add package System.Net.Sockets\nusing System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading.Tasks;\n\nclass TcpEcho\n{\n    public static async Task RunServer()\n    {\n        var listener = new TcpListener(IPAddress.Any, 5000);\n        listener.Start();\n        Console.WriteLine(\"TCP Echo server on 0.0.0.0:5000\");\n\n        while (true)\n        {\n            using var client = await listener.AcceptTcpClientAsync();\n            _ = Handle(client); // \u0644\u0627 \u062a\u0646\u062a\u0638\u0631 \u2014 \u0639\u0627\u0644\u062c \u0645\u062a\u0648\u0627\u0632\u064a\u0627\u064b\n        }\n    }\n\n    static async Task Handle(TcpClient client)\n    {\n        using var stream = client.GetStream();\n        var buf = new byte[1024];\n        int n = await stream.ReadAsync(buf, 0, buf.Length);\n        await stream.WriteAsync(buf, 0, n); // Echo\n    }\n\n    public static async Task RunClient(string msg = \"hello tcp\")\n    {\n        using var client = new TcpClient();\n        await client.ConnectAsync(\"127.0.0.1\", 5000);\n        var s = client.GetStream();\n        var data = Encoding.UTF8.GetBytes(msg);\n        await s.WriteAsync(data, 0, data.Length);\n        var buf = new byte[1024];\n        int n = await s.ReadAsync(buf, 0, buf.Length);\n        Console.WriteLine(Encoding.UTF8.GetString(buf, 0, n)); // hello tcp\n    }\n\n    static async Task Main()\n    {\n        // \u0634\u063a\u0651\u0644 \u0627\u0644\u062e\u0627\u062f\u0645 \u0641\u064a \u0639\u0645\u0644\u064a\u0629\u060c \u062b\u0645 \u0627\u0644\u0639\u0645\u064a\u0644 \u0641\u064a \u0623\u062e\u0631\u0649 (\u0623\u0648 \u0639\u062f\u0651\u0644 \u0644\u062a\u0634\u063a\u064a\u0644 \u0643\u0644\u064a\u0647\u0645\u0627 \u0647\u0646\u0627 \u0628\u0627\u0644\u062a\u0648\u0627\u0632\u064a).\n        // await RunServer();\n        // await RunClient();\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: \u0639\u0646\u062f \u0625\u0631\u0633\u0627\u0644 <code>\"hello tcp\"</code> \u0645\u0646 \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u064a\u0631\u062f \u0627\u0644\u062e\u0627\u062f\u0645 \u0628\u0646\u0641\u0633 \u0627\u0644\u0646\u0635.</p> <p>\u0645\u0644\u0627\u062d\u0638\u0629 \u0633\u0631\u064a\u0639\u0629: \u0627\u0633\u062a\u0628\u062f\u0644 TCP \u0628\u0640 UDP (SocketType.Dgram, ProtocolType.Udp) \u0644\u0625\u0631\u0633\u0627\u0644 \u062e\u0641\u064a\u0641 \u0628\u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644 \u0648\u0636\u0645\u0627\u0646\u0627\u062a.</p>"},{"location":"terms/tcp-ip/#tcpip_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0641\u0647\u0645/\u062a\u0634\u062e\u064a\u0635 TCP/IP","text":"<ul> <li>\u0627\u0639\u0631\u0641 \u0639\u0646\u0648\u0627\u0646 IP \u0648\u0642\u0646\u0627\u0639 \u0627\u0644\u0634\u0628\u0643\u0629/CIDR \u0648\u0627\u0644\u0639\u0628\u0651\u0627\u0631\u0629 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629.  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u0627\u062a\u0635\u0627\u0644:  </li> <li>Ping/ICMP \u0644\u0648\u0635\u0648\u0644 \u0627\u0644\u0634\u0628\u0643\u0629.  </li> <li>tracert / traceroute \u0644\u0645\u0633\u0627\u0631 \u0627\u0644\u062a\u0648\u062c\u064a\u0647.  </li> <li>netstat / ss \u0644\u0644\u0645\u0646\u0627\u0641\u0630 \u0627\u0644\u0645\u0641\u062a\u0648\u062d\u0629.  </li> <li>\u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a/NAT \u0648\u0641\u062a\u062d \u0627\u0644\u0645\u0646\u0627\u0641\u0630 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 DNS \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0623\u0633\u0645\u0627\u0621 \u0625\u0644\u0649 IP (A/AAAA).  </li> <li>\u0631\u0627\u0642\u0628 RTT \u0648\u0641\u0642\u062f \u0627\u0644\u0631\u0632\u0645\u061b \u0627\u0636\u0628\u0637 TCP Keep-Alive \u0648Timeouts \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062d\u0633\u0651\u0627\u0633\u0629.  </li> <li>\u0644\u0644\u062a\u0648\u0633\u0651\u0639: \u0641\u0643\u0651\u0631 \u0641\u064a Load Balancer \u0623\u0648 VIP \u0648Anycast.</li> </ul>"},{"location":"terms/tcp-ip/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 TCP \u0648HTTP (HTTP \u064a\u0639\u0645\u0644 \u0641\u0648\u0642 TCP\u061b \u0644\u064a\u0633 \u0646\u0641\u0633 \u0627\u0644\u0634\u064a\u0621).  </li> <li>\u062a\u0648\u0642\u0651\u0639 \u0636\u0645\u0627\u0646\u0627\u062a \u0645\u0646 UDP (\u0644\u0627 \u062a\u0631\u062a\u064a\u0628/\u0644\u0627 \u0625\u0639\u0627\u062f\u0629 \u0625\u0631\u0633\u0627\u0644).  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0625\u0639\u062f\u0627\u062f IPv6 \u0623\u0648 \u0642\u0648\u0627\u0639\u062f \u062c\u062f\u0627\u0631 \u0646\u0627\u0631\u064a \u0645\u0646\u0641\u0635\u0644\u0629 \u0644\u0647.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 DNS \u062f\u0648\u0646 \u0627\u0644\u062a\u0641\u0643\u064a\u0631 \u0641\u064a TTL/Caching \u0623\u062b\u0646\u0627\u0621 \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a.  </li> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 NAT = \u0623\u0645\u0627\u0646 \u0643\u0627\u0641\u064d (\u064a\u062c\u0628 \u0636\u0628\u0637 \u062c\u062f\u0627\u0631 \u0646\u0627\u0631\u064a \u0635\u0631\u064a\u062d).  </li> </ul>"},{"location":"terms/tcp-ip/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 IP Address \u0639\u0646\u0648\u0627\u0646 \u0644\u0644\u062a\u0648\u062c\u064a\u0647 \u0628\u064a\u0646 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0637\u0628\u0642\u0629 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a\u061b \u0644\u0627 \u064a\u0636\u0645\u0646 \u0627\u0644\u062a\u0633\u0644\u064a\u0645 \u0648\u062d\u062f\u0647 TCP \u0627\u062a\u0635\u0627\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u0631\u062a\u0651\u0628 \u0645\u0639 \u062a\u062f\u0641\u0651\u0642 \u0628\u0637\u064a\u0621 \u0646\u0633\u0628\u064a\u064b\u0627 \u0644\u0643\u0646\u0647 \u064a\u0636\u0645\u0646 \u0627\u0644\u0625\u064a\u0635\u0627\u0644/\u0627\u0644\u062a\u0631\u062a\u064a\u0628 UDP \u0625\u0631\u0633\u0627\u0644 \u062e\u0641\u064a\u0641 \u0628\u0644\u0627 \u0627\u062a\u0635\u0627\u0644 \u0648\u0644\u0627 \u0636\u0645\u0627\u0646\u0627\u062a \u0645\u062b\u0627\u0644\u064a \u0644\u0644\u0628\u062b/\u0627\u0644\u0632\u0645\u0646 \u0627\u0644\u062d\u0642\u064a\u0642\u064a (\u0635\u0648\u062a/\u0641\u064a\u062f\u064a\u0648/\u0644\u064f\u0639\u0628) TCP/IP \u0645\u062c\u0645\u0648\u0639\u0629 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a (IP + TCP/UDP + \u062a\u0637\u0628\u064a\u0642\u0627\u062a) \u0646\u0645\u0648\u0630\u062c \u0637\u0628\u0642\u064a: Link \u2192 Internet \u2192 Transport \u2192 Application"},{"location":"terms/tcp-ip/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>TCP/IP \u0647\u0648 \u0627\u0644\u0625\u0637\u0627\u0631 \u0627\u0644\u0630\u064a \u064a\u062c\u0639\u0644 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u064a\u0639\u0645\u0644: IP \u064a\u0648\u062c\u0651\u0647\u060c \u0648TCP/UDP \u064a\u0646\u0642\u0644\u0627\u0646\u060c \u0648\u062a\u0639\u0644\u0648\u0647 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a. \u0627\u062e\u062a\u0631 TCP \u0644\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u0648UDP \u0644\u0644\u0632\u0645\u0646 \u0627\u0644\u062d\u0642\u064a\u0642\u064a\u060c \u0648\u0627\u0636\u0628\u0637 \u0627\u0644\u0634\u0628\u0643\u0629 (DNS/Firewall/NAT) \u0628\u0648\u0639\u064a.</p>"},{"location":"terms/tcp/","title":"TCP","text":""},{"location":"terms/tcp/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Transmission Control Protocol (TCP) \u2014 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0627\u0644\u062a\u062d\u0643\u0651\u0645 \u0628\u0627\u0644\u0646\u0642\u0644 (\u0627\u062a\u0635\u0627\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u0648\u062c\u0651\u0647 \u0627\u062a\u0635\u0627\u0644\u064b\u0627).</p>"},{"location":"terms/tcp/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u064a\u0648\u0641\u0651\u0631 \u0642\u0646\u0627\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 \u0648\u0645\u0631\u062a\u0651\u0628\u0629 \u0628\u064a\u0646 \u0637\u0631\u0641\u064a\u0646: \u062a\u062c\u0632\u064a\u0621/\u062a\u062a\u0627\u0628\u0639/\u0625\u0642\u0631\u0627\u0631/\u0625\u0639\u0627\u062f\u0629 \u0625\u0631\u0633\u0627\u0644\u060c \u0645\u0639 \u0636\u0628\u0637 \u062a\u062f\u0641\u0651\u0642 (Windows) \u0648\u062a\u062d\u0643\u0651\u0645 \u0627\u0632\u062f\u062d\u0627\u0645. \u064a\u064f\u0646\u0634\u0626 \u0627\u062a\u0635\u0627\u0644\u064b\u0627 \u0628\u0640 \u0645\u0635\u0627\u0641\u062d\u0629 \u062b\u0644\u0627\u062b\u064a\u0629 \u0648\u064a\u064f\u0646\u0647\u064a\u0647 \u0628\u0640 FIN/ACK.</p>"},{"location":"terms/tcp/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u062a\u0635\u0627\u0644: \u0639\u0645\u064a\u0644 \u064a\u0641\u062a\u062d \u0645\u0646\u0641\u0630\u064b\u0627 \u0645\u0624\u0642\u0651\u062a\u064b\u0627 \u2192 <code>SYN</code> \u2192 \u062e\u0627\u062f\u0645 \u064a\u0631\u062f <code>SYN-ACK</code> \u2192 \u0639\u0645\u064a\u0644 <code>ACK</code>.  </li> <li>\u0627\u0644\u062f\u0641\u0642: \u062a\u0631\u0649 Stream \u0628\u0644\u0627 \u062d\u062f\u0648\u062f \u0631\u0633\u0627\u0626\u0644\u061b \u0627\u0644\u062a\u0623\u0637\u064a\u0631 \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.  </li> <li>\u0627\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629: \u0643\u0644 \u0628\u0627\u064a\u062a \u0644\u0647 \u0631\u0642\u0645 \u062a\u0633\u0644\u0633\u0644\u064a\u060c \u062a\u064f\u0639\u0627\u062f \u0627\u0644\u0625\u0631\u0633\u0627\u0644 \u0639\u0646\u062f \u0627\u0644\u0641\u0642\u062f.  </li> <li>\u0627\u0644\u062a\u0631\u062a\u064a\u0628: \u064a\u0635\u0644 \u0628\u0627\u0644\u062a\u0631\u062a\u064a\u0628 (\u0623\u0648 \u064a\u064f\u0639\u0627\u062f \u062a\u0631\u062a\u064a\u0628\u0647 \u062f\u0627\u062e\u0644\u064a\u064b\u0627).  </li> <li>\u0627\u0644\u0625\u063a\u0644\u0627\u0642: \u062a\u0628\u0627\u062f\u0644 FIN/ACK (\u0648\u0642\u062f \u062a\u0631\u0649 \u062d\u0627\u0644\u0627\u062a \u0645\u062b\u0644 <code>TIME_WAIT</code>).  </li> <li>\u062a\u062d\u0633\u064a\u0646\u0627\u062a: Nagle, Delayed ACK, Keep-Alive, MSS/PMTUD.</li> </ul>"},{"location":"terms/tcp/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0634\u0631\u0643\u0629 \u0634\u062d\u0646 \u0645\u0639 \u062a\u062a\u0628\u0651\u0639 \u0644\u0643\u0644 \u0637\u0631\u062f \u0648\u0625\u064a\u0635\u0627\u0644\u0627\u062a \u0627\u0633\u062a\u0644\u0627\u0645. \u0642\u062f \u062a\u062a\u0623\u062e\u0631 \u0642\u0644\u064a\u0644\u064b\u0627 \u0639\u0646 \u0627\u0644\u062f\u0631\u0627\u062c\u0629 \u0627\u0644\u0633\u0631\u064a\u0639\u0629 (UDP)\u060c \u0644\u0643\u0646\u0647\u0627 \u062a\u0636\u0645\u0646 \u0648\u0635\u0648\u0644 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0643\u0627\u0645\u0644\u064b\u0627 \u0648\u0628\u0627\u0644\u062a\u0631\u062a\u064a\u0628.</p>"},{"location":"terms/tcp/#c-tcp-","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0639\u0645\u0644\u064a (\u062e\u0627\u062f\u0645/\u0639\u0645\u064a\u0644 TCP + \u062a\u0623\u0637\u064a\u0631 \u0637\u0648\u0644-\u0623\u0648\u0644\u064b\u0627)","text":"<p>\u0645\u0644\u062d\u0648\u0638\u0629 \u0645\u0647\u0645\u0651\u0629: TCP \u062f\u0641\u0642 Bytes\u061b \u0644\u0630\u0644\u0643 \u0646\u0633\u062a\u062e\u062f\u0645 \u0637\u0648\u0644\u064b\u0627 \u0623\u0648\u0644\u064b\u0627 (length-prefix) \u0644\u062a\u0645\u064a\u064a\u0632 \u0627\u0644\u0631\u0633\u0627\u0626\u0644.</p>"},{"location":"terms/tcp/#echo","title":"\u062e\u0627\u062f\u0645 Echo \u0628\u0633\u064a\u0637","text":"C#<pre><code>// dotnet add package System.Net.Sockets\nusing System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.IO;\nusing System.Threading.Tasks;\n\nclass TcpEchoServer\n{\n    public static async Task Main()\n    {\n        var listener = new TcpListener(IPAddress.Any, 5000);\n        listener.Start(backlog: 100);\n        Console.WriteLine(\"TCP Echo on 0.0.0.0:5000\");\n\n        while (true)\n        {\n            var client = await listener.AcceptTcpClientAsync();\n            _ = Handle(client); // \u0645\u0639\u0627\u0644\u062c\u0629 \u0645\u062a\u0648\u0627\u0632\u064a\u0629\n        }\n    }\n\n    static async Task Handle(TcpClient client)\n    {\n        using (client)\n        {\n            client.NoDelay = true; // \u062a\u0639\u0637\u064a\u0644 Nagle \u0644\u0631\u0633\u0627\u0626\u0644 \u0635\u063a\u064a\u0631\u0629 \u0642\u0644\u064a\u0644\u0629 \u0627\u0644\u0643\u0645\u0648\u0646\n            client.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.KeepAlive, true);\n\n            using var ns = client.GetStream();\n            using var br = new BinaryReader(ns, Encoding.UTF8, leaveOpen: true);\n            using var bw = new BinaryWriter(ns, Encoding.UTF8, leaveOpen: true);\n\n            try\n            {\n                while (true)\n                {\n                    int len = br.ReadInt32();                 // \u0637\u0648\u0644 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 (LE \u0647\u0646\u0627)\n                    if (len &lt;= 0 || len &gt; 1_000_000) break;   // \u062d\u0631\u0627\u0633\u0629\n                    var data = br.ReadBytes(len);             // \u0642\u062f \u062a\u0623\u062a\u064a \u0639\u0644\u0649 \u062f\u0641\u0639\u0627\u062a\n                    var msg = Encoding.UTF8.GetString(data);\n                    Console.WriteLine($\"[{client.Client.RemoteEndPoint}] {msg}\");\n\n                    var reply = Encoding.UTF8.GetBytes(\"echo:\" + msg);\n                    bw.Write(reply.Length);\n                    bw.Write(reply);\n                    bw.Flush();\n                }\n            }\n            catch (EndOfStreamException) { /* \u0623\u063a\u0644\u0642 \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0622\u062e\u0631 */ }\n            catch (IOException) { /* \u0645\u0647\u0644\u0629/\u0627\u0646\u0642\u0637\u0627\u0639 */ }\n        }\n    }\n}\n</code></pre>"},{"location":"terms/tcp/#_5","title":"\u0639\u0645\u064a\u0644 \u064a\u0631\u0633\u0644 \u0639\u062f\u0651\u0629 \u0631\u0633\u0627\u0626\u0644 \u0648\u064a\u0646\u062a\u0638\u0631 \u0627\u0644\u0631\u062f","text":"C#<pre><code>using System;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.IO;\nusing System.Threading.Tasks;\n\nclass TcpEchoClient\n{\n    public static async Task Main()\n    {\n        using var client = new TcpClient();\n        client.ReceiveTimeout = 5000; // \u0645\u0644\u0651\u064a \u062b\u0627\u0646\u064a\u0629\n        client.SendTimeout = 5000;\n\n        await client.ConnectAsync(\"127.0.0.1\", 5000);\n\n        using var ns = client.GetStream();\n        using var br = new BinaryReader(ns, Encoding.UTF8, leaveOpen: true);\n        using var bw = new BinaryWriter(ns, Encoding.UTF8, leaveOpen: true);\n\n        foreach (var text in new[] { \"hello\", \"tcp\", \"world\" })\n        {\n            var payload = Encoding.UTF8.GetBytes(text);\n            bw.Write(payload.Length);\n            bw.Write(payload);\n            bw.Flush();\n\n            int len = br.ReadInt32();\n            var data = br.ReadBytes(len);\n            Console.WriteLine(Encoding.UTF8.GetString(data)); // echo:...\n        }\n\n        // \u0625\u063a\u0644\u0627\u0642 \u0623\u0646\u064a\u0642 (\u0627\u062e\u062a\u064a\u0627\u0631\u064a): \u0623\u0628\u0644\u063a \u0627\u0644\u062e\u0627\u062f\u0645 \u0623\u0646\u0646\u064a \u0627\u0646\u062a\u0647\u064a\u062a \u0645\u0646 \u0627\u0644\u0625\u0631\u0633\u0627\u0644\n        client.Client.Shutdown(SocketShutdown.Send);\n    }\n}\n</code></pre> <p>\u0627\u0644\u062a\u0623\u0637\u064a\u0631: \u0627\u062e\u062a\u0631\u062a Little-Endian \u0647\u0646\u0627 \u0627\u062e\u062a\u0635\u0627\u0631\u064b\u0627\u061b \u0627\u0644\u0623\u0641\u0636\u0644 \u0627\u0644\u062a\u0648\u0627\u0641\u0642 \u0639\u0644\u0649 Network Order (Big-Endian) \u0628\u064a\u0646 \u0627\u0644\u0623\u0646\u0638\u0645\u0629.</p>"},{"location":"terms/tcp/#tcp_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645/\u062a\u0634\u062e\u064a\u0635 TCP","text":"<ul> <li>\u0635\u0645\u0651\u0645 \u0627\u0644\u062a\u0623\u0637\u064a\u0631 (Length-Prefix / Delimiter / \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u062b\u0646\u0627\u0626\u064a)\u061b TCP \u0644\u0627 \u064a\u0648\u0641\u0651\u0631 \u201c\u0631\u0633\u0627\u0626\u0644\u201d.  </li> <li>\u0641\u0639\u0651\u0644/\u0639\u0637\u0651\u0644 <code>NoDelay</code> \u062d\u0633\u0628 \u0646\u0645\u0637\u0643:  </li> <li>\u0631\u0633\u0627\u0626\u0644 \u0635\u063a\u064a\u0631\u0629 \u0641\u0648\u0631\u064a\u0629 \u2192 <code>NoDelay = true</code>.  </li> <li>\u062f\u0641\u0639\u0627\u062a \u0643\u0628\u064a\u0631\u0629 \u2192 \u0627\u062a\u0631\u0643 Nagle \u0645\u0641\u064a\u062f\u064b\u0627.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0647\u0644\u0627\u062a (Timeouts) \u0648\u0625\u0644\u063a\u0627\u0621 (CancellationToken) \u0648Backoff \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u062d\u0627\u0644\u0629 \u0639\u0628\u0631 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0646\u0638\u0627\u0645:  </li> <li>Windows: <code>netstat -ano</code>, <code>Get-NetTCPConnection</code> </li> <li>Linux/macOS: <code>ss -tna</code>, <code>tcpdump</code>/<code>wireshark</code> </li> <li>\u0627\u0646\u062a\u0628\u0647 \u0644\u0644\u062d\u0627\u0644\u0627\u062a: <code>SYN-SENT/RECEIVED</code>, <code>ESTABLISHED</code>, <code>FIN_WAIT</code>, <code>CLOSE_WAIT</code>, <code>TIME_WAIT</code>.  </li> <li>\u0627\u0636\u0628\u0637 backlog \u0648Keep-Alive \u0648\u062d\u062f\u0648\u062f \u0627\u0644\u0645\u062e\u0632\u0646 \u0627\u0644\u0645\u0624\u0642\u062a \u0639\u0646\u062f \u0627\u0644\u0636\u063a\u0637 \u0627\u0644\u0639\u0627\u0644\u064a.  </li> <li>\u0645\u0639 \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a/\u0627\u0644\u0633\u064f\u062d\u064f\u0628: \u0627\u0641\u062a\u062d \u0627\u0644\u0645\u0646\u0627\u0641\u0630\u060c \u0648\u0627\u0636\u0628\u0637 Security Groups/NACL\u060c \u0648\u062a\u062d\u0642\u0642 \u0645\u0646 NAT/Health Checks.  </li> </ul>"},{"location":"terms/tcp/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 TCP \u0643\u0623\u0646\u0647 \u064a\u0642\u062f\u0651\u0645 \u0631\u0633\u0627\u0626\u0644 \u2192 \u0638\u0647\u0648\u0631 Sticky/Coalesced \u0648Partial Reads.  </li> <li>\u062a\u062c\u0627\u0647\u0644 TIME_WAIT \u0648\u0627\u0639\u062a\u0628\u0627\u0631\u0647 \u201c\u062a\u0633\u0631\u064a\u0628 \u0645\u0642\u0628\u0636\u201d\u061b \u0647\u0648 \u0633\u0644\u0648\u0643 \u0637\u0628\u064a\u0639\u064a \u0644\u062d\u0645\u0627\u064a\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0627\u0644\u0633\u0627\u0628\u0642\u0629.  </li> <li>\u0625\u0631\u0633\u0627\u0644 \u0636\u062e\u0645 \u062f\u0648\u0646 Backpressure \u0623\u0648 \u062d\u062f\u0648\u062f\u061b \u064a\u0645\u0644\u0623 \u0630\u0627\u0643\u0631\u0629 \u0627\u0644\u0645\u062a\u0644\u0642\u064a.  </li> <li>\u062a\u0648\u0642\u0651\u0639 \u0632\u0645\u0646 \u062b\u0627\u0628\u062a\u061b \u062a\u062d\u0643\u0651\u0645 \u0627\u0644\u0627\u0632\u062f\u062d\u0627\u0645 \u0642\u062f \u064a\u0628\u0637\u0651\u0626 \u0627\u0644\u0646\u0642\u0644 \u062a\u062d\u062a \u0627\u0644\u0636\u063a\u0637.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0642\u0648\u0627\u0639\u062f IPv6 \u0623\u0648 \u0627\u0644\u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0627\u0631\u064a \u0644\u0644\u0645\u0646\u0627\u0641\u0630 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629.  </li> </ul>"},{"location":"terms/tcp/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 TCP \u0627\u062a\u0635\u0627\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u0631\u062a\u0651\u0628 (Stream) Handshake/ACK/\u0625\u0639\u0627\u062f\u0629 \u0625\u0631\u0633\u0627\u0644/\u062a\u062d\u0643\u0651\u0645 \u0627\u0632\u062f\u062d\u0627\u0645\u061b \u064a\u062d\u062a\u0627\u062c \u062a\u0623\u0637\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 UDP \u0625\u0631\u0633\u0627\u0644 \u062e\u0641\u064a\u0641 \u0628\u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644 \u0644\u0627 \u062a\u0631\u062a\u064a\u0628 \u0648\u0644\u0627 \u0625\u0639\u0627\u062f\u0629 \u0625\u0631\u0633\u0627\u0644\u061b \u0645\u0645\u062a\u0627\u0632 \u0644\u0644\u0632\u0645\u0646 \u0627\u0644\u062d\u0642\u064a\u0642\u064a QUIC \u0646\u0642\u0644 \u0645\u0648\u062b\u0648\u0642 \u0641\u0648\u0642 UDP \u0645\u0639 TLS \u0645\u062f\u0645\u062c \u062a\u0633\u0644\u064a\u0645 \u0645\u062a\u0639\u062f\u0651\u062f \u0627\u0644\u062a\u062f\u0641\u0642\u0627\u062a \u0648\u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u0640 RTT"},{"location":"terms/tcp/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>TCP \u064a\u0645\u0646\u062d\u0643 \u0642\u0646\u0627\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 \u0648\u0645\u0631\u062a\u0651\u0628\u0629\u2014\u0644\u0643\u0646 \u0639\u0644\u064a\u0643 \u062a\u062d\u062f\u064a\u062f \u0634\u0643\u0644 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0647\u0644\u0627\u062a \u0648\u0627\u0644\u0627\u0632\u062f\u062d\u0627\u0645. \u0627\u0633\u062a\u0639\u0645\u0644 <code>NoDelay</code> \u0628\u062d\u0643\u0645\u0629\u060c \u0636\u0639 \u062a\u0623\u0637\u064a\u0631\u064b\u0627 \u0648\u0627\u0636\u062d\u064b\u0627\u060c \u0648\u0631\u0627\u0642\u0628 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0644\u0636\u0645\u0627\u0646 \u0623\u062f\u0627\u0621 \u0645\u0633\u062a\u0642\u0631 \u0648\u0642\u0627\u0628\u0644\u064a\u0629 \u0635\u064a\u0627\u0646\u0629.</p>"},{"location":"terms/ternary-operator/","title":"Ternary Operator","text":""},{"location":"terms/ternary-operator/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Ternary Operator (<code>condition ? whenTrue : whenFalse</code>) \u2014 (<code>?:</code>) \u0627\u0644\u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u062b\u0644\u0627\u062b\u064a \u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u0642\u064a\u0645\u0629 \u0627\u0639\u062a\u0645\u0627\u062f\u064b\u0627 \u0639\u0644\u0649 \u0634\u0631\u0637.</p>"},{"location":"terms/ternary-operator/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0639\u0628\u064a\u0631 \u064a\u064f\u0639\u064a\u062f \u0642\u064a\u0645\u0629 \u0648\u0627\u062d\u062f\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0634\u0631\u0637 \u0645\u0646\u0637\u0642\u064a: \u0625\u0646 \u0643\u0627\u0646 \u0635\u062d\u064a\u062d\u064b\u0627 \u064a\u0639\u064a\u062f \u0627\u0644\u0641\u0631\u0639 \u0627\u0644\u0623\u0648\u0644\u060c \u0648\u0625\u0644\u0651\u0627 \u064a\u0639\u064a\u062f \u0627\u0644\u0641\u0631\u0639 \u0627\u0644\u062b\u0627\u0646\u064a. \u0628\u062f\u064a\u0644 \u0645\u062e\u062a\u0635\u0631 \u0644\u0640 <code>if/else</code> \u0639\u0646\u062f\u0645\u0627 \u062a\u062d\u062a\u0627\u062c \u0642\u064a\u0645\u0629 \u062f\u0627\u062e\u0644 \u0633\u0637\u0631 \u0648\u0627\u062d\u062f.</p>"},{"location":"terms/ternary-operator/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0641\u0643\u0631 \u0641\u064a\u0647 \u0643\u0640 \u0633\u0624\u0627\u0644 \u0642\u0635\u064a\u0631: \u0647\u0644 \u0627\u0644\u0634\u0631\u0637 \u0635\u062d\u064a\u062d\u061f \u0646\u0639\u0645 \u2192 \u062e\u0630 \u0627\u0644\u0642\u064a\u0645\u0629 (A)\u060c \u0644\u0627 \u2192 \u062e\u0630 \u0627\u0644\u0642\u064a\u0645\u0629 (B).  </li> <li>\u064a\u064f\u0633\u062a\u0639\u0645\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u062a\u0639\u0627\u0628\u064a\u0631 (\u0625\u0633\u0646\u0627\u062f\u060c \u0627\u0633\u062a\u062f\u0639\u0627\u0621\u060c \u062a\u0647\u064a\u0626\u0629 \u062e\u0627\u0635\u064a\u0629\u2026).  </li> <li>\u0641\u0631\u0639 \u0648\u0627\u062d\u062f \u0641\u0642\u0637 \u064a\u064f\u0642\u064a\u0651\u064e\u0645 (Short-circuit): \u0627\u0644\u0641\u0631\u0639 \u063a\u064a\u0631 \u0627\u0644\u0645\u062e\u062a\u0627\u0631 \u0644\u0627 \u064a\u064f\u0646\u0641\u0651\u064e\u0630.  </li> <li>\u0644\u0644\u0648\u0636\u0648\u062d: \u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u062a\u0639\u0634\u064a\u0634 \u0627\u0644\u0645\u0639\u0642\u0651\u062f\u060c \u0648\u0627\u0633\u062a\u0639\u0645\u0644 \u0623\u0642\u0648\u0627\u0633\u064b\u0627 \u0639\u0646\u062f \u0627\u0644\u0634\u0643 \u0641\u064a \u0627\u0644\u0623\u0633\u0628\u0642\u064a\u0629.</li> </ul>"},{"location":"terms/ternary-operator/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0632\u0631\u0651\u0627\u0646 \u0639\u0644\u0649 \u0622\u0644\u0629: \u0625\u0630\u0627 \u0627\u0644\u0636\u0648\u0621 \u0623\u062e\u0636\u0631 \u0627\u0637\u0628\u0639 \u201cGo\u201d\u060c \u0648\u0625\u0644\u0627 \u0627\u0637\u0628\u0639 \u201cStop\u201d. \u0632\u0631 \u0648\u0627\u062d\u062f \u064a\u062e\u062a\u0627\u0631 \u0642\u064a\u0645\u0629 \u0645\u0646 \u062e\u064a\u0627\u0631\u064a\u0646 \u0628\u0633\u0631\u0639\u0629.</p>"},{"location":"terms/ternary-operator/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637","text":"<p>C#<pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        int score = 72;\n\n        // 1) \u0642\u064a\u0645\u0629 \u0646\u0635\u064a\u0629 \u062d\u0633\u0628 \u0634\u0631\u0637\n        string grade = score &gt;= 60 ? \"Pass\" : \"Fail\";\n        Console.WriteLine(grade); // Pass\n\n        // 2) \u0642\u064a\u0645\u0629 \u0639\u062f\u062f\u064a\u0629 (\u0642\u064a\u0645\u0629 \u0645\u0637\u0644\u0642\u0629)\n        int n = -5;\n        int abs = n &gt;= 0 ? n : -n;     // \u062a\u0639\u0628\u064a\u0631 \u064a\u0639\u064a\u062f int\n        Console.WriteLine(abs);        // 5\n\n        // 3) \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0627\u062e\u0644 \u0627\u0633\u062a\u062f\u0639\u0627\u0621\n        Console.WriteLine(score &gt; 90 ? \"Excellent\" : \"Keep going\");\n\n        // 4) \u062a\u0639\u0634\u064a\u0634 \u0628\u0633\u064a\u0637 (\u0627\u0633\u062a\u062e\u062f\u0645 \u0623\u0642\u0648\u0627\u0633\u064b\u0627 \u0644\u0644\u0648\u0636\u0648\u062d)\n        string band = score &gt;= 90 ? \"A\"\n                     : (score &gt;= 80 ? \"B\"\n                     : (score &gt;= 70 ? \"C\" : \"D\"));\n        Console.WriteLine(band); // C\n\n        // \u0645\u0644\u0627\u062d\u0638\u0629: \u0627\u0644\u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u062b\u0644\u0627\u062b\u064a \"\u062a\u0639\u0628\u064a\u0631\" \u0648\u0644\u064a\u0633 \"\u062c\u0645\u0644\u0629\"\u061b \u0644\u0627 \u064a\u0635\u0644\u062d \u0644\u0643\u062a\u0627\u0628\u0629 \u0639\u062f\u0629 \u0623\u0633\u0637\u0631 \u0645\u0646 \u0627\u0644\u0645\u0646\u0637\u0642\n    }\n}\n</code></pre> \u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639: Text Only<pre><code>Pass\n5\nKeep going\nC\n</code></pre></p>"},{"location":"terms/ternary-operator/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u062d\u064a\u0646 \u062a\u0631\u064a\u062f \u0642\u064a\u0645\u0629 \u0641\u064a \u0633\u0637\u0631 \u0648\u0627\u062d\u062f (\u062a\u0639\u064a\u064a\u0646/\u0625\u0631\u062c\u0627\u0639).  </li> <li>\u0625\u0646 \u0632\u0627\u062f \u0627\u0644\u062a\u0639\u0642\u064a\u062f \u0623\u0648 \u062a\u0639\u062f\u062f\u062a \u0627\u0644\u0634\u0631\u0648\u0637 \u2192 \u0627\u0633\u062a\u0639\u0645\u0644 <code>if/else</code> \u0623\u0648 <code>switch</code>/<code>switch expression</code>.  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u0641\u0631\u0639\u064a\u0646 \u0645\u0646 \u0646\u0641\u0633 \u0627\u0644\u0646\u0648\u0639 (\u0623\u0648 \u0642\u0627\u0628\u0644\u064a\u0646 \u0644\u0644\u062a\u062d\u0648\u064a\u0644 \u0628\u0648\u0636\u0648\u062d).  </li> <li>\u062a\u062c\u0646\u0651\u0628 \u0622\u062b\u0627\u0631 \u062c\u0627\u0646\u0628\u064a\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0641\u0631\u0648\u0639 (\u0645\u062b\u0644 <code>x++</code>) \u0644\u0644\u062d\u0641\u0627\u0638 \u0639\u0644\u0649 \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0642\u0631\u0627\u0621\u0629.  </li> <li>\u0623\u0636\u0641 \u0623\u0642\u0648\u0627\u0633\u064b\u0627 \u0625\u0630\u0627 \u062c\u0645\u0639\u062a\u064e\u0647 \u0645\u0639 \u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0623\u062e\u0631\u0649 \u0644\u062a\u0648\u0636\u064a\u062d \u062a\u0631\u062a\u064a\u0628 \u0627\u0644\u062a\u0642\u064a\u064a\u0645.</li> </ul>"},{"location":"terms/ternary-operator/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0628\u062f\u0644 <code>if/else</code> \u0641\u064a \u0645\u0646\u0637\u0642 \u0637\u0648\u064a\u0644 \u2192 \u0643\u0648\u062f \u063a\u0627\u0645\u0636.  </li> <li>\u0627\u062e\u062a\u0644\u0627\u0641 \u0646\u0648\u0639\u064a \u0627\u0644\u0641\u0631\u0639\u064a\u0646 \u0628\u0634\u0643\u0644 \u064a\u0633\u0628\u0628 \u062a\u062d\u0648\u064a\u0644\u0627\u062a \u0636\u0645\u0646\u064a\u0629 \u0645\u0631\u0628\u0643\u0629.  </li> <li>\u062a\u0639\u0634\u064a\u0634 \u0628\u0644\u0627 \u0623\u0642\u0648\u0627\u0633 \u2192 \u0627\u0644\u062a\u0628\u0627\u0633 \u0627\u0644\u0623\u0633\u0628\u0642\u064a\u0629 \u0648\u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u0635\u064a\u0627\u0646\u0629.</li> </ul>"},{"location":"terms/ternary-operator/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Ternary Operator \u0627\u062e\u062a\u064a\u0627\u0631 \u0642\u064a\u0645\u0629 \u0648\u0627\u062d\u062f\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0634\u0631\u0637 \u062a\u0639\u0628\u064a\u0631 \u0645\u062e\u062a\u0635\u0631\u061b \u0642\u064a\u0651\u0645 \u0641\u0631\u0639\u064b\u0627 \u0648\u0627\u062d\u062f\u064b\u0627 \u0641\u0642\u0637\u061b \u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u062a\u0639\u0634\u064a\u0634 \u0627\u0644\u0645\u0639\u0642\u0651\u062f Null-Coalescing Operator \u062a\u0639\u064a\u064a\u0646 \u0642\u064a\u0645\u0629 \u0628\u062f\u064a\u0644\u0629 \u0639\u0646\u062f <code>null</code> \u064a\u062e\u062a\u0644\u0641: \u064a\u062a\u062d\u0642\u0642 \u0645\u0646 <code>null</code> \u0641\u0642\u0637 \u0648\u0644\u064a\u0633 \u0645\u0646 \u0634\u0631\u0637 \u0645\u0646\u0637\u0642\u064a Null-Conditional Operator \u0625\u064a\u0642\u0627\u0641 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0639\u0646\u062f <code>null</code> \u0628\u0623\u0645\u0627\u0646 (<code>?.</code>) \u064a\u064f\u0639\u064a\u062f <code>null</code> \u0628\u062f\u0644 \u0627\u0644\u0631\u0645\u064a\u061b \u064a\u064f\u062f\u0645\u064e\u062c \u0639\u0627\u062f\u0629 \u0645\u0639 <code>??</code> \u0644\u0642\u064a\u0645\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629"},{"location":"terms/ternary-operator/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0645\u0639\u0627\u0645\u0644 \u0627\u0644\u062b\u0644\u0627\u062b\u064a <code>?:</code> \u0647\u0648 \u0627\u062e\u062a\u0635\u0627\u0631 \u0623\u0646\u064a\u0642 \u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u0642\u064a\u0645\u0629 \u0648\u0641\u0642 \u0634\u0631\u0637. \u0627\u0633\u062a\u062e\u062f\u0645\u0647 \u0644\u0644\u0628\u0633\u0627\u0637\u0629 \u0648\u0627\u0644\u0648\u0636\u0648\u062d\u061b \u0648\u0625\u0646 \u062a\u0639\u0642\u0651\u062f \u0627\u0644\u0645\u0646\u0637\u0642 \u0641\u0627\u0631\u062c\u0639 \u0625\u0644\u0649 <code>if/else</code> \u0623\u0648 <code>switch</code>.</p>"},{"location":"terms/tier/","title":"Tier","text":""},{"location":"terms/tier/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Tier \u2014 \u0637\u0628\u0642\u0629 \u0646\u0634\u0631 (\u062d\u062f\u0651 \u0641\u0635\u0644 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0639\u0645\u0644\u064a\u0651\u0629/\u0627\u0644\u062e\u0627\u062f\u0645/\u0627\u0644\u0634\u0628\u0643\u0629).</p>"},{"location":"terms/tier/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0625\u0644\u0649 \u0645\u0643\u0648\u0651\u0646\u0627\u062a \u0645\u0648\u0632\u0651\u0639\u0629 \u062a\u0641\u0635\u0644\u0647\u0627 \u062d\u062f\u0648\u062f \u0646\u0634\u0631: Web Tier (\u0648\u0627\u062c\u0647\u0629/\u0628\u0648\u0627\u0628\u0629)\u060c App Tier (\u0645\u0646\u0637\u0642/\u062e\u062f\u0645\u0627\u062a)\u060c Data Tier (\u0642\u0648\u0627\u0639\u062f \u0628\u064a\u0627\u0646\u0627\u062a). \u0627\u0644\u0647\u062f\u0641: \u0639\u0632\u0644 \u0623\u0645\u0646\u064a\u060c \u0642\u0627\u0628\u0644\u064a\u0629 \u062a\u062d\u062c\u064a\u0645 \u0645\u0633\u062a\u0642\u0644\u060c \u0648\u0625\u062f\u0627\u0631\u0629 \u0623\u0633\u0647\u0644 \u0644\u0644\u0628\u0646\u064a\u0629.</p>"},{"location":"terms/tier/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Layer \u064a\u0646\u0638\u0651\u0645 \u0627\u0644\u0643\u0648\u062f \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0634\u0631\u0648\u0639. Tier \u064a\u0648\u0632\u0651\u0639 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0639\u0628\u0631 \u0639\u0645\u0644\u064a\u0627\u062a/\u062e\u0648\u0627\u062f\u0645 \u0645\u062e\u062a\u0644\u0641\u0629.  </li> <li>\u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 \u0628\u064a\u0646 Tiers \u064a\u062a\u0645 \u0639\u0628\u0631 \u0634\u0628\u0643\u0629 (HTTP/gRPC/\u0631\u0633\u0627\u0626\u0644)\u060c \u063a\u0627\u0644\u0628\u064b\u0627 \u0645\u0639 \u062c\u062f\u0631 \u0646\u0627\u0631\u064a\u0629 \u0648\u0647\u0648\u064a\u0629.  </li> <li>\u0623\u0634\u0643\u0627\u0644 \u0634\u0627\u0626\u0639\u0629: 2-Tier (Web\u2194DB)\u060c 3-Tier (Web\u2194App\u2194DB)\u060c \u0623\u0648 \u0623\u0643\u062b\u0631 (Cache/Queue/Reporting\u2026).</li> </ul>"},{"location":"terms/tier/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0637\u0639\u0645 \u0643\u0628\u064a\u0631: \u0627\u0644\u0627\u0633\u062a\u0642\u0628\u0627\u0644 (Web) \u064a\u0633\u062a\u0642\u0628\u0644 \u0627\u0644\u0637\u0644\u0628\u060c \u0627\u0644\u0645\u0637\u0628\u062e (App) \u064a\u0637\u0628\u062e\u060c \u0627\u0644\u0645\u062e\u0632\u0646 (Data) \u064a\u0648\u0641\u0651\u0631 \u0627\u0644\u0645\u0643\u0648\u0651\u0646\u0627\u062a. \u0643\u0644 \u0642\u0633\u0645 \u0645\u0633\u062a\u0642\u0644 \u0644\u0643\u0646\u0647\u0645 \u064a\u062a\u0648\u0627\u0635\u0644\u0648\u0646 \u0639\u0628\u0631 \u0645\u0645\u0631\u0651\u0627\u062a \u0645\u0636\u0628\u0648\u0637\u0629.</p>"},{"location":"terms/tier/#3-tier-web-bff-app-api-db","title":"\u0645\u062b\u0627\u0644 \u0639\u0645\u0644\u064a \u2014 3-Tier \u0645\u0628\u0633\u0651\u0637 (Web BFF \u2194 App API \u2194 DB)","text":"<p>\u0641\u0643\u0631\u062a\u0646\u0627: \u0645\u0634\u0631\u0648\u0639\u0627\u0646 C# \u0645\u0646\u0641\u0635\u0644\u0627\u0646 + \u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a. \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u062a\u064f\u0646\u0634\u0631 \u0639\u0644\u0649 \u062e\u0648\u0627\u062f\u0645/\u062d\u0627\u0648\u064a\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629. \u0627\u0644\u0643\u0648\u062f \u0645\u062e\u062a\u0635\u0631 \u0644\u0644\u062a\u0648\u0636\u064a\u062d.</p>"},{"location":"terms/tier/#1-web-tier-bff-app-api-http","title":"(1) Web Tier \u2014 \u0628\u0648\u0627\u0628\u0629 \u0623\u0645\u0627\u0645\u064a\u0629 (BFF) \u062a\u0633\u062a\u062f\u0639\u064a App API \u0639\u0628\u0631 HTTP","text":"C#<pre><code>// WebBff/Program.cs  (.NET 8/9)\n// dotnet new web -n WebBff\nusing System.Net.Http.Json;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddHttpClient(\"app\", c =&gt; c.BaseAddress = new Uri(\"http://app-api\")); // DNS \u062f\u0627\u062e\u0644\u064a\nvar app = builder.Build();\n\napp.MapGet(\"/products\", async (IHttpClientFactory f) =&gt;\n{\n    var http = f.CreateClient(\"app\");\n    var items = await http.GetFromJsonAsync&lt;object[]&gt;(\"/api/products\");\n    return Results.Ok(new { from = \"web-bff\", items });\n});\n\napp.Run();\n</code></pre>"},{"location":"terms/tier/#2-app-tier","title":"(2) App Tier \u2014 \u0645\u0646\u0637\u0642 \u0623\u0639\u0645\u0627\u0644 + \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0628\u064a\u0627\u0646\u0627\u062a","text":"C#<pre><code>// AppApi/Program.cs  (.NET 8/9)\n// dotnet new web -n AppApi\nusing Microsoft.AspNetCore.Mvc;\nusing System.Data;\nusing Microsoft.Data.SqlClient;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddScoped&lt;IDbConnection&gt;(_ =&gt;\n    new SqlConnection(Environment.GetEnvironmentVariable(\"DB_CONN\")!)); // \u062d\u0642\u0646 \u0627\u062a\u0635\u0627\u0644\n\nvar app = builder.Build();\n\napp.MapGet(\"/api/products\", async ([FromServices] IDbConnection db) =&gt;\n{\n    await db.OpenAsync();\n    using var cmd = db.CreateCommand();\n    cmd.CommandText = \"SELECT TOP 10 Id, Name, Price FROM Products ORDER BY Id\";\n    using var r = await cmd.ExecuteReaderAsync();\n    var list = new List&lt;object&gt;();\n    while (await r.ReadAsync())\n        list.Add(new { Id = r.GetInt32(0), Name = r.GetString(1), Price = r.GetDecimal(2) });\n    return Results.Ok(list);\n});\n\napp.Run();\n</code></pre>"},{"location":"terms/tier/#3-data-tier-sql-server","title":"(3) Data Tier \u2014 SQL Server (\u062d\u0627\u0648\u064a\u0629/\u062e\u0627\u062f\u0645 \u0645\u0646\u0641\u0635\u0644)","text":"YAML<pre><code># docker-compose.yml  (\u062a\u0634\u063a\u064a\u0644 \u0645\u062d\u0644\u064a \u0644\u062b\u0644\u0627\u062b \u0637\u0628\u0642\u0627\u062a)\nversion: \"3.9\"\nservices:\n  db:\n    image: mcr.microsoft.com/mssql/server:2022-latest\n    environment:\n      - ACCEPT_EULA=Y\n      - SA_PASSWORD=Your_strong_password1!\n    ports: [ \"1433:1433\" ]\n  app-api:\n    build: ./AppApi\n    environment:\n      - DB_CONN=Server=db,1433;Database=Shop;User Id=sa;Password=Your_strong_password1!;TrustServerCertificate=True\n    depends_on: [ db ]\n  web-bff:\n    build: ./WebBff\n    ports: [ \"8080:8080\" ]           # \u062a\u0635\u062f\u064a\u0631 \u0627\u0644\u0648\u064a\u0628 \u0644\u0644\u062e\u0627\u0631\u062c\n    depends_on: [ app-api ]\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - WebBff \u0644\u0627 \u064a\u0643\u0644\u0651\u0645 DB \u0645\u0628\u0627\u0634\u0631\u0629\u061b \u064a\u0645\u0631\u0651 \u0639\u0628\u0631 AppApi. - \u064a\u0645\u0643\u0646 \u062a\u062d\u062c\u064a\u0645 web-bff \u0623\u0641\u0642\u064a\u064b\u0627 \u062f\u0648\u0646 \u0644\u0645\u0633 db. - \u0633\u064a\u0627\u0633\u0627\u062a \u0634\u0628\u0643\u0629 \u0648\u062c\u062f\u0631 \u0646\u0627\u0631\u064a\u0629 \u0628\u064a\u0646 \u0627\u0644\u0637\u0628\u0642\u0627\u062a (\u0641\u0642\u0637 AppApi \u064a\u0631\u0649 DB).</p>"},{"location":"terms/tier/#tiers","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 Tiers \u0633\u0644\u064a\u0645\u0629","text":"<ol> <li>\u062d\u062f\u0648\u062f \u0648\u0627\u0636\u062d\u0629: \u0645\u0627 \u0627\u0644\u0630\u064a \u064a\u0631\u0627\u0647 \u0643\u0644 Tier\u061f \u0627\u0645\u0646\u0639 \u0627\u0644\u0645\u0633\u0627\u0631\u0627\u062a \u0627\u0644\u062c\u0627\u0646\u0628\u064a\u0629 (Web\u2192DB \u2717).  </li> <li>\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0631\u0633\u0645\u064a\u0629: HTTP/gRPC \u0645\u0639 \u062a\u0648\u062b\u064a\u0642 (OpenAPI)\u060c \u0648\u0647\u0648\u064a\u0629 (mTLS/JWT).  </li> <li>\u0623\u0645\u0646 \u0627\u0644\u0634\u0628\u0643\u0629: SG/NSG/Firewall\u060c \u062a\u0642\u0633\u064a\u0645 \u0634\u0628\u0643\u064a (VNet/Subnet)\u060c \u0623\u0633\u0631\u0627\u0631 \u0639\u0628\u0631 Key Vault.  </li> <li>\u062a\u062d\u062c\u064a\u0645 \u0645\u0633\u062a\u0642\u0644: Autoscale \u0644\u0643\u0644 Tier \u062d\u0633\u0628 \u0627\u0644\u062d\u0645\u0644 (Web \u0643\u062b\u064a\u0641 I/O\u060c App CPU\u060c DB IOPS).  </li> <li>\u0627\u0644\u0645\u0631\u0627\u0642\u0628\u0629: Telemetry \u0645\u0641\u0631\u0651\u0642 \u062d\u0633\u0628 Tier (Logs/Traces/Metrics + Correlation-Id).  </li> <li>\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0623\u0639\u0637\u0627\u0644: \u0635\u062d\u0651\u0629/\u0627\u0633\u062a\u0639\u062f\u0627\u062f (Health/Readiness)\u060c Circuit Breakers\u060c \u0648(Backoff/Retry).  </li> <li>\u0627\u0644\u062a\u0648\u0632\u064a\u0639: CI/CD \u0644\u0643\u0644 Tier\u060c \u0646\u0634\u0631 \u062a\u062f\u0631\u064a\u062c\u064a (Blue/Green\u060c Canary).</li> </ol>"},{"location":"terms/tier/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u062e\u0644\u0637 \u0628\u064a\u0646 Layer \u0648Tier: \u062a\u0642\u0633\u064a\u0645 \u0645\u0644\u0641\u0627\u062a \u0641\u0642\u0637 \u0628\u0644\u0627 \u0641\u0635\u0644 \u0646\u0634\u0631 \u062d\u0642\u064a\u0642\u064a.  </li> <li>\u0642\u0646\u0648\u0627\u062a \u063a\u064a\u0631 \u0622\u0645\u0646\u0629 \u0628\u064a\u0646 \u0627\u0644\u0637\u0628\u0642\u0627\u062a (\u0628\u062f\u0648\u0646 TLS \u0623\u0648 \u0645\u0635\u0627\u062f\u0642\u0629 \u062e\u062f\u0645\u0629-\u0644\u062e\u062f\u0645\u0629).  </li> <li>\u0627\u0639\u062a\u0645\u0627\u062f Web \u0639\u0644\u0649 DB \u0645\u0628\u0627\u0634\u0631\u0629 \u2192 \u064a\u062e\u062a\u0646\u0642 \u0627\u0644\u0623\u0645\u0646 \u0648\u0627\u0644\u062a\u062d\u062c\u064a\u0645.  </li> <li>\u0645\u0634\u0627\u0631\u0643\u0629 \u0646\u0645\u0648\u0630\u062c \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0639 \u0627\u0644\u0648\u064a\u0628 (\u062a\u0633\u0631\u064a\u0628 \u062a\u0641\u0627\u0635\u064a\u0644).  </li> <li>\u0646\u0642\u0637\u0629 \u0641\u0634\u0644 \u0648\u0627\u062d\u062f\u0629 (DB \u0628\u0644\u0627 \u0646\u0633\u062e\u0629/\u062a\u0643\u0631\u0627\u0631\u060c \u0623\u0648 App \u0628\u0644\u0627 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0646\u0633\u062e\u0629).  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u0640 Timeouts \u0648Bulkhead \u0641\u064a \u0645\u0643\u0627\u0644\u0645\u0627\u062a \u0628\u064a\u0646\u064a\u0629.</li> </ul>"},{"location":"terms/tier/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Tier \u0641\u0635\u0644 \u0646\u0634\u0631 \u0639\u0628\u0631 \u062e\u0648\u0627\u062f\u0645/\u0634\u0628\u0643\u0627\u062a \u062d\u062f\u0648\u062f \u0623\u0645\u0627\u0646/\u0634\u0628\u0643\u0629\u061b \u062a\u062d\u062c\u064a\u0645 \u0648\u0639\u0632\u0644 \u0645\u0633\u062a\u0642\u0644 Layer \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u0643\u0648\u062f \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 \u0644\u0627 \u064a\u0641\u0631\u0636 \u0641\u0635\u0644 \u0646\u0634\u0631 \u0628\u062d\u062f \u0630\u0627\u062a\u0647 2-Tier Web \u2194 Data \u0645\u0628\u0627\u0634\u0631\u0629 \u0628\u0633\u064a\u0637\u061b \u0642\u064a\u0648\u062f \u0623\u0645\u0627\u0646/\u062a\u062d\u062c\u064a\u0645 3-Tier Web \u2194 App \u2194 Data \u0627\u0644\u0646\u0645\u0637 \u0627\u0644\u0645\u0624\u0633\u0633\u064a \u0627\u0644\u0634\u0627\u0626\u0639 Microservices \u062a\u0641\u062a\u064a\u062a App Tier \u0644\u062e\u062f\u0645\u0627\u062a \u0645\u0633\u062a\u0642\u0644\u0651\u0629 \u0645\u0631\u0648\u0646\u0629 \u0623\u0639\u0644\u0649 + \u062a\u0639\u0642\u064a\u062f \u0634\u0628\u0643\u0629/\u0645\u0631\u0627\u0642\u0628\u0629"},{"location":"terms/tier/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Tier \u064a\u0639\u0646\u064a \u0623\u064a\u0646 \u064a\u0639\u0645\u0644 \u0643\u0644 \u062c\u0632\u0621 \u0645\u0646 \u0646\u0638\u0627\u0645\u0643 \u0648\u0643\u064a\u0641 \u064a\u062a\u0648\u0627\u0635\u0644 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0629. \u0627\u0631\u0633\u0645 \u062d\u062f\u0648\u062f\u064b\u0627 \u0635\u0644\u0628\u0629\u060c \u0623\u0645\u0651\u0646 \u0627\u0644\u0642\u0646\u0648\u0627\u062a\u060c \u0648\u0627\u0633\u0645\u062d \u0628\u062a\u062d\u062c\u064a\u0645 \u0645\u0633\u062a\u0642\u0644 \u0648\u0645\u0631\u0627\u0642\u0628\u0629 \u0644\u0643\u0644 \u0637\u0628\u0642\u0629\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0623\u0643\u062b\u0631 \u0623\u0645\u0627\u0646\u064b\u0627\u060c \u0645\u0631\u0648\u0646\u0629 \u0641\u064a \u0627\u0644\u062a\u062d\u062c\u064a\u0645\u060c \u0648\u0635\u064a\u0627\u0646\u0629 \u0623\u0633\u0647\u0644 \u0639\u0644\u0649 \u0627\u0644\u0645\u062f\u0649 \u0627\u0644\u0637\u0648\u064a\u0644.</p>"},{"location":"terms/tls/","title":"TLS \u2014 Transport Layer Security","text":""},{"location":"terms/tls/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Transport Layer Security (TLS) \u2014 \u0623\u0645\u0646 \u0637\u0628\u0642\u0629 \u0627\u0644\u0646\u0642\u0644 (\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0644\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0642\u0646\u0627\u0629 \u0628\u064a\u0646 \u0637\u0631\u0641\u064a\u0646).</p>"},{"location":"terms/tls/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>TLS \u064a\u0648\u0641\u0651\u0631 \u062b\u0644\u0627\u062b \u0631\u0643\u0627\u0626\u0632 \u0644\u0644\u0642\u0646\u0627\u0629: \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0633\u0644\u0627\u0645\u062a\u0647\u0627 (\u0645\u0646\u0639 \u0627\u0644\u0639\u0628\u062b)\u060c \u0648\u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u0647\u0648\u064a\u0629 \u0639\u0628\u0631 \u0634\u0647\u0627\u062f\u0627\u062a \u0631\u0642\u0645\u064a\u0629. \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u062a\u062d\u062a \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0645\u062b\u0644 HTTPS/SMTP/IMAP/MQTT \u0644\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0645\u0631\u0648\u0631 \u0639\u0628\u0631 \u0627\u0644\u0634\u0628\u0643\u0627\u062a.</p>"},{"location":"terms/tls/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0628\u062f\u0623 \u0627\u0644\u0637\u0631\u0641\u0627\u0646 \u0645\u0635\u0627\u0641\u062d\u0629 (Handshake) \u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0648\u0625\u0646\u0634\u0627\u0621 \u0645\u0641\u0627\u062a\u064a\u062d \u062c\u0644\u0633\u0629.  </li> <li>\u0627\u0644\u062e\u0627\u062f\u0645 \u064a\u0642\u062f\u0651\u0645 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u0642\u0651\u0639\u0629 \u0645\u0646 \u0645\u0631\u062c\u0639 \u062b\u0642\u0629 (CA) \u0644\u064a\u062b\u0628\u062a \u0647\u0648\u064a\u062a\u0647.  </li> <li>\u0628\u0639\u062f \u0646\u062c\u0627\u062d \u0627\u0644\u0645\u0635\u0627\u0641\u062d\u0629\u060c \u062a\u064f\u0634\u0641\u0651\u064e\u0631 \u0643\u0644 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0648\u062a\u064f\u062d\u0645\u0649 \u0645\u0646 \u0627\u0644\u062a\u0644\u0627\u0639\u0628.  </li> <li>\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0645\u062e\u0635\u0651\u0635\u0629 \u0644\u0644\u0623\u0645\u0627\u0646 \u0648\u0627\u0644\u0633\u0631\u0639\u0629: TLS 1.2 \u0648TLS 1.3 (\u0627\u0644\u0623\u062d\u062f\u062b \u0648\u0627\u0644\u0623\u0641\u0636\u0644).</li> </ul>"},{"location":"terms/tls/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u062a\u0631\u0633\u0644 \u0631\u0633\u0627\u0644\u0629 \u062f\u0627\u062e\u0644 \u0638\u0631\u0641 \u0645\u064f\u0642\u0641\u064e\u0644 \u0648\u0645\u062e\u062a\u0648\u0645 \u0645\u0639 \u0628\u0637\u0627\u0642\u0629 \u062a\u0639\u0631\u064a\u0641 \u0645\u0648\u062b\u0648\u0642\u0629 \u0644\u0644\u0645\u0631\u0633\u0650\u0644. \u0623\u064a \u0648\u0633\u064a\u0637 \u0628\u0627\u0644\u0645\u0646\u062a\u0635\u0641 \u0644\u0627 \u064a\u0633\u062a\u0637\u064a\u0639 \u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0648\u0644\u0627 \u062a\u0632\u0648\u064a\u0631 \u0627\u0644\u0645\u064f\u0631\u0633\u0650\u0644.</p>"},{"location":"terms/tls/#c","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637","text":""},{"location":"terms/tls/#1-tls-kestrel-aspnet-core","title":"1) \u062a\u0641\u0639\u064a\u0644 \u0633\u064a\u0627\u0633\u0627\u062a TLS \u0641\u064a \u062e\u0627\u062f\u0645 Kestrel (ASP.NET Core)","text":"C#<pre><code>// Program.cs (.NET 8/9)\nusing System.Security.Authentication;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.WebHost.ConfigureKestrel(k =&gt;\n{\n    k.ConfigureHttpsDefaults(h =&gt;\n    {\n        // \u062d\u0635\u0631 \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0639\u0644\u0649 TLS 1.2 \u0648 1.3 \u0641\u0642\u0637\n        h.SslProtocols = SslProtocols.Tls12 | SslProtocols.Tls13;\n        // \u0645\u0644\u0627\u062d\u0638\u0627\u062a:\n        // - \u0627\u0633\u062a\u062e\u062f\u0645 \u0634\u0647\u0627\u062f\u0629 \u062e\u0627\u062f\u0645 \u0645\u0648\u062b\u0648\u0642\u0629 (Let's Encrypt/ACME) \u0639\u0628\u0631 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0623\u0648 reverse proxy.\n        // - \u0639\u0637\u0651\u0644 \u0627\u0644\u0623\u062c\u0646\u062d\u0629 \u0627\u0644\u0636\u0639\u064a\u0641\u0629 \u0625\u0646 \u0643\u0646\u062a \u062a\u062a\u062d\u0643\u0645 \u0628\u0647\u0627 (\u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0646\u0638\u0627\u0645/\u0627\u0644\u062e\u0627\u062f\u0645).\n    });\n});\n\nvar app = builder.Build();\napp.MapGet(\"/secure\", () =&gt; Results.Ok(new { ok = true }));\napp.Run();\n</code></pre>"},{"location":"terms/tls/#2-httpclient-tls","title":"2) \u0639\u0645\u064a\u0644 HttpClient \u064a\u0641\u0631\u0636 TLS \u062d\u062f\u064a\u062b\u064b\u0627 \u0648\u064a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0634\u0647\u0627\u062f\u0629","text":"C#<pre><code>using System.Net.Http;\nusing System.Security.Authentication;\n\nvar handler = new HttpClientHandler\n{\n    SslProtocols = SslProtocols.Tls12 | SslProtocols.Tls13\n    // \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0634\u0647\u0627\u062f\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 \u0645\u064f\u0641\u0639\u0651\u0644 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 \u2014 \u0644\u0627 \u062a\u0639\u0637\u0651\u0650\u0644\u0647 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c\n};\n\nusing var http = new HttpClient(handler) { BaseAddress = new Uri(\"https://example.com\") };\nvar res = await http.GetAsync(\"/secure\");\nConsole.WriteLine($\"{(int)res.StatusCode} {res.IsSuccessStatusCode}\");\n</code></pre>"},{"location":"terms/tls/#3-sslstream-tcp","title":"3) (\u0627\u062e\u062a\u064a\u0627\u0631\u064a) \u0627\u0633\u062a\u062e\u062f\u0627\u0645 SslStream \u0645\u0628\u0627\u0634\u0631\u0629\u064b \u0641\u0648\u0642 TCP","text":"C#<pre><code>using System.Net.Security;\nusing System.Net.Sockets;\nusing System.Security.Authentication;\nusing System.Text;\n\nusing var tcp = new TcpClient();\nawait tcp.ConnectAsync(\"example.com\", 443);\n\nusing var ssl = new SslStream(tcp.GetStream(), leaveInnerStreamOpen: false);\nawait ssl.AuthenticateAsClientAsync(new SslClientAuthenticationOptions\n{\n    TargetHost = \"example.com\",\n    EnabledSslProtocols = SslProtocols.Tls12 | SslProtocols.Tls13\n});\n\nvar req = \"GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\";\nvar bytes = Encoding.ASCII.GetBytes(req);\nawait ssl.WriteAsync(bytes);\nawait ssl.FlushAsync();\n\nvar buf = new byte[8192];\nint n = await ssl.ReadAsync(buf);\nConsole.WriteLine(Encoding.ASCII.GetString(buf, 0, n));\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: TLS \u064a\u0624\u0645\u0651\u0646 \u0627\u0644\u0642\u0646\u0627\u0629 \u0646\u0641\u0633\u0647\u0627\u060c \u0633\u0648\u0627\u0621 \u0627\u0633\u062a\u0639\u0645\u0644\u062a\u0647\u0627 \u0639\u0628\u0631 HTTP (HTTPS) \u0623\u0648 \u0645\u0628\u0627\u0634\u0631\u0629\u064b \u0639\u0628\u0631 SslStream.</p>"},{"location":"terms/tls/#tls-checklist","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0623\u0645\u064a\u0646 TLS (Checklist)","text":"<ul> <li>\u0627\u0639\u062a\u0645\u062f TLS 1.2/1.3 \u0641\u0642\u0637\u061b \u0639\u0637\u0651\u0644 \u0627\u0644\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0648\u0627\u0644\u0623\u062c\u0646\u062d\u0629 \u0627\u0644\u0642\u062f\u064a\u0645\u0629.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 \u0628\u0633\u0644\u0633\u0644\u0629 \u062b\u0642\u0629 \u0643\u0627\u0645\u0644\u0629 \u0648SAN \u0635\u062d\u064a\u062d \u0644\u0627\u0633\u0645 \u0627\u0644\u0645\u0636\u064a\u0641.  </li> <li>\u0641\u0639\u0651\u0644 HSTS \u0639\u0646\u062f \u0627\u0644\u0648\u064a\u0628\u060c \u0648\u062d\u0648\u0651\u0650\u0644 HTTP \u21a6 HTTPS.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0646\u062a\u0647\u0627\u0621 \u0627\u0644\u0634\u0647\u0627\u062f\u0627\u062a \u0648\u062c\u062f\u0651\u062f\u0647\u0627 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 (ACME/Cert-Manager).  </li> <li>\u062f\u0639\u0645 HTTP/2/3 (ALPN) \u0644\u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u0623\u062f\u0627\u0621 \u0639\u0646\u062f \u0627\u0644\u0625\u0645\u0643\u0627\u0646.  </li> <li>\u0644\u0627 \u062a\u064f\u0639\u0637\u0651\u0650\u0644 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u0634\u0647\u0627\u062f\u0629 \u0641\u064a \u0627\u0644\u0639\u0645\u064a\u0644\u061b \u0625\u0646 \u0627\u062d\u062a\u062c\u062a pinning \u0641\u062e\u0637\u0651\u0637 \u0644\u0640 \u062f\u0648\u0631\u0627\u0646 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d.  </li> </ul>"},{"location":"terms/tls/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0634\u0647\u0627\u062f\u0627\u062a \u0645\u0648\u0642\u0651\u0639\u0629 \u0630\u0627\u062a\u064a\u064b\u0627 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0623\u0648 \u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u062a\u062d\u0642\u0651\u0642.  </li> <li>\u062a\u0631\u0643 TLS 1.0/1.1 \u0645\u0641\u0639\u0651\u0644\u064b\u0627 \u0623\u0648 \u0623\u062c\u0646\u062d\u0629 \u062a\u0634\u0641\u064a\u0631 \u0636\u0639\u064a\u0641\u0629.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0633\u0644\u0633\u0644\u0629 \u0627\u0644\u062b\u0642\u0629 \u0627\u0644\u0648\u0633\u064a\u0637\u0629 \u2192 \u0641\u0634\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0644\u062f\u0649 \u0627\u0644\u0639\u0645\u0644\u0627\u0621.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 TLS \u0648\u062d\u062f\u0647 \u062f\u0648\u0646 AuthZ/Rate-Limit/CSRF/CORS \u0639\u0644\u0649 \u0637\u0628\u0642\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.</li> </ul>"},{"location":"terms/tls/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 HTTPS HTTP \u0639\u0628\u0631 TLS \u0645\u0639 \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u062e\u0627\u062f\u0645 \u0642\u0646\u0627\u0629 \u0648\u064a\u0628 \u0645\u0634\u0641\u0651\u0631\u0629 \u0648\u0647\u0648\u064a\u0629 \u0627\u0644\u062e\u0627\u062f\u0645 TLS \u062a\u0634\u0641\u064a\u0631/\u0633\u0644\u0627\u0645\u0629/\u062a\u0648\u062b\u064a\u0642 \u0639\u0644\u0649 \u0637\u0628\u0642\u0629 \u0627\u0644\u0646\u0642\u0644 \u064a\u064f\u0633\u062a\u062e\u062f\u0645 \u062a\u062d\u062a \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644\u0627\u062a \u0643\u062b\u064a\u0631\u0629 (HTTPS/SMTP/IMAP/\u2026) mTLS \u062a\u0648\u062b\u064a\u0642 \u0645\u062a\u0628\u0627\u062f\u0644 (\u062e\u0627\u062f\u0645 \u0648\u0639\u0645\u064a\u0644) \u0641\u0648\u0642 TLS \u064a\u062d\u062a\u0627\u062c \u0634\u0647\u0627\u062f\u0627\u062a \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0648\u0625\u062f\u0627\u0631\u0629 \u0645\u0641\u0627\u062a\u064a\u062d"},{"location":"terms/tls/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>TLS \u0647\u0648 \u0627\u0644\u063a\u0644\u0627\u0641 \u0627\u0644\u0623\u0645\u0646\u064a \u0644\u0644\u0642\u0646\u0648\u0627\u062a \u0627\u0644\u0634\u0628\u0643\u064a\u0629: \u064a\u0642\u062f\u0651\u0645 \u062a\u0634\u0641\u064a\u0631\u064b\u0627 + \u0633\u0644\u0627\u0645\u0629 + \u0647\u0648\u064a\u0629. \u0627\u0633\u062a\u0639\u0645\u0644\u0647 \u0639\u0628\u0631 \u0627\u0644\u0625\u0635\u062f\u0627\u0631\u0627\u062a \u0627\u0644\u062d\u062f\u064a\u062b\u0629\u060c \u0628\u0634\u0647\u0627\u062f\u0627\u062a \u0645\u0648\u062b\u0648\u0642\u0629\u060c \u0648\u0633\u064a\u0627\u0633\u0627\u062a \u0635\u0627\u0631\u0645\u0629 \u0644\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0642\u0646\u0627\u0629 \u0622\u0645\u0646\u0629 \u0648\u0645\u0633\u062a\u0642\u0631\u0629.</p>"},{"location":"terms/tls/#_8","title":"\u0633\u0624\u0627\u0644 \u062a\u062b\u0628\u064a\u062a (\u0625\u062c\u0627\u0628\u0629 \u0645\u062e\u0641\u064a\u0651\u0629)","text":"<p>\u0623\u0646\u062a \u062a\u0628\u0646\u064a API \u0639\u0627\u0645\u0629. \u0645\u0627 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0627\u0644\u0645\u062a\u0639\u0644\u0642\u0629 \u0628\u0640 TLS \u0627\u0644\u062a\u064a \u064a\u0646\u0628\u063a\u064a \u062a\u0641\u0639\u064a\u0644\u0647\u0627\u061f</p> \u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0625\u062c\u0627\u0628\u0629   **TLS 1.2/1.3 \u0641\u0642\u0637**\u060c \u0634\u0647\u0627\u062f\u0629 \u0645\u0648\u062b\u0648\u0642\u0629 \u0628\u0633\u0644\u0633\u0644\u0629 \u0643\u0627\u0645\u0644\u0629 \u0648**SAN** \u0635\u062d\u064a\u062d\u060c **HSTS** + \u062a\u062d\u0648\u064a\u0644 **HTTP \u2192 HTTPS**\u060c     \u062a\u0639\u0637\u064a\u0644 \u0627\u0644\u0623\u062c\u0646\u062d\u0629 \u0627\u0644\u0636\u0639\u064a\u0641\u0629\u060c \u0648\u062a\u062c\u062f\u064a\u062f \u062a\u0644\u0642\u0627\u0626\u064a \u0644\u0644\u0634\u0647\u0627\u062f\u0629 \u0645\u0639 \u0645\u0631\u0627\u0642\u0628\u0629 \u0627\u0644\u0627\u0646\u062a\u0647\u0627\u0621."},{"location":"terms/udp/","title":"UDP","text":""},{"location":"terms/udp/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>User Datagram Protocol (UDP) \u2014 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0645\u062e\u0637\u0637\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 (\u0625\u0631\u0633\u0627\u0644 \u062e\u0641\u064a\u0641 \u0628\u0644\u0627 \u0627\u062a\u0635\u0627\u0644).</p>"},{"location":"terms/udp/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0646\u0642\u0644 \u0628\u062f\u0648\u0646 \u0627\u062a\u0635\u0627\u0644\u060c \u0628\u062f\u0648\u0646 \u0636\u0645\u0627\u0646\u0627\u062a \u0644\u0644\u062a\u0633\u0644\u064a\u0645 \u0623\u0648 \u0627\u0644\u062a\u0631\u062a\u064a\u0628 \u0623\u0648 \u0627\u0644\u062a\u0643\u0631\u0627\u0631. \u0633\u0631\u064a\u0639 \u0648\u062e\u0641\u064a\u0641\u060c \u064a\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u062d\u062f\u0648\u062f \u0627\u0644\u0631\u0633\u0627\u0626\u0644 (Datagrams)\u060c \u0648\u0645\u0646\u0627\u0633\u0628 \u0644\u0640 \u0627\u0644\u0632\u0645\u0646 \u0627\u0644\u062d\u0642\u064a\u0642\u064a: \u0635\u0648\u062a/\u0641\u064a\u062f\u064a\u0648/\u0623\u0644\u0639\u0627\u0628\u060c \u0627\u0644\u0628\u062b \u0648\u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0625\u0631\u0633\u0627\u0644.</p>"},{"location":"terms/udp/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0644\u0627 \u062a\u0648\u062c\u062f \u0645\u0635\u0627\u0641\u062d\u0629 \u0648\u0644\u0627 \u062c\u0644\u0633\u0629: \u062a\u0631\u0633\u0644 \u0631\u064f\u0632\u064e\u0645\u064b\u0627 \u0645\u0633\u062a\u0642\u0644\u0651\u0629\u061b \u0642\u062f \u062a\u0636\u064a\u0639 \u0623\u0648 \u062a\u062a\u0643\u0631\u0651\u0631 \u0623\u0648 \u062a\u0635\u0644 \u062e\u0627\u0631\u062c \u0627\u0644\u062a\u0631\u062a\u064a\u0628.  </li> <li>\u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0633\u0624\u0648\u0644 \u0639\u0646 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0625\u0631\u0633\u0627\u0644/\u0627\u0644\u062a\u0631\u0642\u064a\u0645/\u0627\u0644\u062a\u062d\u0642\u0642 \u0625\u0646 \u0627\u062d\u062a\u0627\u062c \u0627\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629.  </li> <li>\u064a\u062f\u0639\u0645 Broadcast (<code>255.255.255.255</code>) \u0648Multicast (<code>239.0.0.0/8</code>, <code>ff00::/8</code> \u0641\u064a IPv6).  </li> <li>\u062a\u062c\u0646\u0651\u0628 \u062a\u062c\u0632\u0626\u0629 IP: \u0623\u0628\u0642\u0650 \u0627\u0644\u062d\u0645\u0648\u0644\u0629 \u062f\u0648\u0646 MTU (\u2248 1200 \u0628\u0627\u064a\u062a \u0639\u0645\u0644\u064a\u064b\u0627 \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a).</li> </ul>"},{"location":"terms/udp/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0631\u0633\u0627\u0626\u0644 \u0628\u0631\u064a\u062f \u0639\u0627\u062f\u064a \u0628\u0644\u0627 \u0625\u064a\u0635\u0627\u0644 \u0627\u0633\u062a\u0644\u0627\u0645. \u0633\u0631\u064a\u0639\u0629 \u0648\u0631\u062e\u064a\u0635\u0629\u060c \u0644\u0643\u0646 \u0642\u062f \u062a\u0636\u064a\u0639 \u0623\u0648 \u062a\u0635\u0644 \u0645\u062a\u0623\u062e\u0631\u0629. \u0625\u0646 \u0623\u0631\u062f\u062a \u0627\u0644\u0636\u0645\u0627\u0646\u0627\u062a\u060c \u0639\u0644\u064a\u0643 \u0625\u0636\u0627\u0641\u0629 \u0623\u0631\u0642\u0627\u0645 \u062a\u062a\u0628\u0651\u0639 \u0648\u0642\u0648\u0627\u0639\u062f\u0643 \u0641\u0648\u0642\u0647\u0627.</p>"},{"location":"terms/udp/#c-udp-echo","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062e\u0627\u062f\u0645/\u0639\u0645\u064a\u0644 UDP Echo)","text":""},{"location":"terms/udp/#udp-echo","title":"\u062e\u0627\u062f\u0645 UDP (Echo)","text":"C#<pre><code>// dotnet add package System.Net.Sockets\nusing System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass UdpEchoServer\n{\n    public static void Main()\n    {\n        using var udp = new UdpClient(new IPEndPoint(IPAddress.Any, 6000)); // \u064a\u0633\u062a\u0645\u0639 \u0639\u0644\u0649 :6000\n        Console.WriteLine(\"UDP Echo on 0.0.0.0:6000\");\n\n        while (true)\n        {\n            IPEndPoint? remote = null;\n            byte[] data = udp.Receive(ref remote); // \u0642\u062f \u062a\u0623\u062a\u064a \u0631\u0633\u0627\u0626\u0644 \u0645\u062a\u062a\u0627\u0628\u0639\u0629 \u0623\u0648 \u0644\u0627 \u062a\u0623\u062a\u064a\n            string text = Encoding.UTF8.GetString(data);\n            Console.WriteLine($\"[{remote}] {text}\");\n\n            // \u0623\u0639\u062f \u0646\u0641\u0633 \u0627\u0644\u062d\u0645\u0648\u0644\u0629 (Echo)\n            udp.Send(data, data.Length, remote);\n        }\n    }\n}\n</code></pre>"},{"location":"terms/udp/#udp_1","title":"\u0639\u0645\u064a\u0644 UDP","text":"C#<pre><code>using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass UdpEchoClient\n{\n    public static void Main()\n    {\n        using var udp = new UdpClient();\n        udp.Client.ReceiveTimeout = 3000; // \u0645\u0647\u0644\u0629 \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0628\u0627\u0644\u0645\u0644\u0644\u064a \u062b\u0627\u0646\u064a\u0629\n\n        var server = new IPEndPoint(IPAddress.Loopback, 6000);\n\n        foreach (var msg in new[] { \"hello\", \"udp\", \"world\" })\n        {\n            byte[] payload = Encoding.UTF8.GetBytes(msg);\n            udp.Send(payload, payload.Length, server);\n\n            // \u0627\u0633\u062a\u0642\u0628\u0644 \u0627\u0644\u0631\u062f (\u0642\u062f \u064a\u0636\u064a\u0639\u061b \u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a/\u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0644\u0627\u062d\u0642\u064b\u0627)\n            try\n            {\n                var from = new IPEndPoint(IPAddress.Any, 0);\n                byte[] data = udp.Receive(ref from);\n                Console.WriteLine(Encoding.UTF8.GetString(data)); // echo:...\n            }\n            catch (SocketException)\n            {\n                Console.WriteLine(\"timeout/no reply\");\n            }\n        }\n    }\n}\n</code></pre> <p>\u0645\u0644\u0627\u062d\u0638\u0627\u062a: - UDP \u064a\u062d\u0627\u0641\u0638 \u0639\u0644\u0649 \u062d\u062f\u0648\u062f \u0627\u0644\u0631\u0633\u0627\u0644\u0629 (\u0639\u0643\u0633 TCP \u0627\u0644\u0630\u064a \u0647\u0648 Stream). - \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0642\u062f \u062a\u0636\u064a\u0639\u060c \u062a\u062a\u0643\u0631\u0651\u0631\u060c \u0623\u0648 \u062a\u0635\u0644 \u062e\u0627\u0631\u062c \u0627\u0644\u062a\u0631\u062a\u064a\u0628\u2014\u0623\u0636\u0650\u0641 Sequence/Ack \u0644\u0648 \u0623\u0631\u062f\u062a \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u064a\u0629. - \u0644\u0644\u0628\u062b \u0627\u0644\u0645\u062a\u0639\u062f\u062f: \u0627\u0633\u062a\u062e\u062f\u0645 <code>udp.JoinMulticastGroup(IPAddress.Parse(\"239.1.1.1\"));</code> \u0648\u0627\u0636\u0628\u0637 <code>TTL</code>.</p>"},{"location":"terms/udp/#udp_2","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0644\u0639\u0645\u0644 \u0645\u0639 UDP","text":"<ul> <li>\u0635\u0645\u0651\u0645 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u062a\u0637\u0628\u064a\u0642 \u0628\u0633\u064a\u0637\u064b\u0627: <code>type | seq | payload</code> \u0645\u0639 Sequence/Ack \u0648Retry/Backoff \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.  </li> <li>\u062d\u062c\u0651\u0645 \u0627\u0644\u062d\u0645\u0648\u0644\u0629 &lt; MTU (\u2248 1200 \u0628\u0627\u064a\u062a) \u0644\u062a\u062c\u0646\u0651\u0628 \u062a\u062c\u0632\u0626\u0629 IP \u0648\u0641\u0642\u062f\u0627\u0646 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0639\u0646\u062f \u0625\u0633\u0642\u0627\u0637 \u062c\u0632\u0621.  </li> <li>\u0639\u0627\u0644\u062c Out-of-Order/Duplicate \u0639\u0628\u0631 \u0623\u0631\u0642\u0627\u0645 \u062a\u0633\u0644\u0633\u0644\u064a\u0629 \u0648\u0646\u0627\u0641\u0630\u0629 \u0627\u0633\u062a\u0642\u0628\u0627\u0644.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Time-outs \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0648\u0625\u0633\u0642\u0627\u0637 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0642\u062f\u064a\u0645\u0629.  </li> <li>\u0644\u0644\u0628\u062b/\u0627\u0644\u0645\u062a\u0639\u062f\u062f:  </li> <li>Broadcast \u0642\u062f \u064a\u064f\u062d\u0638\u0631 \u0639\u0644\u0649 \u0628\u0639\u0636 \u0627\u0644\u0634\u0628\u0643\u0627\u062a.  </li> <li>Multicast \u064a\u062d\u062a\u0627\u062c \u062a\u0645\u0643\u064a\u0646\u064b\u0627 \u0645\u0646 \u0627\u0644\u0645\u0648\u062c\u0651\u0647\u0627\u062a \u0648\u0636\u0628\u0637 <code>TTL</code> \u0648\u0639\u0636\u0648\u064a\u0629 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629.  </li> <li>\u0639\u0628\u0631 NAT/\u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a: \u0641\u0643\u0651\u0631 \u0641\u064a STUN/ICE \u0623\u0648 \u0646\u0641\u0642 \u0622\u0645\u0646/\u0648\u0633\u064a\u0637.</li> </ul>"},{"location":"terms/udp/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u0623\u0646 UDP \u201c\u0633\u064a\u0648\u0635\u0644 \u062f\u0627\u0626\u0645\u064b\u0627\u201d \u2192 \u062a\u062c\u0627\u0647\u0644 \u0641\u0642\u062f\u0627\u0646 \u0627\u0644\u062d\u0632\u0645 \u0648\u0627\u0644\u062a\u0643\u0631\u0627\u0631.  </li> <li>\u0625\u0631\u0633\u0627\u0644 \u0631\u0633\u0627\u0626\u0644 \u0636\u062e\u0645\u0629 \u062a\u062a\u062c\u0632\u0651\u0623 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u0649 IP \u2192 \u0641\u0642\u062f\u0627\u0646 \u0645\u0631\u062a\u0641\u0639.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u062a\u062d\u0643\u0645 \u0641\u064a \u0627\u0644\u0645\u0639\u062f\u0644/Backpressure \u0641\u064a \u0627\u0644\u0637\u0631\u0641 \u0627\u0644\u0645\u0631\u0633\u0644 \u062a\u062d\u062a \u0627\u0644\u0636\u063a\u0637.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Broadcast \u0628\u0644\u0627 \u062d\u0630\u0631 \u2192 \u0636\u062c\u064a\u062c \u0634\u0628\u0643\u064a/\u062d\u0638\u0631 \u0645\u0646 \u0627\u0644\u0623\u062c\u0647\u0632\u0629.  </li> <li>\u0645\u0642\u0627\u0631\u0646\u0629 UDP \u0628\u0640 TCP \u0645\u0646 \u062d\u064a\u062b \u0627\u0644\u0636\u0645\u0627\u0646\u0627\u062a\u061b \u0647\u0645\u0627 \u0644\u0647\u062f\u0641\u064a\u0646 \u0645\u062e\u062a\u0644\u0641\u064a\u0646.</li> </ul>"},{"location":"terms/udp/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 TCP \u0627\u062a\u0635\u0627\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u0631\u062a\u0651\u0628 (Stream) \u0645\u0635\u0627\u0641\u062d\u0629/\u0625\u0642\u0631\u0627\u0631/\u0625\u0639\u0627\u062f\u0629 \u0625\u0631\u0633\u0627\u0644\u061b \u0623\u0628\u0637\u0623 \u0646\u0633\u0628\u064a\u064b\u0627 UDP \u0625\u0631\u0633\u0627\u0644 \u062e\u0641\u064a\u0641 \u0628\u0644\u0627 \u0627\u062a\u0635\u0627\u0644 (Datagrams) \u0644\u0627 \u0636\u0645\u0627\u0646 \u062a\u0633\u0644\u064a\u0645/\u062a\u0631\u062a\u064a\u0628/\u062a\u0641\u0631\u064a\u062f\u061b \u0645\u0645\u062a\u0627\u0632 \u0644\u0644\u0632\u0645\u0646 \u0627\u0644\u062d\u0642\u064a\u0642\u064a \u0648\u0627\u0644\u0628\u062b QUIC \u0646\u0642\u0644 \u0645\u0648\u062b\u0648\u0642 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u062a\u062f\u0641\u0642\u0627\u062a \u0641\u0648\u0642 UDP \u0645\u0639 TLS \u0645\u062f\u0645\u062c \u064a\u0642\u0644\u0651\u0644 RTT \u0648\u064a\u062d\u0644 \u0645\u0634\u0627\u0643\u0644 Head-of-line \u0641\u064a TCP"},{"location":"terms/udp/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>UDP = \u0633\u0631\u0639\u0629 \u0648\u062e\u0641\u0651\u0629 \u0648\u062d\u062f\u0648\u062f \u0631\u0633\u0627\u0626\u0644\u060c \u0644\u0643\u0646 \u0644\u0627 \u0636\u0645\u0627\u0646\u0627\u062a. \u0625\u0646 \u0627\u062d\u062a\u062c\u062a \u0627\u0644\u0645\u0648\u062b\u0648\u0642\u064a\u0629 \u0623\u0636\u0650\u0641\u0647\u0627 \u0639\u0644\u0649 \u0637\u0628\u0642\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0623\u0648 \u0627\u0633\u062a\u062e\u062f\u0645 QUIC/TCP\u061b \u0648\u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062d\u064a\u0651\u0629 (\u0635\u0648\u062a/\u0641\u064a\u062f\u064a\u0648/\u0623\u0644\u0639\u0627\u0628) \u063a\u0627\u0644\u0628\u064b\u0627 \u064a\u0643\u0648\u0646 \u0627\u0644\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0623\u0645\u062b\u0644.</p>"},{"location":"terms/uml/","title":"UML \u2014 Unified Modeling Language","text":""},{"location":"terms/uml/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Unified Modeling Language (UML) \u2014 \u0644\u063a\u0629 \u0627\u0644\u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u0645\u0648\u062d\u0651\u062f\u0629.</p>"},{"location":"terms/uml/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0631\u0645\u064a\u0632 \u0628\u0635\u0631\u064a \u0642\u064a\u0627\u0633\u064a \u0644\u0646\u0645\u0630\u062c\u0629 \u0627\u0644\u0623\u0646\u0638\u0645\u0629: \u0628\u0646\u064a\u0629\u060c \u0633\u0644\u0648\u0643\u060c \u0648\u062a\u0641\u0627\u0639\u0644\u0627\u062a. \u0644\u064a\u0633\u062a \u0645\u0646\u0647\u062c\u064a\u0629 \u062a\u0637\u0648\u064a\u0631\u060c \u0628\u0644 \u0644\u063a\u0629 \u0631\u0633\u0645 \u062a\u062f\u0639\u0645 \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0648\u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0648\u0627\u0644\u062a\u0648\u062b\u064a\u0642.</p>"},{"location":"terms/uml/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0648\u0639\u0627\u0646 \u0623\u0633\u0627\u0633\u064a\u0627\u0646 \u0645\u0646 \u0627\u0644\u0645\u062e\u0637\u0637\u0627\u062a:  </li> <li>\u0628\u0650\u0646\u064a\u0648\u064a\u0651\u0629 (Structural): Class, Object, Component, Deployment, Package.  </li> <li>\u0633\u0644\u0648\u0643\u064a\u0651\u0629 (Behavioral): Use Case, Sequence, Activity, State Machine, Communication, Timing.  </li> <li>\u062a\u0641\u064a\u062f \u0641\u064a: \u062a\u0648\u062d\u064a\u062f \u0627\u0644\u0641\u0647\u0645\u060c \u062a\u0642\u0644\u064a\u0644 \u0627\u0644\u063a\u0645\u0648\u0636\u060c \u062a\u062e\u0637\u064a\u0637 \u0627\u0644\u062d\u062f\u0648\u062f \u0648\u0627\u0644\u0648\u0627\u062c\u0647\u0627\u062a\u060c \u0648\u0625\u0633\u0646\u0627\u062f \u0627\u0644\u0642\u0631\u0627\u0631\u0627\u062a (ADR).  </li> <li>\u062a\u064f\u0643\u062a\u0628 \u064a\u062f\u0648\u064a\u064b\u0627 \u0623\u0648 \u0643\u0646\u0635 (Mermaid/PlantUML) \u0636\u0645\u0646 Docs-as-Code \u062a\u062d\u062a Git.</li> </ul>"},{"location":"terms/uml/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0623\u0628\u062c\u062f\u064a\u0629 \u0648\u0631\u0645\u0648\u0632 \u0645\u0648\u062d\u0651\u062f\u0629 \u0644\u064a\u0631\u0633\u0645 \u0628\u0647\u0627 \u0627\u0644\u0641\u0631\u064a\u0642 \u062e\u0631\u0627\u0626\u0637 \u0627\u0644\u0646\u0638\u0627\u0645 \u0628\u062f\u0644 \u0627\u0644\u0643\u0644\u0627\u0645 \u0627\u0644\u0639\u0627\u0645\u0651\u064a \u0627\u0644\u0645\u062e\u062a\u0644\u0641 \u0628\u064a\u0646 \u0627\u0644\u0623\u0641\u0631\u0627\u062f.</p>"},{"location":"terms/uml/#1-class-diagram-mermaid-c","title":"\u0645\u062b\u0627\u0644 1 \u2014 Class Diagram (Mermaid) + \u0643\u0648\u062f C# \u0645\u0637\u0627\u0628\u0642","text":""},{"location":"terms/uml/#mermaid","title":"\u0645\u062e\u0637\u0637 (Mermaid)","text":"Text Only<pre><code>classDiagram\n  class Customer { +Id:int +Name:string }\n  class Order { +Id:int +Total:decimal +Place() }\n  class PaymentMethod { &lt;&lt;interface&gt;&gt; +Pay(amount:decimal) }\n  class CreditCard\n  class PayPal\n\n  Customer \"1\" --&gt; \"0..*\" Order : places\n  Order \"1\" --&gt; \"1\" PaymentMethod : uses\n  PaymentMethod &lt;|.. CreditCard\n  PaymentMethod &lt;|.. PayPal\n</code></pre>"},{"location":"terms/uml/#c","title":"\u0643\u0648\u062f C# \u0645\u0643\u0627\u0641\u0626 (\u062a\u0643\u0648\u064a\u0646/\u062a\u0648\u0631\u064a\u062b/\u0627\u0639\u062a\u0645\u0627\u062f)","text":"C#<pre><code>public record Customer(int Id, string Name)\n{\n    public List&lt;Order&gt; Orders { get; } = new();\n}\n\npublic interface IPaymentMethod\n{\n    void Pay(decimal amount);\n}\n\npublic class CreditCard : IPaymentMethod\n{\n    public string MaskedNumber { get; init; } = \"**** **** **** 1234\";\n    public void Pay(decimal amount) { /* \u0627\u062a\u0635\u0627\u0644 \u0628\u0648\u0627\u0628\u0629 \u0628\u0637\u0627\u0642\u0627\u062a */ }\n}\n\npublic class PayPal : IPaymentMethod\n{\n    public string AccountEmail { get; init; } = \"buyer@example.com\";\n    public void Pay(decimal amount) { /* API \u0628\u0627\u064a \u0628\u0627\u0644 */ }\n}\n\npublic class Order\n{\n    public int Id { get; init; }\n    public decimal Total { get; private set; }\n    private readonly IPaymentMethod _payment;\n\n    public Order(IPaymentMethod payment) =&gt; _payment = payment;\n\n    public void AddLine(decimal price) =&gt; Total += price;\n\n    public void Place()\n    {\n        // \u064a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u062f\u0641\u0639 (\u062a\u0639\u062f\u062f \u0627\u0644\u0623\u0634\u0643\u0627\u0644)\n        _payment.Pay(Total);\n        // \u062a\u062d\u062f\u064a\u062b \u062d\u0627\u0644\u0629/\u0625\u0637\u0644\u0627\u0642 \u062d\u062f\u062b...\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0627\u0644\u0645\u062e\u0637\u0637 \u064a\u0648\u0636\u0651\u062d \u062a\u0648\u0631\u064a\u062b \u0627\u0644\u0648\u0627\u062c\u0647\u0629 \u0648\u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a (\u0639\u0645\u064a\u0644 \u064a\u0645\u0644\u0643 \u0637\u0644\u0628\u0627\u062a\u060c \u0627\u0644\u0637\u0644\u0628 \u064a\u0633\u062a\u062e\u062f\u0645 \u0648\u0633\u064a\u0644\u0629 \u062f\u0641\u0639).</p>"},{"location":"terms/uml/#2-sequence-diagram","title":"\u0645\u062b\u0627\u0644 2 \u2014 Sequence Diagram (\u062a\u0633\u0644\u0633\u0644 \u0631\u0633\u0627\u0626\u0644)","text":"<p>Text Only<pre><code>sequenceDiagram\n  autonumber\n  participant U as User\n  participant Web as Web App\n  participant S as Orders Service\n  participant P as Payment GW\n\n  U-&gt;&gt;Web: Click \"Checkout\"\n  Web-&gt;&gt;S: POST /orders (cart)\n  S-&gt;&gt;P: Charge(amount, token)\n  P--&gt;&gt;S: OK(txId)\n  S--&gt;&gt;Web: 201 Created (orderId, txId)\n  Web--&gt;&gt;U: Confirmation Page\n</code></pre> \u0627\u0644\u0641\u0643\u0631\u0629: \u0645\u0646 \u201c\u0627\u0644\u0646\u0642\u0631\u201d \u062d\u062a\u0649 \u0627\u0644\u062a\u0623\u0643\u064a\u062f\u060c \u062a\u064f\u0639\u0631\u0636 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u062d\u0633\u0628 \u0627\u0644\u0632\u0645\u0646 \u0628\u064a\u0646 \u0627\u0644\u0645\u0634\u0627\u0631\u0643\u064a\u0646.</p>"},{"location":"terms/uml/#uml","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 UML \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u062d\u062f\u0651\u0650\u062f \u0627\u0644\u063a\u0631\u0636 \u0648\u0627\u0644\u062c\u0645\u0647\u0648\u0631 (\u0642\u0631\u0627\u0631 \u0645\u0639\u0645\u0627\u0631\u064a\u061f \u062a\u0648\u062b\u064a\u0642 \u0648\u0627\u062c\u0647\u0627\u062a\u061f \u062a\u062f\u0631\u064a\u0628 \u0641\u0631\u064a\u0642\u061f).  </li> <li>\u0627\u062e\u062a\u0631 \u0646\u0648\u0639 \u0627\u0644\u0645\u062e\u0637\u0637 \u0627\u0644\u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0646\u0637\u0627\u0642 (Class/Sequence/Activity/\u2026)\u060c \u0648\u0627\u062d\u062f \u0644\u0643\u0644 \u0633\u0624\u0627\u0644.  </li> <li>\u0627\u0628\u0642\u0650 \u0627\u0644\u0631\u0645\u0648\u0632 \u0645\u0648\u062d\u0651\u062f\u0629 \u0648\u0628\u0633\u064a\u0637\u0629 \u0648\u0623\u0636\u0650\u0641 \u062a\u0639\u0644\u064a\u0642\u0627\u062a \u0642\u0635\u064a\u0631\u0629/Legend \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0646\u0635\u064b\u0627 \u0642\u0627\u0628\u0644\u064b\u0627 \u0644\u0644\u0645\u0631\u0627\u062c\u0639\u0629 (Mermaid/PlantUML) \u062f\u0627\u062e\u0644 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639.  </li> <li>\u0627\u0631\u0628\u0637 \u0627\u0644\u0645\u062e\u0637\u0637\u0627\u062a \u0628\u0640 ADR \u0648\u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062f\u0645\u062c. \u0631\u0627\u062c\u0639\u0647\u0627 \u0639\u0646\u062f \u062a\u063a\u064a\u0651\u0631 \u0627\u0644\u062a\u0635\u0645\u064a\u0645.  </li> <li>\u0644\u0627 \u062a\u064f\u0641\u0631\u0637 \u0628\u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644: \u0645\u0633\u062a\u0648\u0649 Component/Container \u063a\u0627\u0644\u0628\u064b\u0627 \u064a\u0643\u0641\u064a \u0644\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u0627\u062a.</li> </ul>"},{"location":"terms/uml/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062e\u0644\u0637 \u0645\u0633\u062a\u0648\u064a\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0641\u064a \u0635\u0648\u0631\u0629 \u0648\u0627\u062d\u062f\u0629 (\u0633\u064a\u0627\u0642 + \u0643\u0648\u062f \u062a\u0641\u0635\u064a\u0644\u064a).  </li> <li>\u062a\u0641\u0627\u0635\u064a\u0644 \u0645\u0641\u0631\u0637\u0629 \u062a\u062c\u0639\u0644 \u0627\u0644\u0631\u0633\u0645 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u0635\u064a\u0627\u0646\u0629.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0634\u0643\u0627\u0644 \u063a\u064a\u0631 \u0642\u064a\u0627\u0633\u064a\u0629 \u062a\u0631\u0628\u0643 \u0627\u0644\u0642\u0627\u0631\u0626.  </li> <li>\u0645\u062e\u0637\u0637\u0627\u062a \u0644\u0627 \u062a\u064f\u062d\u062f\u0651\u064e\u062b \u0628\u0639\u062f \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u0643\u0648\u062f.  </li> <li>\u0627\u062e\u062a\u064a\u0627\u0631 \u0646\u0648\u0639 \u0645\u062e\u0637\u0637 \u063a\u064a\u0631 \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0633\u0624\u0627\u0644 (\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Class \u0628\u062f\u0644 Sequence \u0644\u062a\u062f\u0641\u0651\u0642 \u0631\u0633\u0627\u0626\u0644).</li> </ul>"},{"location":"terms/uml/#_6","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>UML \u064a\u0645\u0646\u062d\u0643 \u0644\u063a\u0629 \u0631\u0633\u0648\u0645\u064a\u0629 \u0645\u0648\u062d\u0651\u062f\u0629 \u0644\u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0648\u0627\u0644\u062a\u0641\u0627\u0639\u0644\u0627\u062a. \u0627\u062e\u062a\u0631 \u0627\u0644\u0645\u062e\u0637\u0637 \u0627\u0644\u0635\u062d\u064a\u062d\u060c \u0627\u062d\u0641\u0638\u0647 \u0643\u0646\u0635 \u062a\u062d\u062a Git\u060c \u0648\u0627\u0628\u0642\u0650\u0647 \u0628\u0633\u064a\u0637\u064b\u0627 \u0648\u0645\u062d\u062f\u0651\u062b\u064b\u0627\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0641\u0647\u0645 \u0645\u0634\u062a\u0631\u0643 \u0648\u0642\u0631\u0627\u0631\u0627\u062a \u0623\u062f\u0642 \u0628\u0633\u0631\u0639\u0629.</p>"},{"location":"terms/usability-testing/","title":"Usability Testing","text":""},{"location":"terms/usability-testing/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Usability Testing \u2014 \u0627\u062e\u062a\u0628\u0627\u0631 \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 (\u0645\u062f\u0649 \u0633\u0647\u0648\u0644\u0629 \u0648\u0641\u0639\u0627\u0644\u064a\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0646\u062a\u062c \u0644\u062a\u062d\u0642\u064a\u0642 \u0647\u062f\u0641 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645).</p>"},{"location":"terms/usability-testing/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062c\u0644\u0633\u0627\u062a \u064a\u0646\u062c\u0632 \u0641\u064a\u0647\u0627 \u0645\u0633\u062a\u062e\u062f\u0645\u0648\u0646 \u0645\u0647\u0627\u0645 \u062d\u0642\u064a\u0642\u064a\u0629 \u0628\u064a\u0646\u0645\u0627 \u0646\u0631\u0627\u0642\u0628 \u0648\u0646\u0642\u064a\u0633: \u0627\u0644\u0646\u062c\u0627\u062d/\u0627\u0644\u0641\u0634\u0644\u060c \u0627\u0644\u0648\u0642\u062a \u0639\u0644\u0649 \u0627\u0644\u0645\u0647\u0645\u0629\u060c \u0627\u0644\u0623\u062e\u0637\u0627\u0621\u060c \u0648\u0627\u0644\u0631\u0636\u0627 (\u0645\u062b\u0644 \u0645\u0642\u064a\u0627\u0633 SUS).</p>"},{"location":"terms/usability-testing/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0646\u0639\u0637\u064a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0645\u0647\u0627\u0645 \u0648\u0627\u0636\u062d\u0629 \u0628\u062f\u0648\u0646 \u062a\u0648\u062c\u064a\u0647 \u0627\u0644\u062d\u0644.  </li> <li>\u0646\u0644\u0627\u062d\u0638 \u0623\u064a\u0646 \u064a\u062a\u0639\u062b\u0631\u060c \u0648\u0646\u0633\u062c\u0651\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0648\u0627\u0644\u0646\u0642\u0631\u0627\u062a \u0648\u0627\u0644\u0648\u0642\u062a.  </li> <li>\u0628\u0639\u062f \u0627\u0644\u062c\u0644\u0633\u0629\u060c \u0646\u0633\u0623\u0644 \u0639\u0646 \u0627\u0644\u0631\u0636\u0627 \u0648\u0646\u0642\u0627\u0637 \u0627\u0644\u0623\u0644\u0645.  </li> <li>\u0627\u0644\u0647\u062f\u0641: \u062a\u062d\u0633\u064a\u0646 \u0627\u0644\u062a\u062c\u0631\u0628\u0629 \u0642\u0628\u0644 \u0627\u0644\u0628\u0646\u0627\u0621 \u0627\u0644\u0643\u0628\u064a\u0631 \u0623\u0648 \u0627\u0644\u0625\u0637\u0644\u0627\u0642.</li> </ul>"},{"location":"terms/usability-testing/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u062a\u062c\u0631\u0628\u0629 \u0634\u062e\u0635 \u0639\u0627\u062f\u064a \u0644\u0641\u062a\u062d \u062c\u0647\u0627\u0632 \u062c\u062f\u064a\u062f \u0623\u0648\u0644 \u0645\u0631\u0629: \u0647\u0644 \u064a\u062c\u062f \u0632\u0631 \u0627\u0644\u062a\u0634\u063a\u064a\u0644\u061f \u0647\u0644 \u064a\u0646\u062c\u0632 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0628\u0633\u0631\u0639\u0629\u061f \u0643\u0645 \u0645\u0631\u0651\u0629 \u064a\u0637\u0644\u0628 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629\u061f</p>"},{"location":"terms/usability-testing/#c-sus","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u062d\u0633\u0627\u0628 SUS \u0648\u0645\u0624\u0634\u0631\u0627\u062a \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0646 \u0646\u062a\u0627\u0626\u062c \u062c\u0644\u0633\u0627\u062a","text":"<p>SUS: \u0639\u0634\u0631\u0629 \u0623\u0633\u0626\u0644\u0629 (\u0645\u0642\u064a\u0627\u0633 1\u20135). \u0627\u0644\u0628\u0646\u0648\u062f \u0627\u0644\u0641\u0631\u062f\u064a\u0629: (\u0627\u0644\u062f\u0631\u062c\u0629 \u2212 1)\u060c \u0627\u0644\u0632\u0648\u062c\u064a\u0629: (5 \u2212 \u0627\u0644\u062f\u0631\u062c\u0629)\u060c \u0645\u062c\u0645\u0648\u0639 \u00d7 2.5 \u21d2 \u0646\u062a\u064a\u062c\u0629 \u0645\u0646 100. \u0645\u0624\u0634\u0631\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629: \u0646\u0633\u0628\u0629 \u0627\u0644\u0646\u062c\u0627\u062d\u060c \u0645\u062a\u0648\u0633\u0637 \u0627\u0644\u0632\u0645\u0646 \u0644\u0644\u0646\u0627\u062c\u062d\u064a\u0646\u060c \u0645\u0639\u062f\u0644 \u0627\u0644\u0623\u062e\u0637\u0627\u0621.</p> C#<pre><code>// .NET 8/9  \u2014  dotnet new console -n UsabilityMetrics &amp;&amp; cd UsabilityMetrics\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic static class Usability\n{\n    // \u062d\u0633\u0627\u0628 SUS \u0645\u0646 10 \u062f\u0631\u062c\u0627\u062a (1..5)\n    public static double ComputeSus(IReadOnlyList&lt;int&gt; items)\n    {\n        if (items.Count != 10 || items.Any(x =&gt; x &lt; 1 || x &gt; 5))\n            throw new ArgumentException(\"SUS requires 10 answers with values 1..5\");\n        int sum = 0;\n        for (int i = 0; i &lt; 10; i++)\n        {\n            int x = items[i];\n            sum += (i % 2 == 0) ? (x - 1) : (5 - x); // i=0 =&gt; Q1 (\u0641\u0631\u062f\u064a \u0628\u0634\u0631\u064a\u064b\u0627)\n        }\n        return sum * 2.5; // 0..100\n    }\n\n    public record TaskResult(bool Success, double Seconds, int Errors);\n\n    // \u0645\u0642\u0627\u064a\u064a\u0633 \u062c\u0644\u0633\u0629: \u0646\u062c\u0627\u062d\u060c \u0632\u0645\u0646\u060c \u0623\u062e\u0637\u0627\u0621\n    public static (double SuccessRate, double AvgTimeSuccess, double ErrorsPerSession)\n        ComputeSessionMetrics(IEnumerable&lt;TaskResult&gt; results)\n    {\n        var list = results.ToList();\n        double successRate = list.Any() ? list.Count(r =&gt; r.Success) / (double)list.Count : 0;\n        var succTimes = list.Where(r =&gt; r.Success).Select(r =&gt; r.Seconds).ToList();\n        double avgTime = succTimes.Any() ? succTimes.Average() : double.NaN;\n        double errorsAvg = list.Any() ? list.Average(r =&gt; r.Errors) : 0;\n        return (successRate, avgTime, errorsAvg);\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        // \u0645\u062b\u0627\u0644 \u0646\u062a\u0627\u0626\u062c 5 \u0645\u0634\u0627\u0631\u0643\u064a\u0646 \u0644\u062b\u0644\u0627\u062b \u0645\u0647\u0627\u0645\n        var session1 = new[]\n        {\n            new Usability.TaskResult(true,  42.3, 1),\n            new Usability.TaskResult(false, 90.0, 3),\n            new Usability.TaskResult(true,  35.1, 0),\n        };\n        var session2 = new[]\n        {\n            new Usability.TaskResult(true,  28.0, 0),\n            new Usability.TaskResult(true,  55.7, 2),\n            new Usability.TaskResult(true,  47.9, 1),\n        };\n\n        var m1 = Usability.ComputeSessionMetrics(session1);\n        var m2 = Usability.ComputeSessionMetrics(session2);\n        Console.WriteLine($\"Session#1 -&gt; Success={m1.SuccessRate:P0}, AvgTime={m1.AvgTimeSuccess:F1}s, Errors/Session={m1.ErrorsPerSession:F2}\");\n        Console.WriteLine($\"Session#2 -&gt; Success={m2.SuccessRate:P0}, AvgTime={m2.AvgTimeSuccess:F1}s, Errors/Session={m2.ErrorsPerSession:F2}\");\n\n        // \u0645\u062b\u0627\u0644 SUS \u0644\u0645\u0634\u0627\u0631\u0643 \u0648\u0627\u062d\u062f\n        var susItems = new[] {5,2,5,2,4,2,5,1,4,2}; // \u0642\u064a\u0645 1..5 \u062d\u0633\u0628 \u0627\u0644\u0627\u0633\u062a\u0628\u0627\u0646\u0629 \u0627\u0644\u0642\u064a\u0627\u0633\u064a\u0629\n        double sus = Usability.ComputeSus(susItems);\n        Console.WriteLine($\"SUS Score = {sus:F1} / 100  (\u2248 {InterpretSus(sus)})\");\n    }\n\n    // \u062a\u0641\u0633\u064a\u0631 \u062a\u0642\u0631\u064a\u0628\u064a \u0644\u062f\u0631\u062c\u0627\u062a SUS\n    static string InterpretSus(double s) =&gt; s switch\n    {\n        &gt;= 90 =&gt; \"Excellent (A+)\",\n        &gt;= 80 =&gt; \"Good (A/B)\",\n        &gt;= 70 =&gt; \"OK (C)\",\n        &gt;= 60 =&gt; \"Marginal (D)\",\n        _     =&gt; \"Poor (F)\"\n    };\n}\n</code></pre> <p>\u0627\u0644\u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0645\u062a\u0648\u0642\u0639 (\u0645\u062e\u062a\u0635\u0631): \u0646\u0633\u0628\u0629 \u0646\u062c\u0627\u062d \u0645\u0626\u0648\u064a\u0629\u060c \u0645\u062a\u0648\u0633\u0637 \u0632\u0645\u0646 \u0644\u0644\u0645\u0647\u0627\u0645 \u0627\u0644\u0646\u0627\u062c\u062d\u0629\u060c \u0623\u062e\u0637\u0627\u0621/\u062c\u0644\u0633\u0629\u060c \u0648\u062f\u0631\u062c\u0629 SUS \u0645\u0646 100 \u0645\u0639 \u062a\u0641\u0633\u064a\u0631.</p>"},{"location":"terms/usability-testing/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u062e\u062a\u0628\u0627\u0631 \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645","text":"<ol> <li>\u0627\u062e\u062a\u0631 \u0627\u0644\u0645\u0647\u0627\u0645: 3\u20135 \u0645\u0647\u0627\u0645 \u062a\u0645\u062b\u0644 \u0623\u0647\u0645 \u0623\u0647\u062f\u0627\u0641 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645. \u0635\u064a\u0627\u063a\u0629 \u0645\u0633\u062a\u0642\u0644\u0629 \u0639\u0646 \u0627\u0644\u0648\u0627\u062c\u0647\u0629.  </li> <li>\u062c\u0647\u0651\u0632 \u0627\u0644\u0633\u064a\u0646\u0627\u0631\u064a\u0648: \u0645\u0642\u062f\u0651\u0645\u0629\u060c \u0645\u0648\u0627\u0641\u0642\u0629\u060c \u062a\u0639\u0644\u064a\u0645\u0627\u062a \u0645\u062d\u0627\u064a\u062f\u0629 (\u201c\u0623\u062e\u0628\u0631\u0646\u064a \u0645\u0627\u0630\u0627 \u062a\u0641\u0643\u0631\u201d).  </li> <li>\u0639\u064a\u0651\u0646\u0629 \u0645\u0634\u0627\u0631\u0643\u064a\u0646: 5\u20138 \u0644\u0643\u0644 \u062c\u0648\u0644\u0629 \u0643\u0627\u0641\u064a\u0629 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0645\u0639\u0638\u0645 \u0627\u0644\u0645\u0634\u0643\u0644\u0627\u062a \u0627\u0644\u0634\u0627\u0626\u0639\u0629.  </li> <li>\u0642\u064a\u0627\u0633 \u0645\u0648\u0636\u0648\u0639\u064a: \u0646\u062c\u0627\u062d/\u0641\u0634\u0644\u060c \u0632\u0645\u0646\u060c \u0623\u062e\u0637\u0627\u0621\u060c \u0627\u0644\u0646\u0642\u0631\u0627\u062a\u060c \u0627\u0644\u062a\u0645\u0631\u064a\u0631.  </li> <li>\u0642\u064a\u0627\u0633 \u0630\u0627\u062a\u064a: SUS \u0623\u0648 UEQ \u0628\u0639\u062f \u0627\u0644\u062c\u0644\u0633\u0629.  </li> <li>\u062a\u062f\u0648\u064a\u0646 \u0648\u062a\u062d\u0644\u064a\u0644: \u0623\u0646\u0645\u0627\u0637 \u0627\u0644\u0639\u062b\u0631\u0627\u062a\u060c \u0634\u062f\u0651\u062a\u0647\u0627\u060c \u0627\u0642\u062a\u0631\u0627\u062d\u0627\u062a \u0633\u0631\u064a\u0639\u0629\u060c \u0648\u0641\u0631\u0635 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0635\u0645\u064a\u0645.  </li> <li>\u0643\u0631\u0651\u0631: \u0623\u0635\u0644\u062d \u0623\u0639\u0644\u0649 \u0627\u0644\u0645\u0634\u0643\u0644\u0627\u062a\u060c \u0623\u0639\u062f \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0633\u0631\u064a\u0639\u064b\u0627 (\u062f\u0648\u0631\u0629 \u0642\u0635\u064a\u0631\u0629).</li> </ol>"},{"location":"terms/usability-testing/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u0648\u062c\u064a\u0647 \u0627\u0644\u0645\u0634\u0627\u0631\u0643\u064a\u0646 \u0623\u0648 \u0625\u0639\u0637\u0627\u0624\u0647\u0645 \u062a\u0644\u0645\u064a\u062d\u0627\u062a \u062e\u0644\u0627\u0644 \u0627\u0644\u0645\u0647\u0645\u0629.  </li> <li>\u0645\u0647\u0627\u0645 \u063a\u0627\u0645\u0636\u0629 \u0623\u0648 \u0644\u0627 \u062a\u0645\u062b\u0644 \u0627\u0644\u0623\u0647\u062f\u0627\u0641 \u0627\u0644\u062d\u0642\u064a\u0642\u064a\u0629.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0627\u0644\u0631\u0623\u064a \u0641\u0642\u0637 \u062f\u0648\u0646 \u0645\u0642\u0627\u064a\u064a\u0633 \u0645\u0648\u0636\u0648\u0639\u064a\u0629.  </li> <li>\u062a\u062c\u0645\u064a\u0639 \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0643\u062b\u064a\u0631\u0629 \u0628\u0644\u0627 \u062a\u0635\u0646\u064a\u0641 \u0644\u0644\u0623\u0648\u0644\u0648\u064a\u0629/\u0627\u0644\u0634\u062f\u0651\u0629.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0644\u0648\u0635\u0648\u0644 (Accessibility) \u0648\u0627\u0644\u062c\u0645\u0647\u0648\u0631 \u0627\u0644\u0645\u062a\u0646\u0648\u0639.</li> </ul>"},{"location":"terms/usability-testing/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Usability Testing \u0642\u064a\u0627\u0633 \u0627\u0644\u0633\u0647\u0648\u0644\u0629/\u0627\u0644\u0641\u0639\u0627\u0644\u064a\u0629/\u0627\u0644\u0631\u0636\u0627 \u0639\u0628\u0631 \u0645\u0647\u0627\u0645 \u062d\u0642\u064a\u0642\u064a\u0629 \u0645\u0624\u0634\u0631\u0627\u062a: \u0646\u062c\u0627\u062d\u060c \u0648\u0642\u062a\u060c \u0623\u062e\u0637\u0627\u0621\u060c SUS Heuristic Evaluation \u0645\u0631\u0627\u062c\u0639\u0629 \u062e\u0628\u0631\u0627\u0621 \u062d\u0633\u0628 \u0645\u0628\u0627\u062f\u0626 (Nielsen) \u0623\u0633\u0631\u0639/\u0623\u0631\u062e\u0635\u061b \u0644\u0627 \u064a\u063a\u0646\u064a \u0639\u0646 \u0627\u062e\u062a\u0628\u0627\u0631 \u0645\u0639 \u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 A/B Testing \u0645\u0642\u0627\u0631\u0646\u0629 \u0646\u0633\u062e\u062a\u064a\u0646 \u062d\u064a\u0651\u064b\u0627 \u0628\u0627\u0644\u0623\u0631\u0642\u0627\u0645 \u0628\u0639\u062f \u0627\u0644\u0625\u0637\u0644\u0627\u0642\u061b \u064a\u062d\u062a\u0627\u062c \u062d\u062c\u0645 \u0639\u064a\u0651\u0646\u0629 \u0643\u0628\u064a\u0631 Accessibility Testing \u062a\u0648\u0627\u0641\u0642 \u0645\u0639 WCAG \u0648\u062f\u0639\u0645 \u0627\u0644\u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u062c\u0632\u0621 \u0623\u0633\u0627\u0633\u064a \u0645\u0646 \u0627\u0644\u062c\u0648\u062f\u0629 \u0627\u0644\u0634\u0627\u0645\u0644\u0629 (\u0644\u064a\u0633 = \u0642\u0627\u0628\u0644\u064a\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0641\u0642\u0637)"},{"location":"terms/usability-testing/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Usability Testing \u064a\u0643\u0634\u0641 \u0627\u0644\u0639\u062b\u0631\u0627\u062a \u0627\u0644\u0648\u0627\u0642\u0639\u064a\u0629 \u0645\u0628\u0643\u0631\u064b\u0627 \u0628\u0627\u0644\u0623\u062f\u0644\u0629. \u0635\u0650\u063a \u0645\u0647\u0627\u0645\u064b\u0627 \u0648\u0627\u0636\u062d\u0629\u060c \u0642\u0650\u0633 \u0646\u062c\u0627\u062d/\u0648\u0642\u062a/\u0623\u062e\u0637\u0627\u0621/SUS\u060c \u0648\u0643\u0631\u0651\u0631 \u0627\u0644\u062a\u062d\u0633\u064a\u0646\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u062c\u0631\u0628\u0629 \u0623\u0628\u0633\u0637 \u0648\u0623\u0648\u0636\u062d \u0648\u0623\u0633\u0631\u0639 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645.</p>"},{"location":"terms/validation/","title":"Validation","text":""},{"location":"terms/validation/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Validation \u2014 \u0627\u0644\u062a\u062d\u0642\u0651\u0642 (\u0647\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0635\u062d\u064a\u062d\u0629 \u0648\u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627\u061f).</p>"},{"location":"terms/validation/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0639\u0645\u0644\u064a\u0629 \u062a\u0641\u062d\u0635 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a \u0648\u0641\u0642 \u0642\u0648\u0627\u0639\u062f \u062a\u0631\u0643\u064a\u0628\u064a\u0629 (\u0627\u0644\u0634\u0643\u0644/\u0627\u0644\u0646\u0645\u0637) \u0648\u0642\u0648\u0627\u0639\u062f \u062f\u0644\u0627\u0644\u064a\u0629 (\u0627\u0644\u0645\u0639\u0646\u0649/\u0627\u0644\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629)\u060c \u0642\u0628\u0644 \u0642\u0628\u0648\u0644\u0647\u0627 \u0623\u0648 \u062a\u062e\u0632\u064a\u0646\u0647\u0627 \u0623\u0648 \u062a\u0645\u0631\u064a\u0631\u0647\u0627. \u0647\u062f\u0641\u0647\u0627 \u0645\u0646\u0639 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0648\u0633\u062f\u0651 \u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0645\u0628\u0643\u0631\u064b\u0627.</p>"},{"location":"terms/validation/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>Syntactic: \u0627\u0644\u0634\u0643\u0644 \u0635\u062d\u064a\u062d\u061f (\u0628\u0631\u064a\u062f\u060c \u0631\u0642\u0645\u060c \u0637\u0648\u0644\u060c Regex).  </li> <li>Semantic: \u0627\u0644\u0645\u0639\u0646\u0649 \u0635\u062d\u064a\u062d\u061f (\u0627\u0644\u0645\u062c\u0645\u0648\u0639 &gt; 0\u060c \u0627\u0644\u062d\u0627\u0644\u0629 \u062a\u0633\u0645\u062d\u060c \u0627\u0644\u062a\u0627\u0631\u064a\u062e \u0645\u0646\u0637\u0642\u064a).  </li> <li>Server-side \u0623\u0648 Client-side: \u0646\u0639\u0631\u0636 \u0623\u062e\u0637\u0627\u0621 \u0645\u0628\u0643\u0631\u064b\u0627 \u0639\u0644\u0649 \u0627\u0644\u0648\u0627\u062c\u0647\u0629\u060c \u0644\u0643\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0647\u0648 \u0627\u0644\u062d\u0643\u0645.  </li> <li>Defence-in-depth: \u062a\u062d\u0642\u0651\u0642 \u0641\u064a \u0627\u0644\u0637\u0628\u0642\u0627\u062a (API \u2192 Domain \u2192 DB constraints).</li> </ul>"},{"location":"terms/validation/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u0648\u0638\u0641 \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u064a\u0623\u062e\u0630 \u0627\u0633\u062a\u0645\u0627\u0631\u0629: \u064a\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0645\u0644\u0621 \u0627\u0644\u062d\u0642\u0648\u0644 \u0628\u0634\u0643\u0644 \u0635\u062d\u064a\u062d (\u062a\u0631\u0643\u064a\u0628\u064a)\u060c \u062b\u0645 \u064a\u062a\u0623\u0643\u062f \u0623\u0646 \u0627\u0644\u0634\u0631\u0648\u0637 \u062a\u0646\u0637\u0628\u0642 (\u062f\u0644\u0627\u0644\u064a) \u0642\u0628\u0644 \u062e\u062a\u0645 \u201c\u0645\u0642\u0628\u0648\u0644\u201d.</p>"},{"location":"terms/validation/#c-minimal-api-dataannotations","title":"\u0645\u062b\u0627\u0644 C# \u2014 Minimal API \u0645\u0639 DataAnnotations + \u062a\u062d\u0642\u0651\u0642 \u062f\u0644\u0627\u0644\u064a + \u0623\u062e\u0637\u0627\u0621 \u0645\u0648\u062d\u0651\u062f\u0629","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n ValidationDemo &amp;&amp; cd ValidationDemo &amp;&amp; dotnet run\nusing System.ComponentModel.DataAnnotations;\nusing Microsoft.AspNetCore.Mvc;\n\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapPost(\"/orders\", ([FromBody] OrderCreate dto) =&gt;\n{\n    // 1) \u0641\u062d\u0635 DataAnnotations (\u062a\u0631\u0643\u064a\u0628\u064a)\n    var errors = Validate(dto);\n\n    // 2) \u0641\u062d\u0635 \u062f\u0644\u0627\u0644\u064a \u0639\u0628\u0631 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0645\u062c\u0627\u0644 (Cross-field/Business)\n    if (dto.Items.Sum(i =&gt; i.Qty * i.Price) &lt;= 0)\n        AddError(errors, nameof(OrderCreate.Items), \"total_must_be_positive\");\n\n    if (dto.Items.Count &gt; 100)\n        AddError(errors, nameof(OrderCreate.Items), \"too_many_items\");\n\n    if (errors.Count &gt; 0) return Results.ValidationProblem(errors);\n\n    // \u0646\u062c\u0627\u062d: \u062a\u0627\u0628\u0639 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629/\u0627\u0644\u062d\u0641\u0638\n    var id = Guid.NewGuid().ToString(\"N\");\n    return Results.Created($\"/orders/{id}\", new { id, total = dto.Items.Sum(i =&gt; i.Qty * i.Price) });\n});\n\napp.Run();\n\n// ====== \u0627\u0644\u0646\u0645\u0627\u0630\u062c \u0645\u0639 DataAnnotations (\u062a\u062d\u0642\u0642 \u062a\u0631\u0643\u064a\u0628\u064a) ======\npublic class OrderCreate\n{\n    [Required, EmailAddress] public string CustomerEmail { get; init; } = \"\";\n    [Required, RegularExpression(@\"^[A-Z]{3}$\")] public string Currency { get; init; } = \"USD\"; // ISO-4217\n    [MinLength(1)] public List&lt;OrderItem&gt; Items { get; init; } = new();\n}\n\npublic class OrderItem\n{\n    [Required, RegularExpression(@\"^[A-Z0-9-]{3,20}$\")] public string Sku { get; init; } = \"\";\n    [Range(1, int.MaxValue)] public int Qty { get; init; }\n    [Range(typeof(decimal), \"0.01\", \"79228162514264337593543950335\")] public decimal Price { get; init; }\n}\n\n// ====== \u0623\u062f\u0648\u0627\u062a \u0645\u0633\u0627\u0639\u062f\u0629 \u0644\u0623\u062e\u0637\u0627\u0621 \u0645\u0648\u062d\u0651\u062f\u0629 ======\nstatic Dictionary&lt;string, string[]&gt; Validate(object model)\n{\n    var ctx = new ValidationContext(model);\n    var results = new List&lt;ValidationResult&gt;();\n    _ = Validator.TryValidateObject(model, ctx, results, validateAllProperties: true);\n\n    // \u062a\u062d\u0642\u0651\u0642 \u0645\u062a\u062f\u0627\u062e\u0644 \u0644\u0644\u0639\u0646\u0627\u0635\u0631 (Items)\n    if (model is OrderCreate oc)\n        foreach (var it in oc.Items)\n        {\n            var r = new List&lt;ValidationResult&gt;();\n            _ = Validator.TryValidateObject(it, new ValidationContext(it), r, true);\n            foreach (var e in r) results.Add(new ValidationResult($\"Items: {e.ErrorMessage}\", e.MemberNames.Select(m =&gt; $\"Items.{m}\")));\n        }\n\n    return results\n        .GroupBy(e =&gt; e.MemberNames.FirstOrDefault() ?? \"\")\n        .ToDictionary(g =&gt; g.Key, g =&gt; g.Select(e =&gt; e.ErrorMessage ?? \"invalid\").ToArray());\n}\n\nstatic void AddError(Dictionary&lt;string, string[]&gt; dict, string key, string message)\n{\n    if (!dict.TryGetValue(key, out var arr)) dict[key] = new[] { message };\n    else dict[key] = arr.Concat(new[] { message }).ToArray();\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - DataAnnotations \u062a\u063a\u0637\u064a \u0627\u0644\u0634\u0643\u0644 (Email/Regex/Range). - \u0646\u0636\u064a\u0641 \u0642\u0648\u0627\u0639\u062f \u0639\u0645\u0644 (\u0645\u062c\u0645\u0648\u0639 \u0645\u0648\u062c\u0628\u060c \u062d\u062f \u0623\u0642\u0635\u0649 \u0644\u0644\u0639\u0646\u0627\u0635\u0631). - \u0646\u0631\u062c\u0639 ValidationProblem \u0645\u0648\u062d\u0651\u062f\u064b\u0627 \u064a\u0641\u064a\u062f \u0627\u0644\u0648\u0627\u062c\u0647\u0629.</p>"},{"location":"terms/validation/#_5","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 \u062a\u062d\u0642\u0642 \u0642\u0648\u064a","text":"<ol> <li>\u0642\u0633\u0651\u0645 \u0627\u0644\u0642\u0648\u0627\u0639\u062f: \u062a\u0631\u0643\u064a\u0628\u064a (Annotations/Schema) \u062b\u0645 \u062f\u0644\u0627\u0644\u064a (\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0645\u062c\u0627\u0644).  </li> <li>\u0627\u0639\u0631\u0636 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0645\u0628\u0643\u0631\u064b\u0627 \u0639\u0644\u0649 \u0627\u0644\u0648\u0627\u062c\u0647\u0629\u060c \u0644\u0643\u0646 \u062a\u062d\u0642\u0642 \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u062f\u0627\u0626\u0645\u064b\u0627.  </li> <li>\u0647\u064a\u0651\u0626 \u0631\u0633\u0627\u0626\u0644 \u0645\u0648\u062d\u0651\u062f\u0629 (\u0631\u0645\u0648\u0632 \u0623\u062e\u0637\u0627\u0621 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u0631\u062c\u0645\u0629) \u0628\u062f\u0644 \u0646\u0635\u0648\u0635 \u062d\u0631\u0651\u0629.  </li> <li>\u0636\u0639 \u062d\u062f\u0648\u062f\u064b\u0627 \u0644\u0644\u0623\u062d\u062c\u0627\u0645/\u0627\u0644\u0637\u0648\u0644/\u0627\u0644\u0645\u0644\u0641\u0627\u062a (MIME/\u062d\u062c\u0645) \u0644\u0645\u0646\u0639 \u0625\u0633\u0627\u0621\u0629 \u0627\u0644\u062e\u062f\u0645\u0629.  </li> <li>Whitelist \u0628\u062f\u0644\u0627\u064b \u0645\u0646 Blacklist (\u0627\u0633\u0645\u062d \u0628\u0645\u0627 \u0647\u0648 \u0645\u062a\u0648\u0642\u0639 \u0641\u0642\u0637).  </li> <li>\u0641\u0631\u0651\u0642 \u0628\u064a\u0646 Validation (\u0627\u0644\u0642\u0628\u0648\u0644/\u0627\u0644\u0631\u0641\u0636) \u0648Sanitization (\u062a\u0646\u0638\u064a\u0641/\u062a\u0637\u0628\u064a\u0639 \u0645\u062b\u0644 Trim/Unicode Normalization).  </li> <li>\u062a\u062d\u0642\u0642 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0637\u0628\u0642\u0627\u062a: API \u2192 Domain \u2192 DB (\u0642\u064a\u0648\u062f \u0641\u0631\u064a\u062f\u0629/\u0623\u0646\u0648\u0627\u0639/FK).  </li> <li>\u0627\u062e\u062a\u0628\u0631 \u0627\u0644\u062d\u0648\u0627\u0641: \u0642\u064a\u0645 \u0642\u0635\u0648\u0649/\u0635\u0641\u0631\u064a\u0629/Unicode/RTL/JSON \u0643\u0628\u064a\u0631/\u062a\u0631\u0645\u064a\u0632.</li> </ol>"},{"location":"terms/validation/#_6","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0639\u0645\u064a\u0644 \u0641\u0642\u0637 (JS) \u0628\u0644\u0627 \u062a\u062d\u0642\u0642 \u062e\u0627\u062f\u0645\u064a.  </li> <li>Regex \u0645\u0639\u0642\u0651\u062f \u0644\u0644\u0628\u0631\u064a\u062f/\u0627\u0644\u0623\u0633\u0645\u0627\u0621 \u064a\u0631\u0641\u0636 \u0627\u0644\u0635\u062d\u064a\u062d \u0623\u0648 \u064a\u0642\u0628\u0644 \u0627\u0644\u062e\u0637\u0623.  </li> <li>Blacklist \u0644\u0633\u0644\u0627\u0633\u0644 \u201c\u062e\u0637\u0631\u0629\u201d \u0628\u062f\u0644 \u0642\u064a\u0648\u062f \u0625\u064a\u062c\u0627\u0628\u064a\u0629 (Whitelist).  </li> <li>\u0631\u0633\u0627\u0626\u0644 \u063a\u064a\u0631 \u0645\u0648\u062d\u0651\u062f\u0629 \u062a\u0635\u0639\u0651\u0628 \u062a\u0639\u0631\u064a\u0628/\u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645.  </li> <li>\u0631\u0645\u064a \u0627\u0633\u062a\u062b\u0646\u0627\u0621\u0627\u062a \u0639\u0627\u0645\u0651\u0629 \u0628\u062f\u0644 422 Unprocessable Entity (\u0623\u0648 ValidationProblem).  </li> <li>\u062e\u0644\u0637 \u0627\u0644\u062a\u0646\u0638\u064a\u0641 (Encoding/HTML escape) \u0645\u0639 \u0627\u0644\u062a\u062d\u0642\u0642 (\u0642\u0631\u0627\u0631 \u0642\u0628\u0648\u0644/\u0631\u0641\u0636).  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0627\u0644\u062a\u0631\u0645\u064a\u0632/\u0627\u0644\u062a\u0637\u0628\u064a\u0639 \u2192 \u062a\u0628\u0627\u064a\u0646\u0627\u062a Unicode (NFC/NFD).</li> </ul>"},{"location":"terms/validation/#_7","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Validation \u0642\u0628\u0648\u0644/\u0631\u0641\u0636 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0641\u0642 \u0642\u0648\u0627\u0639\u062f \u062a\u0631\u0643\u064a\u0628\u064a + \u062f\u0644\u0627\u0644\u064a\u060c \u0639\u0644\u0649 \u0627\u0644\u062e\u0627\u062f\u0645 \u0623\u0633\u0627\u0633\u064b\u0627 Sanitization \u062a\u0646\u0638\u064a\u0641/\u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a Trim/Normalize/Encode\u061b \u0644\u0627 \u064a\u062b\u0628\u062a \u0627\u0644\u0635\u062d\u0629 Client-side \u062a\u062c\u0631\u0628\u0629 \u0623\u0641\u0636\u0644 \u0641\u0648\u0631\u064a\u064b\u0627 \u0644\u0627 \u064a\u064f\u0639\u062a\u0645\u062f \u0639\u0644\u064a\u0647 \u0648\u062d\u062f\u0647 Server-side \u0642\u0631\u0627\u0631 \u0646\u0647\u0627\u0626\u064a \u0645\u0648\u062b\u0648\u0642 \u0623\u0639\u0650\u062f 400/422 \u0645\u0639 \u062a\u0641\u0627\u0635\u064a\u0644 DataAnnotations \u062a\u062d\u0642\u0642 \u0628\u0633\u064a\u0637 \u062a\u0631\u0643\u064a\u0628\u064a Range/Regex/Required\u2026 FluentValidation \u0642\u0648\u0627\u0639\u062f \u063a\u0646\u064a\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u062e\u062a\u0628\u0627\u0631 DSL \u0645\u0631\u0646\u060c \u0627\u0646\u062f\u0645\u0627\u062c \u0645\u0645\u062a\u0627\u0632 \u0645\u0639 ASP.NET DB Constraints \u062e\u0637 \u062f\u0641\u0627\u0639 \u0623\u062e\u064a\u0631 \u0641\u0631\u064a\u062f/Not Null/Check/FK <p>\u0625\u0646 \u0623\u0631\u062f\u062a DSL \u0623\u0642\u0648\u0649\u060c \u0627\u0633\u062a\u062e\u062f\u0645 FluentValidation: C#<pre><code>// dotnet add package FluentValidation.AspNetCore\nbuilder.Services.AddValidatorsFromAssemblyContaining&lt;OrderCreateValidator&gt;();\npublic class OrderCreateValidator : AbstractValidator&lt;OrderCreate&gt;\n{\n  public OrderCreateValidator()\n  {\n    RuleFor(x =&gt; x.CustomerEmail).NotEmpty().EmailAddress();\n    RuleFor(x =&gt; x.Currency).Matches(\"^[A-Z]{3}$\");\n    RuleFor(x =&gt; x.Items).NotEmpty().Must(list =&gt; list.Sum(i =&gt; i.Qty * i.Price) &gt; 0);\n  }\n}\n</code></pre></p>"},{"location":"terms/validation/#_8","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Validation \u064a\u0645\u0646\u0639 \u0627\u0644\u0623\u062e\u0637\u0627\u0621 \u0648\u0627\u0644\u062b\u063a\u0631\u0627\u062a \u0639\u0646\u062f \u0627\u0644\u0628\u0627\u0628. \u0627\u0628\u062f\u0623 \u0628\u062a\u062d\u0642\u0642 \u062a\u0631\u0643\u064a\u0628\u064a\u060c \u062b\u0645 \u062f\u0644\u0627\u0644\u064a\u060c \u0648\u0627\u0631\u062c\u0639 \u0623\u062e\u0637\u0627\u0621 \u0645\u0648\u062d\u0651\u062f\u0629\u060c \u0648\u0627\u062d\u062a\u0641\u0638 \u0628\u0642\u064a\u0648\u062f \u0642\u0627\u0639\u062f\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0646\u0638\u0627\u0645 \u0645\u062a\u064a\u0646\u060c \u0633\u0647\u0644 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u060c \u0648\u0622\u0645\u0646 \u0636\u062f \u0645\u062f\u062e\u0644\u0627\u062a \u0645\u0639\u0637\u0648\u0628\u0629.</p>"},{"location":"terms/virtual-machine/","title":"Virtual Machine (VM)","text":""},{"location":"terms/virtual-machine/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Virtual Machine (VM) \u2014 \u0622\u0644\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0651\u0629 \u062a\u0634\u063a\u0651\u0644 \u0646\u0638\u0627\u0645 \u062a\u0634\u063a\u064a\u0644 \u0643\u0627\u0645\u0644 \u0641\u0648\u0642 Hypervisor.</p>"},{"location":"terms/virtual-machine/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0628\u064a\u0626\u0629 \u062d\u0648\u0633\u0628\u0629 \u0645\u0639\u0632\u0648\u0644\u0629 \u062a\u0642\u0644\u0651\u062f \u062c\u0647\u0627\u0632\u064b\u0627 \u0643\u0627\u0645\u0644\u064b\u0627: CPU/RAM/\u0642\u0631\u0635/\u0634\u0628\u0643\u0629. \u062a\u0634\u063a\u0651\u064e\u0644 \u0639\u0644\u0649 Hypervisor (Type-1/Type-2) \u0648\u062a\u0633\u062a\u062e\u062f\u0645 \u0635\u0648\u0631\u064b\u0627 (Images)\u060c \u0644\u0642\u0637\u0627\u062a (Snapshots)\u060c \u0648\u0627\u0646\u062a\u0642\u0627\u0644\u064b\u0627 \u062d\u064a\u0651\u064b\u0627 (Live Migration).</p>"},{"location":"terms/virtual-machine/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0627\u0644\u0647\u0627\u064a\u0628\u0631\u0641\u0627\u064a\u0632\u0631 \u064a\u0642\u0633\u0651\u0645 \u0627\u0644\u0639\u062a\u0627\u062f \u0625\u0644\u0649 \u0639\u062f\u0651\u0629 \u0623\u062c\u0647\u0632\u0629 \u0645\u0646\u0637\u0642\u064a\u0629.  </li> <li>\u0643\u0644 VM \u064a\u0645\u0644\u0643 \u0646\u0638\u0627\u0645 \u062a\u0634\u063a\u064a\u0644 \u062e\u0627\u0635 \u0628\u0647 \u0648\u0633\u0648\u0627\u0642\u0627\u062a \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629/\u0634\u0628\u0647 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 (virtio).  </li> <li>\u0645\u0646\u0627\u0633\u0628 \u0639\u0646\u062f\u0645\u0627 \u062a\u062d\u062a\u0627\u062c \u0639\u0632\u0644\u064b\u0627 \u0642\u0648\u064a\u064b\u0627 \u0623\u0648 \u0646\u0638\u0627\u0645\u064b\u0627 \u0643\u0627\u0645\u0644\u0627\u064b (AD/DB/\u062e\u062f\u0645\u0627\u062a \u0642\u062f\u064a\u0645\u0629).  </li> <li>\u0623\u062b\u0642\u0644 \u0645\u0646 \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a\u061b \u0644\u0643\u0646 \u064a\u0645\u0646\u062d\u0643 \u062a\u062d\u0643\u0651\u0645\u064b\u0627 \u062a\u0627\u0645\u0651\u064b\u0627 \u0628\u0627\u0644\u0646\u0638\u0627\u0645.</li> </ul>"},{"location":"terms/virtual-machine/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0643\u0634\u0642\u0642 \u062f\u0627\u062e\u0644 \u0628\u0631\u062c \u0648\u0627\u062d\u062f: \u0644\u0643\u0644 \u0634\u0642\u0651\u0629 \u0623\u0628\u0648\u0627\u0628 \u0648\u0643\u0647\u0631\u0628\u0627\u0621 \u0648\u0645\u0637\u0628\u062e \u0645\u0633\u062a\u0642\u0644. \u0627\u0644\u0625\u062f\u0627\u0631\u0629 (Hypervisor) \u062a\u0648\u0632\u0651\u0639 \u0627\u0644\u0645\u0648\u0627\u0631\u062f \u0648\u062a\u0633\u0645\u062d \u0628\u062a\u0628\u062f\u064a\u0644 \u0627\u0644\u0634\u0642\u0629 \u062f\u0648\u0646 \u0625\u062e\u0631\u0627\u062c \u0627\u0644\u0623\u062b\u0627\u062b (Live Migration).</p>"},{"location":"terms/virtual-machine/#c-1-vm","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# 1 \u2014 \u0625\u064a\u0642\u0627\u0641 \u0644\u0637\u064a\u0641 \u062f\u0627\u062e\u0644 VM (\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0625\u0634\u0627\u0631\u0629 \u0627\u0644\u0625\u0646\u0647\u0627\u0621)","text":"<p>\u0645\u0647\u0645 \u0639\u0646\u062f \u0625\u064a\u0642\u0627\u0641 VM \u0645\u0646 \u0627\u0644\u0633\u062d\u0627\u0628\u0629 \u0644\u064a\u064f\u0646\u0647\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0623\u0639\u0645\u0627\u0644\u0647 \u0648\u064a\u063a\u0644\u0642 \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.</p> C#<pre><code>// .NET 8/9\nusing System;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nclass GracefulVm\n{\n    static async Task Main()\n    {\n        var cts = new CancellationTokenSource();\n        Console.CancelKeyPress += (s, e) =&gt; { e.Cancel = true; cts.Cancel(); }; // Ctrl+C \u0623\u0648 SIGINT\n        AppDomain.CurrentDomain.ProcessExit += (s, e) =&gt; cts.Cancel();          // \u0625\u064a\u0642\u0627\u0641/\u0625\u0639\u0627\u062f\u0629 \u062a\u0634\u063a\u064a\u0644 VM\n\n        Console.WriteLine(\"Running... press Ctrl+C or stop the VM.\");\n        try\n        {\n            while (!cts.IsCancellationRequested)\n            {\n                // \u0645\u0646\u0637\u0642 \u0627\u0644\u0639\u0645\u0644\n                await Task.Delay(1000, cts.Token);\n                Console.Write(\".\");\n            }\n        }\n        catch (OperationCanceledException) { /* \u0645\u062a\u0648\u0642\u0651\u0639 */ }\n\n        // \u0625\u0646\u0647\u0627\u0621 \u0644\u0637\u064a\u0641: \u0625\u063a\u0644\u0627\u0642 \u0627\u062a\u0635\u0627\u0644\u0627\u062a/Flush/\u062d\u0641\u0638 \u062d\u0627\u0644\u0629\n        Console.WriteLine(\"\\nShutting down gracefully...\");\n        await Task.Delay(500);\n    }\n}\n</code></pre>"},{"location":"terms/virtual-machine/#c-2-vm-metadata-service","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# 2 \u2014 \u0627\u0644\u062a\u0639\u0631\u0641 \u0639\u0644\u0649 \u0628\u064a\u0626\u0629 VM \u0627\u0644\u0633\u062d\u0627\u0628\u064a\u0651\u0629 \u0639\u0628\u0631 Metadata Service","text":"<p>\u0622\u0645\u0646 \u0628\u0645\u0647\u0644\u0627\u062a \u0642\u0635\u064a\u0631\u0629. \u064a\u062d\u0627\u0648\u0644 AWS \u062b\u0645 Azure \u062b\u0645 GCP.</p> <p>C#<pre><code>// dotnet add package System.Net.Http.Json\nusing System;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Text.Json;\nusing System.Threading.Tasks;\n\nclass CloudMetadata\n{\n    static async Task Main()\n    {\n        var http = new HttpClient { Timeout = TimeSpan.FromMilliseconds(500) };\n\n        // AWS EC2 IMDSv2\n        try\n        {\n            var tokenReq = new HttpRequestMessage(HttpMethod.Put, \"http://169.254.169.254/latest/api/token\");\n            tokenReq.Headers.Add(\"X-aws-ec2-metadata-token-ttl-seconds\", \"60\");\n            var token = await (await http.SendAsync(tokenReq)).Content.ReadAsStringAsync();\n\n            var idReq = new HttpRequestMessage(HttpMethod.Get, \"http://169.254.169.254/latest/meta-data/instance-id\");\n            idReq.Headers.Add(\"X-aws-ec2-metadata-token\", token);\n            var instanceId = await (await http.SendAsync(idReq)).Content.ReadAsStringAsync();\n            Console.WriteLine($\"AWS EC2 instance-id: {instanceId}\");\n            return;\n        } catch { /* \u0644\u064a\u0633 AWS \u0623\u0648 \u0645\u063a\u0644\u0642 */ }\n\n        // Azure IMDS\n        try\n        {\n            var req = new HttpRequestMessage(HttpMethod.Get, \"http://169.254.169.254/metadata/instance?api-version=2021-02-01\");\n            req.Headers.Add(\"Metadata\", \"true\");\n            var json = await (await http.SendAsync(req)).Content.ReadAsStringAsync();\n            using var doc = JsonDocument.Parse(json);\n            var vmId = doc.RootElement.GetProperty(\"compute\").GetProperty(\"vmId\").GetString();\n            Console.WriteLine($\"Azure VM id: {vmId}\");\n            return;\n        } catch { /* \u0644\u064a\u0633 Azure */ }\n\n        // GCP\n        try\n        {\n            var req = new HttpRequestMessage(HttpMethod.Get, \"http://metadata.google.internal/computeMetadata/v1/instance/id\");\n            req.Headers.Add(\"Metadata-Flavor\", \"Google\");\n            var id = await (await http.SendAsync(req)).Content.ReadAsStringAsync();\n            Console.WriteLine($\"GCE instance id: {id}\");\n            return;\n        } catch { /* \u0644\u064a\u0633 GCP */ }\n\n        Console.WriteLine(\"No cloud metadata detected (\u0642\u062f \u062a\u0643\u0648\u0646 VM \u0645\u062d\u0644\u064a\u0629 \u0623\u0648 \u0645\u064a\u062a\u0627\u062f\u0627\u062a\u0627 \u0645\u0639\u0637\u0651\u0644\u0629).\");\n    }\n}\n</code></pre> \u0645\u0644\u0627\u062d\u0638\u0627\u062a: - \u0639\u0637\u0651\u0644 IMDSv1 \u0648\u0641\u0631\u0636 IMDSv2 \u0639\u0644\u0649 AWS. \u0627\u0636\u0628\u0637 Hop Limit. - \u0644\u0627 \u062a\u0639\u062a\u0628\u0631 \u0627\u0644\u0645\u064a\u062a\u0627\u062f\u0627\u062a\u0627 \u0647\u0648\u064a\u0629 \u0645\u0633\u062a\u062e\u062f\u0645\u061b \u0647\u064a \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0628\u0646\u064a\u0648\u064a\u0651\u0629 \u0639\u0646 \u0627\u0644\u0645\u062b\u064a\u0644.</p>"},{"location":"terms/virtual-machine/#vm","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0625\u062f\u0627\u0631\u0629 VM \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0627\u062e\u062a\u0631 Type-1 Hypervisor \u0644\u0644\u0625\u0646\u062a\u0627\u062c (KVM/Hyper-V/ESXi).  </li> <li>\u0641\u0639\u0651\u0644 VT-x/AMD-V \u0648 IOMMU \u0645\u0646 BIOS/UEFI.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 \u0635\u0648\u0631\u064b\u0627 \u0642\u064a\u0627\u0633\u064a\u0629 + Cloud-Init/Customization \u0644\u062a\u0647\u064a\u0626\u0629 \u0633\u0631\u064a\u0639\u0629.  </li> <li>\u0641\u0639\u0651\u0644 vTPM/Secure Boot \u0648\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0623\u0642\u0631\u0627\u0635 \u062f\u0627\u062e\u0644 VM.  </li> <li>\u062e\u0635\u0651\u0635 Security Groups/NSG + \u062c\u062f\u0627\u0631 \u0627\u0644\u0646\u0638\u0627\u0645. \u0627\u0641\u062a\u062d \u0627\u0644\u0645\u0646\u0627\u0641\u0630 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0641\u0642\u0637.  </li> <li>\u0631\u0627\u0642\u0628 CPU/RAM/IOPS/Latency\u060c \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0646\u0628\u064a\u0647\u0627\u062a.  </li> <li>Backups \u062d\u0642\u064a\u0642\u064a\u0629 (\u0644\u0642\u0637\u0627\u062a \u2260 \u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637\u064a). \u0627\u0633\u062a\u062e\u062f\u0645 Snapshots \u0642\u0635\u064a\u0631 \u0627\u0644\u0623\u062c\u0644 \u0641\u0642\u0637.  </li> <li>\u062e\u0637\u0651\u0637 \u0644\u0644\u062a\u0648\u0627\u0641\u0631: \u0645\u0646\u0627\u0637\u0642 \u062a\u0648\u0627\u0641\u064f\u0631/\u0645\u062c\u0627\u0645\u064a\u0639 \u062a\u0648\u0627\u0641\u064f\u0631 + Live Migration \u0625\u0646 \u062a\u0648\u0641\u0651\u0631\u062a.  </li> <li>\u0623\u062a\u0645\u062a \u0628\u0640 IaC (Terraform/ARM/CloudFormation) \u0648\u0627\u0633\u062a\u062e\u062f\u0645 Templates/Golden Images.  </li> </ul>"},{"location":"terms/virtual-machine/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Snapshots \u0628\u062f\u064a\u0644\u064b\u0627 \u0639\u0646 \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a.  </li> <li>Overcommit \u0644\u0644\u0630\u0627\u0643\u0631\u0629/CPU \u0628\u0644\u0627 \u0642\u064a\u0627\u0633 \u2192 Steal/Swap \u0645\u0631\u062a\u0641\u0639.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u062a\u0639\u0631\u064a\u0641\u0627\u062a paravirt/virtio \u2192 \u0623\u062f\u0627\u0621 \u062a\u062e\u0632\u064a\u0646/\u0634\u0628\u0643\u0629 \u0645\u062a\u062f\u0646\u064d.  </li> <li>\u0625\u0647\u0645\u0627\u0644 \u0625\u064a\u0642\u0627\u0641 \u0644\u0637\u064a\u0641 \u0644\u0644\u062a\u0637\u0628\u064a\u0642 \u0639\u0646\u062f Stop/Deallocate.  </li> <li>\u062a\u0634\u063a\u064a\u0644 \u0643\u0644 \u0634\u064a\u0621 \u0628\u062d\u062c\u0645 \u0643\u0628\u064a\u0631 \u0628\u0644\u0627 \u0633\u0628\u0628 (\u062a\u0643\u0644\u0641\u0629 \u0639\u0627\u0644\u064a\u0629 \u0648\u0639\u062f\u0645 \u0627\u0633\u062a\u063a\u0644\u0627\u0644).  </li> <li>\u062a\u062c\u0627\u0647\u0644 Patch Management \u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0636\u064a\u0641 (\u0645\u0633\u0624\u0648\u0644\u064a\u062a\u0643 \u0623\u0646\u062a).</li> </ul>"},{"location":"terms/virtual-machine/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Virtual Machine (VM) \u0646\u0638\u0627\u0645 \u062a\u0634\u063a\u064a\u0644 \u0643\u0627\u0645\u0644 \u0645\u0639\u0632\u0648\u0644 \u0623\u0642\u0648\u0649 \u0639\u0632\u0644 \u0645\u0646 \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a\u061b \u0623\u062b\u0642\u0644 \u0648\u0623\u0628\u0637\u0623 \u0625\u0642\u0644\u0627\u0639\u064b\u0627 Container \u062a\u0634\u063a\u064a\u0644 \u0645\u0639\u0632\u0648\u0644 \u064a\u0634\u0627\u0631\u0643 \u0646\u0648\u0627\u0629 \u0627\u0644\u0645\u0636\u064a\u0641 \u062e\u0641\u064a\u0641 \u0648\u0633\u0631\u064a\u0639\u061b \u064a\u062d\u062a\u0627\u062c \u0646\u0648\u0627\u0629 \u0645\u062a\u0648\u0627\u0641\u0642\u0629\u061b \u0639\u0632\u0644 \u0623\u0636\u0639\u0641 \u0645\u0646 VM Hypervisor \u0637\u0628\u0642\u0629 \u062a\u0634\u063a\u0651\u0644 \u0648\u062a\u062f\u064a\u0631 \u0627\u0644\u0640 VMs Type-1 \u0644\u0644\u0623\u062f\u0627\u0621/\u0627\u0644\u0625\u0646\u062a\u0627\u062c\u061b \u064a\u062f\u0639\u0645 Live Migration Bare Metal \u062a\u0634\u063a\u064a\u0644 \u0645\u0628\u0627\u0634\u0631 \u0639\u0644\u0649 \u0627\u0644\u0639\u062a\u0627\u062f \u0623\u0639\u0644\u0649 \u0623\u062f\u0627\u0621\u061b \u0644\u0627 \u062a\u0639\u062f\u062f\u064a\u0629 \u0636\u064a\u0648\u0641 PaaS \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0643\u0648\u062f \u0639\u0644\u0649 \u0645\u0646\u0635\u0651\u0629 \u0645\u064f\u062f\u0627\u0631\u0629 \u0644\u0627 \u062a\u062f\u064a\u0631 OS \u0627\u0644\u0636\u064a\u0641\u061b \u0623\u0633\u0631\u0639 \u0646\u0634\u0631\u064b\u0627"},{"location":"terms/virtual-machine/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>\u0627\u0644\u0622\u0644\u0629 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0651\u0629 \u062a\u0645\u0646\u062d\u0643 \u0646\u0638\u0627\u0645\u064b\u0627 \u0643\u0627\u0645\u0644\u064b\u0627 \u0628\u0639\u0632\u0644 \u0642\u0648\u064a \u0648\u062a\u062d\u0643\u0651\u0645 \u0643\u0627\u0645\u0644. \u0627\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0639\u0646\u062f\u0645\u0627 \u062a\u062d\u062a\u0627\u062c OS \u0643\u0627\u0645\u0644\u064b\u0627 \u0623\u0648 \u062a\u0648\u0627\u0641\u0642\u064b\u0627 \u0645\u0639 \u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0642\u062f\u064a\u0645\u0629\u060c \u0648\u0627\u0636\u0628\u0637 \u0627\u0644\u0623\u0645\u0646/\u0627\u0644\u0623\u062f\u0627\u0621/\u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a \u0628\u0639\u0646\u0627\u064a\u0629. \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0633\u0631\u064a\u0639\u0629 \u0627\u0644\u062e\u0641\u064a\u0641\u0629\u060c \u0641\u0643\u0651\u0631 \u0641\u064a \u0627\u0644\u062d\u0627\u0648\u064a\u0627\u062a/PaaS\u061b \u0648\u0644\u0644\u0639\u0632\u0644 \u0627\u0644\u0623\u0639\u0644\u0649 \u0639\u0644\u0649 \u0646\u0641\u0633 \u0627\u0644\u0639\u062a\u0627\u062f\u060c \u0627\u0639\u062a\u0645\u062f Hypervisor Type-1.</p>"},{"location":"terms/waterfall/","title":"Waterfall","text":""},{"location":"terms/waterfall/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Waterfall Model \u2014 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0634\u0644\u0651\u0627\u0644 (\u062a\u0633\u0644\u0633\u0644 \u0645\u0631\u0627\u062d\u0644 \u062a\u0637\u0648\u064a\u0631 \u062b\u0627\u0628\u062a\u0629 \u0645\u0639 \u062d\u0648\u0627\u062c\u0632 \u0627\u0639\u062a\u0645\u0627\u062f).</p>"},{"location":"terms/waterfall/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0645\u0646\u0647\u062c\u064a\u0629 \u062a\u062a\u0627\u0628\u0639\u064a\u0629 \u062e\u0637\u0651\u064a\u0629 \u0641\u064a SDLC: \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u2192 \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u2192 \u0627\u0644\u062a\u0646\u0641\u064a\u0630 \u2192 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u2192 \u0627\u0644\u0646\u0634\u0631 \u2192 \u0627\u0644\u0635\u064a\u0627\u0646\u0629. \u0644\u0627 \u0646\u0646\u062a\u0642\u0644 \u0644\u0645\u0631\u062d\u0644\u0629 \u0625\u0644\u0627 \u0628\u0639\u062f \u0627\u0643\u062a\u0645\u0627\u0644 \u0648\u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0633\u0627\u0628\u0642\u0629 (Phase Gate).</p>"},{"location":"terms/waterfall/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0644 \u0645\u0631\u062d\u0644\u0629 \u062a\u0633\u0644\u0651\u0645 \u0645\u062e\u0631\u062c\u0627\u062a \u0648\u0648\u062b\u0627\u0626\u0642 \u0644\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062a\u0627\u0644\u064a\u0629.  </li> <li>\u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0645\u062a\u0623\u062e\u0631\u0629 = \u0645\u0643\u0644\u0641\u0629\u061b \u0644\u0630\u0627 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0633\u0628\u0642.  </li> <li>\u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0645\u0634\u0627\u0631\u064a\u0639 \u0627\u0644\u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0648/\u0623\u0648 \u0630\u0627\u062a \u0627\u0645\u062a\u062b\u0627\u0644 \u0635\u0627\u0631\u0645 (\u0639\u0642\u0648\u062f/\u0644\u0648\u0627\u0626\u062d).</li> </ul>"},{"location":"terms/waterfall/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u0646\u0627\u0621 \u062c\u0633\u0631: \u062a\u0635\u0627\u0631\u064a\u062d \u0648\u062f\u0631\u0627\u0633\u0627\u062a \u062b\u0645 \u062e\u0631\u0627\u0626\u0637\u060c \u062b\u0645 \u0635\u0628\u0651 \u062e\u0631\u0633\u0627\u0646\u0629\u060c \u062b\u0645 \u0641\u062d\u0635 \u062a\u062d\u0645\u0651\u0644\u060c \u062b\u0645 \u0627\u0641\u062a\u062a\u0627\u062d. \u0625\u0646 \u0627\u0643\u062a\u0634\u0641\u062a \u062e\u0637\u0623\u064b \u0628\u0639\u062f \u0627\u0644\u0635\u0628\u0651\u060c \u0627\u0644\u062a\u0643\u0644\u0641\u0629 \u0639\u0627\u0644\u064a\u0629 \u062c\u062f\u064b\u0627 \u0644\u0644\u0639\u0648\u062f\u0629.</p>"},{"location":"terms/waterfall/#c-phase-gates","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 \u062a\u0645\u062b\u064a\u0644 Phase Gates \u0645\u0639 \u0642\u0648\u0627\u0626\u0645 \u062a\u062d\u0642\u0642 \u0648\u0627\u0639\u062a\u0645\u0627\u062f","text":"C#<pre><code>// .NET 8/9\nusing System;\nusing System.Collections.Generic;\n\nenum Phase { Requirements, Design, Implementation, Verification, Deployment, Maintenance }\n\nclass PhaseGate\n{\n    private readonly Dictionary&lt;Phase, bool&gt; _approved = new();\n    public Phase Current { get; private set; } = Phase.Requirements;\n\n    public void Approve(Phase p, string approver, string note = \"\")\n    {\n        if (p != Current) throw new InvalidOperationException($\"\u0644\u0627 \u064a\u0645\u0643\u0646\u0643 \u0627\u0639\u062a\u0645\u0627\u062f {p}\u061b \u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062d\u0627\u0644\u064a\u0629 {Current}.\");\n        Console.WriteLine($\"\u2714 Approved {p} by {approver}. {note}\");\n        _approved[p] = true;\n    }\n\n    public void Next()\n    {\n        if (!_approved.TryGetValue(Current, out var ok) || !ok)\n            throw new InvalidOperationException($\"\u0645\u0631\u062d\u0644\u0629 {Current} \u063a\u064a\u0631 \u0645\u0639\u062a\u0645\u062f\u0629 \u0628\u0639\u062f.\");\n        Current = Current switch\n        {\n            Phase.Requirements   =&gt; Phase.Design,\n            Phase.Design         =&gt; Phase.Implementation,\n            Phase.Implementation =&gt; Phase.Verification,\n            Phase.Verification   =&gt; Phase.Deployment,\n            Phase.Deployment     =&gt; Phase.Maintenance,\n            _ =&gt; Phase.Maintenance\n        };\n        Console.WriteLine($\"\u2192 moved to {Current}\");\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var gate = new PhaseGate();\n\n        // 1) \u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0642\u0628\u0644 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644\n        gate.Approve(Phase.Requirements, \"PO\", \"SRS v1.3 signed\");\n        gate.Next();\n\n        // 2) \u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u062a\u0635\u0645\u064a\u0645 (\u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 \u0648\u0648\u0627\u062c\u0647\u0627\u062a)\n        gate.Approve(Phase.Design, \"Architect\", \"C4 + ADRs complete\");\n        gate.Next();\n\n        // 3) \u0627\u0644\u062a\u0646\u0641\u064a\u0630\u2026 \u062b\u0645 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u2026 \u062b\u0645 \u0627\u0644\u0646\u0634\u0631\n        gate.Approve(Phase.Implementation, \"Tech Lead\");\n        gate.Next();\n\n        gate.Approve(Phase.Verification, \"QA\", \"All test cases passed\");\n        gate.Next();\n\n        gate.Approve(Phase.Deployment, \"Ops\", \"Runbook + Rollback plan\");\n        gate.Next();\n\n        Console.WriteLine($\"Current Phase: {gate.Current}\"); // Maintenance\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: \u0644\u0627 \u064a\u0645\u0643\u0646 \u0627\u0644\u062a\u0642\u062f\u0651\u0645 \u062f\u0648\u0646 \u0627\u0639\u062a\u0645\u0627\u062f \u0627\u0644\u0645\u0631\u062d\u0644\u0629. \u0647\u0643\u0630\u0627 \u064a\u0639\u0645\u0644 Waterfall \u0628\u062d\u0648\u0627\u062c\u0632 \u0648\u0627\u0636\u062d\u0629.</p>"},{"location":"terms/waterfall/#waterfall_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0637\u0628\u064a\u0642 Waterfall (\u0639\u0646\u062f\u0645\u0627 \u064a\u0643\u0648\u0646 \u0645\u0646\u0627\u0633\u0628\u064b\u0627)","text":"<ol> <li>\u062a\u0648\u062b\u064a\u0642 \u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0642\u0648\u064a (SRS): \u0646\u0637\u0627\u0642 \u0648\u0627\u0636\u062d\u060c \u062d\u0627\u0644\u0627\u062a \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u060c \u0645\u0639\u0627\u064a\u064a\u0631 \u0642\u0628\u0648\u0644\u060c \u0642\u064a\u0648\u062f/\u0627\u0645\u062a\u062b\u0627\u0644.  </li> <li>\u062a\u0635\u0645\u064a\u0645 \u0645\u0641\u0635\u0651\u0644: \u0645\u0639\u0645\u0627\u0631\u064a\u0651\u0629 C4\u060c \u0648\u0627\u062c\u0647\u0627\u062a/\u0639\u0642\u0648\u062f API\u060c \u0646\u0645\u0627\u0630\u062c \u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0642\u0631\u0627\u0631\u0627\u062a ADR.  </li> <li>\u062e\u0637\u0651\u0629 \u0627\u062e\u062a\u0628\u0627\u0631 V&amp;V: \u0645\u0635\u0641\u0648\u0641\u0629 \u062a\u062a\u0628\u0651\u0639 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u2194 \u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 (RTM)\u060c \u062e\u0637\u0637 \u0642\u0628\u0648\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 (UAT).  </li> <li>\u0625\u062f\u0627\u0631\u0629 \u062a\u063a\u064a\u064a\u0631\u0627\u062a \u0635\u0627\u0631\u0645\u0629: \u0644\u062c\u0646\u0629 \u062a\u063a\u064a\u064a\u0631 (CCB)\u060c \u062a\u0642\u064a\u064a\u0645 \u0627\u0644\u0623\u062b\u0631\u060c \u0646\u0633\u062e \u0648\u062b\u0627\u0626\u0642.  </li> <li>\u062d\u0648\u0627\u062c\u0632 \u062c\u0648\u062f\u0629 (Phase Gates): \u0642\u0648\u0627\u0626\u0645 \u062a\u062d\u0642\u0642 \u0644\u0643\u0644 \u0645\u0631\u062d\u0644\u0629 + \u062a\u0648\u0642\u064a\u0639\u0627\u062a \u0645\u0627\u0644\u0643 \u0627\u0644\u0645\u0646\u062a\u062c/\u0627\u0644\u0645\u0639\u0645\u0627\u0631\u064a/QA/\u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a.  </li> <li>\u0646\u0634\u0631 \u0645\u0636\u0628\u0648\u0637: Runbook\u060c \u062e\u0637\u0629 \u0631\u062c\u0648\u0639\u060c \u062a\u0648\u062b\u064a\u0642 \u0627\u0644\u062a\u0634\u063a\u064a\u0644/\u0627\u0644\u062f\u0639\u0645.  </li> <li>\u0635\u064a\u0627\u0646\u0629: \u0625\u062f\u0627\u0631\u0629 \u0639\u064a\u0648\u0628\u060c \u0631\u0642\u0639 \u0623\u0645\u0627\u0646\u060c \u0625\u0635\u062f\u0627\u0631\u0627\u062a \u062b\u0627\u0646\u0648\u064a\u0629 \u0645\u062e\u0637\u0651\u064e\u0637\u0629.</li> </ol>"},{"location":"terms/waterfall/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0641\u062a\u0631\u0627\u0636 \u062b\u0628\u0627\u062a \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0641\u064a \u0628\u064a\u0626\u0627\u062a \u0633\u0631\u064a\u0639\u0629 \u0627\u0644\u062a\u063a\u064a\u0651\u0631.  </li> <li>\u0627\u0646\u062f\u0645\u0627\u062c \u0645\u062a\u0623\u062e\u0631 (Big-Bang) \u2192 \u0645\u0641\u0627\u062c\u0622\u062a \u0639\u0646\u062f \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631.  </li> <li>\u0648\u062b\u0627\u0626\u0642 \u0643\u062b\u064a\u0631\u0629 \u0628\u062f\u0648\u0646 \u0645\u0631\u0627\u062c\u0639\u0629 \u0642\u064a\u0645\u0629 \u0623\u0648 \u062a\u062d\u062f\u064a\u062b \u0645\u0633\u062a\u0645\u0631.  </li> <li>\u062a\u062c\u0627\u0647\u0644 \u0623\u0635\u062d\u0627\u0628 \u0627\u0644\u0645\u0635\u0644\u062d\u0629 \u062d\u062a\u0649 \u0645\u0631\u062d\u0644\u0629 \u0645\u062a\u0623\u062e\u0631\u0629 (UAT \u0645\u062a\u0623\u062e\u0631).  </li> <li>\u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0642\u064a\u0627\u0633\u0627\u062a (\u062c\u0648\u062f\u0629/\u0623\u062f\u0627\u0621) \u0642\u0628\u0644 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f.</li> </ul>"},{"location":"terms/waterfall/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Waterfall \u062a\u0633\u0644\u0633\u0644 \u062e\u0637\u0651\u064a \u0645\u0639 \u062d\u0648\u0627\u062c\u0632 \u0627\u0639\u062a\u0645\u0627\u062f \u0645\u0646\u0627\u0633\u0628 \u0644\u0639\u0642\u0648\u062f/\u0627\u0645\u062a\u062b\u0627\u0644 \u0648\u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u062b\u0627\u0628\u062a\u0629 Agile \u062a\u0643\u0631\u0627\u0631\u0627\u062a \u0642\u0635\u064a\u0631\u0629 \u0648\u062a\u063a\u0630\u064a\u0629 \u0631\u0627\u062c\u0639\u0629 \u0645\u0633\u062a\u0645\u0631\u0629 \u064a\u062a\u0642\u0628\u0651\u0644 \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u061b \u0642\u064a\u0645\u0629 \u0645\u0628\u0643\u0631\u0629 DevOps \u0623\u062a\u0645\u062a\u0629 \u0628\u0646\u0627\u0621/\u0646\u0634\u0631/\u062a\u0634\u063a\u064a\u0644 \u064a\u0643\u0645\u0644 \u0623\u064a \u0645\u0646\u0647\u062c\u064a\u0629\u061b \u064a\u0642\u0644\u0651\u0644 \u0632\u0645\u0646 \u0627\u0644\u062f\u0648\u0631\u0629 SDLC \u0625\u0637\u0627\u0631 \u0627\u0644\u0645\u0631\u0627\u062d\u0644 \u0627\u0644\u0639\u0627\u0645 Waterfall \u0623\u062d\u062f \u0637\u0631\u0642 \u062a\u0646\u0641\u064a\u0630\u0647"},{"location":"terms/waterfall/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Waterfall \u064a\u0641\u0631\u0636 \u062a\u0633\u0644\u0633\u0644\u064b\u0627 \u0635\u0627\u0631\u0645\u064b\u0627 \u0645\u0639 \u0648\u062b\u0627\u0626\u0642 \u0648\u0627\u0639\u062a\u0645\u0627\u062f\u0627\u062a \u0642\u0628\u0644 \u0643\u0644 \u0627\u0646\u062a\u0642\u0627\u0644. \u0627\u062e\u062a\u0631\u0647 \u0639\u0646\u062f\u0645\u0627 \u062a\u0643\u0648\u0646 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u062b\u0627\u0628\u062a\u0629 \u0648\u0627\u0644\u0627\u0645\u062a\u062b\u0627\u0644 \u0639\u0627\u0644\u064a\u060c \u0648\u0627\u062f\u0639\u0645 \u0643\u0644 \u0645\u0631\u062d\u0644\u0629 \u0628\u0640 \u062d\u0648\u0627\u062c\u0632 \u062c\u0648\u062f\u0629 \u0648\u0627\u0636\u062d\u0629\u2014 \u0648\u0625\u0644\u0627 \u0641\u0641\u0643\u0651\u0631 \u0641\u064a Agile/DevOps \u0644\u062a\u0642\u0644\u064a\u0644 \u0645\u062e\u0627\u0637\u0631 \u0627\u0644\u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0645\u062a\u0623\u062e\u0631.</p>"},{"location":"terms/webhook/","title":"Webhook","text":""},{"location":"terms/webhook/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Webhook \u2014 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 \u0639\u0643\u0633\u064a \u0639\u0628\u0631 \u0627\u0644\u0648\u064a\u0628 (\u0645\u0632\u0648\u062f \u0627\u0644\u062e\u062f\u0645\u0629 \u064a\u062f\u0641\u0639 \u062d\u062f\u062b\u064b\u0627 \u0625\u0644\u0649 \u0639\u0646\u0648\u0627\u0646\u0643).</p>"},{"location":"terms/webhook/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0622\u0644\u064a\u0629 Push: \u062e\u062f\u0645\u0629 \u062e\u0627\u0631\u062c\u064a\u0651\u0629 \u062a\u0631\u0633\u0644 \u0637\u0644\u0628 HTTP \u0625\u0644\u0649 \u0646\u0642\u0637\u0629 \u0646\u0647\u0627\u064a\u0629 \u0644\u062f\u064a\u0643 \u0639\u0646\u062f \u0648\u0642\u0648\u0639 \u062d\u062f\u062b (\u0645\u062b\u0627\u0644: \u062f\u064f\u0641\u0639 \u0627\u0644\u0637\u0644\u0628\u060c \u0627\u0643\u062a\u0645\u0644 \u0627\u0644\u0634\u062d\u0646). \u0623\u0646\u062a \u062a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0648\u062a\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062d\u062f\u062b \u062b\u0645 \u062a\u0631\u062f\u0651 2xx \u0633\u0631\u064a\u0639\u064b\u0627.</p>"},{"location":"terms/webhook/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u062a\u0639\u0631\u0651\u0650\u0641 \u0639\u0646\u0648\u0627\u0646\u064b\u0627 \u0639\u0627\u0645\u064b\u0627 <code>POST /webhooks/provider</code>.  </li> <li>\u0627\u0644\u0645\u0632\u0648\u0651\u062f \u064a\u0631\u0633\u0644 JSON \u0645\u0639 \u0631\u0624\u0648\u0633: \u0645\u0639\u0631\u0651\u0641 \u0627\u0644\u062d\u062f\u062b\u060c \u062a\u0648\u0642\u064a\u0639 HMAC\u060c \u0637\u0627\u0628\u0639 \u0632\u0645\u0646\u064a.  </li> <li>\u0623\u0646\u062a \u062a\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639/\u0627\u0644\u0648\u0642\u062a\u060c \u062a\u0645\u0646\u0639 \u0627\u0644\u062a\u0643\u0631\u0627\u0631\u060c \u0648\u062a\u0636\u0639 \u0627\u0644\u0639\u0645\u0644 \u0641\u064a \u0637\u0627\u0628\u0648\u0631 \u062b\u0645 \u062a\u0639\u064a\u062f 200 OK.  </li> <li>\u0639\u0646\u062f \u0641\u0634\u0644 \u0627\u0644\u0627\u0633\u062a\u0644\u0627\u0645 \u0642\u062f \u064a\u064f\u0639\u0627\u062f \u0627\u0644\u0625\u0631\u0633\u0627\u0644 \u062a\u0644\u0642\u0627\u0626\u064a\u064b\u0627 (Retries).</li> </ul>"},{"location":"terms/webhook/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0645\u062b\u0644 \u0631\u0633\u0627\u0644\u0629 \u0646\u0635\u064a\u0629 \u0645\u0646 \u0634\u0631\u0643\u0629 \u0627\u0644\u062a\u0648\u0635\u064a\u0644: \u0647\u0645 \u064a\u0628\u0627\u062f\u0631\u0648\u0646 \u0628\u0625\u062e\u0628\u0627\u0631\u0643 \u0628\u0648\u0635\u0648\u0644 \u0627\u0644\u0637\u0644\u0628\u060c \u0628\u062f\u0644 \u0623\u0646 \u062a\u0633\u0623\u0644 \u0623\u0646\u062a \u0643\u0644 \u062f\u0642\u064a\u0642\u0629 (Polling).</p>"},{"location":"terms/webhook/#c-minimal-api-webhook-idempotency","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u2014 Minimal API: \u0627\u0633\u062a\u0642\u0628\u0627\u0644 Webhook + \u062a\u062d\u0642\u0642 \u062a\u0648\u0642\u064a\u0639 + Idempotency","text":"C#<pre><code>// Program.cs  (.NET 8/9)\n// dotnet new web -n WebhookDemo &amp;&amp; cd WebhookDemo &amp;&amp; dotnet run\nusing System.Security.Cryptography;\nusing System.Text;\nusing Microsoft.Extensions.Caching.Memory;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddMemoryCache();\nvar app = builder.Build();\n\napp.UseHttpsRedirection();\n\n// \u0646\u0642\u0637\u0629 \u0627\u0644\u0627\u0633\u062a\u0642\u0628\u0627\u0644 (\u063a\u064a\u0651\u0631 \u0627\u0644\u0645\u0633\u0627\u0631/\u0627\u0644\u0627\u0633\u0645 \u0643\u0645\u0627 \u064a\u0637\u0644\u0628 \u0645\u0632\u0648\u0651\u062f\u0643)\napp.MapPost(\"/webhooks/provider\", async (HttpRequest req, IMemoryCache cache) =&gt;\n{\n    // 1) \u0627\u0642\u0631\u0623 \u0627\u0644\u0631\u0624\u0648\u0633 \u0627\u0644\u0634\u0627\u0626\u0639\u0629 (\u0623\u0633\u0645\u0627\u0621 \u0627\u0644\u0631\u0624\u0648\u0633 \u062a\u062e\u062a\u0644\u0641 \u0628\u064a\u0646 \u0627\u0644\u0645\u0632\u0648\u062f\u064a\u0646)\n    string eventId = req.Headers[\"X-Event-Id\"].ToString();        // \u0645\u0639\u0631\u0651\u0641 \u0641\u0631\u064a\u062f \u0644\u0644\u062d\u062f\u062b\n    string sig     = req.Headers[\"X-Signature\"].ToString();        // \u0645\u062b\u0627\u0644: \"sha256=...\"\n    string ts      = req.Headers[\"X-Timestamp\"].ToString();        // Unix seconds\n\n    // 2) \u0627\u0642\u0631\u0623 \u0627\u0644\u062c\u0633\u0645 \u0643\u0646\u0635 (\u0643\u0645\u0627 \u062d\u064f\u0633\u0628 \u062a\u0648\u0642\u064a\u0639\u0647 \u0639\u0646\u062f \u0627\u0644\u0645\u0632\u0648\u062f)\n    using var reader = new StreamReader(req.Body, Encoding.UTF8);\n    string payload = await reader.ReadToEndAsync();\n\n    // 3) \u062a\u062d\u0642\u0651\u0642 \u0645\u0628\u062f\u0626\u064a: \u0637\u0627\u0628\u0639 \u0632\u0645\u0646\u064a \u062d\u062f\u064a\u062b \u0644\u0645\u0646\u0639 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 (Replay)\n    if (!long.TryParse(ts, out var unix) ||\n        DateTimeOffset.UtcNow - DateTimeOffset.FromUnixTimeSeconds(unix) &gt; TimeSpan.FromMinutes(5))\n        return Results.Unauthorized();\n\n    // 4) \u062a\u062d\u0642\u0651\u0642 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 HMAC-SHA256 \u0645\u0639 \u0633\u0631\u0651 \u0645\u0634\u062a\u0631\u0643\n    string secret = Environment.GetEnvironmentVariable(\"WEBHOOK_SECRET\") ?? \"dev-secret\";\n    using var hmac = new HMACSHA256(Encoding.UTF8.GetBytes(secret));\n    // \u0627\u0644\u062a\u0627\u0644\u064a \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0634\u0627\u0626\u0639: hash( $\"{ts}.{payload}\" )\n    var hash = hmac.ComputeHash(Encoding.UTF8.GetBytes($\"{ts}.{payload}\"));\n    string expected = \"sha256=\" + Convert.ToHexString(hash).ToLowerInvariant();\n\n    // \u0645\u0642\u0627\u0631\u0646\u0629 \u062b\u0627\u0628\u062a\u0629 \u0627\u0644\u0648\u0642\u062a (\u062a\u062c\u0646\u0651\u0628 \u0647\u062c\u0645\u0627\u062a \u0627\u0644\u062a\u0648\u0642\u064a\u062a)\n    if (!CryptographicOperations.FixedTimeEquals(\n            Encoding.UTF8.GetBytes(sig), Encoding.UTF8.GetBytes(expected)))\n        return Results.Unauthorized();\n\n    // 5) Idempotency: \u0627\u0645\u0646\u0639 \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u062d\u062f\u062b \u0646\u0641\u0633\u0647 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0645\u0631\u0629\n    if (!string.IsNullOrWhiteSpace(eventId))\n    {\n        if (cache.TryGetValue(eventId, out _))\n            return Results.Ok();                      // \u062a\u0643\u0631\u0627\u0631 \u2014 \u062a\u062c\u0627\u0647\u0644\u0647 \u0628\u0647\u062f\u0648\u0621\n        cache.Set(eventId, true, TimeSpan.FromMinutes(30));\n    }\n\n    // 6) TODO: \u0636\u0639 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u062b\u0642\u064a\u0644\u0629 \u0641\u064a \u0637\u0627\u0628\u0648\u0631/\u062e\u0644\u0641\u064a\u0629 \u062b\u0645 \u0631\u062f\u0651 \u0628\u0633\u0631\u0639\u0629\n    Console.WriteLine($\"Webhook OK: {eventId} | {payload}\");\n\n    return Results.Ok(); // 200 \u062e\u0644\u0627\u0644 \u062b\u0648\u0627\u0646\u064d \u0642\u0644\u064a\u0644\u0629\n});\n\napp.Run();\n</code></pre> <p>\u0627\u062e\u062a\u0628\u0627\u0631 \u0633\u0631\u064a\u0639 \u0628\u0640 curl (\u062a\u0648\u0644\u064a\u062f \u062a\u0648\u0642\u064a\u0639 \u064a\u062f\u0648\u064a\u064b\u0627 \u0645\u062b\u0627\u0644): Bash<pre><code>BODY='{\"ping\":1}'\nTS=$(date +%s)\nSECRET='dev-secret'\nSIG=\"sha256=$(printf \"%s.%s\" \"$TS\" \"$BODY\" | openssl dgst -sha256 -hmac \"$SECRET\" -binary | xxd -p -c 256)\"\ncurl -X POST https://localhost:5001/webhooks/provider \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Event-Id: ev_123\" \\\n  -H \"X-Timestamp: $TS\" \\\n  -H \"X-Signature: $SIG\" \\\n  -d \"$BODY\" -k\n</code></pre></p> <p>\u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0623\u0645\u0646\u064a\u0629 \u0633\u0631\u064a\u0639\u0629: \u0627\u0633\u062a\u062e\u062f\u0645 HTTPS \u062f\u0627\u0626\u0645\u064b\u0627\u060c \u0633\u0631\u0651 \u0642\u0648\u064a \u0628\u0637\u0648\u0644 \u0643\u0627\u0641\u064d\u060c \u0648\u0627\u062d\u062a\u0641\u0650\u0638 \u0628\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u0633\u0631\u0651 \u0641\u064a Secret Manager.</p>"},{"location":"terms/webhook/#webhook_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u062a\u0635\u0645\u064a\u0645 Webhook \u0645\u062a\u064a\u0646","text":"<ul> <li>\u0627\u062e\u062a\u0631 \u0645\u0633\u0627\u0631\u064b\u0627 \u0645\u0645\u064a\u0651\u0632\u064b\u0627 \u0648\u0635\u0639\u0628 \u0627\u0644\u062a\u062e\u0645\u064a\u0646\u060c \u0648\u0623\u0628\u0642\u0650\u0647 \u062e\u0644\u0641 HTTPS \u0641\u0642\u0637.  </li> <li>\u062a\u062d\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0648\u0627\u0644\u0637\u0627\u0628\u0639 \u0627\u0644\u0632\u0645\u0646\u064a (\u0646\u0627\u0641\u0630\u0629 5\u201310 \u062f\u0642\u0627\u0626\u0642).  </li> <li>\u0641\u0639\u0651\u0644 Idempotency \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 <code>X-Event-Id</code> \u0623\u0648 Digest \u0644\u0644\u062c\u0633\u0645.  </li> <li>\u0623\u0639\u062f 2xx \u0633\u0631\u064a\u0639\u064b\u0627 \u0648\u0648\u064f\u062c\u0651\u0650\u0647 \u0627\u0644\u0639\u0645\u0644 \u0625\u0644\u0649 \u062e\u0644\u0641\u064a\u0629/\u0637\u0627\u0628\u0648\u0631 (Channel, Queue).  </li> <li>\u0633\u062c\u0651\u0644 Correlation-Id\u060c \u0648\u0631\u0627\u0642\u0628 \u0645\u0639\u062f\u0644\u0627\u062a \u0627\u0644\u0646\u062c\u0627\u062d/\u0627\u0644\u0641\u0634\u0644.  </li> <li>\u0627\u0636\u0628\u0637 Rate Limit \u0648\u0627\u0633\u062a\u0642\u0628\u0644 Retries \u062f\u0648\u0646 \u0622\u062b\u0627\u0631 \u062c\u0627\u0646\u0628\u064a\u0629.  </li> <li>\u062f\u0648\u0651\u0646 \u0645\u062e\u0637\u0637 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 (Schema) \u0648\u0646\u0633\u062e \u0627\u0644\u0625\u0635\u062f\u0627\u0631 (Versioning) \u0644\u0644\u062d\u0641\u0627\u0638 \u0639\u0644\u0649 \u0627\u0644\u062a\u0648\u0627\u0641\u0642.</li> </ul>"},{"location":"terms/webhook/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0642\u0628\u0648\u0644 Webhook \u0628\u062f\u0648\u0646 \u062a\u0648\u0642\u064a\u0639 \u0623\u0648 \u0628\u062f\u0648\u0646 \u0641\u062d\u0635 \u0627\u0644\u0648\u0642\u062a \u2192 \u0625\u0639\u0627\u062f\u0629 \u062a\u0634\u063a\u064a\u0644/\u062a\u0644\u0627\u0639\u0628.  </li> <li>\u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0639\u0645\u0644 \u0627\u0644\u062b\u0642\u064a\u0644 \u062f\u0627\u062e\u0644 \u0627\u0644\u0637\u0644\u0628 \u2192 \u0645\u0647\u0644\u0627\u062a \u0648\u0625\u0639\u0627\u062f\u0629 \u0625\u0631\u0633\u0627\u0644 \u0645\u062a\u0643\u0631\u0651\u0631.  </li> <li>\u062a\u062c\u0627\u0647\u0644 Idempotency \u2192 \u0639\u0645\u0644\u064a\u0627\u062a \u0645\u0632\u062f\u0648\u062c\u0629 (\u062e\u0627\u0635\u0629 \u0627\u0644\u0645\u062f\u0641\u0648\u0639\u0627\u062a).  </li> <li>\u0631\u062f\u0651 \u0628\u0623\u0643\u0648\u0627\u062f \u063a\u064a\u0631 \u062f\u0642\u064a\u0642\u0629 (\u0645\u062b\u0644 500 \u0639\u0644\u0649 \u062a\u0643\u0631\u0627\u0631 \u0645\u0639\u0631\u0648\u0641) \u0628\u062f\u0644 200/204.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 Whitelist IP \u0641\u0642\u0637\u061b \u062a\u0648\u0642\u064a\u0639 \u0645\u0634\u0641\u0651\u0631 \u0623\u0648 mTLS \u0623\u0643\u062b\u0631 \u0642\u0648\u0629.</li> </ul>"},{"location":"terms/webhook/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Webhook Push HTTP \u0639\u0646\u062f \u062d\u062f\u0648\u062b \u062d\u062f\u062b \u062a\u062d\u0642\u0651\u0642 \u062a\u0648\u0642\u064a\u0639 + \u0637\u0627\u0628\u0639 \u0632\u0645\u0646\u064a + Idempotency\u061b \u0631\u062f\u0651 \u0633\u0631\u064a\u0639 2xx Polling \u0633\u062d\u0628 \u062f\u0648\u0631\u064a \u0645\u0646 \u0627\u0644\u0639\u0645\u064a\u0644 \u0623\u0628\u0633\u0637\u060c \u0644\u0643\u0646 \u0627\u0633\u062a\u0647\u0644\u0627\u0643 \u0632\u0627\u0626\u062f \u0648\u062a\u0623\u062e\u064a\u0631 \u0623\u0639\u0644\u0649 WebSocket \u0627\u062a\u0635\u0627\u0644 \u062b\u0646\u0627\u0626\u064a \u062d\u064a\u0651 \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u062a\u0641\u0627\u0639\u0644\u0627\u062a \u0627\u0644\u0641\u0648\u0631\u064a\u0629\u061b \u064a\u062a\u0637\u0644\u0628 \u062c\u0644\u0633\u0629 \u0637\u0648\u064a\u0644\u0629 Server-Sent Events \u0628\u062b \u0623\u062d\u0627\u062f\u064a \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0644\u0639\u0645\u064a\u0644 \u062e\u0641\u064a\u0641 \u0644\u0644\u062a\u064a\u0627\u0631\u0627\u062a\u061b \u0644\u064a\u0633 \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647"},{"location":"terms/webhook/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Webhook = \u0625\u0634\u0639\u0627\u0631 \u0641\u0648\u0631\u064a \u0645\u0646 \u0645\u0632\u0648\u0651\u062f\u0643 \u0625\u0644\u0649 \u062e\u062f\u0645\u062a\u0643 \u0639\u0628\u0631 HTTP POST. \u0623\u0645\u0651\u0650\u0646 \u0627\u0644\u062a\u0628\u0627\u062f\u0644\u0627\u062a \u0628\u0640 \u062a\u0648\u0642\u064a\u0639/\u0632\u0645\u0646\u060c \u0627\u062c\u0639\u0644 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629 Idempotent\u060c \u0648\u0631\u062f\u0651 \u0633\u0631\u064a\u0639\u064b\u0627\u2014\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0643\u0627\u0645\u0644 \u0645\u0648\u062b\u0648\u0642 \u0648\u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0651\u0639.</p>"},{"location":"terms/websocket/","title":"WebSocket","text":""},{"location":"terms/websocket/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>WebSocket \u2014 \u0645\u0642\u0628\u0633 \u0627\u0644\u0648\u064a\u0628 (\u0627\u062a\u0635\u0627\u0644 \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u062f\u0627\u0626\u0645 \u0641\u0648\u0642 HTTP \u0628\u0639\u062f \u062a\u0631\u0642\u064a\u0629).</p>"},{"location":"terms/websocket/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u0642\u0646\u0627\u0629 \u062b\u0646\u0627\u0626\u064a\u0629 \u0627\u0644\u0627\u062a\u062c\u0627\u0647 (Full-Duplex) \u062a\u0628\u0642\u0649 \u0645\u0641\u062a\u0648\u062d\u0629 \u0628\u064a\u0646 \u0627\u0644\u0639\u0645\u064a\u0644 \u0648\u0627\u0644\u062e\u0627\u062f\u0645 \u0628\u0639\u062f \u062a\u0631\u0642\u064a\u0629 \u0623\u0648\u0644\u064a\u0629 \u0639\u0628\u0631 HTTP. \u0645\u0646\u0627\u0633\u0628\u0629 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0641\u0648\u0631\u064a\u0629: \u062f\u0631\u062f\u0634\u0629\u060c \u0625\u0634\u0639\u0627\u0631\u0627\u062a \u0644\u062d\u0638\u064a\u0629\u060c \u0628\u062b \u062d\u064a\u060c \u0644\u0648\u062d\u0627\u062a\u5b9e\u65f6.</p>"},{"location":"terms/websocket/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u0628\u062f\u0623 \u0628\u0637\u0644\u0628 HTTP \u0639\u0627\u062f\u064a \u062b\u0645 Upgrade: websocket \u2192 \u064a\u062a\u062d\u0648\u0644 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0625\u0644\u0649 WebSocket.  </li> <li>\u0628\u0639\u062f\u0647\u0627 \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0631\u0641\u064a\u0646 \u0625\u0631\u0633\u0627\u0644/\u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0631\u0633\u0627\u0626\u0644 \u0646\u0635\u064a\u0629 \u0623\u0648 \u062b\u0646\u0627\u0626\u064a\u0629 \u0641\u064a \u0623\u064a \u0648\u0642\u062a.  </li> <li>\u064a\u062f\u0639\u0645 Ping/Pong \u0644\u0644\u062d\u0641\u0627\u0638 \u0639\u0644\u0649 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0648\u0625\u0637\u0627\u0631\u0627\u062a \u062a\u0642\u0633\u0645 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0637\u0648\u064a\u0644\u0629.  </li> <li>\u0627\u0644\u0645\u062e\u0637\u0637\u0627\u0646: <code>ws://</code> \u0648<code>wss://</code> (\u0622\u0645\u0646 \u0641\u0648\u0642 TLS \u2014 \u0645\u064f\u0633\u062a\u062d\u0633\u0646 \u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c).</li> </ul>"},{"location":"terms/websocket/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u062f\u0644 \u0625\u0631\u0633\u0627\u0644 \u0631\u0633\u0627\u0644\u0629 \u0628\u0631\u064a\u062f\u064a\u0629 \u0644\u0643\u0644 \u0643\u0644\u0645\u0629\u060c \u062a\u0641\u062a\u062d \u0645\u0643\u0627\u0644\u0645\u0629 \u0647\u0627\u062a\u0641\u064a\u0629 \u062f\u0627\u0626\u0645\u0629: \u0627\u0644\u0637\u0631\u0641\u0627\u0646 \u064a\u062a\u062d\u062f\u062b\u0627\u0646 \u0645\u062a\u0649 \u0634\u0627\u0621\u0627 \u062f\u0648\u0646 \u0627\u0646\u062a\u0638\u0627\u0631 \u0637\u0644\u0628 \u062c\u062f\u064a\u062f \u0643\u0644 \u0645\u0631\u0629.</p>"},{"location":"terms/websocket/#c-echo","title":"\u0645\u062b\u0627\u0644 \u0643\u0648\u062f C# \u0628\u0633\u064a\u0637 (\u062e\u0627\u062f\u0645 Echo + \u0639\u0645\u064a\u0644)","text":""},{"location":"terms/websocket/#aspnet-core-echo","title":"\u062e\u0627\u062f\u0645 ASP.NET Core (Echo)","text":"C#<pre><code>// Program.cs\nusing System.Net.WebSockets;\n\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.UseWebSockets(new WebSocketOptions\n{\n    KeepAliveInterval = TimeSpan.FromSeconds(30)\n});\n\napp.Map(\"/ws/echo\", async (HttpContext ctx) =&gt;\n{\n    if (!ctx.WebSockets.IsWebSocketRequest) { ctx.Response.StatusCode = 400; return; }\n\n    using var socket = await ctx.WebSockets.AcceptWebSocketAsync();\n    var buffer = new byte[4 * 1024];\n\n    while (true)\n    {\n        var result = await socket.ReceiveAsync(buffer, CancellationToken.None);\n        if (result.MessageType == WebSocketMessageType.Close)\n        {\n            await socket.CloseAsync(WebSocketCloseStatus.NormalClosure, \"bye\", CancellationToken.None);\n            break;\n        }\n\n        var segment = new ArraySegment&lt;byte&gt;(buffer, 0, result.Count);\n        await socket.SendAsync(segment, result.MessageType, result.EndOfMessage, CancellationToken.None);\n    }\n});\n\napp.Run();\n</code></pre>"},{"location":"terms/websocket/#net-clientwebsocket","title":"\u0639\u0645\u064a\u0644 .NET (ClientWebSocket)","text":"C#<pre><code>using System.Net.WebSockets;\nusing System.Text;\n\nusing var ws = new ClientWebSocket();\nawait ws.ConnectAsync(new Uri(\"ws://localhost:5000/ws/echo\"), CancellationToken.None);\n\nvar send = Encoding.UTF8.GetBytes(\"hello ws\");\nawait ws.SendAsync(send, WebSocketMessageType.Text, endOfMessage: true, CancellationToken.None);\n\nvar buffer = new byte[1024];\nvar res = await ws.ReceiveAsync(buffer, CancellationToken.None);\nConsole.WriteLine(Encoding.UTF8.GetString(buffer, 0, res.Count)); // hello ws\n\nawait ws.CloseAsync(WebSocketCloseStatus.NormalClosure, \"done\", CancellationToken.None);\n</code></pre> <p>\u0641\u064a \u0627\u0644\u0625\u0646\u062a\u0627\u062c \u0627\u0633\u062a\u062e\u062f\u0645 <code>wss://</code> (TLS) \u0648\u062e\u0644\u0641 Proxy \u064a\u062f\u0639\u0645 WebSocket (\u0645\u062b\u0644 Nginx/HTTP/2+3).</p>"},{"location":"terms/websocket/#websocket_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 WebSocket \u0628\u0641\u0639\u0627\u0644\u064a\u0629","text":"<ul> <li>\u0635\u0645\u0651\u0645 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0631\u0633\u0627\u0626\u0644 \u0648\u0627\u0636\u062d\u064b\u0627 (\u0646\u0648\u0639 \u0627\u0644\u0631\u0633\u0627\u0644\u0629\u060c \u0627\u0644\u062d\u0642\u0648\u0644\u060c \u0627\u0644\u0646\u0633\u062e\u0629).  </li> <li>\u0641\u0639\u0651\u0644 Keep-Alive \u0648Timeouts \u0648\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0639\u0644\u0649 \u0627\u0644\u0639\u0645\u064a\u0644.  </li> <li>\u0636\u0639 \u062d\u062f\u0648\u062f\u064b\u0627 \u0644\u0644\u062d\u062c\u0645/\u0627\u0644\u0645\u0639\u062f\u0644 (Backpressure) \u0648\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a.  </li> <li>\u0623\u0636\u0650\u0641 \u0645\u0635\u0627\u062f\u0642\u0629 \u0641\u064a \u0627\u0644\u062a\u0631\u0642\u064a\u0640\u0629 (\u0643\u0648\u0643\u064a/\u062a\u0648\u0643\u0646) \u0648\u062a\u062d\u0642\u0642 Origin \u0644\u0644\u0645\u062a\u0635\u0641\u062d.  </li> <li>\u0631\u0627\u0642\u0628 \u0627\u0644\u0645\u0642\u0627\u064a\u064a\u0633: \u062c\u0644\u0633\u0627\u062a \u0645\u0641\u062a\u0648\u062d\u0629\u060c \u062a\u0623\u062e\u0651\u0631\u060c \u0645\u0639\u062f\u0644\u0627\u062a \u0627\u0644\u0625\u0631\u0633\u0627\u0644\u060c \u0623\u062e\u0637\u0627\u0621 \u0625\u063a\u0644\u0627\u0642.  </li> <li>\u062e\u0637\u0651\u0637 \u0644\u062a\u0648\u0633\u0639\u0629 \u0623\u0641\u0642\u064a\u0651\u0629 \u0639\u0628\u0631 Sticky Sessions \u0623\u0648 Pub/Sub \u062e\u0644\u0641 \u0627\u0644\u062e\u0648\u0627\u062f\u0645.</li> </ul>"},{"location":"terms/websocket/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 CORS \u0644\u0645\u062a\u0635\u0641\u062d WebSocket (\u0644\u0627 \u064a\u0646\u0637\u0628\u0642 \u0645\u0628\u0627\u0634\u0631\u0629) \u0628\u062f\u0644 \u0641\u062d\u0635 Origin.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0646\u0642\u0637\u0627\u0639 \u0627\u0644\u0634\u0628\u0643\u0629 \u0648\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0627\u0644\u062a\u062f\u0631\u064a\u062c\u064a\u0629.  </li> <li>\u0625\u0631\u0633\u0627\u0644 \u0631\u0633\u0627\u0626\u0644 \u0636\u062e\u0645\u0629 \u062f\u0648\u0646 \u062a\u062c\u0632\u0626\u0629/\u0636\u063a\u0637 \u0623\u0648 \u062f\u0648\u0646 Backpressure.  </li> <li>\u0627\u0644\u0627\u0643\u062a\u0641\u0627\u0621 \u0628\u0640 <code>ws://</code> \u0639\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0627\u0644\u0639\u0627\u0645 \u0628\u062f\u0644 <code>wss://</code>.</li> </ul>"},{"location":"terms/websocket/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 HTTP \u0637\u0644\u0628/\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0645\u062a\u0642\u0637\u0651\u0639\u0629 \u0628\u0633\u064a\u0637 \u0648\u0648\u0627\u0633\u0639\u061b \u0644\u064a\u0633 \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u0628\u0634\u0643\u0644 \u062f\u0627\u0626\u0645 WebSocket \u0642\u0646\u0627\u0629 \u062b\u0646\u0627\u0626\u064a\u0629 \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u062f\u0627\u0626\u0645\u0629 \u062a\u0631\u0642\u064a\u0629 \u0645\u0646 HTTP\u061b \u0646\u0635/\u062b\u0646\u0627\u0626\u064a\u061b \u0645\u0646\u0627\u0633\u0628 \u0644\u0644\u0641\u0648\u0631\u064a\u0629 Server-Sent Events \u0628\u062b \u0623\u062d\u0627\u062f\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u0645\u0646 \u0627\u0644\u062e\u0627\u062f\u0645 \u0644\u0644\u0639\u0645\u064a\u0644 \u0623\u0628\u0633\u0637 \u0645\u0646 WS\u061b \u0627\u0644\u062e\u0627\u062f\u0645\u2192\u0627\u0644\u0639\u0645\u064a\u0644 \u0641\u0642\u0637\u061b \u0646\u0635\u0651\u064a"},{"location":"terms/websocket/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>WebSocket \u064a\u0648\u0641\u0651\u0631 \u0627\u062a\u0635\u0627\u0644\u064b\u0627 \u062f\u0627\u0626\u0645\u064b\u0627 \u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0627\u062a\u062c\u0627\u0647 \u0628\u0639\u062f \u062a\u0631\u0642\u064a\u0629 HTTP\u060c \u0645\u062b\u0627\u0644\u064a\u064b\u0627 \u0644\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0641\u0648\u0631\u064a\u0629. \u0627\u0633\u062a\u062e\u062f\u0645 <code>wss://</code>\u060c \u0635\u0645\u0651\u0645 \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0631\u0633\u0627\u0626\u0644\u0643\u060c \u0648\u0627\u0647\u062a\u0645 \u0628\u0627\u0644\u0627\u0633\u062a\u0642\u0631\u0627\u0631 (Keep-Alive/Backpressure/\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u062a\u0635\u0627\u0644).</p>"},{"location":"terms/workflow/","title":"Workflow","text":""},{"location":"terms/workflow/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Workflow \u2014 \u0633\u064a\u0631/\u062a\u062f\u0641\u0642 \u0627\u0644\u0639\u0645\u0644 (\u0633\u0644\u0633\u0644\u0629 \u062e\u0637\u0648\u0627\u062a \u0645\u0646\u0638\u0651\u064e\u0645\u0629 \u0644\u0625\u0646\u062c\u0627\u0632 \u0645\u0647\u0645\u0629 \u0645\u0639 \u0642\u0648\u0627\u0639\u062f \u0627\u0646\u062a\u0642\u0627\u0644).</p>"},{"location":"terms/workflow/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0635\u0645\u064a\u0645 \u064a\u064f\u062d\u062f\u0651\u0650\u062f \u062e\u0637\u0648\u0627\u062a (Tasks/Activities) \u0648\u062a\u0631\u062a\u064a\u0628\u0647\u0627 \u0648\u0634\u0631\u0648\u0637 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 \u0648\u0627\u0644\u0645\u062e\u0631\u062c\u0627\u062a\u060c \u0645\u0639 \u062d\u0627\u0644\u0627\u062a (States) \u0648\u0623\u062d\u062f\u0627\u062b (Events) \u0648\u0625\u062c\u0631\u0627\u0621\u0627\u062a \u062a\u0639\u0648\u064a\u0636/\u062a\u0631\u0627\u062c\u0639 \u0639\u0646\u062f \u0627\u0644\u0641\u0634\u0644.</p>"},{"location":"terms/workflow/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u064a\u062a\u0643\u0648\u0646 \u0645\u0646 \u062e\u0637\u0648\u0627\u062a \u062a\u0646\u0641\u0651\u064e\u0630 \u062a\u0633\u0644\u0633\u0644\u064a\u064b\u0627 \u0623\u0648 \u0628\u0627\u0644\u062a\u0648\u0627\u0632\u064a\u060c \u0645\u0639 \u0634\u0631\u0648\u0637/\u0645\u0648\u0627\u0641\u0642\u0627\u062a.  </li> <li>\u064a\u062f\u064a\u0631 \u0627\u0644\u062d\u0627\u0644\u0629 \u0628\u064a\u0646 \u0627\u0644\u062e\u0637\u0648\u0627\u062a (\u0645\u0643\u062a\u0645\u0644\u0629/\u0641\u0627\u0634\u0644\u0629/\u0645\u0639\u0644\u0651\u0642\u0629).  </li> <li>\u0642\u062f \u064a\u0643\u0648\u0646 \u0642\u0635\u064a\u0631\u064b\u0627 (Pipeline) \u0623\u0648 \u0637\u0648\u064a\u0644 \u0627\u0644\u0623\u0645\u062f \u0645\u0639 \u0627\u0646\u062a\u0638\u0627\u0631 \u0623\u062d\u062f\u0627\u062b \u062e\u0627\u0631\u062c\u064a\u0629 (Orchestration).  </li> <li>\u0623\u0645\u062b\u0644\u0629: \u0625\u0646\u0634\u0627\u0621 \u0637\u0644\u0628 \u0634\u0631\u0627\u0621\u060c Onboarding \u0645\u0648\u0638\u0641\u060c \u0645\u0639\u0627\u0644\u062c\u0629 \u0645\u062f\u0641\u0648\u0639\u0627\u062a.</li> </ul>"},{"location":"terms/workflow/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0631\u062d\u0644\u0629 \u0645\u0639\u0627\u0645\u0644\u0629 \u0641\u064a \u062f\u0627\u0626\u0631\u0629 \u062d\u0643\u0648\u0645\u064a\u0629: \u062a\u0642\u062f\u064a\u0645 \u0627\u0644\u0637\u0644\u0628 \u2192 \u062a\u062f\u0642\u064a\u0642 \u2192 \u0645\u0648\u0627\u0641\u0642\u0629 \u2192 \u062f\u0641\u0639 \u2192 \u0627\u0633\u062a\u0644\u0627\u0645 \u0627\u0644\u0648\u062b\u064a\u0642\u0629. \u0643\u0644 \u0645\u062d\u0637\u0629 \u062a\u062a\u062d\u0642\u0642 \u0648\u062a\u0648\u0642\u0651\u0639 \u0642\u0628\u0644 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644\u060c \u0648\u0644\u0648 \u0641\u0634\u0644\u062a \u0645\u062d\u0637\u0629\u2014\u062a\u064f\u0639\u0627\u062f \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629 \u0623\u0648 \u062a\u064f\u0644\u063a\u0649 \u0645\u0639 \u0625\u0644\u063a\u0627\u0621 \u0627\u0644\u0625\u062c\u0631\u0627\u0621\u0627\u062a.</p>"},{"location":"terms/workflow/#c-workflow-compensation","title":"\u0645\u062b\u0627\u0644 C# \u2014 \u0645\u062d\u0631\u0651\u0643 Workflow \u0645\u0628\u0633\u0651\u0637 \u0645\u0639 \u062a\u0639\u0648\u064a\u0636 (Compensation) \u0648\u0633\u062c\u0644 \u062d\u0627\u0644\u0629","text":"C#<pre><code>// .NET 8/9 \u2014 Workflow \u0628\u0633\u064a\u0637 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0639\u0629\nusing System.Collections.Concurrent;\n\npublic record StepResult(bool Success, string? Error = null);\n\npublic class WorkflowContext\n{\n    // \u0645\u062e\u0632\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0634\u062a\u0631\u0643 \u0628\u064a\u0646 \u0627\u0644\u062e\u0637\u0648\u0627\u062a\n    private readonly ConcurrentDictionary&lt;string, object&gt; _bag = new();\n    public T? Get&lt;T&gt;(string key) =&gt; _bag.TryGetValue(key, out var v) ? (T)v : default;\n    public void Set&lt;T&gt;(string key, T value) =&gt; _bag[key] = value!;\n    public string CorrelationId { get; } = Guid.NewGuid().ToString(\"N\");\n    public List&lt;string&gt; Log { get; } = new();\n}\n\npublic interface IWorkflowStep\n{\n    string Name { get; }\n    Task&lt;StepResult&gt; ExecuteAsync(WorkflowContext ctx, CancellationToken ct);\n    Task CompensateAsync(WorkflowContext ctx, CancellationToken ct); // \u0644\u0644\u062a\u0631\u0627\u062c\u0639 \u0639\u0646\u062f \u0627\u0644\u0641\u0634\u0644\n}\n\npublic class WorkflowEngine\n{\n    private readonly IReadOnlyList&lt;IWorkflowStep&gt; _steps;\n    public WorkflowEngine(IEnumerable&lt;IWorkflowStep&gt; steps) =&gt; _steps = steps.ToList();\n\n    public async Task&lt;bool&gt; RunAsync(WorkflowContext ctx, CancellationToken ct = default)\n    {\n        var executed = new Stack&lt;IWorkflowStep&gt;();\n        foreach (var step in _steps)\n        {\n            ctx.Log.Add($\"\u2192 {step.Name}\");\n            var res = await step.ExecuteAsync(ctx, ct);\n            if (res.Success) { executed.Push(step); continue; }\n\n            ctx.Log.Add($\"\u2717 {step.Name}: {res.Error}\");\n            // \u062a\u0639\u0648\u064a\u0636 \u0639\u0643\u0633\u064a\n            while (executed.Count &gt; 0)\n            {\n                var prev = executed.Pop();\n                try { await prev.CompensateAsync(ctx, ct); ctx.Log.Add($\"\u21ba compensating {prev.Name}\"); }\n                catch (Exception ex) { ctx.Log.Add($\"! compensation failed {prev.Name}: {ex.Message}\"); }\n            }\n            return false;\n        }\n        return true;\n    }\n}\n\n// ====== \u062e\u0637\u0648\u0627\u062a \u0639\u064a\u0651\u0646\u064a\u0629 \u0644\u0637\u0644\u0628 \u0634\u0631\u0627\u0621 ======\npublic class ReserveInventoryStep : IWorkflowStep\n{\n    public string Name =&gt; \"ReserveInventory\";\n    public async Task&lt;StepResult&gt; ExecuteAsync(WorkflowContext ctx, CancellationToken ct)\n    {\n        await Task.Delay(200, ct); // \u0645\u062d\u0627\u0643\u0627\u0629 I/O\n        ctx.Set(\"reservationId\", Guid.NewGuid().ToString(\"N\"));\n        return new StepResult(true);\n    }\n    public Task CompensateAsync(WorkflowContext ctx, CancellationToken ct)\n    {\n        // \u0625\u0644\u063a\u0627\u0621 \u0627\u0644\u062d\u062c\u0632 \u0625\u0646 \u0648\u064f\u062c\u062f\n        ctx.Set(\"reservationId\", null);\n        return Task.CompletedTask;\n    }\n}\n\npublic class ChargePaymentStep : IWorkflowStep\n{\n    public string Name =&gt; \"ChargePayment\";\n    public async Task&lt;StepResult&gt; ExecuteAsync(WorkflowContext ctx, CancellationToken ct)\n    {\n        await Task.Delay(200, ct);\n        var amount = ctx.Get&lt;decimal&gt;(\"amount\");\n        if (amount &lt;= 0) return new StepResult(false, \"invalid_amount\");\n        // \u0641\u0634\u0644 \u0645\u064f\u0641\u062a\u0639\u0644 \u0644\u0644\u062a\u062c\u0631\u0628\u0629:\n        if (amount &gt; 500) return new StepResult(false, \"limit_exceeded\");\n        ctx.Set(\"paymentId\", Guid.NewGuid().ToString(\"N\"));\n        return new StepResult(true);\n    }\n    public Task CompensateAsync(WorkflowContext ctx, CancellationToken ct)\n    {\n        // \u0631\u062f \u0627\u0644\u0645\u0628\u0644\u063a \u0625\u0646 \u062a\u0645 \u0627\u0644\u062a\u062d\u0635\u064a\u0644\n        ctx.Set(\"paymentId\", null);\n        return Task.CompletedTask;\n    }\n}\n\npublic class SendEmailStep : IWorkflowStep\n{\n    public string Name =&gt; \"SendEmail\";\n    public async Task&lt;StepResult&gt; ExecuteAsync(WorkflowContext ctx, CancellationToken ct)\n    {\n        await Task.Delay(100, ct);\n        var email = ctx.Get&lt;string&gt;(\"email\");\n        if (string.IsNullOrWhiteSpace(email)) return new StepResult(false, \"email_required\");\n        ctx.Log.Add($\"[email\u2192{email}] order confirmed\");\n        return new StepResult(true);\n    }\n    public Task CompensateAsync(WorkflowContext ctx, CancellationToken ct)\n    {\n        // \u0625\u0631\u0633\u0627\u0644 \u0627\u0639\u062a\u0630\u0627\u0631/\u0625\u0644\u063a\u0627\u0621 (\u0627\u062e\u062a\u064a\u0627\u0631\u064a)\n        return Task.CompletedTask;\n    }\n}\n\n// ====== \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 ======\npublic class Program\n{\n    public static async Task Main()\n    {\n        var steps = new IWorkflowStep[]\n        {\n            new ReserveInventoryStep(),\n            new ChargePaymentStep(),\n            new SendEmailStep()\n        };\n        var engine = new WorkflowEngine(steps);\n\n        var ctx = new WorkflowContext();\n        ctx.Set(\"amount\", 750m);          // \u062c\u0631\u0651\u0628 150m \u0644\u0644\u0646\u062c\u0627\u062d\n        ctx.Set(\"email\", \"user@example.com\");\n\n        bool ok = await engine.RunAsync(ctx);\n        Console.WriteLine($\"Workflow({ctx.CorrelationId}) success? {ok}\");\n        Console.WriteLine(string.Join(\"\\n\", ctx.Log));\n    }\n}\n</code></pre> <p>\u0627\u0644\u0641\u0643\u0631\u0629: - \u0643\u0644 \u062e\u0637\u0648\u0629 \u0645\u0633\u062a\u0642\u0644\u0651\u0629 \u0628\u0648\u0627\u062c\u0647\u0629 \u0645\u0648\u062d\u0651\u062f\u0629. - \u0639\u0646\u062f \u0627\u0644\u0641\u0634\u0644: \u062a\u0639\u0648\u064a\u0636 \u0639\u0643\u0633\u064a \u0644\u0644\u062e\u0637\u0648\u0627\u062a \u0627\u0644\u0645\u0646\u0641\u0651\u064e\u0630\u0629. - Context \u064a\u062d\u0645\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u0634\u062a\u0631\u0643\u0629 \u0648CorrelationId \u0644\u0644\u062a\u062a\u0628\u0651\u0639.</p>"},{"location":"terms/workflow/#workflow_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0628\u0646\u0627\u0621 Workflow \u062c\u064a\u0651\u062f","text":"<ol> <li>\u062d\u062f\u0651\u0650\u062f \u0627\u0644\u062d\u0627\u0644\u0627\u062a \u0648\u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644\u0627\u062a (State Diagram/BPMN \u0645\u0628\u0633\u0651\u0637).  </li> <li>\u0642\u0633\u0651\u0645 \u0625\u0644\u0649 \u062e\u0637\u0648\u0627\u062a \u0635\u063a\u064a\u0631\u0629 \u0630\u0627\u062a \u0645\u0633\u0624\u0648\u0644\u064a\u0629 \u0648\u0627\u062d\u062f\u0629 \u0648\u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u062a\u062c\u0631\u0628\u0629 \u0645\u0646\u0641\u0631\u062f\u0629.  </li> <li>\u0627\u062c\u0639\u0644 \u0627\u0644\u062e\u0637\u0648\u0627\u062a Idempotent (\u0644\u0627 \u062a\u062a\u0623\u062b\u0631 \u0628\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629) \u0648\u0627\u0633\u062a\u062e\u062f\u0645 \u0645\u0641\u0627\u062a\u064a\u062d \u0645\u0631\u062c\u0639\u064a\u0629.  </li> <li>\u0642\u0631\u0651\u0631 \u0633\u064a\u0627\u0633\u0629 \u0627\u0644\u0641\u0634\u0644: \u062a\u0639\u0648\u064a\u0636 (Compensation)\u060c \u0627\u0646\u062a\u0638\u0627\u0631 \u062d\u062f\u062b\u060c \u0623\u0648 \u0625\u064a\u0642\u0627\u0641 \u0645\u0639 DLQ.  </li> <li>\u0636\u0639 \u0645\u0647\u0644\u0627\u062a/\u0625\u0644\u063a\u0627\u0621 (Timeout/CancellationToken) \u0648Backoff \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629.  </li> <li>\u0641\u0639\u0651\u0644 \u0627\u0644\u062a\u062a\u0628\u0651\u0639 (Logs/Tracing) \u0645\u0639 CorrelationId \u0645\u0646 \u0623\u0648\u0651\u0644 \u0627\u0644\u0637\u0644\u0628.  </li> <li>\u0644\u0644\u0645\u0647\u0627\u0645 \u0627\u0644\u0637\u0648\u064a\u0644\u0629: \u0627\u0633\u062a\u062e\u062f\u0645 Orchestrator (Durable/Temporal/Step Functions) \u0628\u062f\u0644 \u062d\u0644\u0642\u0627\u062a \u0627\u0646\u062a\u0638\u0627\u0631.  </li> <li>\u0648\u062b\u0651\u0642 \u0639\u0642\u0648\u062f \u0627\u0644\u0623\u062d\u062f\u0627\u062b (Schemas) \u0648\u0645\u062a\u0649 \u062a\u064f\u0631\u0633\u0644/\u062a\u064f\u0633\u062a\u0647\u0644\u0643.</li> </ol>"},{"location":"terms/workflow/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u0645\u0646\u0637\u0642 \u062e\u0637\u0648\u0627\u062a \u0636\u062e\u0645 \u0648\u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645.  </li> <li>\u063a\u064a\u0627\u0628 Idempotency \u2192 \u062a\u0643\u0631\u0627\u0631\u0627\u062a/\u062e\u0635\u0648\u0645\u0627\u062a \u0645\u0627\u0644\u064a\u0629 \u0645\u0636\u0627\u0639\u0641\u0629.  </li> <li>\u0646\u0633\u064a\u0627\u0646 \u0627\u0644\u062a\u0639\u0648\u064a\u0636 \u0623\u0648 \u062a\u0631\u0643\u0647 \u062c\u0632\u0626\u064a\u064b\u0627 \u2192 \u062d\u0627\u0644\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u0633\u0642\u0629.  </li> <li>\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u0630\u0627\u0643\u0631\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0644\u062d\u0627\u0644\u0629 \u0637\u0648\u064a\u0644\u0629 \u0627\u0644\u0623\u0645\u062f (\u062a\u0641\u0642\u062f\u0647\u0627 \u0639\u0646\u062f \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644).  </li> <li>\u0639\u062f\u0645 \u0642\u064a\u0627\u0633 \u0627\u0644\u0632\u0645\u0646 \u0648\u0627\u0644\u0640 SLA \u0644\u0643\u0644 \u062e\u0637\u0648\u0629 \u2192 \u0627\u062e\u062a\u0646\u0627\u0642\u0627\u062a \u062e\u0641\u064a\u0651\u0629.  </li> <li>\u062a\u0634\u0627\u0628\u0643 \u0642\u0648\u064a \u0628\u064a\u0646 \u0627\u0644\u062e\u0637\u0648\u0627\u062a \u0628\u062f\u0644 \u0639\u0642\u0648\u062f \u0648\u0627\u0636\u062d\u0629 (Interfaces/DTOs/Events).</li> </ul>"},{"location":"terms/workflow/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 Workflow \u062a\u0646\u0633\u064a\u0642 \u062e\u0637\u0648\u0627\u062a \u0645\u0639 \u062d\u0627\u0644\u0629 \u0648\u0627\u0646\u062a\u0642\u0627\u0644\u0627\u062a \u0642\u062f \u064a\u0643\u0648\u0646 \u0642\u0635\u064a\u0631\u064b\u0627 \u0623\u0648 \u0637\u0648\u064a\u0644 \u0627\u0644\u0623\u0645\u062f Process \u0639\u0645\u0644\u064a\u0629 \u0623\u0639\u0645\u0627\u0644 \u0639\u0627\u0644\u064a\u0629 \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0642\u062f \u062a\u062d\u062a\u0648\u064a \u0639\u062f\u0629 Workflows Pipeline \u062e\u0637\u0648\u0627\u062a \u062e\u0637\u064a\u0651\u0629 \u0644\u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0639\u0627\u062f\u0629\u064b \u0628\u0644\u0627 \u062d\u0627\u0644\u0627\u062a \u0627\u0646\u062a\u0638\u0627\u0631 \u0637\u0648\u064a\u0644\u0629 Orchestration \u0645\u0646\u0633\u0651\u0642 \u0645\u0631\u0643\u0632\u064a \u064a\u062f\u064a\u0631 \u0627\u0644\u062e\u0637\u0648\u0627\u062a/\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0642\u0631\u0627\u0631\u0627\u062a \u0645\u0631\u0643\u0632\u064a\u0629\u060c \u062a\u0639\u0648\u064a\u0636\u060c \u062a\u062a\u0628\u0651\u0639 Choreography \u062a\u0641\u0627\u0639\u0644 \u0644\u0627\u0645\u0631\u0643\u0632\u064a \u0628\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0643\u0644 \u062e\u062f\u0645\u0629 \u062a\u062a\u0641\u0627\u0639\u0644 \u0648\u0641\u0642 \u0642\u0648\u0627\u0639\u062f \u0645\u062d\u0644\u064a\u0651\u0629 BPMN \u062a\u0631\u0645\u064a\u0632 \u0631\u0633\u0648\u0645\u064a \u0644\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u062a\u0648\u062d\u064a\u062f \u062a\u0635\u0645\u064a\u0645/\u062a\u0646\u0641\u064a\u0630 \u0645\u0639 \u0645\u062d\u0631\u0643\u0627\u062a BPM State Machine \u062d\u0627\u0644\u0627\u062a + \u0627\u0646\u062a\u0642\u0627\u0644\u0627\u062a \u0628\u0642\u0648\u0627\u0639\u062f \u0645\u0646\u0627\u0633\u0628 \u0644\u0633\u064a\u0631 \u0648\u0627\u0636\u062d \u0627\u0644\u0645\u0639\u0627\u0644\u0645"},{"location":"terms/workflow/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>Workflow = \u062a\u0631\u062a\u064a\u0628 \u062e\u0637\u0648\u0627\u062a \u0645\u0639 \u062d\u0627\u0644\u0629 \u0648\u0642\u0648\u0627\u0639\u062f \u0627\u0646\u062a\u0642\u0627\u0644 \u0648\u062a\u0639\u0648\u064a\u0636 \u0639\u0646\u062f \u0627\u0644\u062d\u0627\u062c\u0629. \u0642\u0633\u0651\u0650\u0645 \u0627\u0644\u0633\u0644\u0648\u0643\u060c \u0627\u062c\u0639\u0644 \u0627\u0644\u062e\u0637\u0648\u0627\u062a Idempotent\u060c \u0623\u0636\u0650\u0641 \u0645\u0647\u0644\u0627\u062a/\u062a\u062a\u0628\u0651\u0639\u060c \u0648\u0627\u062e\u062a\u0631 Orchestration/Choreography \u0648\u0641\u0642 \u0627\u0644\u0633\u064a\u0627\u0642\u2014 \u0633\u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u0633\u064a\u0631 \u0639\u0645\u0644 \u0645\u0648\u062b\u0648\u0642\u060c \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0648\u0633\u0651\u0639\u060c \u0648\u0633\u0647\u0644 \u0627\u0644\u0635\u064a\u0627\u0646\u0629. </p>"},{"location":"terms/xml/","title":"XML","text":""},{"location":"terms/xml/#_1","title":"\u0627\u0644\u062a\u0631\u062c\u0645\u0629 \u0627\u0644\u062d\u0631\u0641\u064a\u0629","text":"<p>Extensible Markup Language (XML) \u2014 \u0644\u063a\u0629 \u062a\u0631\u0645\u064a\u0632 \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0627\u0645\u062a\u062f\u0627\u062f.</p>"},{"location":"terms/xml/#_2","title":"\u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0639\u0631\u0628\u064a \u0627\u0644\u0645\u062e\u062a\u0635\u0631","text":"<p>\u062a\u0646\u0633\u064a\u0642 \u0646\u0635\u0651\u064a \u0645\u0646\u0638\u0651\u064e\u0645 \u0628\u0647 \u0639\u0646\u0627\u0635\u0631/\u0633\u0645\u0627\u062a \u0648\u0642\u064a\u0645\u060c \u0645\u0639 \u0645\u0633\u0627\u062d\u0627\u062a \u0623\u0633\u0645\u0627\u0621 (Namespaces) \u0648\u0625\u0645\u0643\u0627\u0646 \u0627\u0644\u062a\u062d\u0642\u0642 \u0639\u0628\u0631 \u0645\u062e\u0637\u0651\u0637\u0627\u062a (XSD) \u0644\u062a\u0628\u0627\u062f\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0642\u0627\u0628\u0644\u0629 \u0644\u0644\u0622\u0644\u0627\u062a \u0648\u0627\u0644\u0625\u0646\u0633\u0627\u0646.</p>"},{"location":"terms/xml/#_3","title":"\u0627\u0644\u0634\u0631\u062d \u0627\u0644\u0645\u0628\u0633\u0651\u0637","text":"<ul> <li>\u0643\u0644 \u0648\u062b\u064a\u0642\u0629 \u0644\u0647\u0627 \u062c\u0630\u0631 (Root) \u0648\u0639\u064f\u0642\u062f (Elements) \u0648\u0633\u0645\u0627\u062a (Attributes).  </li> <li>Namespace \u064a\u0645\u064a\u0651\u0632 \u0627\u0644\u0623\u0633\u0645\u0627\u0621 (<code>xmlns</code>) \u0644\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u062a\u0639\u0627\u0631\u0636.  </li> <li>\u064a\u0645\u0643\u0646 \u0648\u0635\u0641 \u0627\u0644\u0628\u0646\u064a\u0629 \u0628\u0640 XSD \u062b\u0645 \u0627\u0644\u062a\u062d\u0642\u0642 \u0642\u0628\u0644 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629.  </li> <li>\u0627\u0644\u0642\u0631\u0627\u0621\u0629/\u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0639\u0628\u0631 DOM/LINQ to XML \u0623\u0648 \u062a\u0633\u0644\u0633\u0644 (Serialization) \u0625\u0644\u0649 \u0643\u0627\u0626\u0646\u0627\u062a.</li> </ul>"},{"location":"terms/xml/#_4","title":"\u062a\u0634\u0628\u064a\u0647","text":"<p>\u0628\u0637\u0627\u0642\u0629 \u0646\u0645\u0648\u0630\u062c \u0631\u0633\u0645\u064a: \u062e\u0627\u0646\u0627\u062a \u062b\u0627\u0628\u062a\u0629 (\u0639\u0646\u0627\u0635\u0631) \u0648\u062d\u0642\u0648\u0644 \u0635\u063a\u064a\u0631\u0629 \u0641\u0648\u0642\u0647\u0627 (\u0633\u0645\u0627\u062a). \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0635\u062d\u062a\u0647\u0627 \u0628\u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0634\u0631\u0643\u0629 (XSD).</p>"},{"location":"terms/xml/#c-1-xml-namespace-linq-to-xml","title":"\u0645\u062b\u0627\u0644 C# (1) \u2014 \u0625\u0646\u0634\u0627\u0621/\u0642\u0631\u0627\u0621\u0629 XML \u0645\u0639 Namespace (LINQ to XML)","text":"C#<pre><code>// .NET 8/9\nusing System;\nusing System.Xml.Linq;\nusing System.Xml.XPath;\n\nclass XmlDemo1\n{\n    static void Main()\n    {\n        XNamespace ns = \"urn:shop\";\n        var doc = new XDocument(\n            new XElement(ns + \"Order\",\n                new XAttribute(\"id\", 123),\n                new XElement(ns + \"Customer\", \"abdalkreem\"),\n                new XElement(ns + \"Items\",\n                    new XElement(ns + \"Item\", new XAttribute(\"sku\",\"KB-01\"), new XAttribute(\"qty\",1), 120),\n                    new XElement(ns + \"Item\", new XAttribute(\"sku\",\"MS-77\"), new XAttribute(\"qty\",2), 60)\n                )\n            )\n        );\n        doc.Save(\"order.xml\"); // \u0643\u062a\u0627\u0628\u0629 \u062c\u0645\u064a\u0644\u0629 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627\n\n        // \u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0648\u062d\u0633\u0627\u0628 \u0627\u0644\u0625\u062c\u0645\u0627\u0644\u064a\n        decimal total = 0;\n        foreach (var it in doc.Root!.Element(ns + \"Items\")!.Elements(ns + \"Item\"))\n        {\n            decimal price = (decimal)it;      // \u0642\u064a\u0645\u0629 \u0627\u0644\u0639\u0646\u0635\u0631\n            int qty = (int)it.Attribute(\"qty\")!;\n            total += price * qty;\n        }\n        Console.WriteLine($\"Total = {total}\"); // 240\n\n        // \u0645\u062b\u0627\u0644 XPath \u0633\u0631\u064a\u0639 \u0628\u062f\u0648\u0646 \u062a\u0639\u0631\u064a\u0641 NamespaceManager (local-name hack)\n        var kb = doc.XPathSelectElement(\"/*[local-name()='Order']/*[local-name()='Items']/*[local-name()='Item' and @sku='KB-01']\");\n        Console.WriteLine(kb?.Value); // 120\n    }\n}\n</code></pre>"},{"location":"terms/xml/#c-2-xml","title":"\u0645\u062b\u0627\u0644 C# (2) \u2014 \u062a\u0633\u0644\u0633\u0644/\u0641\u0643\u0651 \u062a\u0633\u0644\u0633\u0644 XML \u0625\u0644\u0649 \u0643\u0627\u0626\u0646\u0627\u062a","text":"C#<pre><code>using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\n[XmlRoot(\"User\")]\npublic class User\n{\n    [XmlAttribute] public int Id { get; set; }\n    public string Name { get; set; } = \"\";\n}\n\nclass XmlDemo2\n{\n    static void Main()\n    {\n        var u = new User { Id = 1, Name = \"Kreem\" };\n\n        var ser = new XmlSerializer(typeof(User));\n        using var sw = new StringWriter();\n        ser.Serialize(sw, u);\n        string xml = sw.ToString();\n        Console.WriteLine(xml); // &lt;User Id=\"1\"&gt;&lt;Name&gt;Kreem&lt;/Name&gt;&lt;/User&gt;\n\n        using var sr = new StringReader(xml);\n        var u2 = (User)ser.Deserialize(sr)!;\n        Console.WriteLine(u2.Name); // Kreem\n    }\n}\n</code></pre>"},{"location":"terms/xml/#c-3-xml-xsd","title":"\u0645\u062b\u0627\u0644 C# (3) \u2014 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 XML \u0628\u0645\u062e\u0637\u0651\u0637 XSD","text":"C#<pre><code>using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Linq;\nusing System.Xml.Schema;\n\nclass XmlDemo3\n{\n    static void Main()\n    {\n        XNamespace ns = \"urn:shop\";\n        var doc = XDocument.Parse(@\"&lt;Order xmlns='urn:shop' id='1'&gt;\n  &lt;Customer&gt;abdalkreem&lt;/Customer&gt;\n  &lt;Items&gt;&lt;Item sku='KB-01' qty='1'&gt;120&lt;/Item&gt;&lt;/Items&gt;\n&lt;/Order&gt;\");\n\n        string xsd = @\"&lt;?xml version='1.0'?&gt;\n&lt;xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'\n           targetNamespace='urn:shop' xmlns='urn:shop'\n           elementFormDefault='qualified'&gt;\n  &lt;xs:element name='Order'&gt;\n    &lt;xs:complexType&gt;\n      &lt;xs:sequence&gt;\n        &lt;xs:element name='Customer' type='xs:string'/&gt;\n        &lt;xs:element name='Items'&gt;\n          &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n              &lt;xs:element name='Item' maxOccurs='unbounded'&gt;\n                &lt;xs:complexType&gt;\n                  &lt;xs:simpleContent&gt;\n                    &lt;xs:extension base='xs:decimal'&gt;\n                      &lt;xs:attribute name='sku' type='xs:string' use='required'/&gt;\n                      &lt;xs:attribute name='qty' type='xs:int'    use='required'/&gt;\n                    &lt;/xs:extension&gt;\n                  &lt;/xs:simpleContent&gt;\n                &lt;/xs:complexType&gt;\n              &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n          &lt;/xs:complexType&gt;\n        &lt;/xs:element&gt;\n      &lt;/xs:sequence&gt;\n      &lt;xs:attribute name='id' type='xs:int' use='required'/&gt;\n    &lt;/xs:complexType&gt;\n  &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\";\n\n        var schemas = new XmlSchemaSet();\n        schemas.Add(\"urn:shop\", XmlReader.Create(new StringReader(xsd)));\n\n        bool ok = true;\n        doc.Validate(schemas, (o, e) =&gt; { ok = false; Console.WriteLine(\"XSD error: \" + e.Message); });\n        Console.WriteLine($\"Valid? {ok}\");\n    }\n}\n</code></pre>"},{"location":"terms/xml/#xml_1","title":"\u062e\u0637\u0648\u0627\u062a \u0639\u0645\u0644\u064a\u0629 \u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 XML \u0628\u0630\u0643\u0627\u0621","text":"<ol> <li>\u062d\u062f\u0651\u062f \u0627\u0644\u0645\u062e\u0637\u0651\u0637 (XSD) \u0645\u0628\u0643\u0631\u064b\u0627: \u0627\u0644\u0623\u0646\u0648\u0627\u0639\u060c \u0627\u0644\u0625\u0644\u0632\u0627\u0645\u060c \u0627\u0644\u062d\u062f\u0648\u062f.  </li> <li>\u0627\u0633\u062a\u062e\u062f\u0645 Namespaces \u062f\u0627\u0626\u0645\u064b\u0627 \u0641\u064a \u0627\u0644\u0645\u0633\u062a\u0646\u062f\u0627\u062a \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0629.  </li> <li>\u0627\u062e\u062a\u0631: \u0639\u0646\u0635\u0631 \u0644\u0644\u0645\u062d\u062a\u0648\u0649/\u0627\u0644\u0628\u0646\u0649\u060c \u0648\u0633\u0645\u0629 \u0644\u0645\u064a\u062a\u0627 \u0628\u0633\u064a\u0637\u0629 (\u0645\u0639\u0631\u0651\u0641\u0627\u062a\u060c \u0648\u062d\u062f\u0627\u062a).  </li> <li>\u0644\u0627 \u062a\u0628\u0646\u0650 XML \u0628\u0640 \u0633\u0644\u0627\u0633\u0644 \u0646\u0635\u064a\u0629\u061b \u0627\u0633\u062a\u062e\u062f\u0645 XDocument/XElement \u0623\u0648 XmlWriter.  </li> <li>\u0639\u0646\u062f \u0627\u0644\u062a\u0628\u0627\u062f\u0644: \u062b\u0628\u0651\u062a \u0627\u0644\u062a\u0631\u0645\u064a\u0632 (<code>UTF-8</code>) \u0648\u062a\u062c\u0646\u0651\u0628 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 \u062a\u0631\u062a\u064a\u0628 \u063a\u064a\u0631 \u0645\u062d\u062f\u0651\u062f \u0628\u0627\u0644\u0645\u062e\u0637\u0651\u0637.  </li> <li>\u0641\u0639\u0651\u0644 \u0627\u0644\u062a\u062d\u0642\u0642 \u0642\u0628\u0644 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629\u060c \u0648\u0633\u062c\u0651\u0644 \u0623\u062e\u0637\u0627\u0621 XSD \u0645\u0639 \u0645\u0648\u0642\u0639\u0647\u0627.</li> </ol>"},{"location":"terms/xml/#_5","title":"\u0623\u062e\u0637\u0627\u0621 \u0634\u0627\u0626\u0639\u0629","text":"<ul> <li>\u062a\u062c\u0627\u0647\u0644 Namespaces \u062b\u0645 \u0641\u0634\u0644 \u0627\u0644\u0627\u0633\u062a\u0639\u0644\u0627\u0645/\u0627\u0644\u062a\u062d\u0642\u0642.  </li> <li>\u062e\u0644\u0637 \u0639\u0646\u0627\u0635\u0631/\u0633\u0645\u0627\u062a \u0628\u0644\u0627 \u0645\u0646\u0637\u0642 \u2192 \u0635\u0639\u0648\u0628\u0629 \u0627\u0644\u062a\u062d\u0642\u0642/\u0627\u0644\u062a\u0637\u0648\u0651\u0631.  </li> <li>\u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f \u0639\u0644\u0649 String Concatenation \u0628\u062f\u0644 API \u0622\u0645\u0646.  </li> <li>\u0646\u0633\u064a\u0627\u0646 escape \u0644\u0640 <code>&lt;</code> <code>&amp;</code> \u062f\u0627\u062e\u0644 \u0627\u0644\u0646\u0635.  </li> <li>\u0639\u062f\u0645 \u0625\u063a\u0644\u0627\u0642 Readers/Writers \u0623\u0648 \u0641\u0642\u062f\u0627\u0646 \u0627\u0644\u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0635\u062d\u064a\u062d.  </li> <li>\u0639\u062f\u0645 \u0627\u0644\u062a\u0645\u064a\u064a\u0632 \u0628\u064a\u0646 XML \u0648HTML (HTML \u0644\u064a\u0633 XML \u0635\u0627\u0631\u0645\u064b\u0627).</li> </ul>"},{"location":"terms/xml/#_6","title":"\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u0631\u0646\u0629 \u0645\u062e\u062a\u0635\u0631","text":"\u0627\u0644\u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u063a\u0631\u0636 \u0627\u0644\u0631\u0626\u064a\u0633\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a \u0645\u0647\u0645\u0629 XML \u062a\u0646\u0633\u064a\u0642 \u0645\u064f\u0647\u064a\u0643\u0644 \u0645\u0639 \u0645\u062e\u0637\u0651\u0637\u0627\u062a \u0642\u0648\u064a\u0629 (XSD) \u063a\u0646\u064a\u0651 \u0628\u0627\u0644\u062a\u062d\u0642\u0642/\u0627\u0644\u0627\u0645\u062a\u062f\u0627\u062f\u061b \u0623\u062b\u0642\u0644 \u0645\u0646 JSON JSON \u062a\u0628\u0627\u062f\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u062e\u0641\u064a\u0641 \u0644\u0644\u0623\u063a\u0644\u0628 \u0623\u0633\u0647\u0644 \u0644\u0644\u0648\u064a\u0628/JS\u061b \u0628\u0644\u0627 \u0645\u062e\u0637\u0637 \u0635\u0627\u0631\u0645 \u0627\u0641\u062a\u0631\u0627\u0636\u064a\u064b\u0627 YAML \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0628\u0634\u0631\u064a\u0629 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 \u062d\u0633\u0627\u0633 \u0644\u0644\u0645\u0633\u0627\u0641\u0627\u062a\u061b \u0623\u0642\u0644 \u0635\u0631\u0627\u0645\u0629 ProtoBuf \u062b\u0646\u0627\u0626\u064a \u0639\u0627\u0644\u064a \u0627\u0644\u0623\u062f\u0627\u0621 \u064a\u062d\u062a\u0627\u062c \u062a\u0639\u0631\u064a\u0641 <code>.proto</code> \u0648\u062a\u0648\u0644\u064a\u062f \u0643\u0648\u062f SOAP \u0628\u0631\u0648\u062a\u0648\u0643\u0648\u0644 \u0631\u0633\u0627\u0626\u0644 \u064a\u0639\u062a\u0645\u062f XML \u0639\u0642\u0648\u062f WSDL + WS-* HTML \u062a\u0631\u0645\u064a\u0632 \u0635\u0641\u062d\u0627\u062a \u0627\u0644\u0648\u064a\u0628 \u0644\u064a\u0633 XML \u0628\u0627\u0644\u0636\u0631\u0648\u0631\u0629 (\u0642\u062f \u064a\u0643\u0648\u0646 HTML5 \u062d\u0631\u064b\u0627)"},{"location":"terms/xml/#_7","title":"\u0645\u0644\u062e\u0635 \u0627\u0644\u0641\u0643\u0631\u0629","text":"<p>XML \u0642\u0648\u064a \u0639\u0646\u062f\u0645\u0627 \u062a\u062d\u062a\u0627\u062c \u0639\u0642\u0648\u062f\u064b\u0627 \u0635\u0627\u0631\u0645\u0629\u060c \u0645\u0633\u0627\u062d\u0627\u062a \u0623\u0633\u0645\u0627\u0621\u060c \u0648\u062a\u062d\u0642\u0642 XSD. \u0627\u0628\u0646\u0647 \u0639\u0628\u0631 LINQ to XML/Serialization\u060c \u0648\u0641\u064e\u0639\u0651\u0644 \u0627\u0644\u062a\u062d\u0642\u0642\u060c \u0648\u0627\u0636\u0628\u0637 Namespaces/Encoding\u2014 \u062a\u062d\u0635\u0644 \u0639\u0644\u0649 \u062a\u0628\u0627\u062f\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062a\u064a\u0646 \u0648\u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0637\u0648\u0651\u0631 \u0628\u064a\u0646 \u0627\u0644\u0623\u0646\u0638\u0645\u0629. </p>"}]}